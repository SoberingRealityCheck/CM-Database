{
  "created": 1722033497.9784496,
  "duration": 23.496750116348267,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5055815919986344,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1487354780001624,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013235999977041502,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037575239985017106,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482112160010729,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012492580026446376,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13227132099927985,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12163866500122822,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012732289978885092,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003753113000129815,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12097763099882286,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001290807998884702,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351764000399271,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14632789299867,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001183436997962417,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033116240010713227,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11990897699797642,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011530760020832531,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003335834000608884,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464846769995347,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011801369983004406,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033383539994247258,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12004259999957867,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011770460005209316,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004425159000675194,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020735860016429797,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011330359993735328,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033287840014963876,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017267779985559173,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010885449992201757,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003316423997603124,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00404958000217448,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033480.2724564,
            "msecs": 272.45640754699707,
            "relativeCreated": 7766.010046005249,
            "thread": 281473604788256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5218
          }
        ]
      },
      "teardown": {
        "duration": 0.0011905770006706007,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003340183997352142,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023453320027329028,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033480.2846935,
            "msecs": 284.69347953796387,
            "relativeCreated": 7778.247117996216,
            "thread": 281473604788256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5218
          }
        ]
      },
      "teardown": {
        "duration": 0.0011745260017050896,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002102776001265738,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002712030000111554,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033480.2941382,
            "msecs": 294.13819313049316,
            "relativeCreated": 7787.691831588745,
            "thread": 281473604788256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5218
          }
        ]
      },
      "teardown": {
        "duration": 0.0010326230003556702,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002067825997073669,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034304569999221712,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033480.3035443,
            "msecs": 303.544282913208,
            "relativeCreated": 7797.09792137146,
            "thread": 281473604788256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5218
          }
        ]
      },
      "teardown": {
        "duration": 0.0010886640011449344,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033294739987468347,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14642887599984533,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012064459988323506,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003332323998620268,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12044520799827296,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012124770000809804,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17455717099801404,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14763709299950278,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001274607999221189,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015136177000385942,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12147654100044747,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001267318002646789,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8433698999979242,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            61,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            26,
            127,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.0035848990009981208,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002858013001969084,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8965416449973418,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            5,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            253,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            2,
            255,
            25,
            255,
            255,
            255,
            29
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            68,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            117,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            145,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            172,
            0,
            87,
            255
          ],
          [
            255,
            0,
            145,
            0,
            255,
            0,
            227,
            63,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          3
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003456466998613905,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028528539987746626,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30269515100007993,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48106,
            47579,
            47276,
            47329,
            47399,
            47316,
            47420,
            47625,
            47439,
            47272,
            47222,
            47508,
            47340,
            47370,
            47321,
            47504,
            47429,
            47518,
            47446,
            47494,
            47444,
            47509,
            47415,
            47205,
            47544,
            47328,
            47477,
            47357,
            47345,
            49014,
            47526,
            47753,
            47098,
            53627,
            47440,
            47356,
            47434,
            47524,
            47412,
            47446,
            47408,
            47344,
            47641,
            47470,
            47349,
            47372,
            47268,
            47265,
            47422,
            47244,
            47379,
            47360,
            47409,
            46943,
            47211,
            47413,
            47401,
            47440,
            47457,
            47146,
            47354,
            47382,
            47387
          ],
          [
            48106,
            47579,
            47276,
            47329,
            47399,
            47316,
            47420,
            47625,
            47439,
            47272,
            47222,
            47508,
            47340,
            47370,
            47321,
            47504,
            47429,
            47518,
            47446,
            47494,
            47444,
            47509,
            47415,
            47205,
            47544,
            47328,
            47477,
            47357,
            47345,
            49014,
            47526,
            47753,
            47098,
            53627,
            47440,
            47356,
            47434,
            47524,
            47412,
            47446,
            47408,
            47344,
            47641,
            47470,
            47349,
            47372,
            47268,
            47265,
            47422,
            47244,
            47379,
            47360,
            47409,
            46943,
            47211,
            47413,
            47401,
            47440,
            47457,
            47146,
            47354,
            47382,
            47387
          ]
        ],
        "eTX_errcounts": [
          [
            40733,
            26956,
            8045,
            1148,
            75,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            188,
            3311,
            16041,
            34923,
            41813,
            30943,
            14520,
            2152,
            170,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            763,
            7687,
            25939,
            40201,
            36907,
            18978,
            5059,
            417,
            22,
            0,
            0,
            0
          ],
          [
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            276,
            4116,
            17376,
            35889,
            42421,
            31556,
            13948,
            3084,
            228,
            19,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            423,
            4540,
            19926,
            36304,
            42707,
            35089,
            16816,
            3586,
            383,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13352321900310926,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016024259966798127,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06878435999897192,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47740,
            47326,
            47290,
            47096,
            47270,
            47147,
            47105,
            47326,
            47341,
            49429,
            47139,
            47095,
            47095,
            47104,
            47116,
            46750,
            47087,
            47159,
            47087,
            47064,
            47154,
            47294,
            47368,
            47209,
            47300,
            47212,
            47116,
            47202,
            49184,
            47186,
            47183,
            47269,
            47257,
            47101,
            47001,
            47037,
            47105,
            47151,
            47240,
            47094,
            46858,
            47293,
            47187,
            47397,
            47167,
            47103,
            47163,
            47323,
            47394,
            47599,
            47689,
            47233,
            46966,
            47006,
            47308,
            47102,
            47201,
            47135,
            47238,
            47223,
            47198,
            47174,
            47215
          ],
          [
            47740,
            47326,
            47290,
            47096,
            47270,
            47147,
            47105,
            47326,
            47341,
            49429,
            47139,
            47095,
            47095,
            47104,
            47116,
            46750,
            47087,
            47159,
            47087,
            47064,
            47154,
            47294,
            47368,
            47209,
            47300,
            47212,
            47116,
            47202,
            49184,
            47186,
            47183,
            47269,
            47257,
            47101,
            47001,
            47037,
            47105,
            47151,
            47240,
            47094,
            46858,
            47293,
            47187,
            47397,
            47167,
            47103,
            47163,
            47323,
            47394,
            47599,
            47689,
            47233,
            46966,
            47006,
            47308,
            47102,
            47201,
            47135,
            47238,
            47223,
            47198,
            47174,
            47215
          ],
          [
            47740,
            47326,
            47290,
            47096,
            47270,
            47147,
            47105,
            47326,
            47341,
            49429,
            47139,
            47095,
            47095,
            47104,
            47116,
            46750,
            47087,
            47159,
            47087,
            47064,
            47154,
            47294,
            47368,
            47209,
            47300,
            47212,
            47116,
            47202,
            49184,
            47186,
            47183,
            47269,
            47257,
            47101,
            47001,
            47037,
            47105,
            47151,
            47240,
            47094,
            46858,
            47293,
            47187,
            47397,
            47167,
            47103,
            47163,
            47323,
            47394,
            47599,
            47689,
            47233,
            46966,
            47006,
            47308,
            47102,
            47201,
            47135,
            47238,
            47223,
            47198,
            47174,
            47215
          ],
          [
            47740,
            47326,
            47290,
            47096,
            47270,
            47147,
            47105,
            47326,
            47341,
            49429,
            47139,
            47095,
            47095,
            47104,
            47116,
            46750,
            47087,
            47159,
            47087,
            47064,
            47154,
            47294,
            47368,
            47209,
            47300,
            47212,
            47116,
            47202,
            49184,
            47186,
            47183,
            47269,
            47257,
            47101,
            47001,
            47037,
            47105,
            47151,
            47240,
            47094,
            46858,
            47293,
            47187,
            47397,
            47167,
            47103,
            47163,
            47323,
            47394,
            47599,
            47689,
            47233,
            46966,
            47006,
            47308,
            47102,
            47201,
            47135,
            47238,
            47223,
            47198,
            47174,
            47215
          ],
          [
            47740,
            47326,
            47290,
            47096,
            47270,
            47147,
            47105,
            47326,
            47341,
            49429,
            47139,
            47095,
            47095,
            47104,
            47116,
            46750,
            47087,
            47159,
            47087,
            47064,
            47154,
            47294,
            47368,
            47209,
            47300,
            47212,
            47116,
            47202,
            49184,
            47186,
            47183,
            47269,
            47257,
            47101,
            47001,
            47037,
            47105,
            47151,
            47240,
            47094,
            46858,
            47293,
            47187,
            47397,
            47167,
            47103,
            47163,
            47323,
            47394,
            47599,
            47689,
            47233,
            46966,
            47006,
            47308,
            47102,
            47201,
            47135,
            47238,
            47223,
            47198,
            47174,
            47215
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            163,
            1502,
            5310,
            12473,
            23240,
            31815,
            31266,
            25757,
            18668,
            12706,
            6963,
            2273,
            430,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            194,
            1709,
            6091,
            13482,
            25859,
            33306,
            37339,
            30411,
            21620,
            12634,
            5443,
            1235,
            118,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            208,
            1391,
            4430,
            9910,
            21386,
            35232,
            40994,
            34922,
            25320,
            15761,
            8992,
            3620,
            719,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            231,
            1777,
            6527,
            15281,
            26173,
            31956,
            35408,
            36195,
            29291,
            17830,
            7412,
            1680,
            243,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            80,
            593,
            2395,
            6101,
            13609,
            26955
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            107,
            1086,
            5295,
            15883,
            30239,
            35153,
            32056,
            23451,
            13237,
            5740,
            1276,
            80,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            104,
            1165,
            6661,
            15337,
            28944,
            35935,
            33223,
            24001,
            12263,
            3524,
            420,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            26,
            359,
            2316,
            8629,
            19562,
            33861,
            37699,
            34032,
            26157,
            16354,
            7368,
            1813,
            192,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            40,
            541,
            2909,
            8258,
            16391,
            27273,
            35910,
            34100,
            25949,
            16005,
            7266,
            1764,
            154,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            6,
            172,
            1154,
            3630,
            7601,
            19131,
            32994,
            38981,
            36632,
            30513,
            22536,
            13893,
            8186,
            3416,
            511,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            126,
            1201,
            4802,
            12437,
            24930,
            32543,
            35196,
            37286,
            33180,
            24398,
            15860,
            8109,
            2241,
            289,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            6,
            94,
            887,
            3171,
            8151
          ]
        ]
      },
      "call": {
        "duration": 0.27125346200045897,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff99804630>()\n +    where <built-in method all of numpy.ndarray object at 0xffff99804630> = array([21, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff997e2310>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47740, 47326, 47290, 47096, 47270, 47147, ...], [47740, 47326, 47290, 47096, 47270, 47147, ...], [...0, ...], [0, 0, 4, 208, 1391, 4430, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 6, 172, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff99804630>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff99804630> = array([21, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016209960012929514,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926412970009551,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170304598999792,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001468112001020927,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.303346191001765,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            11,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            209,
            57,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034815780018107034,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002855133996490622,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5391138779996254,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            253,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            245,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            86,
            255,
            146,
            255,
            117,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            167,
            0,
            142,
            4,
            255,
            39,
            255,
            4
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            93,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            2,
            255,
            146,
            255,
            244,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            184,
            255,
            150,
            255,
            255,
            5,
            0,
            158,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            96,
            255,
            97
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034454260021448135,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028957840004295576,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29570790599973407,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48007,
            47396,
            47423,
            47391,
            47363,
            47423,
            47312,
            47349,
            47468,
            47498,
            49190,
            47293,
            48777,
            47542,
            47410,
            47505,
            47469,
            47461,
            47398,
            47244,
            47342,
            47561,
            47224,
            47357,
            47448,
            47208,
            47359,
            47464,
            47678,
            47378,
            47458,
            47465,
            47331,
            47529,
            47443,
            47453,
            47446,
            47421,
            47305,
            47366,
            47223,
            47442,
            47065,
            46898,
            47472,
            47507,
            47277,
            49281,
            47641,
            47804,
            47430,
            47641,
            47346,
            47482,
            47557,
            47286,
            47407,
            47393,
            47360,
            47215,
            47403,
            47032,
            46974
          ],
          [
            48007,
            47396,
            47423,
            47391,
            47363,
            47423,
            47312,
            47349,
            47468,
            47498,
            49190,
            47293,
            48777,
            47542,
            47410,
            47505,
            47469,
            47461,
            47398,
            47244,
            47342,
            47561,
            47224,
            47357,
            47448,
            47208,
            47359,
            47464,
            47678,
            47378,
            47458,
            47465,
            47331,
            47529,
            47443,
            47453,
            47446,
            47421,
            47305,
            47366,
            47223,
            47442,
            47065,
            46898,
            47472,
            47507,
            47277,
            49281,
            47641,
            47804,
            47430,
            47641,
            47346,
            47482,
            47557,
            47286,
            47407,
            47393,
            47360,
            47215,
            47403,
            47032,
            46974
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            242,
            3685,
            17649,
            36845,
            36478,
            18598,
            4304,
            543,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            135,
            2257,
            16257,
            36005,
            41007,
            25792,
            9000,
            1336,
            119,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            70,
            1051,
            8792,
            29227,
            41712,
            38736,
            18889,
            4662,
            466,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            141,
            2529,
            13228,
            30820,
            42061,
            39374,
            20648,
            5574,
            699,
            35,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13349429800291546,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016194360032386612,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06860699499884504,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47728,
            47341,
            47240,
            47227,
            47190,
            46780,
            47151,
            47342,
            47225,
            47371,
            47303,
            47207,
            46970,
            47204,
            47675,
            47319,
            47050,
            47205,
            47222,
            47130,
            47119,
            47254,
            47102,
            47090,
            47142,
            47212,
            47160,
            47137,
            47222,
            47312,
            46920,
            46932,
            47321,
            47447,
            47632,
            47248,
            47341,
            47229,
            47145,
            47216,
            47079,
            47252,
            47365,
            47097,
            47254,
            47059,
            47254,
            47104,
            47120,
            47179,
            47051,
            47424,
            46865,
            47152,
            47417,
            52338,
            47033,
            47269,
            47212,
            47057,
            47239,
            47275,
            47315
          ],
          [
            47728,
            47341,
            47240,
            47227,
            47190,
            46780,
            47151,
            47342,
            47225,
            47371,
            47303,
            47207,
            46970,
            47204,
            47675,
            47319,
            47050,
            47205,
            47222,
            47130,
            47119,
            47254,
            47102,
            47090,
            47142,
            47212,
            47160,
            47137,
            47222,
            47312,
            46920,
            46932,
            47321,
            47447,
            47632,
            47248,
            47341,
            47229,
            47145,
            47216,
            47079,
            47252,
            47365,
            47097,
            47254,
            47059,
            47254,
            47104,
            47120,
            47179,
            47051,
            47424,
            46865,
            47152,
            47417,
            52338,
            47033,
            47269,
            47212,
            47057,
            47239,
            47275,
            47315
          ],
          [
            47728,
            47341,
            47240,
            47227,
            47190,
            46780,
            47151,
            47342,
            47225,
            47371,
            47303,
            47207,
            46970,
            47204,
            47675,
            47319,
            47050,
            47205,
            47222,
            47130,
            47119,
            47254,
            47102,
            47090,
            47142,
            47212,
            47160,
            47137,
            47222,
            47312,
            46920,
            46932,
            47321,
            47447,
            47632,
            47248,
            47341,
            47229,
            47145,
            47216,
            47079,
            47252,
            47365,
            47097,
            47254,
            47059,
            47254,
            47104,
            47120,
            47179,
            47051,
            47424,
            46865,
            47152,
            47417,
            52338,
            47033,
            47269,
            47212,
            47057,
            47239,
            47275,
            47315
          ],
          [
            47728,
            47341,
            47240,
            47227,
            47190,
            46780,
            47151,
            47342,
            47225,
            47371,
            47303,
            47207,
            46970,
            47204,
            47675,
            47319,
            47050,
            47205,
            47222,
            47130,
            47119,
            47254,
            47102,
            47090,
            47142,
            47212,
            47160,
            47137,
            47222,
            47312,
            46920,
            46932,
            47321,
            47447,
            47632,
            47248,
            47341,
            47229,
            47145,
            47216,
            47079,
            47252,
            47365,
            47097,
            47254,
            47059,
            47254,
            47104,
            47120,
            47179,
            47051,
            47424,
            46865,
            47152,
            47417,
            52338,
            47033,
            47269,
            47212,
            47057,
            47239,
            47275,
            47315
          ],
          [
            47728,
            47341,
            47240,
            47227,
            47190,
            46780,
            47151,
            47342,
            47225,
            47371,
            47303,
            47207,
            46970,
            47204,
            47675,
            47319,
            47050,
            47205,
            47222,
            47130,
            47119,
            47254,
            47102,
            47090,
            47142,
            47212,
            47160,
            47137,
            47222,
            47312,
            46920,
            46932,
            47321,
            47447,
            47632,
            47248,
            47341,
            47229,
            47145,
            47216,
            47079,
            47252,
            47365,
            47097,
            47254,
            47059,
            47254,
            47104,
            47120,
            47179,
            47051,
            47424,
            46865,
            47152,
            47417,
            52338,
            47033,
            47269,
            47212,
            47057,
            47239,
            47275,
            47315
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            642,
            3376,
            12959,
            24995,
            34065,
            34951,
            24827,
            11153,
            2744,
            312,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            720,
            3956,
            14876,
            27082,
            34892,
            37282,
            30114,
            18108,
            7097,
            1774,
            170,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            21
          ],
          [
            1,
            3,
            194,
            1489,
            6265,
            17669,
            32748,
            38990,
            33240,
            18477,
            6282,
            909,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            201,
            1894,
            10511,
            24650,
            36285,
            42369,
            40331,
            30578,
            16804,
            3703,
            476,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            426,
            2229,
            7346,
            18781,
            32256,
            37964
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            13,
            542,
            3984,
            15923,
            30449,
            35973,
            31926,
            18429,
            6629,
            951,
            58,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            43,
            1042,
            7290,
            21079,
            37306,
            41282,
            35153,
            22005,
            9227,
            1873,
            213,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            106,
            1135,
            6161,
            19231,
            34262,
            38736,
            33569,
            20191,
            8089,
            1417,
            88,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            261,
            2930,
            11763,
            24530,
            34016,
            38509,
            35242,
            25680,
            12495,
            3197,
            225,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            197,
            2135,
            9269,
            21119,
            33437,
            38992,
            35642,
            24322,
            12278,
            3181,
            491,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            27,
            665,
            4352,
            14687,
            26476,
            35841,
            40608,
            37881,
            26514,
            13630,
            3640,
            382,
            13,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            94,
            950,
            5882,
            17061,
            31361
          ]
        ]
      },
      "call": {
        "duration": 0.26962034499956644,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001484583001001738,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29128130699973553,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1704460520013527,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014607630000682548,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3623641329977545,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            118,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.003497838002658682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.007734292001259746,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5355218980002974,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            2,
            255,
            0,
            76,
            0,
            255,
            0,
            255,
            255
          ],
          [
            71,
            0,
            13,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            24,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            209,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            23,
            0,
            6,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            11,
            255,
            59,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            2,
            2,
            0,
            255,
            3,
            255,
            255
          ],
          [
            68,
            0,
            11,
            0,
            14,
            0,
            255,
            252,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            67,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            88,
            0,
            11,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            113,
            255,
            65,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          4,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034649269982764963,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002873884001019178,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29630887899838854,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48055,
            47267,
            47227,
            47272,
            47321,
            47450,
            47093,
            46974,
            47193,
            47278,
            47456,
            47531,
            47383,
            47279,
            47307,
            47285,
            47262,
            47257,
            47478,
            47446,
            47417,
            49166,
            47457,
            47742,
            46845,
            47413,
            47456,
            49309,
            47328,
            47324,
            47300,
            47416,
            47278,
            47255,
            47401,
            47451,
            47410,
            47297,
            47543,
            47337,
            47472,
            47359,
            47221,
            47200,
            47368,
            47169,
            47278,
            47375,
            47423,
            47144,
            47301,
            47392,
            47392,
            47498,
            47305,
            47352,
            47273,
            47424,
            47434,
            47523,
            47432,
            47257,
            49355
          ],
          [
            48055,
            47267,
            47227,
            47272,
            47321,
            47450,
            47093,
            46974,
            47193,
            47278,
            47456,
            47531,
            47383,
            47279,
            47307,
            47285,
            47262,
            47257,
            47478,
            47446,
            47417,
            49166,
            47457,
            47742,
            46845,
            47413,
            47456,
            49309,
            47328,
            47324,
            47300,
            47416,
            47278,
            47255,
            47401,
            47451,
            47410,
            47297,
            47543,
            47337,
            47472,
            47359,
            47221,
            47200,
            47368,
            47169,
            47278,
            47375,
            47423,
            47144,
            47301,
            47392,
            47392,
            47498,
            47305,
            47352,
            47273,
            47424,
            47434,
            47523,
            47432,
            47257,
            49355
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            675,
            6798,
            24749,
            39461,
            33776,
            14917,
            2906,
            285,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            462,
            6864,
            21944,
            38068,
            37609,
            21278,
            5242,
            598,
            28,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            205,
            1857,
            14213,
            32320,
            40940,
            29343,
            9485,
            1559,
            131,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50,
            533,
            5817,
            22249,
            38682,
            41955,
            30903,
            12922,
            2410,
            353,
            16,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            898,
            7788,
            25773,
            39853,
            45241
          ]
        ]
      },
      "call": {
        "duration": 0.13321043199903215,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015985259997250978,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06886632199893938,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47857,
            47239,
            47075,
            47088,
            47129,
            47309,
            47190,
            48942,
            47156,
            47161,
            47120,
            46795,
            46752,
            47123,
            46938,
            47091,
            47144,
            47030,
            47120,
            47003,
            47179,
            47081,
            47173,
            47313,
            47128,
            47075,
            47167,
            47170,
            47623,
            47085,
            46758,
            47089,
            47024,
            47277,
            47200,
            47234,
            47077,
            47003,
            47145,
            47096,
            47063,
            47179,
            47208,
            47361,
            47148,
            47098,
            47042,
            47073,
            47621,
            49393,
            47050,
            47033,
            47111,
            47136,
            46952,
            47060,
            47155,
            47117,
            47146,
            47072,
            47139,
            46990,
            47106
          ],
          [
            47857,
            47239,
            47075,
            47088,
            47129,
            47309,
            47190,
            48942,
            47156,
            47161,
            47120,
            46795,
            46752,
            47123,
            46938,
            47091,
            47144,
            47030,
            47120,
            47003,
            47179,
            47081,
            47173,
            47313,
            47128,
            47075,
            47167,
            47170,
            47623,
            47085,
            46758,
            47089,
            47024,
            47277,
            47200,
            47234,
            47077,
            47003,
            47145,
            47096,
            47063,
            47179,
            47208,
            47361,
            47148,
            47098,
            47042,
            47073,
            47621,
            49393,
            47050,
            47033,
            47111,
            47136,
            46952,
            47060,
            47155,
            47117,
            47146,
            47072,
            47139,
            46990,
            47106
          ],
          [
            47857,
            47239,
            47075,
            47088,
            47129,
            47309,
            47190,
            48942,
            47156,
            47161,
            47120,
            46795,
            46752,
            47123,
            46938,
            47091,
            47144,
            47030,
            47120,
            47003,
            47179,
            47081,
            47173,
            47313,
            47128,
            47075,
            47167,
            47170,
            47623,
            47085,
            46758,
            47089,
            47024,
            47277,
            47200,
            47234,
            47077,
            47003,
            47145,
            47096,
            47063,
            47179,
            47208,
            47361,
            47148,
            47098,
            47042,
            47073,
            47621,
            49393,
            47050,
            47033,
            47111,
            47136,
            46952,
            47060,
            47155,
            47117,
            47146,
            47072,
            47139,
            46990,
            47106
          ],
          [
            47857,
            47239,
            47075,
            47088,
            47129,
            47309,
            47190,
            48942,
            47156,
            47161,
            47120,
            46795,
            46752,
            47123,
            46938,
            47091,
            47144,
            47030,
            47120,
            47003,
            47179,
            47081,
            47173,
            47313,
            47128,
            47075,
            47167,
            47170,
            47623,
            47085,
            46758,
            47089,
            47024,
            47277,
            47200,
            47234,
            47077,
            47003,
            47145,
            47096,
            47063,
            47179,
            47208,
            47361,
            47148,
            47098,
            47042,
            47073,
            47621,
            49393,
            47050,
            47033,
            47111,
            47136,
            46952,
            47060,
            47155,
            47117,
            47146,
            47072,
            47139,
            46990,
            47106
          ],
          [
            47857,
            47239,
            47075,
            47088,
            47129,
            47309,
            47190,
            48942,
            47156,
            47161,
            47120,
            46795,
            46752,
            47123,
            46938,
            47091,
            47144,
            47030,
            47120,
            47003,
            47179,
            47081,
            47173,
            47313,
            47128,
            47075,
            47167,
            47170,
            47623,
            47085,
            46758,
            47089,
            47024,
            47277,
            47200,
            47234,
            47077,
            47003,
            47145,
            47096,
            47063,
            47179,
            47208,
            47361,
            47148,
            47098,
            47042,
            47073,
            47621,
            49393,
            47050,
            47033,
            47111,
            47136,
            46952,
            47060,
            47155,
            47117,
            47146,
            47072,
            47139,
            46990,
            47106
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            112,
            1141,
            6469,
            18296,
            29063,
            33815,
            32416,
            24317,
            14948,
            6705,
            1279,
            177,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            50,
            551,
            3428,
            11259,
            22008,
            31625,
            35583,
            32322,
            19678,
            9822,
            4042,
            747,
            37,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            46,
            800,
            4820,
            15437,
            26233,
            33813,
            38011,
            36629,
            26525,
            13320,
            4706,
            666,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            151,
            1293,
            5540,
            14881,
            26997,
            35147,
            34712,
            26257,
            13193,
            4199,
            771,
            67,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            14778,
            5454,
            813,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            195,
            2445,
            11052,
            22940,
            33954,
            39239,
            32027,
            18962,
            7969,
            1648,
            93,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            358,
            4043,
            14658,
            28010,
            37454,
            34946,
            22747,
            9056,
            2054,
            180,
            10,
            0,
            0,
            0,
            0
          ],
          [
            66,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            79,
            1008,
            7313,
            18883,
            30764,
            38631,
            39292,
            33495,
            24573,
            12373,
            3533,
            404,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            56,
            566,
            3330,
            12475,
            24607,
            36626,
            33329,
            21781,
            10784,
            3964,
            761,
            61,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            97,
            1330,
            6047,
            18002,
            28223,
            36455,
            38917,
            35014,
            23898,
            13372,
            3657,
            572,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            199,
            1609,
            6568,
            17814,
            29967,
            38726,
            39619,
            32424,
            21744,
            12913,
            6173,
            1939,
            144,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2694377309999254,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014744130021426827,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917936579979141,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17182837299697,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40047274, 10011818), (413096, 413096), (40048577, 10012145))\nassert ((40047274 > 0 and 10011818 == 0\n  +10011818\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff997e21c0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff994f1490>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff998575b0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40047274, 10011818), (413096, 413096), (40048577, 10012145))\nE       assert ((40047274 > 0 and 10011818 == 0\nE         +10011818\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004921459996694466,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}