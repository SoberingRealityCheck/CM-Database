{
  "created": 1722033692.470007,
  "duration": 23.503719806671143,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5061087519970897,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14826040099796955,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013390200001595076,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037606139994750265,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14808054699824424,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012533980006992351,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13193646700165118,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1217845400024089,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012803680001525208,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003767453999898862,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1211342450005759,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012625180024770088,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003322603999549756,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1466102439990209,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012076169987267349,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033289050006715115,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11996331899717916,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011857769968628418,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033152539981529117,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14628698600063217,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011541550011315849,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033307640005659778,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12016759299876867,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011830769981315825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004382407998491544,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021052969968877733,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010965250003209803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003303883997432422,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016890680017240811,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011147350014653057,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003280603003076976,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040177190021495335,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033674.7619753,
            "msecs": 761.9752883911133,
            "relativeCreated": 7767.845153808594,
            "thread": 281473179799584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5312
          }
        ]
      },
      "teardown": {
        "duration": 0.0012423279986251146,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033303150012216065,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002387393000390148,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033674.7741458,
            "msecs": 774.1458415985107,
            "relativeCreated": 7780.015707015991,
            "thread": 281473179799584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5312
          }
        ]
      },
      "teardown": {
        "duration": 0.0011465060015325435,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020539959987218026,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027147599976160564,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033674.7836094,
            "msecs": 783.6093902587891,
            "relativeCreated": 7789.4792556762695,
            "thread": 281473179799584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5312
          }
        ]
      },
      "teardown": {
        "duration": 0.001081164002243895,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020646760021918453,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034279370011063293,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033674.792966,
            "msecs": 792.9658889770508,
            "relativeCreated": 7798.835754394531,
            "thread": 281473179799584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5312
          }
        ]
      },
      "teardown": {
        "duration": 0.0010646939990692772,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032745729986345395,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.146556662999501,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011824460016214289,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00330085400128155,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1203947279973363,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011692760017467663,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.18006282100031967,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14765681700009736,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012302980030653998,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015092616999027086,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12115485499816714,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012737979996018112,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8439753970014863,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\nFailed on attempt 0 at write 55 of 279.\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            59,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            16,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.0035743400003411807,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00285252400135505,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9011122729971248,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            30,
            0,
            1,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            11
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            83,
            255,
            255,
            255,
            8
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            24,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            89,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            193,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            2,
            255
          ],
          [
            255,
            135,
            255,
            255,
            255,
            255,
            0,
            0,
            182,
            1,
            125,
            255
          ],
          [
            255,
            0,
            147,
            0,
            255,
            0,
            255,
            89,
            255,
            255,
            255,
            3
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035719099978450686,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028601739977602847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30274288099826663,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48262,
            47699,
            47585,
            47738,
            47560,
            47618,
            47514,
            47457,
            47368,
            47567,
            47595,
            47794,
            47669,
            47582,
            47625,
            47653,
            47532,
            47604,
            47641,
            47725,
            47678,
            47810,
            47640,
            47581,
            47601,
            47872,
            47576,
            47977,
            47565,
            49773,
            47782,
            47495,
            47623,
            47606,
            47607,
            47532,
            47571,
            47506,
            47580,
            47499,
            47793,
            47680,
            47588,
            47590,
            47697,
            47646,
            47561,
            47142,
            47234,
            47459,
            47493,
            47611,
            47607,
            47685,
            47668,
            47649,
            47599,
            47720,
            49025,
            47570,
            48103,
            47618,
            47926
          ],
          [
            48262,
            47699,
            47585,
            47738,
            47560,
            47618,
            47514,
            47457,
            47368,
            47567,
            47595,
            47794,
            47669,
            47582,
            47625,
            47653,
            47532,
            47604,
            47641,
            47725,
            47678,
            47810,
            47640,
            47581,
            47601,
            47872,
            47576,
            47977,
            47565,
            49773,
            47782,
            47495,
            47623,
            47606,
            47607,
            47532,
            47571,
            47506,
            47580,
            47499,
            47793,
            47680,
            47588,
            47590,
            47697,
            47646,
            47561,
            47142,
            47234,
            47459,
            47493,
            47611,
            47607,
            47685,
            47668,
            47649,
            47599,
            47720,
            49025,
            47570,
            48103,
            47618,
            47926
          ]
        ],
        "eTX_errcounts": [
          [
            40100,
            26846,
            8189,
            1232,
            106,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            217,
            3154,
            16407,
            34206,
            42531,
            31440,
            15406,
            2335,
            134,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            731,
            7682,
            25232,
            40813,
            37819,
            19231,
            5062,
            677,
            33,
            0,
            0,
            0
          ],
          [
            10,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            328,
            3943,
            17811,
            36602,
            42166,
            31641,
            13618,
            3221,
            387,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            345,
            4485,
            19007,
            36441,
            43033,
            35589,
            17656,
            3294,
            372,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13404857299974537,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015977459988789633,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06885066799804918,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47919,
            47372,
            47317,
            47349,
            47256,
            47580,
            47166,
            47277,
            47348,
            47358,
            47281,
            47255,
            47093,
            47304,
            47292,
            47270,
            47223,
            47408,
            47277,
            47281,
            47321,
            47285,
            47375,
            52829,
            49080,
            47395,
            47137,
            47131,
            47131,
            47317,
            47237,
            46813,
            47222,
            47345,
            47234,
            47202,
            47164,
            47410,
            47305,
            47516,
            47347,
            47378,
            47652,
            47423,
            47170,
            47387,
            47225,
            46878,
            47105,
            47287,
            47209,
            47311,
            47287,
            47228,
            47208,
            47295,
            47298,
            47298,
            47285,
            47353,
            49155,
            48954,
            47093
          ],
          [
            47919,
            47372,
            47317,
            47349,
            47256,
            47580,
            47166,
            47277,
            47348,
            47358,
            47281,
            47255,
            47093,
            47304,
            47292,
            47270,
            47223,
            47408,
            47277,
            47281,
            47321,
            47285,
            47375,
            52829,
            49080,
            47395,
            47137,
            47131,
            47131,
            47317,
            47237,
            46813,
            47222,
            47345,
            47234,
            47202,
            47164,
            47410,
            47305,
            47516,
            47347,
            47378,
            47652,
            47423,
            47170,
            47387,
            47225,
            46878,
            47105,
            47287,
            47209,
            47311,
            47287,
            47228,
            47208,
            47295,
            47298,
            47298,
            47285,
            47353,
            49155,
            48954,
            47093
          ],
          [
            47919,
            47372,
            47317,
            47349,
            47256,
            47580,
            47166,
            47277,
            47348,
            47358,
            47281,
            47255,
            47093,
            47304,
            47292,
            47270,
            47223,
            47408,
            47277,
            47281,
            47321,
            47285,
            47375,
            52829,
            49080,
            47395,
            47137,
            47131,
            47131,
            47317,
            47237,
            46813,
            47222,
            47345,
            47234,
            47202,
            47164,
            47410,
            47305,
            47516,
            47347,
            47378,
            47652,
            47423,
            47170,
            47387,
            47225,
            46878,
            47105,
            47287,
            47209,
            47311,
            47287,
            47228,
            47208,
            47295,
            47298,
            47298,
            47285,
            47353,
            49155,
            48954,
            47093
          ],
          [
            47919,
            47372,
            47317,
            47349,
            47256,
            47580,
            47166,
            47277,
            47348,
            47358,
            47281,
            47255,
            47093,
            47304,
            47292,
            47270,
            47223,
            47408,
            47277,
            47281,
            47321,
            47285,
            47375,
            52829,
            49080,
            47395,
            47137,
            47131,
            47131,
            47317,
            47237,
            46813,
            47222,
            47345,
            47234,
            47202,
            47164,
            47410,
            47305,
            47516,
            47347,
            47378,
            47652,
            47423,
            47170,
            47387,
            47225,
            46878,
            47105,
            47287,
            47209,
            47311,
            47287,
            47228,
            47208,
            47295,
            47298,
            47298,
            47285,
            47353,
            49155,
            48954,
            47093
          ],
          [
            47919,
            47372,
            47317,
            47349,
            47256,
            47580,
            47166,
            47277,
            47348,
            47358,
            47281,
            47255,
            47093,
            47304,
            47292,
            47270,
            47223,
            47408,
            47277,
            47281,
            47321,
            47285,
            47375,
            52829,
            49080,
            47395,
            47137,
            47131,
            47131,
            47317,
            47237,
            46813,
            47222,
            47345,
            47234,
            47202,
            47164,
            47410,
            47305,
            47516,
            47347,
            47378,
            47652,
            47423,
            47170,
            47387,
            47225,
            46878,
            47105,
            47287,
            47209,
            47311,
            47287,
            47228,
            47208,
            47295,
            47298,
            47298,
            47285,
            47353,
            49155,
            48954,
            47093
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            48,
            600,
            3894,
            13080,
            25519,
            35811,
            36420,
            28285,
            17674,
            8308,
            2213,
            208,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            100,
            1317,
            6381,
            15182,
            23968,
            31885,
            36202,
            33466,
            25309,
            13210,
            3473,
            518,
            60,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            6,
            120,
            861,
            3477,
            10928,
            20997,
            31276,
            37489,
            34371,
            25943,
            15832,
            5915,
            1061,
            62,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            34,
            605,
            4174,
            13017,
            23730,
            33646,
            38344,
            38140,
            30513,
            20585,
            10687,
            4425,
            799,
            120,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            258,
            1529,
            6793,
            16744,
            26799
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            37,
            902,
            5793,
            16481,
            27462,
            31846,
            32151,
            24822,
            16505,
            5522,
            1174,
            117,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            128,
            1767,
            8365,
            17376,
            28006,
            33383,
            30411,
            24142,
            16022,
            8675,
            2903,
            280,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            301,
            2119,
            8678,
            20012,
            30429,
            34618,
            33576,
            27302,
            18959,
            9060,
            2229,
            242,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            0,
            38,
            526,
            3305,
            9962,
            20312,
            29187,
            34327,
            30703,
            26091,
            19372,
            11354,
            5096,
            1032,
            85,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            73,
            588,
            3695,
            10888,
            20971,
            30425,
            38271,
            39161,
            31209,
            21190,
            10124,
            3437,
            725,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            2,
            95,
            862,
            4433,
            11493,
            23388,
            33757,
            39405,
            39281,
            33631,
            27151,
            18310,
            7523,
            1241,
            69,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            29,
            391,
            2103,
            7916
          ]
        ]
      },
      "call": {
        "duration": 0.2723098710011982,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8022ee10>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8022ee10> = array([21, 12, 18, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff80213490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47919, 47372, 47317, 47349, 47256, 47580, ...], [47919, 47372, 47317, 47349, 47256, 47580, ...], [..., 0, ...], [0, 1, 6, 120, 861, 3477, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 73, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8022ee10>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8022ee10> = array([21, 12, 18, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016226459993049502,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29266988500239677,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1707216640024853,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014292319974629208,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3045822230014892,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            233,
            61,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034835280021070503,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028721439994114917,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.538527325999894,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            163,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            162,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            90,
            255,
            148,
            255,
            155,
            0,
            0,
            191,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            254,
            0,
            58,
            5,
            255,
            18,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            66,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            2,
            255,
            149,
            255,
            209,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            159,
            255,
            117,
            255,
            255,
            1,
            0,
            126,
            0,
            255,
            255
          ],
          [
            255,
            1,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            84,
            255,
            145
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034683769990806468,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002864074001990957,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2958273959993676,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48070,
            47696,
            47355,
            47498,
            47417,
            47602,
            47473,
            47506,
            47403,
            47432,
            47510,
            47453,
            47631,
            47582,
            47573,
            47488,
            47411,
            47542,
            47491,
            47853,
            47539,
            47716,
            47444,
            47755,
            47631,
            47208,
            47261,
            47442,
            47450,
            47348,
            47617,
            47423,
            47605,
            47404,
            47584,
            47475,
            47466,
            47448,
            47354,
            47472,
            47590,
            47362,
            47609,
            47649,
            47455,
            47458,
            47534,
            47493,
            47486,
            47636,
            49328,
            47450,
            47758,
            47555,
            49475,
            47576,
            47433,
            47450,
            47464,
            47540,
            47388,
            47479,
            47340
          ],
          [
            48070,
            47696,
            47355,
            47498,
            47417,
            47602,
            47473,
            47506,
            47403,
            47432,
            47510,
            47453,
            47631,
            47582,
            47573,
            47488,
            47411,
            47542,
            47491,
            47853,
            47539,
            47716,
            47444,
            47755,
            47631,
            47208,
            47261,
            47442,
            47450,
            47348,
            47617,
            47423,
            47605,
            47404,
            47584,
            47475,
            47466,
            47448,
            47354,
            47472,
            47590,
            47362,
            47609,
            47649,
            47455,
            47458,
            47534,
            47493,
            47486,
            47636,
            49328,
            47450,
            47758,
            47555,
            49475,
            47576,
            47433,
            47450,
            47464,
            47540,
            47388,
            47479,
            47340
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            223,
            3598,
            17599,
            35779,
            36522,
            18471,
            4671,
            470,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            193,
            2448,
            15985,
            34627,
            39500,
            26073,
            9262,
            929,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            999,
            8372,
            28824,
            41640,
            39022,
            18712,
            4759,
            580,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            118,
            2188,
            12840,
            31084,
            42666,
            38673,
            20497,
            5661,
            685,
            81,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13394366099964827,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00158196600023075,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06863166300172452,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47848,
            47430,
            47386,
            47461,
            47534,
            47558,
            47319,
            47215,
            47026,
            47292,
            47299,
            47182,
            47050,
            47410,
            47201,
            47284,
            47405,
            47399,
            47422,
            47299,
            47285,
            47365,
            47352,
            49483,
            49022,
            47420,
            47468,
            47251,
            47438,
            47318,
            47428,
            46962,
            47150,
            47294,
            47227,
            47326,
            47248,
            46987,
            47397,
            47465,
            47360,
            47380,
            47823,
            47709,
            47254,
            47329,
            47217,
            47214,
            47415,
            47149,
            47262,
            47197,
            47272,
            47221,
            47440,
            47363,
            47169,
            47254,
            47318,
            47252,
            47480,
            47550,
            47767
          ],
          [
            47848,
            47430,
            47386,
            47461,
            47534,
            47558,
            47319,
            47215,
            47026,
            47292,
            47299,
            47182,
            47050,
            47410,
            47201,
            47284,
            47405,
            47399,
            47422,
            47299,
            47285,
            47365,
            47352,
            49483,
            49022,
            47420,
            47468,
            47251,
            47438,
            47318,
            47428,
            46962,
            47150,
            47294,
            47227,
            47326,
            47248,
            46987,
            47397,
            47465,
            47360,
            47380,
            47823,
            47709,
            47254,
            47329,
            47217,
            47214,
            47415,
            47149,
            47262,
            47197,
            47272,
            47221,
            47440,
            47363,
            47169,
            47254,
            47318,
            47252,
            47480,
            47550,
            47767
          ],
          [
            47848,
            47430,
            47386,
            47461,
            47534,
            47558,
            47319,
            47215,
            47026,
            47292,
            47299,
            47182,
            47050,
            47410,
            47201,
            47284,
            47405,
            47399,
            47422,
            47299,
            47285,
            47365,
            47352,
            49483,
            49022,
            47420,
            47468,
            47251,
            47438,
            47318,
            47428,
            46962,
            47150,
            47294,
            47227,
            47326,
            47248,
            46987,
            47397,
            47465,
            47360,
            47380,
            47823,
            47709,
            47254,
            47329,
            47217,
            47214,
            47415,
            47149,
            47262,
            47197,
            47272,
            47221,
            47440,
            47363,
            47169,
            47254,
            47318,
            47252,
            47480,
            47550,
            47767
          ],
          [
            47848,
            47430,
            47386,
            47461,
            47534,
            47558,
            47319,
            47215,
            47026,
            47292,
            47299,
            47182,
            47050,
            47410,
            47201,
            47284,
            47405,
            47399,
            47422,
            47299,
            47285,
            47365,
            47352,
            49483,
            49022,
            47420,
            47468,
            47251,
            47438,
            47318,
            47428,
            46962,
            47150,
            47294,
            47227,
            47326,
            47248,
            46987,
            47397,
            47465,
            47360,
            47380,
            47823,
            47709,
            47254,
            47329,
            47217,
            47214,
            47415,
            47149,
            47262,
            47197,
            47272,
            47221,
            47440,
            47363,
            47169,
            47254,
            47318,
            47252,
            47480,
            47550,
            47767
          ],
          [
            47848,
            47430,
            47386,
            47461,
            47534,
            47558,
            47319,
            47215,
            47026,
            47292,
            47299,
            47182,
            47050,
            47410,
            47201,
            47284,
            47405,
            47399,
            47422,
            47299,
            47285,
            47365,
            47352,
            49483,
            49022,
            47420,
            47468,
            47251,
            47438,
            47318,
            47428,
            46962,
            47150,
            47294,
            47227,
            47326,
            47248,
            46987,
            47397,
            47465,
            47360,
            47380,
            47823,
            47709,
            47254,
            47329,
            47217,
            47214,
            47415,
            47149,
            47262,
            47197,
            47272,
            47221,
            47440,
            47363,
            47169,
            47254,
            47318,
            47252,
            47480,
            47550,
            47767
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            341,
            2502,
            11149,
            23978,
            34292,
            34230,
            23106,
            10992,
            3946,
            600,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            34,
            625,
            3590,
            13111,
            25675,
            36240,
            37660,
            28365,
            14687,
            3931,
            427,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            0,
            36,
            618,
            4891,
            16534,
            31871,
            39340,
            35192,
            19802,
            6589,
            938,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            71,
            1060,
            7294,
            22390,
            38625,
            43902,
            39372,
            26000,
            12679,
            3137,
            305,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            98,
            1311,
            7991,
            21266,
            35458,
            39764
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            450,
            3809,
            14216,
            26823,
            34023,
            28862,
            13672,
            3837,
            456,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            808,
            5972,
            19800,
            35044,
            40091,
            32733,
            18466,
            6220,
            854,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            72,
            801,
            5705,
            18082,
            33100,
            38068,
            31478,
            18437,
            5792,
            887,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            215,
            1903,
            8371,
            21937,
            35999,
            42074,
            35053,
            22476,
            8582,
            1715,
            122,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            72,
            1472,
            8016,
            21169,
            33970,
            41025,
            37661,
            26173,
            12186,
            2841,
            321,
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            280,
            2143,
            10900,
            25502,
            38612,
            43531,
            38534,
            26860,
            12987,
            4273,
            1036,
            121,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            760,
            5319,
            16750,
            31384
          ]
        ]
      },
      "call": {
        "duration": 0.27063676299803774,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015136539986997377,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29156637100095395,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1700857399991946,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014744130021426827,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3504421769976034,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            87,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            14,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034949280016007833,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028725640004267916,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5395480379993387,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            3,
            255,
            1,
            34,
            0,
            255,
            1,
            255,
            255
          ],
          [
            68,
            0,
            22,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            40,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            14,
            255,
            38,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            3,
            255
          ],
          [
            255,
            0,
            255,
            3,
            255,
            3,
            7,
            1,
            255,
            7,
            255,
            255
          ],
          [
            60,
            0,
            3,
            0,
            3,
            0,
            255,
            124,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            170,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            74,
            0,
            8,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            97,
            255,
            75,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003485417997580953,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028515939993667416,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29624728599810624,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48111,
            47583,
            47435,
            47427,
            47457,
            47277,
            47578,
            47245,
            47414,
            47431,
            47442,
            47367,
            47462,
            47383,
            47336,
            47425,
            47653,
            47537,
            47664,
            47513,
            47396,
            47543,
            47461,
            47382,
            47401,
            47471,
            47644,
            47512,
            47732,
            47330,
            47745,
            47502,
            47447,
            47577,
            47515,
            47486,
            47424,
            47530,
            47304,
            47585,
            47459,
            47562,
            47445,
            47322,
            47046,
            47127,
            47427,
            47390,
            47265,
            47437,
            47421,
            47513,
            47551,
            47456,
            47447,
            47444,
            47465,
            49412,
            47444,
            47781,
            47340,
            49737,
            47387
          ],
          [
            48111,
            47583,
            47435,
            47427,
            47457,
            47277,
            47578,
            47245,
            47414,
            47431,
            47442,
            47367,
            47462,
            47383,
            47336,
            47425,
            47653,
            47537,
            47664,
            47513,
            47396,
            47543,
            47461,
            47382,
            47401,
            47471,
            47644,
            47512,
            47732,
            47330,
            47745,
            47502,
            47447,
            47577,
            47515,
            47486,
            47424,
            47530,
            47304,
            47585,
            47459,
            47562,
            47445,
            47322,
            47046,
            47127,
            47427,
            47390,
            47265,
            47437,
            47421,
            47513,
            47551,
            47456,
            47447,
            47444,
            47465,
            49412,
            47444,
            47781,
            47340,
            49737,
            47387
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            655,
            6928,
            24212,
            39411,
            33397,
            14965,
            2579,
            270,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            32,
            672,
            6119,
            22325,
            38079,
            38155,
            20881,
            5112,
            636,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            1,
            96,
            1987,
            14579,
            33175,
            40996,
            28780,
            9539,
            1559,
            92,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            577,
            5823,
            22006,
            38546,
            41092,
            29496,
            11898,
            1991,
            285,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            850,
            7896,
            25478,
            42233,
            43225
          ]
        ]
      },
      "call": {
        "duration": 0.13397885200174642,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015984950005076826,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06896443000005092,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47606,
            47427,
            47263,
            47212,
            47252,
            47198,
            47263,
            47334,
            47401,
            47212,
            47350,
            47350,
            47349,
            47300,
            47634,
            47229,
            47145,
            47251,
            47335,
            47123,
            47185,
            46964,
            47193,
            47110,
            47154,
            47514,
            47270,
            47464,
            47322,
            47354,
            47316,
            50089,
            49188,
            47091,
            47064,
            46922,
            47068,
            47206,
            47162,
            47129,
            47247,
            47241,
            47153,
            47205,
            47297,
            47233,
            46811,
            47245,
            47267,
            47258,
            49520,
            47089,
            47137,
            47273,
            47230,
            47182,
            47197,
            47372,
            47108,
            47281,
            47195,
            47187,
            47422
          ],
          [
            47606,
            47427,
            47263,
            47212,
            47252,
            47198,
            47263,
            47334,
            47401,
            47212,
            47350,
            47350,
            47349,
            47300,
            47634,
            47229,
            47145,
            47251,
            47335,
            47123,
            47185,
            46964,
            47193,
            47110,
            47154,
            47514,
            47270,
            47464,
            47322,
            47354,
            47316,
            50089,
            49188,
            47091,
            47064,
            46922,
            47068,
            47206,
            47162,
            47129,
            47247,
            47241,
            47153,
            47205,
            47297,
            47233,
            46811,
            47245,
            47267,
            47258,
            49520,
            47089,
            47137,
            47273,
            47230,
            47182,
            47197,
            47372,
            47108,
            47281,
            47195,
            47187,
            47422
          ],
          [
            47606,
            47427,
            47263,
            47212,
            47252,
            47198,
            47263,
            47334,
            47401,
            47212,
            47350,
            47350,
            47349,
            47300,
            47634,
            47229,
            47145,
            47251,
            47335,
            47123,
            47185,
            46964,
            47193,
            47110,
            47154,
            47514,
            47270,
            47464,
            47322,
            47354,
            47316,
            50089,
            49188,
            47091,
            47064,
            46922,
            47068,
            47206,
            47162,
            47129,
            47247,
            47241,
            47153,
            47205,
            47297,
            47233,
            46811,
            47245,
            47267,
            47258,
            49520,
            47089,
            47137,
            47273,
            47230,
            47182,
            47197,
            47372,
            47108,
            47281,
            47195,
            47187,
            47422
          ],
          [
            47606,
            47427,
            47263,
            47212,
            47252,
            47198,
            47263,
            47334,
            47401,
            47212,
            47350,
            47350,
            47349,
            47300,
            47634,
            47229,
            47145,
            47251,
            47335,
            47123,
            47185,
            46964,
            47193,
            47110,
            47154,
            47514,
            47270,
            47464,
            47322,
            47354,
            47316,
            50089,
            49188,
            47091,
            47064,
            46922,
            47068,
            47206,
            47162,
            47129,
            47247,
            47241,
            47153,
            47205,
            47297,
            47233,
            46811,
            47245,
            47267,
            47258,
            49520,
            47089,
            47137,
            47273,
            47230,
            47182,
            47197,
            47372,
            47108,
            47281,
            47195,
            47187,
            47422
          ],
          [
            47606,
            47427,
            47263,
            47212,
            47252,
            47198,
            47263,
            47334,
            47401,
            47212,
            47350,
            47350,
            47349,
            47300,
            47634,
            47229,
            47145,
            47251,
            47335,
            47123,
            47185,
            46964,
            47193,
            47110,
            47154,
            47514,
            47270,
            47464,
            47322,
            47354,
            47316,
            50089,
            49188,
            47091,
            47064,
            46922,
            47068,
            47206,
            47162,
            47129,
            47247,
            47241,
            47153,
            47205,
            47297,
            47233,
            46811,
            47245,
            47267,
            47258,
            49520,
            47089,
            47137,
            47273,
            47230,
            47182,
            47197,
            47372,
            47108,
            47281,
            47195,
            47187,
            47422
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            141,
            1244,
            6345,
            17514,
            28668,
            35327,
            31830,
            21766,
            11040,
            2756,
            241,
            44,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            203,
            2014,
            10190,
            25207,
            37088,
            38717,
            29911,
            17632,
            6739,
            1985,
            281,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            448,
            2760,
            12337,
            26565,
            38758,
            41105,
            33714,
            21950,
            9315,
            2236,
            278,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            947,
            5845,
            17520,
            30753,
            38225,
            34852,
            25466,
            12271,
            2563,
            264,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10904,
            3256,
            249,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            121,
            1744,
            9564,
            21655,
            34739,
            37971,
            28265,
            15158,
            4392,
            542,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            476,
            5156,
            16245,
            29035,
            39156,
            34292,
            21248,
            9268,
            2114,
            123,
            0,
            0,
            0,
            0,
            0
          ],
          [
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            62,
            618,
            5355,
            16107,
            29458,
            39749,
            40303,
            32215,
            20618,
            7551,
            1422,
            75,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            199,
            3063,
            13038,
            27396,
            37705,
            37176,
            23198,
            9944,
            2623,
            234,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            34,
            566,
            4134,
            15272,
            29002,
            39919,
            41699,
            35068,
            22910,
            12123,
            3480,
            957,
            89,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            146,
            1277,
            6896,
            18685,
            32006,
            40934,
            40627,
            32022,
            19003,
            8827,
            2374,
            374,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27122618700013845,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014652019999630284,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29184531799910474,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1713587589983945,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045629, 10011407), (411424, 411424), (40048294, 10012074))\nassert ((40045629 > 0 and 10011407 == 0\n  +10011407\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff80213100>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff7ffabe80>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff8032a1f0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045629, 10011407), (411424, 411424), (40048294, 10012074))\nE       assert ((40045629 > 0 and 10011407 == 0\nE         +10011407\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004905108999082586,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}