{
  "created": 1722032857.9506264,
  "duration": 23.241453647613525,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5053972079986124,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14828741699966486,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001320209001278272,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038208250007301103,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14807150199703756,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001291648997721495,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13176236000072095,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12200620300063747,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001287569000851363,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003791333998378832,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12114062399996328,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012691780029854272,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003334155000629835,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14700218900179607,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011945969999942463,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003343454001878854,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12018831199748092,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001161086001957301,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003358545000082813,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14674391300286516,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011816959995485377,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033785550003813114,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12035421600012342,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012089069969078992,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00440625800183625,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021641580024152063,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011437450011726469,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033497549993626308,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017005279987643007,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010898939981416333,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003285193000920117,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004015319002064643,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032840.499687,
            "msecs": 499.68695640563965,
            "relativeCreated": 7765.140056610107,
            "thread": 281472827801632,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4915
          }
        ]
      },
      "teardown": {
        "duration": 0.0012139169994043186,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033598340014577843,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023700530000496656,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032840.5124302,
            "msecs": 512.4301910400391,
            "relativeCreated": 7777.883291244507,
            "thread": 281472827801632,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4915
          }
        ]
      },
      "teardown": {
        "duration": 0.0011703559976012912,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021454380002978723,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027279909991193563,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032840.5224597,
            "msecs": 522.4597454071045,
            "relativeCreated": 7787.912845611572,
            "thread": 281472827801632,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4915
          }
        ]
      },
      "teardown": {
        "duration": 0.0010392830008640885,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002082885999698192,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034324660009588115,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032840.532414,
            "msecs": 532.4139595031738,
            "relativeCreated": 7797.867059707642,
            "thread": 281472827801632,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4915
          }
        ]
      },
      "teardown": {
        "duration": 0.001084104002075037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033248229992750566,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.147159781998198,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011765060007746797,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033166339999297634,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12061150199951953,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011860170016007032,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17956176300140214,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14812505400186637,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012577779998537153,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015173857998888707,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12171441600003163,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001241128000401659,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8535321749986906,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            14,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            63,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            9,
            112,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.00353596900094999,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029125250002834946,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9016445189990918,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            19,
            0,
            1,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            195,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            145,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            44,
            255,
            255,
            255,
            11
          ],
          [
            6,
            0,
            1,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            61,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            65,
            0,
            0,
            0,
            0
          ],
          [
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            88,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            171,
            255,
            255,
            255,
            255,
            0,
            0,
            106,
            0,
            66,
            255
          ],
          [
            255,
            0,
            160,
            0,
            255,
            0,
            140,
            30,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034615969998412766,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028981549985473976,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30335675600144896,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48286,
            47517,
            47426,
            47391,
            47471,
            47436,
            47340,
            47366,
            49445,
            47432,
            47906,
            47613,
            47888,
            47681,
            47835,
            47362,
            47514,
            47506,
            47410,
            47445,
            47103,
            47175,
            47408,
            47544,
            47509,
            47565,
            47418,
            47520,
            47384,
            47492,
            47434,
            47483,
            47407,
            47478,
            47553,
            47547,
            47411,
            47519,
            47455,
            47377,
            47384,
            47483,
            47406,
            47611,
            47575,
            47462,
            47579,
            49292,
            47429,
            47827,
            47604,
            47859,
            47649,
            47808,
            47518,
            47462,
            47511,
            47374,
            47519,
            47171,
            47484,
            47496,
            47242
          ],
          [
            48286,
            47517,
            47426,
            47391,
            47471,
            47436,
            47340,
            47366,
            49445,
            47432,
            47906,
            47613,
            47888,
            47681,
            47835,
            47362,
            47514,
            47506,
            47410,
            47445,
            47103,
            47175,
            47408,
            47544,
            47509,
            47565,
            47418,
            47520,
            47384,
            47492,
            47434,
            47483,
            47407,
            47478,
            47553,
            47547,
            47411,
            47519,
            47455,
            47377,
            47384,
            47483,
            47406,
            47611,
            47575,
            47462,
            47579,
            49292,
            47429,
            47827,
            47604,
            47859,
            47649,
            47808,
            47518,
            47462,
            47511,
            47374,
            47519,
            47171,
            47484,
            47496,
            47242
          ]
        ],
        "eTX_errcounts": [
          [
            40299,
            26489,
            8487,
            1214,
            70,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            279,
            2872,
            15580,
            34765,
            42707,
            31206,
            14409,
            2157,
            213,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            864,
            8229,
            26251,
            40101,
            37527,
            19678,
            5432,
            500,
            17,
            1,
            0,
            0
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            258,
            3743,
            16940,
            35660,
            42593,
            32195,
            13629,
            3174,
            372,
            35,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            332,
            4314,
            19709,
            36591,
            43525,
            35707,
            17908,
            3864,
            449,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13341887700153165,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016301159994327463,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06927676100167446,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48061,
            47645,
            47518,
            47180,
            47405,
            47553,
            47452,
            49319,
            47494,
            47084,
            47589,
            47405,
            47350,
            47238,
            47334,
            47437,
            47396,
            47276,
            47072,
            47385,
            47732,
            47402,
            47322,
            47294,
            47507,
            47459,
            47880,
            47366,
            47122,
            47170,
            46957,
            47350,
            47305,
            47406,
            46951,
            47375,
            47443,
            47305,
            47277,
            47200,
            47405,
            47344,
            47408,
            47377,
            47419,
            49649,
            47384,
            47308,
            47216,
            47023,
            47398,
            47300,
            47262,
            47255,
            47335,
            47274,
            47446,
            47325,
            47212,
            47061,
            47459,
            47343,
            47385
          ],
          [
            48061,
            47645,
            47518,
            47180,
            47405,
            47553,
            47452,
            49319,
            47494,
            47084,
            47589,
            47405,
            47350,
            47238,
            47334,
            47437,
            47396,
            47276,
            47072,
            47385,
            47732,
            47402,
            47322,
            47294,
            47507,
            47459,
            47880,
            47366,
            47122,
            47170,
            46957,
            47350,
            47305,
            47406,
            46951,
            47375,
            47443,
            47305,
            47277,
            47200,
            47405,
            47344,
            47408,
            47377,
            47419,
            49649,
            47384,
            47308,
            47216,
            47023,
            47398,
            47300,
            47262,
            47255,
            47335,
            47274,
            47446,
            47325,
            47212,
            47061,
            47459,
            47343,
            47385
          ],
          [
            48061,
            47645,
            47518,
            47180,
            47405,
            47553,
            47452,
            49319,
            47494,
            47084,
            47589,
            47405,
            47350,
            47238,
            47334,
            47437,
            47396,
            47276,
            47072,
            47385,
            47732,
            47402,
            47322,
            47294,
            47507,
            47459,
            47880,
            47366,
            47122,
            47170,
            46957,
            47350,
            47305,
            47406,
            46951,
            47375,
            47443,
            47305,
            47277,
            47200,
            47405,
            47344,
            47408,
            47377,
            47419,
            49649,
            47384,
            47308,
            47216,
            47023,
            47398,
            47300,
            47262,
            47255,
            47335,
            47274,
            47446,
            47325,
            47212,
            47061,
            47459,
            47343,
            47385
          ],
          [
            48061,
            47645,
            47518,
            47180,
            47405,
            47553,
            47452,
            49319,
            47494,
            47084,
            47589,
            47405,
            47350,
            47238,
            47334,
            47437,
            47396,
            47276,
            47072,
            47385,
            47732,
            47402,
            47322,
            47294,
            47507,
            47459,
            47880,
            47366,
            47122,
            47170,
            46957,
            47350,
            47305,
            47406,
            46951,
            47375,
            47443,
            47305,
            47277,
            47200,
            47405,
            47344,
            47408,
            47377,
            47419,
            49649,
            47384,
            47308,
            47216,
            47023,
            47398,
            47300,
            47262,
            47255,
            47335,
            47274,
            47446,
            47325,
            47212,
            47061,
            47459,
            47343,
            47385
          ],
          [
            48061,
            47645,
            47518,
            47180,
            47405,
            47553,
            47452,
            49319,
            47494,
            47084,
            47589,
            47405,
            47350,
            47238,
            47334,
            47437,
            47396,
            47276,
            47072,
            47385,
            47732,
            47402,
            47322,
            47294,
            47507,
            47459,
            47880,
            47366,
            47122,
            47170,
            46957,
            47350,
            47305,
            47406,
            46951,
            47375,
            47443,
            47305,
            47277,
            47200,
            47405,
            47344,
            47408,
            47377,
            47419,
            49649,
            47384,
            47308,
            47216,
            47023,
            47398,
            47300,
            47262,
            47255,
            47335,
            47274,
            47446,
            47325,
            47212,
            47061,
            47459,
            47343,
            47385
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            519,
            2944,
            9782,
            21521,
            32834,
            37084,
            31640,
            19935,
            7861,
            1422,
            124,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            66,
            689,
            3769,
            11390,
            24358,
            32375,
            35315,
            29591,
            24528,
            15666,
            6565,
            1004,
            109,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            0,
            58,
            547,
            3015,
            10506,
            22308,
            33272,
            36914,
            34947,
            26188,
            14885,
            5804,
            1194,
            120,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            109,
            1123,
            4745,
            11143,
            21218,
            33351,
            41437,
            39957,
            29143,
            18101,
            6129,
            996,
            83,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            116,
            1217,
            4886,
            12929,
            23528
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            163,
            1726,
            6945,
            16797,
            29786,
            36695,
            32665,
            24060,
            12261,
            3994,
            547,
            24,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            194,
            1206,
            7248,
            18091,
            31324,
            34644,
            30930,
            24166,
            14215,
            3698,
            632,
            30,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            344,
            2557,
            9000,
            18524,
            31178,
            38237,
            35373,
            25453,
            12986,
            3381,
            450,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            65,
            651,
            2914,
            6848,
            16543,
            30042,
            38278,
            37801,
            29130,
            17317,
            5922,
            1343,
            143,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            166,
            1157,
            3729,
            9090,
            20292,
            32568,
            38233,
            37105,
            31473,
            22513,
            10275,
            2732,
            436,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            136,
            1485,
            4878,
            10317,
            18668,
            30536,
            40697,
            41203,
            34874,
            23695,
            11763,
            3885,
            864,
            97,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            65,
            685,
            3012,
            8681
          ]
        ]
      },
      "call": {
        "duration": 0.2724312579994148,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6b2abbd0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6b2abbd0> = array([22, 14, 13, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6b295580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48061, 47645, 47518, 47180, 47405, 47553, ...], [48061, 47645, 47518, 47180, 47405, 47553, ...], [..., 0, ...], [0, 1, 0, 58, 547, 3015, ...], [2, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 166, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6b2abbd0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6b2abbd0> = array([22, 14, 13, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016428369999630377,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29298096500133397,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1705879559995083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014245520033000503,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3112568579999788,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            101,
            12,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003538218999892706,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029111149997333996,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5345201750023989,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            190,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            9,
            255,
            181,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            95,
            255,
            150,
            255,
            144,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            199,
            0,
            100,
            5,
            255,
            31,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            99,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            152,
            255,
            230,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            253,
            255,
            159,
            255,
            255,
            6,
            0,
            135,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            0,
            255,
            77,
            255,
            150
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034371170004305895,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002907784997660201,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960501830020803,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48146,
            51015,
            54391,
            50556,
            47447,
            47377,
            47249,
            47233,
            47231,
            47251,
            47177,
            47319,
            47099,
            47323,
            47373,
            47325,
            47295,
            47659,
            47320,
            47444,
            47260,
            47184,
            47191,
            47496,
            47738,
            47492,
            47744,
            47840,
            47673,
            48093,
            47510,
            47715,
            47603,
            47583,
            47527,
            47654,
            47666,
            47617,
            47637,
            47384,
            47528,
            47578,
            47598,
            47197,
            47389,
            47539,
            47770,
            47570,
            47752,
            47556,
            47642,
            47500,
            47470,
            47749,
            47645,
            47655,
            47565,
            47552,
            49468,
            47611,
            47935,
            47542,
            49753
          ],
          [
            48146,
            51015,
            54391,
            50556,
            47447,
            47377,
            47249,
            47233,
            47231,
            47251,
            47177,
            47319,
            47099,
            47323,
            47373,
            47325,
            47295,
            47659,
            47320,
            47444,
            47260,
            47184,
            47191,
            47496,
            47738,
            47492,
            47744,
            47840,
            47673,
            48093,
            47510,
            47715,
            47603,
            47583,
            47527,
            47654,
            47666,
            47617,
            47637,
            47384,
            47528,
            47578,
            47598,
            47197,
            47389,
            47539,
            47770,
            47570,
            47752,
            47556,
            47642,
            47500,
            47470,
            47749,
            47645,
            47655,
            47565,
            47552,
            49468,
            47611,
            47935,
            47542,
            49753
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            287,
            4101,
            18410,
            36591,
            35837,
            18369,
            3748,
            356,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            190,
            2814,
            16748,
            35198,
            39529,
            25798,
            8429,
            947,
            96,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            1040,
            8721,
            29080,
            41403,
            38456,
            18798,
            4839,
            322,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            199,
            2447,
            14472,
            31250,
            42541,
            38463,
            20191,
            4968,
            567,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1352164259988058,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016098960004455876,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06900735499948496,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48428,
            47458,
            47539,
            47434,
            47307,
            47408,
            47401,
            47111,
            47412,
            47400,
            47334,
            47228,
            47339,
            47256,
            47057,
            47380,
            47279,
            47298,
            47521,
            47258,
            47468,
            52711,
            48890,
            47451,
            47388,
            47317,
            47440,
            47332,
            47398,
            47431,
            47381,
            46928,
            47299,
            47391,
            47296,
            47484,
            47337,
            47347,
            47428,
            47421,
            47532,
            47773,
            47384,
            46864,
            47373,
            47027,
            47168,
            47330,
            47436,
            47195,
            47530,
            47370,
            47414,
            47423,
            47557,
            47270,
            47427,
            47573,
            47365,
            47808,
            47528,
            47257,
            47403
          ],
          [
            48428,
            47458,
            47539,
            47434,
            47307,
            47408,
            47401,
            47111,
            47412,
            47400,
            47334,
            47228,
            47339,
            47256,
            47057,
            47380,
            47279,
            47298,
            47521,
            47258,
            47468,
            52711,
            48890,
            47451,
            47388,
            47317,
            47440,
            47332,
            47398,
            47431,
            47381,
            46928,
            47299,
            47391,
            47296,
            47484,
            47337,
            47347,
            47428,
            47421,
            47532,
            47773,
            47384,
            46864,
            47373,
            47027,
            47168,
            47330,
            47436,
            47195,
            47530,
            47370,
            47414,
            47423,
            47557,
            47270,
            47427,
            47573,
            47365,
            47808,
            47528,
            47257,
            47403
          ],
          [
            48428,
            47458,
            47539,
            47434,
            47307,
            47408,
            47401,
            47111,
            47412,
            47400,
            47334,
            47228,
            47339,
            47256,
            47057,
            47380,
            47279,
            47298,
            47521,
            47258,
            47468,
            52711,
            48890,
            47451,
            47388,
            47317,
            47440,
            47332,
            47398,
            47431,
            47381,
            46928,
            47299,
            47391,
            47296,
            47484,
            47337,
            47347,
            47428,
            47421,
            47532,
            47773,
            47384,
            46864,
            47373,
            47027,
            47168,
            47330,
            47436,
            47195,
            47530,
            47370,
            47414,
            47423,
            47557,
            47270,
            47427,
            47573,
            47365,
            47808,
            47528,
            47257,
            47403
          ],
          [
            48428,
            47458,
            47539,
            47434,
            47307,
            47408,
            47401,
            47111,
            47412,
            47400,
            47334,
            47228,
            47339,
            47256,
            47057,
            47380,
            47279,
            47298,
            47521,
            47258,
            47468,
            52711,
            48890,
            47451,
            47388,
            47317,
            47440,
            47332,
            47398,
            47431,
            47381,
            46928,
            47299,
            47391,
            47296,
            47484,
            47337,
            47347,
            47428,
            47421,
            47532,
            47773,
            47384,
            46864,
            47373,
            47027,
            47168,
            47330,
            47436,
            47195,
            47530,
            47370,
            47414,
            47423,
            47557,
            47270,
            47427,
            47573,
            47365,
            47808,
            47528,
            47257,
            47403
          ],
          [
            48428,
            47458,
            47539,
            47434,
            47307,
            47408,
            47401,
            47111,
            47412,
            47400,
            47334,
            47228,
            47339,
            47256,
            47057,
            47380,
            47279,
            47298,
            47521,
            47258,
            47468,
            52711,
            48890,
            47451,
            47388,
            47317,
            47440,
            47332,
            47398,
            47431,
            47381,
            46928,
            47299,
            47391,
            47296,
            47484,
            47337,
            47347,
            47428,
            47421,
            47532,
            47773,
            47384,
            46864,
            47373,
            47027,
            47168,
            47330,
            47436,
            47195,
            47530,
            47370,
            47414,
            47423,
            47557,
            47270,
            47427,
            47573,
            47365,
            47808,
            47528,
            47257,
            47403
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            158,
            2151,
            12413,
            27442,
            38058,
            37149,
            26799,
            12556,
            2914,
            377,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            343,
            2866,
            14384,
            31025,
            40577,
            40672,
            30054,
            15045,
            4907,
            765,
            74,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            10,
            171,
            1487,
            7066,
            20643,
            37137,
            40187,
            34438,
            22354,
            9270,
            2330,
            287,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            331,
            1973,
            8588,
            22221,
            36069,
            44252,
            41938,
            27990,
            11945,
            2509,
            186,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            47,
            593,
            2947,
            8658,
            21177,
            35213,
            38722
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            859,
            5924,
            20624,
            33760,
            38606,
            31457,
            14449,
            3398,
            310,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            603,
            5079,
            16863,
            33900,
            41335,
            33545,
            18314,
            6023,
            924,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            193,
            1921,
            9840,
            26046,
            38805,
            42150,
            34609,
            18018,
            5291,
            630,
            41,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            7,
            239,
            2226,
            9378,
            20964,
            35298,
            41884,
            35665,
            23153,
            8941,
            2286,
            184,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            10,
            249,
            2608,
            10718,
            26411,
            38839,
            39707,
            33992,
            26678,
            16866,
            5961,
            1491,
            93,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            67,
            770,
            3697,
            11817,
            24934,
            36613,
            43033,
            40644,
            29330,
            13865,
            4357,
            612,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            208,
            1604,
            7286,
            17246,
            30423
          ]
        ]
      },
      "call": {
        "duration": 0.2703300110006239,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001513833998615155,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29193433199907304,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703130589994544,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014286309997260105,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3358410539985925,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            98,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003501648003293667,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002902714000811102,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5358409250002296,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            4,
            255,
            3,
            26,
            0,
            255,
            0,
            255,
            255
          ],
          [
            66,
            0,
            9,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            31,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            218,
            255,
            0,
            15,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            0,
            1,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            5,
            255,
            43,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            4,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            3,
            0,
            255,
            2,
            255,
            255
          ],
          [
            96,
            0,
            2,
            0,
            3,
            0,
            255,
            196,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            121,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            62,
            0,
            4,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            77,
            255,
            38,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034762379982566927,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028712439998344053,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2966566760005662,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48364,
            47929,
            47548,
            47145,
            47485,
            47363,
            47580,
            47527,
            47568,
            47479,
            47569,
            47670,
            47709,
            47658,
            47812,
            47461,
            47712,
            47698,
            47580,
            47257,
            47342,
            47584,
            47729,
            47195,
            47245,
            47772,
            49052,
            47584,
            48050,
            47569,
            49445,
            47751,
            47543,
            47632,
            47628,
            47610,
            47662,
            47769,
            47613,
            47726,
            47437,
            47409,
            47608,
            47667,
            47572,
            47499,
            47539,
            47566,
            47718,
            47708,
            47607,
            47624,
            47792,
            47686,
            47657,
            49151,
            47492,
            47789,
            47688,
            49429,
            47522,
            47687,
            47562
          ],
          [
            48364,
            47929,
            47548,
            47145,
            47485,
            47363,
            47580,
            47527,
            47568,
            47479,
            47569,
            47670,
            47709,
            47658,
            47812,
            47461,
            47712,
            47698,
            47580,
            47257,
            47342,
            47584,
            47729,
            47195,
            47245,
            47772,
            49052,
            47584,
            48050,
            47569,
            49445,
            47751,
            47543,
            47632,
            47628,
            47610,
            47662,
            47769,
            47613,
            47726,
            47437,
            47409,
            47608,
            47667,
            47572,
            47499,
            47539,
            47566,
            47718,
            47708,
            47607,
            47624,
            47792,
            47686,
            47657,
            49151,
            47492,
            47789,
            47688,
            49429,
            47522,
            47687,
            47562
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            515,
            7145,
            24398,
            39117,
            34708,
            15604,
            2880,
            234,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            32,
            660,
            6187,
            22758,
            38453,
            37770,
            20537,
            4939,
            485,
            30,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            211,
            2016,
            14138,
            32653,
            41272,
            29217,
            10001,
            1778,
            125,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            660,
            5791,
            22294,
            38770,
            41679,
            30239,
            12655,
            2025,
            277,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            813,
            8561,
            25956,
            40227,
            43770
          ]
        ]
      },
      "call": {
        "duration": 0.13429768700007116,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016169460031960625,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06943954400048824,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48037,
            47353,
            47211,
            47334,
            47222,
            47334,
            47459,
            47400,
            47291,
            47144,
            47435,
            47318,
            47708,
            47368,
            47378,
            47229,
            47128,
            47211,
            47231,
            47203,
            47287,
            47205,
            47182,
            47291,
            47152,
            47497,
            47440,
            47321,
            47382,
            47396,
            47408,
            49946,
            48983,
            47099,
            47310,
            47228,
            47319,
            47009,
            47228,
            47175,
            47245,
            47228,
            47320,
            47377,
            47292,
            47367,
            47479,
            47339,
            47318,
            48694,
            48820,
            47317,
            47327,
            47344,
            47208,
            47368,
            47195,
            47305,
            47150,
            47371,
            47232,
            47386,
            47333
          ],
          [
            48037,
            47353,
            47211,
            47334,
            47222,
            47334,
            47459,
            47400,
            47291,
            47144,
            47435,
            47318,
            47708,
            47368,
            47378,
            47229,
            47128,
            47211,
            47231,
            47203,
            47287,
            47205,
            47182,
            47291,
            47152,
            47497,
            47440,
            47321,
            47382,
            47396,
            47408,
            49946,
            48983,
            47099,
            47310,
            47228,
            47319,
            47009,
            47228,
            47175,
            47245,
            47228,
            47320,
            47377,
            47292,
            47367,
            47479,
            47339,
            47318,
            48694,
            48820,
            47317,
            47327,
            47344,
            47208,
            47368,
            47195,
            47305,
            47150,
            47371,
            47232,
            47386,
            47333
          ],
          [
            48037,
            47353,
            47211,
            47334,
            47222,
            47334,
            47459,
            47400,
            47291,
            47144,
            47435,
            47318,
            47708,
            47368,
            47378,
            47229,
            47128,
            47211,
            47231,
            47203,
            47287,
            47205,
            47182,
            47291,
            47152,
            47497,
            47440,
            47321,
            47382,
            47396,
            47408,
            49946,
            48983,
            47099,
            47310,
            47228,
            47319,
            47009,
            47228,
            47175,
            47245,
            47228,
            47320,
            47377,
            47292,
            47367,
            47479,
            47339,
            47318,
            48694,
            48820,
            47317,
            47327,
            47344,
            47208,
            47368,
            47195,
            47305,
            47150,
            47371,
            47232,
            47386,
            47333
          ],
          [
            48037,
            47353,
            47211,
            47334,
            47222,
            47334,
            47459,
            47400,
            47291,
            47144,
            47435,
            47318,
            47708,
            47368,
            47378,
            47229,
            47128,
            47211,
            47231,
            47203,
            47287,
            47205,
            47182,
            47291,
            47152,
            47497,
            47440,
            47321,
            47382,
            47396,
            47408,
            49946,
            48983,
            47099,
            47310,
            47228,
            47319,
            47009,
            47228,
            47175,
            47245,
            47228,
            47320,
            47377,
            47292,
            47367,
            47479,
            47339,
            47318,
            48694,
            48820,
            47317,
            47327,
            47344,
            47208,
            47368,
            47195,
            47305,
            47150,
            47371,
            47232,
            47386,
            47333
          ],
          [
            48037,
            47353,
            47211,
            47334,
            47222,
            47334,
            47459,
            47400,
            47291,
            47144,
            47435,
            47318,
            47708,
            47368,
            47378,
            47229,
            47128,
            47211,
            47231,
            47203,
            47287,
            47205,
            47182,
            47291,
            47152,
            47497,
            47440,
            47321,
            47382,
            47396,
            47408,
            49946,
            48983,
            47099,
            47310,
            47228,
            47319,
            47009,
            47228,
            47175,
            47245,
            47228,
            47320,
            47377,
            47292,
            47367,
            47479,
            47339,
            47318,
            48694,
            48820,
            47317,
            47327,
            47344,
            47208,
            47368,
            47195,
            47305,
            47150,
            47371,
            47232,
            47386,
            47333
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            69,
            891,
            6347,
            19575,
            32884,
            40221,
            35772,
            23956,
            11833,
            3480,
            545,
            72,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            187,
            1990,
            9571,
            24304,
            37268,
            41707,
            37069,
            21694,
            8047,
            1756,
            228,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            181,
            1360,
            4995,
            12671,
            25781,
            37686,
            43392,
            37979,
            23313,
            8643,
            1914,
            187,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            437,
            2795,
            6909,
            15278,
            30756,
            39985,
            36786,
            26913,
            12955,
            3954,
            704,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            66
          ],
          [
            11723,
            2915,
            251,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            93,
            1454,
            9184,
            20647,
            32438,
            38817,
            30650,
            15095,
            5345,
            863,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            61,
            827,
            5778,
            16920,
            27705,
            35964,
            32283,
            21574,
            8239,
            1582,
            95,
            3,
            0,
            0,
            0,
            0
          ],
          [
            52,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            86,
            1223,
            6506,
            15960,
            27434,
            38642,
            40116,
            32073,
            20875,
            9823,
            3225,
            345,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            4,
            117,
            927,
            4671,
            14954,
            27366,
            36601,
            33815,
            23450,
            11330,
            3365,
            637,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            161,
            1500,
            6135,
            16520,
            27769,
            36882,
            40801,
            36978,
            25222,
            14586,
            4104,
            642,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            60,
            582,
            2675,
            8030,
            18419,
            30329,
            37642,
            36025,
            30424,
            22632,
            13048,
            5094,
            1098,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27044509400002426,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014792720030527562,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2921846870012814,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170100024999556,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004801156999747036,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}