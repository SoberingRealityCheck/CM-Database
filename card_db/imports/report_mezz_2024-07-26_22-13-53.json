{
  "created": 1722032052.573571,
  "duration": 23.220924615859985,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5082655050027824,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14816363299905788,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013421700023172889,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003911397001502337,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1480042389994196,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00128108799981419,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13343756500034942,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1216043720014568,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012926689996675123,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0039008060011838097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12100453899984132,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012586470002133865,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034614169999258593,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464030429997365,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001214096999319736,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003422536003199639,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11978012199688237,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011826859990833327,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034794169987435453,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14614209700084757,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001199756999994861,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003465166999376379,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12002933700205176,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012617680004041176,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004500279999774648,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002088706001813989,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011608149980020244,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003514878000714816,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001756028999807313,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010944540008495096,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003421006000280613,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004058460002852371,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032035.1330297,
            "msecs": 133.02969932556152,
            "relativeCreated": 7752.2008419036865,
            "thread": 281473837056032,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4526
          }
        ]
      },
      "teardown": {
        "duration": 0.0012247470003785565,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034689470012381207,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024202740023611113,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032035.1454618,
            "msecs": 145.4617977142334,
            "relativeCreated": 7764.632940292358,
            "thread": 281473837056032,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4526
          }
        ]
      },
      "teardown": {
        "duration": 0.0011536460006027482,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002167368002119474,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027413999996497296,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032035.1550362,
            "msecs": 155.03621101379395,
            "relativeCreated": 7774.207353591919,
            "thread": 281473837056032,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4526
          }
        ]
      },
      "teardown": {
        "duration": 0.0010620540015224833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021854289989278186,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034334260017203633,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032035.1645782,
            "msecs": 164.57819938659668,
            "relativeCreated": 7783.749341964722,
            "thread": 281473837056032,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4526
          }
        ]
      },
      "teardown": {
        "duration": 0.0010632839985191822,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034109560001525097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14624208900204394,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011720959992089774,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003443777000939008,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12023961200247868,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011680759998853318,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1798134349992324,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14776378299939097,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012523180012067314,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015324641000916017,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1209552780019294,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001242268001078628,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.847151546000532,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            7,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            83,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            89,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003577698997105472,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002886664999095956,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9025305449977168,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            17,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            231,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            43,
            255,
            255,
            255,
            30
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            59,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            168,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            127,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            241,
            255,
            255,
            255,
            255,
            0,
            0,
            167,
            0,
            113,
            255
          ],
          [
            255,
            0,
            169,
            0,
            255,
            0,
            200,
            70,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034769570011121687,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028710340011457447,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30318283700034954,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48316,
            47600,
            47536,
            47656,
            47272,
            47473,
            47455,
            47303,
            47521,
            47501,
            47505,
            47544,
            47624,
            47604,
            47667,
            47480,
            47432,
            47448,
            47345,
            49140,
            47581,
            47986,
            47498,
            47495,
            47600,
            47503,
            47594,
            47061,
            47090,
            47447,
            47540,
            47487,
            47602,
            47345,
            47427,
            47372,
            47385,
            47427,
            47578,
            47523,
            47422,
            47381,
            47529,
            47500,
            47460,
            47507,
            47484,
            47415,
            47401,
            47458,
            47535,
            47562,
            47325,
            47427,
            49067,
            47576,
            47920,
            47489,
            47459,
            47363,
            47579,
            47549,
            47457
          ],
          [
            48316,
            47600,
            47536,
            47656,
            47272,
            47473,
            47455,
            47303,
            47521,
            47501,
            47505,
            47544,
            47624,
            47604,
            47667,
            47480,
            47432,
            47448,
            47345,
            49140,
            47581,
            47986,
            47498,
            47495,
            47600,
            47503,
            47594,
            47061,
            47090,
            47447,
            47540,
            47487,
            47602,
            47345,
            47427,
            47372,
            47385,
            47427,
            47578,
            47523,
            47422,
            47381,
            47529,
            47500,
            47460,
            47507,
            47484,
            47415,
            47401,
            47458,
            47535,
            47562,
            47325,
            47427,
            49067,
            47576,
            47920,
            47489,
            47459,
            47363,
            47579,
            47549,
            47457
          ]
        ],
        "eTX_errcounts": [
          [
            40722,
            26566,
            8594,
            1236,
            96,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            250,
            3120,
            15760,
            33923,
            42368,
            31513,
            14487,
            2350,
            195,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53,
            780,
            6664,
            24400,
            41506,
            37837,
            20646,
            5604,
            549,
            15,
            0,
            0,
            0
          ],
          [
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            318,
            3972,
            17036,
            36007,
            42447,
            32330,
            14715,
            3258,
            352,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            264,
            4128,
            18770,
            35641,
            42727,
            35735,
            18172,
            3630,
            450,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13376340200193226,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015951360001054127,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06913800699840067,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48241,
            47530,
            47331,
            47513,
            47711,
            47353,
            47157,
            47269,
            47234,
            47366,
            47289,
            47217,
            47218,
            46854,
            47247,
            47257,
            47278,
            47223,
            47165,
            47313,
            47330,
            47154,
            48614,
            49241,
            47316,
            47124,
            47286,
            47261,
            46970,
            47260,
            47204,
            47130,
            46953,
            47103,
            47320,
            47188,
            47154,
            47235,
            46964,
            47471,
            47211,
            48800,
            47521,
            47158,
            47201,
            47229,
            47154,
            47158,
            47225,
            47220,
            47185,
            47084,
            47215,
            47164,
            47245,
            47355,
            47047,
            47204,
            47250,
            47450,
            47243,
            47452,
            47017
          ],
          [
            48241,
            47530,
            47331,
            47513,
            47711,
            47353,
            47157,
            47269,
            47234,
            47366,
            47289,
            47217,
            47218,
            46854,
            47247,
            47257,
            47278,
            47223,
            47165,
            47313,
            47330,
            47154,
            48614,
            49241,
            47316,
            47124,
            47286,
            47261,
            46970,
            47260,
            47204,
            47130,
            46953,
            47103,
            47320,
            47188,
            47154,
            47235,
            46964,
            47471,
            47211,
            48800,
            47521,
            47158,
            47201,
            47229,
            47154,
            47158,
            47225,
            47220,
            47185,
            47084,
            47215,
            47164,
            47245,
            47355,
            47047,
            47204,
            47250,
            47450,
            47243,
            47452,
            47017
          ],
          [
            48241,
            47530,
            47331,
            47513,
            47711,
            47353,
            47157,
            47269,
            47234,
            47366,
            47289,
            47217,
            47218,
            46854,
            47247,
            47257,
            47278,
            47223,
            47165,
            47313,
            47330,
            47154,
            48614,
            49241,
            47316,
            47124,
            47286,
            47261,
            46970,
            47260,
            47204,
            47130,
            46953,
            47103,
            47320,
            47188,
            47154,
            47235,
            46964,
            47471,
            47211,
            48800,
            47521,
            47158,
            47201,
            47229,
            47154,
            47158,
            47225,
            47220,
            47185,
            47084,
            47215,
            47164,
            47245,
            47355,
            47047,
            47204,
            47250,
            47450,
            47243,
            47452,
            47017
          ],
          [
            48241,
            47530,
            47331,
            47513,
            47711,
            47353,
            47157,
            47269,
            47234,
            47366,
            47289,
            47217,
            47218,
            46854,
            47247,
            47257,
            47278,
            47223,
            47165,
            47313,
            47330,
            47154,
            48614,
            49241,
            47316,
            47124,
            47286,
            47261,
            46970,
            47260,
            47204,
            47130,
            46953,
            47103,
            47320,
            47188,
            47154,
            47235,
            46964,
            47471,
            47211,
            48800,
            47521,
            47158,
            47201,
            47229,
            47154,
            47158,
            47225,
            47220,
            47185,
            47084,
            47215,
            47164,
            47245,
            47355,
            47047,
            47204,
            47250,
            47450,
            47243,
            47452,
            47017
          ],
          [
            48241,
            47530,
            47331,
            47513,
            47711,
            47353,
            47157,
            47269,
            47234,
            47366,
            47289,
            47217,
            47218,
            46854,
            47247,
            47257,
            47278,
            47223,
            47165,
            47313,
            47330,
            47154,
            48614,
            49241,
            47316,
            47124,
            47286,
            47261,
            46970,
            47260,
            47204,
            47130,
            46953,
            47103,
            47320,
            47188,
            47154,
            47235,
            46964,
            47471,
            47211,
            48800,
            47521,
            47158,
            47201,
            47229,
            47154,
            47158,
            47225,
            47220,
            47185,
            47084,
            47215,
            47164,
            47245,
            47355,
            47047,
            47204,
            47250,
            47450,
            47243,
            47452,
            47017
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            511,
            2732,
            9074,
            22147,
            33761,
            36176,
            31487,
            20903,
            9025,
            2377,
            485,
            62,
            9,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            46,
            910,
            4759,
            13048,
            24551,
            32182,
            35568,
            31110,
            23222,
            12459,
            4663,
            1087,
            147,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            29,
            212,
            1296,
            4200,
            10116,
            22493,
            36124,
            39494,
            34764,
            25231,
            16099,
            8953,
            3278,
            662,
            52,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            162,
            1293,
            5634,
            14624,
            26579,
            32296,
            34865,
            35722,
            27844,
            16540,
            6522,
            1643,
            173,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            40,
            625,
            2399,
            5875,
            13840,
            26826
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            72,
            1094,
            5295,
            16434,
            31480,
            35545,
            32356,
            23966,
            12690,
            5007,
            929,
            86,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            115,
            1231,
            6580,
            15119,
            28744,
            35624,
            33490,
            23470,
            12377,
            3350,
            495,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            30,
            358,
            1990,
            8290,
            20782,
            34229,
            37937,
            34609,
            26361,
            15981,
            7004,
            1747,
            237,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            53,
            734,
            3304,
            8342,
            16340,
            27421,
            36205,
            34386,
            26108,
            15736,
            7161,
            1804,
            185,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            16,
            243,
            1248,
            3739,
            8059,
            17947,
            33667,
            39057,
            36912,
            31055,
            22804,
            13913,
            7719,
            3032,
            487,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            141,
            1127,
            4887,
            12484,
            24927,
            32503,
            35113,
            37512,
            32807,
            25399,
            15733,
            7692,
            1940,
            221,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            115,
            931,
            3409,
            8533
          ]
        ]
      },
      "call": {
        "duration": 0.2717900190000364,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa7517b10>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa7517b10> = array([22, 12, 19, 22, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa758b100>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48241, 47530, 47331, 47513, 47711, 47353, ...], [48241, 47530, 47331, 47513, 47711, 47353, ...], [... ...], [0, 0, 29, 212, 1296, 4200, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 16, 243, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa7517b10>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa7517b10> = array([22, 12, 19, 22, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016354870022041723,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2930088009998144,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170399880000332,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014378119994944427,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3059359799990489,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            19,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            2,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            240,
            91,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035191380011383444,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002891344000090612,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.534988298000826,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            3,
            255,
            229,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            75,
            255,
            102,
            255,
            106,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            233,
            0,
            135,
            10,
            255,
            42,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            65,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            4,
            255,
            194,
            255,
            245,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            217,
            255,
            146,
            255,
            255,
            8,
            0,
            171,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            5,
            255,
            161,
            255,
            94
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034825369984901045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028818350001529325,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960962899996957,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48107,
            47599,
            47636,
            47595,
            47722,
            47280,
            47163,
            47635,
            47594,
            47503,
            49311,
            47641,
            47536,
            47663,
            49580,
            47403,
            47363,
            47543,
            47397,
            47587,
            47490,
            47378,
            47430,
            47605,
            47355,
            47643,
            47478,
            47467,
            47611,
            47736,
            47452,
            47707,
            47518,
            47579,
            47466,
            47634,
            47445,
            47470,
            47643,
            47298,
            47644,
            47911,
            47084,
            52978,
            47637,
            47466,
            47556,
            47468,
            47444,
            47402,
            47576,
            47270,
            47574,
            47507,
            47474,
            47241,
            47205,
            47378,
            47606,
            47619,
            47423,
            47563,
            47526
          ],
          [
            48107,
            47599,
            47636,
            47595,
            47722,
            47280,
            47163,
            47635,
            47594,
            47503,
            49311,
            47641,
            47536,
            47663,
            49580,
            47403,
            47363,
            47543,
            47397,
            47587,
            47490,
            47378,
            47430,
            47605,
            47355,
            47643,
            47478,
            47467,
            47611,
            47736,
            47452,
            47707,
            47518,
            47579,
            47466,
            47634,
            47445,
            47470,
            47643,
            47298,
            47644,
            47911,
            47084,
            52978,
            47637,
            47466,
            47556,
            47468,
            47444,
            47402,
            47576,
            47270,
            47574,
            47507,
            47474,
            47241,
            47205,
            47378,
            47606,
            47619,
            47423,
            47563,
            47526
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            202,
            3742,
            17514,
            36579,
            36587,
            19184,
            4471,
            420,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            196,
            2676,
            16417,
            35099,
            40293,
            25708,
            8742,
            1148,
            82,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            1025,
            9163,
            28958,
            41707,
            39165,
            19629,
            4488,
            350,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            141,
            2400,
            13217,
            30562,
            47616,
            39258,
            20930,
            5877,
            769,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1343666859975201,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016199759993469343,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06895953200000804,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48014,
            47384,
            46958,
            47359,
            47294,
            47223,
            47420,
            47392,
            47450,
            49626,
            47184,
            47041,
            47332,
            47197,
            47185,
            47325,
            47260,
            47244,
            47255,
            47375,
            47131,
            47235,
            47241,
            47233,
            47243,
            47386,
            47320,
            44583,
            47530,
            46972,
            47112,
            47175,
            47104,
            47190,
            47270,
            47285,
            47103,
            47098,
            47111,
            47222,
            47219,
            47158,
            47189,
            47301,
            47225,
            47231,
            47606,
            47424,
            47316,
            47063,
            47061,
            47003,
            47204,
            47121,
            47391,
            47229,
            47333,
            47143,
            47506,
            47298,
            47473,
            47326,
            47322
          ],
          [
            48014,
            47384,
            46958,
            47359,
            47294,
            47223,
            47420,
            47392,
            47450,
            49626,
            47184,
            47041,
            47332,
            47197,
            47185,
            47325,
            47260,
            47244,
            47255,
            47375,
            47131,
            47235,
            47241,
            47233,
            47243,
            47386,
            47320,
            44583,
            47530,
            46972,
            47112,
            47175,
            47104,
            47190,
            47270,
            47285,
            47103,
            47098,
            47111,
            47222,
            47219,
            47158,
            47189,
            47301,
            47225,
            47231,
            47606,
            47424,
            47316,
            47063,
            47061,
            47003,
            47204,
            47121,
            47391,
            47229,
            47333,
            47143,
            47506,
            47298,
            47473,
            47326,
            47322
          ],
          [
            48014,
            47384,
            46958,
            47359,
            47294,
            47223,
            47420,
            47392,
            47450,
            49626,
            47184,
            47041,
            47332,
            47197,
            47185,
            47325,
            47260,
            47244,
            47255,
            47375,
            47131,
            47235,
            47241,
            47233,
            47243,
            47386,
            47320,
            44583,
            47530,
            46972,
            47112,
            47175,
            47104,
            47190,
            47270,
            47285,
            47103,
            47098,
            47111,
            47222,
            47219,
            47158,
            47189,
            47301,
            47225,
            47231,
            47606,
            47424,
            47316,
            47063,
            47061,
            47003,
            47204,
            47121,
            47391,
            47229,
            47333,
            47143,
            47506,
            47298,
            47473,
            47326,
            47322
          ],
          [
            48014,
            47384,
            46958,
            47359,
            47294,
            47223,
            47420,
            47392,
            47450,
            49626,
            47184,
            47041,
            47332,
            47197,
            47185,
            47325,
            47260,
            47244,
            47255,
            47375,
            47131,
            47235,
            47241,
            47233,
            47243,
            47386,
            47320,
            44583,
            47530,
            46972,
            47112,
            47175,
            47104,
            47190,
            47270,
            47285,
            47103,
            47098,
            47111,
            47222,
            47219,
            47158,
            47189,
            47301,
            47225,
            47231,
            47606,
            47424,
            47316,
            47063,
            47061,
            47003,
            47204,
            47121,
            47391,
            47229,
            47333,
            47143,
            47506,
            47298,
            47473,
            47326,
            47322
          ],
          [
            48014,
            47384,
            46958,
            47359,
            47294,
            47223,
            47420,
            47392,
            47450,
            49626,
            47184,
            47041,
            47332,
            47197,
            47185,
            47325,
            47260,
            47244,
            47255,
            47375,
            47131,
            47235,
            47241,
            47233,
            47243,
            47386,
            47320,
            44583,
            47530,
            46972,
            47112,
            47175,
            47104,
            47190,
            47270,
            47285,
            47103,
            47098,
            47111,
            47222,
            47219,
            47158,
            47189,
            47301,
            47225,
            47231,
            47606,
            47424,
            47316,
            47063,
            47061,
            47003,
            47204,
            47121,
            47391,
            47229,
            47333,
            47143,
            47506,
            47298,
            47473,
            47326,
            47322
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            9,
            234,
            2692,
            13058,
            26560,
            34172,
            33892,
            23082,
            10967,
            2860,
            462,
            38,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            45,
            985,
            4501,
            15126,
            26389,
            36381,
            38791,
            31205,
            17996,
            4318,
            566,
            43,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            5,
            183,
            1709,
            6605,
            18857,
            33379,
            38899,
            33227,
            19116,
            6475,
            1004,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            134,
            2074,
            10319,
            24526,
            36220,
            42284,
            40249,
            30272,
            16882,
            4760,
            577,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            28,
            329,
            2282,
            7297,
            18950,
            32414,
            37934
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            396,
            3795,
            15962,
            30688,
            36603,
            32745,
            18532,
            6665,
            1174,
            71,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            38,
            913,
            7532,
            21528,
            37896,
            42049,
            35632,
            22718,
            9289,
            2015,
            105,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            116,
            1240,
            6488,
            19339,
            33954,
            38563,
            33489,
            20242,
            8567,
            1575,
            142,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            203,
            2924,
            11980,
            24450,
            33833,
            38446,
            35321,
            25364,
            12146,
            3299,
            309,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            9,
            177,
            2059,
            9320,
            21845,
            33473,
            41614,
            35734,
            24271,
            11326,
            3030,
            408,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            562,
            4040,
            14331,
            26373,
            36253,
            40953,
            38274,
            27701,
            13551,
            3483,
            384,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            102,
            838,
            5759,
            16766,
            31253
          ]
        ]
      },
      "call": {
        "duration": 0.2705149909997999,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014818830022704788,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29173461299797054,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1702151949975814,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014234720001695678,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.350260734998301,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            96,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035489289984980132,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002888944000005722,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5356267719980679,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            7,
            255,
            3,
            80,
            1,
            255,
            2,
            255,
            255
          ],
          [
            57,
            0,
            13,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            51,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            237,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            23,
            0,
            11,
            0,
            37,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            23,
            255,
            63,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            5,
            0,
            255,
            2,
            255,
            255
          ],
          [
            88,
            0,
            4,
            0,
            6,
            0,
            255,
            228,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            93,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            79,
            0,
            10,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            136,
            255,
            95,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003478127997368574,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00287109400233021,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2965091890000622,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48120,
            47872,
            47455,
            47452,
            47315,
            47369,
            47413,
            47422,
            47422,
            47308,
            47384,
            47446,
            47524,
            47588,
            47533,
            47479,
            47626,
            47529,
            47538,
            47421,
            47418,
            47421,
            47405,
            47484,
            47447,
            47106,
            47150,
            47369,
            47599,
            47474,
            47386,
            47547,
            49405,
            47541,
            47935,
            47550,
            47874,
            47516,
            47488,
            47571,
            47380,
            47480,
            47443,
            47486,
            47354,
            47511,
            47305,
            47391,
            47371,
            47550,
            47396,
            47544,
            47488,
            47589,
            47241,
            47245,
            47519,
            47594,
            47438,
            47576,
            47423,
            47408,
            47337
          ],
          [
            48120,
            47872,
            47455,
            47452,
            47315,
            47369,
            47413,
            47422,
            47422,
            47308,
            47384,
            47446,
            47524,
            47588,
            47533,
            47479,
            47626,
            47529,
            47538,
            47421,
            47418,
            47421,
            47405,
            47484,
            47447,
            47106,
            47150,
            47369,
            47599,
            47474,
            47386,
            47547,
            49405,
            47541,
            47935,
            47550,
            47874,
            47516,
            47488,
            47571,
            47380,
            47480,
            47443,
            47486,
            47354,
            47511,
            47305,
            47391,
            47371,
            47550,
            47396,
            47544,
            47488,
            47589,
            47241,
            47245,
            47519,
            47594,
            47438,
            47576,
            47423,
            47408,
            47337
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            739,
            6422,
            24344,
            39816,
            34508,
            15624,
            2637,
            209,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            594,
            6506,
            22160,
            38265,
            38387,
            21535,
            5418,
            599,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            0,
            0,
            0,
            178,
            2052,
            14614,
            33023,
            40433,
            29382,
            9155,
            1601,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            49,
            539,
            6365,
            21773,
            39010,
            41695,
            29999,
            12900,
            2063,
            214,
            27,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            864,
            7905,
            25624,
            40317,
            43322
          ]
        ]
      },
      "call": {
        "duration": 0.13376190200142446,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015918949975457508,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06928558000072371,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47948,
            47170,
            47131,
            47371,
            47280,
            47036,
            47163,
            47122,
            47197,
            47207,
            47141,
            47121,
            46892,
            47277,
            47178,
            47314,
            47552,
            47136,
            47048,
            47127,
            47087,
            47229,
            47221,
            47266,
            47152,
            47105,
            47051,
            47234,
            47366,
            47175,
            47233,
            47232,
            47169,
            47209,
            47262,
            47306,
            47659,
            47354,
            47032,
            47181,
            47142,
            47297,
            47169,
            47034,
            47182,
            47181,
            47069,
            47212,
            47108,
            47282,
            47193,
            47149,
            47274,
            47213,
            47216,
            49051,
            48616,
            47197,
            46981,
            47114,
            47227,
            46826,
            47240
          ],
          [
            47948,
            47170,
            47131,
            47371,
            47280,
            47036,
            47163,
            47122,
            47197,
            47207,
            47141,
            47121,
            46892,
            47277,
            47178,
            47314,
            47552,
            47136,
            47048,
            47127,
            47087,
            47229,
            47221,
            47266,
            47152,
            47105,
            47051,
            47234,
            47366,
            47175,
            47233,
            47232,
            47169,
            47209,
            47262,
            47306,
            47659,
            47354,
            47032,
            47181,
            47142,
            47297,
            47169,
            47034,
            47182,
            47181,
            47069,
            47212,
            47108,
            47282,
            47193,
            47149,
            47274,
            47213,
            47216,
            49051,
            48616,
            47197,
            46981,
            47114,
            47227,
            46826,
            47240
          ],
          [
            47948,
            47170,
            47131,
            47371,
            47280,
            47036,
            47163,
            47122,
            47197,
            47207,
            47141,
            47121,
            46892,
            47277,
            47178,
            47314,
            47552,
            47136,
            47048,
            47127,
            47087,
            47229,
            47221,
            47266,
            47152,
            47105,
            47051,
            47234,
            47366,
            47175,
            47233,
            47232,
            47169,
            47209,
            47262,
            47306,
            47659,
            47354,
            47032,
            47181,
            47142,
            47297,
            47169,
            47034,
            47182,
            47181,
            47069,
            47212,
            47108,
            47282,
            47193,
            47149,
            47274,
            47213,
            47216,
            49051,
            48616,
            47197,
            46981,
            47114,
            47227,
            46826,
            47240
          ],
          [
            47948,
            47170,
            47131,
            47371,
            47280,
            47036,
            47163,
            47122,
            47197,
            47207,
            47141,
            47121,
            46892,
            47277,
            47178,
            47314,
            47552,
            47136,
            47048,
            47127,
            47087,
            47229,
            47221,
            47266,
            47152,
            47105,
            47051,
            47234,
            47366,
            47175,
            47233,
            47232,
            47169,
            47209,
            47262,
            47306,
            47659,
            47354,
            47032,
            47181,
            47142,
            47297,
            47169,
            47034,
            47182,
            47181,
            47069,
            47212,
            47108,
            47282,
            47193,
            47149,
            47274,
            47213,
            47216,
            49051,
            48616,
            47197,
            46981,
            47114,
            47227,
            46826,
            47240
          ],
          [
            47948,
            47170,
            47131,
            47371,
            47280,
            47036,
            47163,
            47122,
            47197,
            47207,
            47141,
            47121,
            46892,
            47277,
            47178,
            47314,
            47552,
            47136,
            47048,
            47127,
            47087,
            47229,
            47221,
            47266,
            47152,
            47105,
            47051,
            47234,
            47366,
            47175,
            47233,
            47232,
            47169,
            47209,
            47262,
            47306,
            47659,
            47354,
            47032,
            47181,
            47142,
            47297,
            47169,
            47034,
            47182,
            47181,
            47069,
            47212,
            47108,
            47282,
            47193,
            47149,
            47274,
            47213,
            47216,
            49051,
            48616,
            47197,
            46981,
            47114,
            47227,
            46826,
            47240
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            189,
            2257,
            8805,
            18538,
            28087,
            35536,
            35289,
            26569,
            13445,
            2708,
            294,
            13,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            286,
            2480,
            10698,
            22827,
            34021,
            38070,
            32663,
            19772,
            7739,
            2214,
            355,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            30,
            884,
            5209,
            15674,
            26785,
            34864,
            38587,
            36719,
            26271,
            13141,
            4641,
            760,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            156,
            1422,
            5868,
            15835,
            27993,
            35356,
            34294,
            26191,
            13044,
            3894,
            682,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            13977,
            5349,
            1039,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            202,
            2512,
            11376,
            23284,
            35261,
            39749,
            32651,
            19747,
            8252,
            1698,
            170,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            367,
            4388,
            14342,
            28335,
            38294,
            35117,
            22490,
            10058,
            2047,
            151,
            11,
            0,
            0,
            0,
            0
          ],
          [
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            118,
            1301,
            7697,
            19677,
            30926,
            38740,
            39302,
            33602,
            23565,
            11824,
            3276,
            348,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            69,
            550,
            3230,
            12570,
            25493,
            35150,
            33504,
            21873,
            10625,
            4069,
            703,
            98,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            94,
            1262,
            6151,
            17890,
            29073,
            37197,
            39587,
            34692,
            23361,
            12763,
            3266,
            492,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            191,
            1564,
            6970,
            17390,
            29951,
            39129,
            40465,
            33115,
            22341,
            12681,
            5456,
            1497,
            123,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2698922670024331,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015098139992915094,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2922753439997905,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1702169950003736,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004809886999282753,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}