{
  "created": 1722033219.7898185,
  "duration": 23.51445722579956,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.506864871000289,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14793242000087048,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013433099993562791,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003907016998709878,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14762494300157414,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013033790019107983,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13282039299883763,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12139331900107209,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012944080008310266,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038841259993205313,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12084478699762258,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012617079992196523,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034118849980586674,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14621206099764095,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011999970010947436,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003428296000492992,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11963440999898012,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001182176001748303,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034314459990127943,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14609634899898083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011722759991243947,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034577869992062915,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11980331400263822,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011848169997392688,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004469138999411371,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021196070010773838,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001121275003242772,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003395775998797035,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016948880002018996,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011077140006818809,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00337540499822353,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004056599998875754,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033202.0948105,
            "msecs": 94.81048583984375,
            "relativeCreated": 7795.485734939575,
            "thread": 281473630793760,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5085
          }
        ]
      },
      "teardown": {
        "duration": 0.0012319169982220046,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003429555999900913,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024055130015767645,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033202.107263,
            "msecs": 107.26308822631836,
            "relativeCreated": 7807.93833732605,
            "thread": 281473630793760,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5085
          }
        ]
      },
      "teardown": {
        "duration": 0.0012133769996580668,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021617879974655807,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002661538997926982,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033202.116925,
            "msecs": 116.92500114440918,
            "relativeCreated": 7817.600250244141,
            "thread": 281473630793760,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5085
          }
        ]
      },
      "teardown": {
        "duration": 0.0010637340019457042,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021752880020358134,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003424546001042472,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033202.126535,
            "msecs": 126.53493881225586,
            "relativeCreated": 7827.210187911987,
            "thread": 281473630793760,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5085
          }
        ]
      },
      "teardown": {
        "duration": 0.0011265249995631166,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033982349996222183,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14658784899802413,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011681659998430405,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003421576002438087,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12020148199735559,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012008070007141214,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1776683600000979,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477247549992171,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012552580010378733,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015304119999200338,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1213091079989681,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012985190005565528,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8344650409999304,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            3,
            10,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            44,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            15,
            161,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003572839999833377,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002924524997069966,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8961782469996251,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            203,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            34,
            255,
            255,
            255,
            14
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            15,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            87,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            151,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            131,
            255,
            255,
            255,
            255,
            0,
            0,
            107,
            1,
            67,
            255
          ],
          [
            255,
            0,
            156,
            0,
            255,
            0,
            255,
            74,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034831379998649936,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029269849983393215,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30265164999946137,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48325,
            47507,
            47451,
            47358,
            47348,
            47388,
            47456,
            47465,
            47475,
            47356,
            47696,
            47334,
            47441,
            47322,
            47447,
            47219,
            47522,
            47422,
            47378,
            47357,
            47364,
            47447,
            47414,
            47521,
            47597,
            47498,
            47475,
            47428,
            47489,
            47675,
            47338,
            47314,
            49026,
            47367,
            47801,
            47561,
            47278,
            47376,
            49599,
            47482,
            47434,
            47483,
            47262,
            47303,
            47379,
            47431,
            47042,
            47100,
            47296,
            47455,
            47243,
            47485,
            47409,
            47344,
            47354,
            47354,
            47467,
            47417,
            47373,
            47362,
            47453,
            47469,
            47396
          ],
          [
            48325,
            47507,
            47451,
            47358,
            47348,
            47388,
            47456,
            47465,
            47475,
            47356,
            47696,
            47334,
            47441,
            47322,
            47447,
            47219,
            47522,
            47422,
            47378,
            47357,
            47364,
            47447,
            47414,
            47521,
            47597,
            47498,
            47475,
            47428,
            47489,
            47675,
            47338,
            47314,
            49026,
            47367,
            47801,
            47561,
            47278,
            47376,
            49599,
            47482,
            47434,
            47483,
            47262,
            47303,
            47379,
            47431,
            47042,
            47100,
            47296,
            47455,
            47243,
            47485,
            47409,
            47344,
            47354,
            47354,
            47467,
            47417,
            47373,
            47362,
            47453,
            47469,
            47396
          ]
        ],
        "eTX_errcounts": [
          [
            39879,
            26895,
            8141,
            1166,
            62,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            177,
            3095,
            15930,
            34808,
            42074,
            31046,
            13842,
            2312,
            136,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            948,
            7982,
            26000,
            40225,
            37702,
            19412,
            5560,
            665,
            10,
            1,
            0,
            0
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            227,
            4152,
            17464,
            36076,
            42083,
            31162,
            13316,
            3268,
            297,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            466,
            4578,
            19318,
            36242,
            43019,
            34263,
            16486,
            3004,
            350,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13349936799932038,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016150859992194455,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06901833500160137,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48204,
            47337,
            47094,
            47198,
            47261,
            47012,
            47307,
            47213,
            47323,
            47332,
            47187,
            47270,
            47202,
            47367,
            47520,
            47264,
            47485,
            47165,
            47342,
            47287,
            47234,
            47395,
            46821,
            47207,
            47357,
            47233,
            47415,
            47281,
            47289,
            47317,
            47183,
            47382,
            47294,
            47351,
            47397,
            47246,
            47686,
            47339,
            47204,
            47241,
            47099,
            47382,
            47090,
            47222,
            47187,
            47246,
            47268,
            46767,
            47219,
            47383,
            47297,
            47428,
            47316,
            47375,
            47309,
            48979,
            49116,
            47082,
            47249,
            47187,
            47154,
            47232,
            46951
          ],
          [
            48204,
            47337,
            47094,
            47198,
            47261,
            47012,
            47307,
            47213,
            47323,
            47332,
            47187,
            47270,
            47202,
            47367,
            47520,
            47264,
            47485,
            47165,
            47342,
            47287,
            47234,
            47395,
            46821,
            47207,
            47357,
            47233,
            47415,
            47281,
            47289,
            47317,
            47183,
            47382,
            47294,
            47351,
            47397,
            47246,
            47686,
            47339,
            47204,
            47241,
            47099,
            47382,
            47090,
            47222,
            47187,
            47246,
            47268,
            46767,
            47219,
            47383,
            47297,
            47428,
            47316,
            47375,
            47309,
            48979,
            49116,
            47082,
            47249,
            47187,
            47154,
            47232,
            46951
          ],
          [
            48204,
            47337,
            47094,
            47198,
            47261,
            47012,
            47307,
            47213,
            47323,
            47332,
            47187,
            47270,
            47202,
            47367,
            47520,
            47264,
            47485,
            47165,
            47342,
            47287,
            47234,
            47395,
            46821,
            47207,
            47357,
            47233,
            47415,
            47281,
            47289,
            47317,
            47183,
            47382,
            47294,
            47351,
            47397,
            47246,
            47686,
            47339,
            47204,
            47241,
            47099,
            47382,
            47090,
            47222,
            47187,
            47246,
            47268,
            46767,
            47219,
            47383,
            47297,
            47428,
            47316,
            47375,
            47309,
            48979,
            49116,
            47082,
            47249,
            47187,
            47154,
            47232,
            46951
          ],
          [
            48204,
            47337,
            47094,
            47198,
            47261,
            47012,
            47307,
            47213,
            47323,
            47332,
            47187,
            47270,
            47202,
            47367,
            47520,
            47264,
            47485,
            47165,
            47342,
            47287,
            47234,
            47395,
            46821,
            47207,
            47357,
            47233,
            47415,
            47281,
            47289,
            47317,
            47183,
            47382,
            47294,
            47351,
            47397,
            47246,
            47686,
            47339,
            47204,
            47241,
            47099,
            47382,
            47090,
            47222,
            47187,
            47246,
            47268,
            46767,
            47219,
            47383,
            47297,
            47428,
            47316,
            47375,
            47309,
            48979,
            49116,
            47082,
            47249,
            47187,
            47154,
            47232,
            46951
          ],
          [
            48204,
            47337,
            47094,
            47198,
            47261,
            47012,
            47307,
            47213,
            47323,
            47332,
            47187,
            47270,
            47202,
            47367,
            47520,
            47264,
            47485,
            47165,
            47342,
            47287,
            47234,
            47395,
            46821,
            47207,
            47357,
            47233,
            47415,
            47281,
            47289,
            47317,
            47183,
            47382,
            47294,
            47351,
            47397,
            47246,
            47686,
            47339,
            47204,
            47241,
            47099,
            47382,
            47090,
            47222,
            47187,
            47246,
            47268,
            46767,
            47219,
            47383,
            47297,
            47428,
            47316,
            47375,
            47309,
            48979,
            49116,
            47082,
            47249,
            47187,
            47154,
            47232,
            46951
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            45,
            722,
            3702,
            12194,
            22539,
            28783,
            29701,
            25853,
            18742,
            9629,
            2620,
            279,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            7,
            61,
            869,
            4499,
            11785,
            22003,
            29355,
            32166,
            27740,
            22487,
            15141,
            7209,
            2051,
            334,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            15,
            190,
            2221,
            10150,
            22492,
            33555,
            38279,
            33762,
            23081,
            12356,
            4538,
            920,
            89,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            226,
            3022,
            12475,
            25916,
            35139,
            40272,
            36713,
            26171,
            18041,
            8642,
            2612,
            360,
            37,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            56,
            816,
            4734,
            13761,
            24972
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            49,
            1314,
            7138,
            19568,
            30898,
            33518,
            30390,
            21369,
            10575,
            2956,
            549,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            126,
            1600,
            9666,
            20552,
            32749,
            34769,
            31417,
            23879,
            15990,
            6369,
            1415,
            133,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            124,
            1822,
            9405,
            22140,
            31405,
            34201,
            32162,
            22528,
            13486,
            5325,
            1089,
            58,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            245,
            2061,
            8817,
            21565,
            30119,
            33990,
            31520,
            24677,
            16976,
            8265,
            2662,
            353,
            18,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            36,
            337,
            2846,
            10571,
            22065,
            31780,
            39248,
            39249,
            29243,
            20774,
            10811,
            3548,
            570,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            487,
            3929,
            12545,
            24388,
            33898,
            40179,
            36380,
            27505,
            20120,
            11767,
            5392,
            1992,
            610,
            78,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            148,
            1522,
            7106
          ]
        ]
      },
      "call": {
        "duration": 0.27181654399828403,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9b04eb10>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9b04eb10> = array([21, 13, 18, 19, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9b027520>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48204, 47337, 47094, 47198, 47261, 47012, ...], [48204, 47337, 47094, 47198, 47261, 47012, ...], [...0, 0, ...], [0, 0, 0, 15, 190, 2221, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 36, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9b04eb10>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9b04eb10> = array([21, 13, 18, 19, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016071959980763495,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29243705200133263,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689877190001425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014339420013129711,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2914160360014648,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            19,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            255,
            9,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            242,
            88,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003598849998525111,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029671260017494205,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5335311139970145,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            169,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            171,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            93,
            255,
            157,
            255,
            181,
            0,
            0,
            181,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            88,
            5,
            255,
            24,
            255,
            18
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            102,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            125,
            255,
            153,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            203,
            255,
            147,
            255,
            255,
            2,
            0,
            103,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            93,
            255,
            181
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003495318000204861,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002912854997703107,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29548739999881946,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47960,
            47522,
            47502,
            47571,
            47452,
            47559,
            47346,
            47341,
            47359,
            47416,
            47498,
            47366,
            47482,
            47466,
            47370,
            47460,
            47580,
            47472,
            47553,
            47725,
            47501,
            47647,
            47566,
            47338,
            47488,
            49098,
            47590,
            47618,
            47478,
            47418,
            47489,
            47316,
            47127,
            47468,
            47405,
            47406,
            47461,
            47367,
            47488,
            47409,
            47466,
            47472,
            47479,
            47514,
            47541,
            47563,
            47493,
            47434,
            47513,
            47521,
            47516,
            47493,
            47481,
            47506,
            47532,
            47344,
            47543,
            47564,
            47519,
            47465,
            47667,
            47470,
            47648
          ],
          [
            47960,
            47522,
            47502,
            47571,
            47452,
            47559,
            47346,
            47341,
            47359,
            47416,
            47498,
            47366,
            47482,
            47466,
            47370,
            47460,
            47580,
            47472,
            47553,
            47725,
            47501,
            47647,
            47566,
            47338,
            47488,
            49098,
            47590,
            47618,
            47478,
            47418,
            47489,
            47316,
            47127,
            47468,
            47405,
            47406,
            47461,
            47367,
            47488,
            47409,
            47466,
            47472,
            47479,
            47514,
            47541,
            47563,
            47493,
            47434,
            47513,
            47521,
            47516,
            47493,
            47481,
            47506,
            47532,
            47344,
            47543,
            47564,
            47519,
            47465,
            47667,
            47470,
            47648
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            237,
            3861,
            18409,
            35738,
            36233,
            18707,
            4089,
            413,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            200,
            2704,
            16635,
            34831,
            39802,
            25142,
            8701,
            1102,
            96,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            73,
            853,
            8438,
            29150,
            41828,
            38711,
            18583,
            4578,
            489,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            183,
            2366,
            13457,
            31481,
            42375,
            38559,
            20376,
            4961,
            495,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1336365310016845,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001612626001588069,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06858959499732009,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47830,
            47239,
            47275,
            47392,
            47424,
            47215,
            47298,
            49705,
            48789,
            47342,
            47194,
            47266,
            47278,
            47069,
            47283,
            46766,
            47211,
            47034,
            47060,
            47159,
            47032,
            47225,
            47247,
            47106,
            47240,
            47232,
            47077,
            48929,
            48880,
            47124,
            47238,
            47142,
            47114,
            47187,
            60734,
            47261,
            47333,
            47210,
            47197,
            47253,
            46979,
            47200,
            47239,
            47254,
            47134,
            47246,
            47281,
            47421,
            47479,
            47162,
            47269,
            47267,
            47231,
            47159,
            47217,
            47130,
            47288,
            47201,
            47254,
            47204,
            47256,
            47200,
            47119
          ],
          [
            47830,
            47239,
            47275,
            47392,
            47424,
            47215,
            47298,
            49705,
            48789,
            47342,
            47194,
            47266,
            47278,
            47069,
            47283,
            46766,
            47211,
            47034,
            47060,
            47159,
            47032,
            47225,
            47247,
            47106,
            47240,
            47232,
            47077,
            48929,
            48880,
            47124,
            47238,
            47142,
            47114,
            47187,
            60734,
            47261,
            47333,
            47210,
            47197,
            47253,
            46979,
            47200,
            47239,
            47254,
            47134,
            47246,
            47281,
            47421,
            47479,
            47162,
            47269,
            47267,
            47231,
            47159,
            47217,
            47130,
            47288,
            47201,
            47254,
            47204,
            47256,
            47200,
            47119
          ],
          [
            47830,
            47239,
            47275,
            47392,
            47424,
            47215,
            47298,
            49705,
            48789,
            47342,
            47194,
            47266,
            47278,
            47069,
            47283,
            46766,
            47211,
            47034,
            47060,
            47159,
            47032,
            47225,
            47247,
            47106,
            47240,
            47232,
            47077,
            48929,
            48880,
            47124,
            47238,
            47142,
            47114,
            47187,
            60734,
            47261,
            47333,
            47210,
            47197,
            47253,
            46979,
            47200,
            47239,
            47254,
            47134,
            47246,
            47281,
            47421,
            47479,
            47162,
            47269,
            47267,
            47231,
            47159,
            47217,
            47130,
            47288,
            47201,
            47254,
            47204,
            47256,
            47200,
            47119
          ],
          [
            47830,
            47239,
            47275,
            47392,
            47424,
            47215,
            47298,
            49705,
            48789,
            47342,
            47194,
            47266,
            47278,
            47069,
            47283,
            46766,
            47211,
            47034,
            47060,
            47159,
            47032,
            47225,
            47247,
            47106,
            47240,
            47232,
            47077,
            48929,
            48880,
            47124,
            47238,
            47142,
            47114,
            47187,
            60734,
            47261,
            47333,
            47210,
            47197,
            47253,
            46979,
            47200,
            47239,
            47254,
            47134,
            47246,
            47281,
            47421,
            47479,
            47162,
            47269,
            47267,
            47231,
            47159,
            47217,
            47130,
            47288,
            47201,
            47254,
            47204,
            47256,
            47200,
            47119
          ],
          [
            47830,
            47239,
            47275,
            47392,
            47424,
            47215,
            47298,
            49705,
            48789,
            47342,
            47194,
            47266,
            47278,
            47069,
            47283,
            46766,
            47211,
            47034,
            47060,
            47159,
            47032,
            47225,
            47247,
            47106,
            47240,
            47232,
            47077,
            48929,
            48880,
            47124,
            47238,
            47142,
            47114,
            47187,
            60734,
            47261,
            47333,
            47210,
            47197,
            47253,
            46979,
            47200,
            47239,
            47254,
            47134,
            47246,
            47281,
            47421,
            47479,
            47162,
            47269,
            47267,
            47231,
            47159,
            47217,
            47130,
            47288,
            47201,
            47254,
            47204,
            47256,
            47200,
            47119
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            194,
            1912,
            10723,
            25761,
            36889,
            36810,
            22539,
            7962,
            1442,
            115,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            21,
            413,
            2873,
            14112,
            28863,
            37435,
            37731,
            28373,
            17131,
            5129,
            858,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            16,
            523,
            4399,
            13791,
            28735,
            41131,
            37298,
            18895,
            5758,
            617,
            29,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            191,
            1601,
            7557,
            20082,
            34911,
            56023,
            40591,
            27429,
            12200,
            2279,
            248,
            8,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            119,
            1540,
            7680,
            20281,
            36448,
            41116
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            715,
            4516,
            14885,
            28107,
            37128,
            31464,
            15525,
            4045,
            380,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            702,
            5610,
            17375,
            35577,
            41578,
            34139,
            18646,
            5816,
            657,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            79,
            1179,
            6376,
            16475,
            31002,
            38795,
            31484,
            16545,
            4650,
            370,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            236,
            1916,
            7138,
            18751,
            34262,
            42119,
            35561,
            22032,
            7907,
            1256,
            101,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            3,
            143,
            1872,
            8285,
            20059,
            32722,
            41227,
            39416,
            26159,
            9968,
            1424,
            125,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            69,
            827,
            3619,
            10799,
            30620,
            35974,
            42537,
            38389,
            24462,
            9710,
            2649,
            399,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            168,
            1706,
            9174,
            20223,
            33533
          ]
        ]
      },
      "call": {
        "duration": 0.2698159489991667,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015042640006868169,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29131901700020535,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1691153120009403,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001459081999200862,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3744550020019233,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            69,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035235180002928246,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029324749993975274,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5350261069979751,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            7,
            255,
            12,
            255,
            1,
            24,
            0,
            255,
            0,
            255,
            255
          ],
          [
            115,
            0,
            33,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            56,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            20,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            75,
            0,
            3,
            0,
            7,
            0,
            255,
            140,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            96,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            68,
            0,
            4,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            112,
            255,
            56,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003468707000138238,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002911745003075339,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960862440013443,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48197,
            47647,
            47382,
            47400,
            47857,
            47653,
            47586,
            47508,
            47556,
            47452,
            47342,
            47474,
            47273,
            47381,
            47546,
            47415,
            47356,
            47575,
            47262,
            47506,
            47445,
            47378,
            47420,
            47548,
            47516,
            47560,
            47580,
            47491,
            47465,
            47600,
            47524,
            47641,
            47429,
            47366,
            47557,
            49237,
            47489,
            47758,
            47436,
            49536,
            47466,
            47293,
            47279,
            47482,
            47651,
            47376,
            47392,
            47580,
            47417,
            47491,
            47606,
            47427,
            47332,
            47402,
            47591,
            47450,
            47548,
            47538,
            47407,
            47542,
            47501,
            47381,
            47454
          ],
          [
            48197,
            47647,
            47382,
            47400,
            47857,
            47653,
            47586,
            47508,
            47556,
            47452,
            47342,
            47474,
            47273,
            47381,
            47546,
            47415,
            47356,
            47575,
            47262,
            47506,
            47445,
            47378,
            47420,
            47548,
            47516,
            47560,
            47580,
            47491,
            47465,
            47600,
            47524,
            47641,
            47429,
            47366,
            47557,
            49237,
            47489,
            47758,
            47436,
            49536,
            47466,
            47293,
            47279,
            47482,
            47651,
            47376,
            47392,
            47580,
            47417,
            47491,
            47606,
            47427,
            47332,
            47402,
            47591,
            47450,
            47548,
            47538,
            47407,
            47542,
            47501,
            47381,
            47454
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            629,
            7126,
            25557,
            39171,
            34142,
            15024,
            3008,
            243,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            879,
            6891,
            22963,
            39248,
            38083,
            21030,
            5118,
            608,
            33,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11
          ],
          [
            0,
            0,
            0,
            0,
            154,
            2147,
            14697,
            33066,
            41009,
            28432,
            9083,
            1508,
            138,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            659,
            5708,
            22063,
            38825,
            42809,
            29321,
            11754,
            1997,
            288,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            921,
            8219,
            26161,
            40602,
            43217
          ]
        ]
      },
      "call": {
        "duration": 0.13382640600320883,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016358470020350069,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06900312400102848,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48012,
            47243,
            47374,
            47249,
            47463,
            47270,
            47251,
            49132,
            47542,
            47438,
            47135,
            47237,
            47200,
            47142,
            47230,
            47192,
            47205,
            47241,
            47201,
            47316,
            46832,
            47302,
            47215,
            47245,
            47369,
            47100,
            47210,
            47414,
            47446,
            47392,
            46916,
            47116,
            47295,
            47153,
            47332,
            47106,
            47096,
            47150,
            47119,
            47244,
            47166,
            47282,
            47383,
            47236,
            47415,
            46930,
            48803,
            47547,
            47206,
            47243,
            47087,
            47095,
            47196,
            47182,
            47358,
            47160,
            47066,
            47286,
            47183,
            47287,
            47117,
            47147,
            47317
          ],
          [
            48012,
            47243,
            47374,
            47249,
            47463,
            47270,
            47251,
            49132,
            47542,
            47438,
            47135,
            47237,
            47200,
            47142,
            47230,
            47192,
            47205,
            47241,
            47201,
            47316,
            46832,
            47302,
            47215,
            47245,
            47369,
            47100,
            47210,
            47414,
            47446,
            47392,
            46916,
            47116,
            47295,
            47153,
            47332,
            47106,
            47096,
            47150,
            47119,
            47244,
            47166,
            47282,
            47383,
            47236,
            47415,
            46930,
            48803,
            47547,
            47206,
            47243,
            47087,
            47095,
            47196,
            47182,
            47358,
            47160,
            47066,
            47286,
            47183,
            47287,
            47117,
            47147,
            47317
          ],
          [
            48012,
            47243,
            47374,
            47249,
            47463,
            47270,
            47251,
            49132,
            47542,
            47438,
            47135,
            47237,
            47200,
            47142,
            47230,
            47192,
            47205,
            47241,
            47201,
            47316,
            46832,
            47302,
            47215,
            47245,
            47369,
            47100,
            47210,
            47414,
            47446,
            47392,
            46916,
            47116,
            47295,
            47153,
            47332,
            47106,
            47096,
            47150,
            47119,
            47244,
            47166,
            47282,
            47383,
            47236,
            47415,
            46930,
            48803,
            47547,
            47206,
            47243,
            47087,
            47095,
            47196,
            47182,
            47358,
            47160,
            47066,
            47286,
            47183,
            47287,
            47117,
            47147,
            47317
          ],
          [
            48012,
            47243,
            47374,
            47249,
            47463,
            47270,
            47251,
            49132,
            47542,
            47438,
            47135,
            47237,
            47200,
            47142,
            47230,
            47192,
            47205,
            47241,
            47201,
            47316,
            46832,
            47302,
            47215,
            47245,
            47369,
            47100,
            47210,
            47414,
            47446,
            47392,
            46916,
            47116,
            47295,
            47153,
            47332,
            47106,
            47096,
            47150,
            47119,
            47244,
            47166,
            47282,
            47383,
            47236,
            47415,
            46930,
            48803,
            47547,
            47206,
            47243,
            47087,
            47095,
            47196,
            47182,
            47358,
            47160,
            47066,
            47286,
            47183,
            47287,
            47117,
            47147,
            47317
          ],
          [
            48012,
            47243,
            47374,
            47249,
            47463,
            47270,
            47251,
            49132,
            47542,
            47438,
            47135,
            47237,
            47200,
            47142,
            47230,
            47192,
            47205,
            47241,
            47201,
            47316,
            46832,
            47302,
            47215,
            47245,
            47369,
            47100,
            47210,
            47414,
            47446,
            47392,
            46916,
            47116,
            47295,
            47153,
            47332,
            47106,
            47096,
            47150,
            47119,
            47244,
            47166,
            47282,
            47383,
            47236,
            47415,
            46930,
            48803,
            47547,
            47206,
            47243,
            47087,
            47095,
            47196,
            47182,
            47358,
            47160,
            47066,
            47286,
            47183,
            47287,
            47117,
            47147,
            47317
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            53,
            914,
            5561,
            17908,
            30489,
            35532,
            32627,
            24477,
            14698,
            4162,
            535,
            8,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            233,
            1955,
            9095,
            23259,
            36463,
            40238,
            33169,
            18722,
            6006,
            943,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            199,
            1385,
            4415,
            11048,
            22707,
            34748,
            41312,
            36318,
            21719,
            8085,
            1741,
            152,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            60,
            1019,
            5880,
            16181,
            29812,
            41123,
            39413,
            28522,
            11608,
            2115,
            187,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            11410,
            2818,
            234,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            182,
            1588,
            7657,
            18928,
            32967,
            38320,
            30590,
            15287,
            4701,
            476,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            158,
            1522,
            8663,
            18295,
            29062,
            38685,
            34340,
            20636,
            7204,
            1179,
            77,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            114,
            1016,
            4971,
            13297,
            25779,
            39489,
            42624,
            34251,
            20931,
            8012,
            1692,
            197,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            112,
            1271,
            6937,
            17551,
            27714,
            38528,
            35417,
            21886,
            7955,
            1507,
            120,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            209,
            2132,
            6624,
            15041,
            26068,
            36362,
            40506,
            35053,
            21061,
            9332,
            2366,
            361,
            12,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            316,
            3246,
            10607,
            20652,
            32401,
            40779,
            42667,
            35700,
            23368,
            8997,
            1917,
            199,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27004599400243023,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014908830016793218,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29176524699869333,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170033902999421,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045746, 10011436), (411309, 411309), (40048722, 10012180))\nassert ((40045746 > 0 and 10011436 == 0\n  +10011436\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9b027100>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff9ae011f0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9b12e4f0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045746, 10011436), (411309, 411309), (40048722, 10012180))\nE       assert ((40045746 > 0 and 10011436 == 0\nE         +10011436\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.0049437790003139526,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}