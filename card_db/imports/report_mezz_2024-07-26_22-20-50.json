{
  "created": 1722032469.7207122,
  "duration": 23.47045063972473,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5067760319980152,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1484474089993455,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013138489994162228,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003764633001992479,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1480586299985589,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012539979979919735,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13212548600131413,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.121783955997671,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012779380012943875,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003766853998968145,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12110399100129143,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001311509000515798,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033343940012855455,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14671096999882138,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001175006000266876,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003328274000523379,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12001925699951244,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001158956001745537,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033297439986199606,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14622339899869985,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011869460031448398,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003321373998915078,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12006962899977225,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001181575997179607,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004417569001816446,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002096265998261515,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001145455000369111,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003305053000076441,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017369480010529514,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010793639994517434,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032923329999903217,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004041268999571912,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032452.0044513,
            "msecs": 4.451274871826172,
            "relativeCreated": 7730.751514434814,
            "thread": 281473649762336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4727
          }
        ]
      },
      "teardown": {
        "duration": 0.0011914460010302719,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003330523999466095,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023527419980382547,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032452.0166492,
            "msecs": 16.649246215820312,
            "relativeCreated": 7742.949485778809,
            "thread": 281473649762336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4727
          }
        ]
      },
      "teardown": {
        "duration": 0.0011659760020847898,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002059664999251254,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00272991100064246,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032452.026039,
            "msecs": 26.03888511657715,
            "relativeCreated": 7752.339124679565,
            "thread": 281473649762336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4727
          }
        ]
      },
      "teardown": {
        "duration": 0.0010344230031478219,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020379150009830482,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034698469971772283,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032452.0354614,
            "msecs": 35.46142578125,
            "relativeCreated": 7761.761665344238,
            "thread": 281473649762336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4727
          }
        ]
      },
      "teardown": {
        "duration": 0.0010770240005513187,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033223930004169233,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.15465349599980982,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012344380011199974,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003326113997900393,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12037554500057013,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012074369988113176,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17476009399979375,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14776774300116813,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001335150001978036,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01508610599921667,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12134444599723793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012802189994545188,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8446331699997245,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            11,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            91,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            22,
            157,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035457490012049675,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002890504998504184,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8959326789990882,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            19,
            0,
            1,
            0,
            39,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            17,
            255,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            39
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            71,
            255,
            255,
            255,
            3
          ],
          [
            3,
            0,
            1,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            19,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            58,
            0,
            0,
            0,
            0
          ],
          [
            0,
            33,
            0,
            3,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            225,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            182,
            255,
            255,
            255,
            255,
            0,
            0,
            217,
            0,
            172,
            255
          ],
          [
            255,
            0,
            107,
            0,
            255,
            0,
            255,
            92,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003416925999772502,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028878339981019963,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30303283300236217,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48624,
            47512,
            47740,
            47672,
            47140,
            49818,
            47642,
            47873,
            47616,
            49375,
            47615,
            47529,
            47484,
            47485,
            47521,
            47428,
            47703,
            47485,
            47601,
            47485,
            47623,
            47423,
            47453,
            47440,
            47672,
            47562,
            47502,
            47458,
            47588,
            47477,
            47594,
            47509,
            47491,
            47524,
            47582,
            47494,
            47491,
            47482,
            47594,
            47726,
            47604,
            47609,
            47886,
            47558,
            48008,
            47513,
            49747,
            47484,
            47381,
            47558,
            47362,
            47648,
            47423,
            47556,
            47048,
            47264,
            47583,
            47518,
            47412,
            47484,
            47358,
            47501,
            47485
          ],
          [
            48624,
            47512,
            47740,
            47672,
            47140,
            49818,
            47642,
            47873,
            47616,
            49375,
            47615,
            47529,
            47484,
            47485,
            47521,
            47428,
            47703,
            47485,
            47601,
            47485,
            47623,
            47423,
            47453,
            47440,
            47672,
            47562,
            47502,
            47458,
            47588,
            47477,
            47594,
            47509,
            47491,
            47524,
            47582,
            47494,
            47491,
            47482,
            47594,
            47726,
            47604,
            47609,
            47886,
            47558,
            48008,
            47513,
            49747,
            47484,
            47381,
            47558,
            47362,
            47648,
            47423,
            47556,
            47048,
            47264,
            47583,
            47518,
            47412,
            47484,
            47358,
            47501,
            47485
          ]
        ],
        "eTX_errcounts": [
          [
            41107,
            27752,
            9262,
            1586,
            117,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            133,
            2851,
            15039,
            32925,
            42758,
            32565,
            15527,
            2477,
            129,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            833,
            6911,
            25368,
            40059,
            38221,
            20592,
            5315,
            763,
            14,
            0,
            0,
            0
          ],
          [
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            248,
            3658,
            17074,
            35332,
            42001,
            32567,
            14415,
            3497,
            460,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            336,
            4318,
            18009,
            35780,
            43086,
            36068,
            18515,
            3670,
            299,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13358225900083198,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016084259987110272,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0690671750016918,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48706,
            47121,
            47318,
            47347,
            47445,
            47319,
            47392,
            47380,
            47391,
            47432,
            47509,
            47288,
            47426,
            47360,
            47481,
            47450,
            47404,
            47431,
            47339,
            47747,
            47243,
            47196,
            47459,
            47342,
            47255,
            47123,
            46979,
            47280,
            47362,
            47295,
            47281,
            47119,
            47476,
            47382,
            47369,
            47441,
            47371,
            47396,
            47861,
            47306,
            47175,
            47270,
            47259,
            47253,
            47285,
            47261,
            47342,
            47290,
            47482,
            47428,
            47450,
            47101,
            47634,
            47461,
            47354,
            47470,
            47452,
            47643,
            47487,
            47336,
            47261,
            47325,
            47300
          ],
          [
            48706,
            47121,
            47318,
            47347,
            47445,
            47319,
            47392,
            47380,
            47391,
            47432,
            47509,
            47288,
            47426,
            47360,
            47481,
            47450,
            47404,
            47431,
            47339,
            47747,
            47243,
            47196,
            47459,
            47342,
            47255,
            47123,
            46979,
            47280,
            47362,
            47295,
            47281,
            47119,
            47476,
            47382,
            47369,
            47441,
            47371,
            47396,
            47861,
            47306,
            47175,
            47270,
            47259,
            47253,
            47285,
            47261,
            47342,
            47290,
            47482,
            47428,
            47450,
            47101,
            47634,
            47461,
            47354,
            47470,
            47452,
            47643,
            47487,
            47336,
            47261,
            47325,
            47300
          ],
          [
            48706,
            47121,
            47318,
            47347,
            47445,
            47319,
            47392,
            47380,
            47391,
            47432,
            47509,
            47288,
            47426,
            47360,
            47481,
            47450,
            47404,
            47431,
            47339,
            47747,
            47243,
            47196,
            47459,
            47342,
            47255,
            47123,
            46979,
            47280,
            47362,
            47295,
            47281,
            47119,
            47476,
            47382,
            47369,
            47441,
            47371,
            47396,
            47861,
            47306,
            47175,
            47270,
            47259,
            47253,
            47285,
            47261,
            47342,
            47290,
            47482,
            47428,
            47450,
            47101,
            47634,
            47461,
            47354,
            47470,
            47452,
            47643,
            47487,
            47336,
            47261,
            47325,
            47300
          ],
          [
            48706,
            47121,
            47318,
            47347,
            47445,
            47319,
            47392,
            47380,
            47391,
            47432,
            47509,
            47288,
            47426,
            47360,
            47481,
            47450,
            47404,
            47431,
            47339,
            47747,
            47243,
            47196,
            47459,
            47342,
            47255,
            47123,
            46979,
            47280,
            47362,
            47295,
            47281,
            47119,
            47476,
            47382,
            47369,
            47441,
            47371,
            47396,
            47861,
            47306,
            47175,
            47270,
            47259,
            47253,
            47285,
            47261,
            47342,
            47290,
            47482,
            47428,
            47450,
            47101,
            47634,
            47461,
            47354,
            47470,
            47452,
            47643,
            47487,
            47336,
            47261,
            47325,
            47300
          ],
          [
            48706,
            47121,
            47318,
            47347,
            47445,
            47319,
            47392,
            47380,
            47391,
            47432,
            47509,
            47288,
            47426,
            47360,
            47481,
            47450,
            47404,
            47431,
            47339,
            47747,
            47243,
            47196,
            47459,
            47342,
            47255,
            47123,
            46979,
            47280,
            47362,
            47295,
            47281,
            47119,
            47476,
            47382,
            47369,
            47441,
            47371,
            47396,
            47861,
            47306,
            47175,
            47270,
            47259,
            47253,
            47285,
            47261,
            47342,
            47290,
            47482,
            47428,
            47450,
            47101,
            47634,
            47461,
            47354,
            47470,
            47452,
            47643,
            47487,
            47336,
            47261,
            47325,
            47300
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            67,
            880,
            4537,
            11874,
            23143,
            30601,
            32187,
            28981,
            23352,
            13864,
            4144,
            519,
            50,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            725,
            3645,
            11889,
            24867,
            32258,
            32597,
            27883,
            22850,
            16401,
            10728,
            4312,
            829,
            53,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            75,
            666,
            2590,
            9859,
            19378,
            30045,
            37368,
            35214,
            27353,
            16460,
            6418,
            1089,
            95,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            407,
            3133,
            11347,
            23162,
            32973,
            37972,
            38464,
            32150,
            22073,
            11465,
            4110,
            612,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            176,
            1246,
            5692,
            14874,
            26332
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            829,
            5356,
            15430,
            26728,
            31291,
            32383,
            26141,
            15912,
            5963,
            1278,
            74,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            227,
            1463,
            7854,
            16677,
            28026,
            33246,
            31735,
            25348,
            17011,
            9233,
            3304,
            485,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            163,
            1603,
            8016,
            18154,
            29460,
            34772,
            34821,
            29104,
            19770,
            9634,
            2399,
            210,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            382,
            2715,
            9278,
            20013,
            28696,
            34515,
            31557,
            27164,
            20943,
            12628,
            5521,
            1072,
            99,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            25,
            521,
            3137,
            9672,
            20139,
            29967,
            37062,
            39353,
            32454,
            22298,
            11742,
            4292,
            880,
            89,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            64,
            721,
            4062,
            11120,
            22025,
            32394,
            39263,
            39236,
            34156,
            27489,
            18926,
            8549,
            1635,
            96,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            243,
            1885,
            7784
          ]
        ]
      },
      "call": {
        "duration": 0.27196981300221523,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9c28dbd0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9c28dbd0> = array([20, 13, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9c2f2490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48706, 47121, 47318, 47347, 47445, 47319, ...], [48706, 47121, 47318, 47347, 47445, 47319, ...], [...0, 0, ...], [0, 0, 4, 75, 666, 2590, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 25, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9c28dbd0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9c28dbd0> = array([20, 13, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016113960009533912,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292702583999926,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170431770002324,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014531720007653348,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3036216380023689,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            23,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            65,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034629760011739563,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002888405000703642,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5354506990006485,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            182,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            153,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            123,
            255,
            163,
            255,
            174,
            0,
            0,
            250,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            61,
            1,
            255,
            11,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            73,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            216,
            255,
            193,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            202,
            255,
            156,
            255,
            255,
            8,
            0,
            140,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            84,
            255,
            145
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00343972699920414,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028701629998977296,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959091160009848,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48126,
            47598,
            47650,
            47767,
            47604,
            47431,
            47623,
            47510,
            47736,
            47733,
            47618,
            47668,
            47533,
            47587,
            47577,
            47618,
            49397,
            47540,
            47865,
            47623,
            49698,
            47657,
            47413,
            47612,
            47424,
            47478,
            47538,
            47537,
            47638,
            47609,
            47514,
            47639,
            47455,
            47598,
            47311,
            47254,
            47421,
            47418,
            47592,
            47716,
            47554,
            47575,
            47575,
            47547,
            47570,
            47746,
            47588,
            47485,
            47452,
            47992,
            47470,
            47973,
            47528,
            47627,
            47520,
            47366,
            47594,
            47555,
            47637,
            47474,
            47611,
            47517,
            47620
          ],
          [
            48126,
            47598,
            47650,
            47767,
            47604,
            47431,
            47623,
            47510,
            47736,
            47733,
            47618,
            47668,
            47533,
            47587,
            47577,
            47618,
            49397,
            47540,
            47865,
            47623,
            49698,
            47657,
            47413,
            47612,
            47424,
            47478,
            47538,
            47537,
            47638,
            47609,
            47514,
            47639,
            47455,
            47598,
            47311,
            47254,
            47421,
            47418,
            47592,
            47716,
            47554,
            47575,
            47575,
            47547,
            47570,
            47746,
            47588,
            47485,
            47452,
            47992,
            47470,
            47973,
            47528,
            47627,
            47520,
            47366,
            47594,
            47555,
            47637,
            47474,
            47611,
            47517,
            47620
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            244,
            3673,
            17085,
            37579,
            36612,
            19728,
            4837,
            445,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            153,
            2504,
            15302,
            34010,
            40860,
            27120,
            9569,
            1224,
            138,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            885,
            7584,
            28696,
            43447,
            39267,
            20071,
            4880,
            630,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            119,
            1853,
            13007,
            30328,
            42489,
            38807,
            21385,
            5931,
            724,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13395882699842332,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016291559986711945,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06874589700237266,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47863,
            47468,
            47430,
            47395,
            47358,
            47399,
            47388,
            47344,
            47393,
            47289,
            47391,
            47627,
            47490,
            47479,
            47471,
            47398,
            47094,
            47285,
            47476,
            47392,
            47594,
            47284,
            47211,
            47345,
            47313,
            47277,
            47254,
            47406,
            47500,
            47392,
            47376,
            47015,
            47499,
            47520,
            47360,
            47382,
            47270,
            47300,
            47207,
            47312,
            47320,
            47006,
            47489,
            47298,
            47313,
            47590,
            47463,
            47466,
            47407,
            47285,
            47402,
            48991,
            49413,
            47228,
            47385,
            47471,
            47291,
            47218,
            47380,
            47258,
            47352,
            47382,
            47421
          ],
          [
            47863,
            47468,
            47430,
            47395,
            47358,
            47399,
            47388,
            47344,
            47393,
            47289,
            47391,
            47627,
            47490,
            47479,
            47471,
            47398,
            47094,
            47285,
            47476,
            47392,
            47594,
            47284,
            47211,
            47345,
            47313,
            47277,
            47254,
            47406,
            47500,
            47392,
            47376,
            47015,
            47499,
            47520,
            47360,
            47382,
            47270,
            47300,
            47207,
            47312,
            47320,
            47006,
            47489,
            47298,
            47313,
            47590,
            47463,
            47466,
            47407,
            47285,
            47402,
            48991,
            49413,
            47228,
            47385,
            47471,
            47291,
            47218,
            47380,
            47258,
            47352,
            47382,
            47421
          ],
          [
            47863,
            47468,
            47430,
            47395,
            47358,
            47399,
            47388,
            47344,
            47393,
            47289,
            47391,
            47627,
            47490,
            47479,
            47471,
            47398,
            47094,
            47285,
            47476,
            47392,
            47594,
            47284,
            47211,
            47345,
            47313,
            47277,
            47254,
            47406,
            47500,
            47392,
            47376,
            47015,
            47499,
            47520,
            47360,
            47382,
            47270,
            47300,
            47207,
            47312,
            47320,
            47006,
            47489,
            47298,
            47313,
            47590,
            47463,
            47466,
            47407,
            47285,
            47402,
            48991,
            49413,
            47228,
            47385,
            47471,
            47291,
            47218,
            47380,
            47258,
            47352,
            47382,
            47421
          ],
          [
            47863,
            47468,
            47430,
            47395,
            47358,
            47399,
            47388,
            47344,
            47393,
            47289,
            47391,
            47627,
            47490,
            47479,
            47471,
            47398,
            47094,
            47285,
            47476,
            47392,
            47594,
            47284,
            47211,
            47345,
            47313,
            47277,
            47254,
            47406,
            47500,
            47392,
            47376,
            47015,
            47499,
            47520,
            47360,
            47382,
            47270,
            47300,
            47207,
            47312,
            47320,
            47006,
            47489,
            47298,
            47313,
            47590,
            47463,
            47466,
            47407,
            47285,
            47402,
            48991,
            49413,
            47228,
            47385,
            47471,
            47291,
            47218,
            47380,
            47258,
            47352,
            47382,
            47421
          ],
          [
            47863,
            47468,
            47430,
            47395,
            47358,
            47399,
            47388,
            47344,
            47393,
            47289,
            47391,
            47627,
            47490,
            47479,
            47471,
            47398,
            47094,
            47285,
            47476,
            47392,
            47594,
            47284,
            47211,
            47345,
            47313,
            47277,
            47254,
            47406,
            47500,
            47392,
            47376,
            47015,
            47499,
            47520,
            47360,
            47382,
            47270,
            47300,
            47207,
            47312,
            47320,
            47006,
            47489,
            47298,
            47313,
            47590,
            47463,
            47466,
            47407,
            47285,
            47402,
            48991,
            49413,
            47228,
            47385,
            47471,
            47291,
            47218,
            47380,
            47258,
            47352,
            47382,
            47421
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            308,
            2329,
            11025,
            24977,
            37225,
            36950,
            27474,
            13053,
            3208,
            284,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            381,
            2534,
            11795,
            27429,
            38463,
            39298,
            29920,
            17522,
            5489,
            1281,
            116,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            0,
            3,
            359,
            3866,
            14747,
            31352,
            40114,
            35369,
            20173,
            6819,
            1073,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            59,
            1071,
            6412,
            22513,
            38718,
            43899,
            40575,
            28300,
            13143,
            2751,
            330,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            64,
            1012,
            6525,
            20767,
            35412,
            39823
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            345,
            3043,
            13093,
            26494,
            34239,
            28880,
            15486,
            4173,
            443,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53,
            662,
            6295,
            18891,
            34586,
            39839,
            32940,
            18654,
            6676,
            1010,
            40,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            54,
            813,
            4950,
            17170,
            32722,
            38592,
            32335,
            18314,
            5891,
            843,
            56,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            134,
            1808,
            8394,
            21875,
            35439,
            41887,
            35756,
            23517,
            9216,
            1753,
            125,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            69,
            1554,
            7621,
            20156,
            33716,
            40869,
            37919,
            26879,
            13913,
            3152,
            477,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            271,
            2300,
            10952,
            25183,
            37825,
            43814,
            39216,
            26996,
            13188,
            4361,
            1063,
            104,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            21,
            540,
            5759,
            17064,
            32185
          ]
        ]
      },
      "call": {
        "duration": 0.27020724400063045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014823929996055085,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29160720000072615,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1754420010001922,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014611530023103114,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3556215239987068,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            96,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034702970006037503,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028791640033887234,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5357748550013639,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            7,
            255,
            2,
            23,
            0,
            255,
            0,
            255,
            255
          ],
          [
            71,
            0,
            8,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            24,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            190,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            23,
            0,
            1,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            9,
            255,
            50,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            4,
            0,
            255,
            3,
            255,
            255
          ],
          [
            63,
            0,
            4,
            0,
            3,
            0,
            255,
            130,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            112,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            78,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            115,
            255,
            58,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          6,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034406269987812266,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028741240021190606,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29642167700149,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48257,
            48076,
            47610,
            47688,
            47501,
            47704,
            47628,
            47621,
            47704,
            47631,
            47641,
            47802,
            49432,
            47640,
            47614,
            47497,
            47506,
            47621,
            47490,
            47680,
            47616,
            47697,
            47567,
            47642,
            47555,
            47650,
            47716,
            47712,
            47560,
            47903,
            47583,
            47719,
            47779,
            47619,
            47571,
            47604,
            47637,
            63679,
            47955,
            49872,
            47626,
            47698,
            47702,
            47699,
            47776,
            47673,
            47515,
            47544,
            47616,
            47277,
            47467,
            47777,
            47532,
            47557,
            47574,
            47703,
            47824,
            47537,
            47575,
            47861,
            47548,
            47694,
            47576
          ],
          [
            48257,
            48076,
            47610,
            47688,
            47501,
            47704,
            47628,
            47621,
            47704,
            47631,
            47641,
            47802,
            49432,
            47640,
            47614,
            47497,
            47506,
            47621,
            47490,
            47680,
            47616,
            47697,
            47567,
            47642,
            47555,
            47650,
            47716,
            47712,
            47560,
            47903,
            47583,
            47719,
            47779,
            47619,
            47571,
            47604,
            47637,
            63679,
            47955,
            49872,
            47626,
            47698,
            47702,
            47699,
            47776,
            47673,
            47515,
            47544,
            47616,
            47277,
            47467,
            47777,
            47532,
            47557,
            47574,
            47703,
            47824,
            47537,
            47575,
            47861,
            47548,
            47694,
            47576
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            435,
            6062,
            23830,
            40848,
            34538,
            15533,
            3062,
            309,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            527,
            8046,
            21568,
            40419,
            39258,
            22597,
            5415,
            678,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            1,
            136,
            1589,
            13649,
            32506,
            41397,
            30041,
            10122,
            1825,
            126,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            468,
            5843,
            21345,
            38272,
            41804,
            31172,
            17609,
            2206,
            256,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            682,
            7190,
            25054,
            40242,
            43736
          ]
        ]
      },
      "call": {
        "duration": 0.1347487140010344,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001594055000168737,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06913773599808337,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48431,
            47744,
            47566,
            47425,
            47588,
            49155,
            49633,
            47321,
            47522,
            47392,
            47305,
            47615,
            47311,
            47359,
            47334,
            47356,
            47493,
            47431,
            47461,
            47481,
            47313,
            47705,
            47498,
            47844,
            48215,
            47251,
            47397,
            47443,
            47346,
            47524,
            47053,
            47588,
            47487,
            47409,
            47461,
            47464,
            47668,
            47526,
            47341,
            47532,
            47400,
            47868,
            47495,
            47303,
            47602,
            47348,
            47408,
            47405,
            47022,
            47480,
            47326,
            47394,
            47567,
            47415,
            47547,
            47440,
            47511,
            47556,
            47345,
            47889,
            47645,
            47628,
            47331
          ],
          [
            48431,
            47744,
            47566,
            47425,
            47588,
            49155,
            49633,
            47321,
            47522,
            47392,
            47305,
            47615,
            47311,
            47359,
            47334,
            47356,
            47493,
            47431,
            47461,
            47481,
            47313,
            47705,
            47498,
            47844,
            48215,
            47251,
            47397,
            47443,
            47346,
            47524,
            47053,
            47588,
            47487,
            47409,
            47461,
            47464,
            47668,
            47526,
            47341,
            47532,
            47400,
            47868,
            47495,
            47303,
            47602,
            47348,
            47408,
            47405,
            47022,
            47480,
            47326,
            47394,
            47567,
            47415,
            47547,
            47440,
            47511,
            47556,
            47345,
            47889,
            47645,
            47628,
            47331
          ],
          [
            48431,
            47744,
            47566,
            47425,
            47588,
            49155,
            49633,
            47321,
            47522,
            47392,
            47305,
            47615,
            47311,
            47359,
            47334,
            47356,
            47493,
            47431,
            47461,
            47481,
            47313,
            47705,
            47498,
            47844,
            48215,
            47251,
            47397,
            47443,
            47346,
            47524,
            47053,
            47588,
            47487,
            47409,
            47461,
            47464,
            47668,
            47526,
            47341,
            47532,
            47400,
            47868,
            47495,
            47303,
            47602,
            47348,
            47408,
            47405,
            47022,
            47480,
            47326,
            47394,
            47567,
            47415,
            47547,
            47440,
            47511,
            47556,
            47345,
            47889,
            47645,
            47628,
            47331
          ],
          [
            48431,
            47744,
            47566,
            47425,
            47588,
            49155,
            49633,
            47321,
            47522,
            47392,
            47305,
            47615,
            47311,
            47359,
            47334,
            47356,
            47493,
            47431,
            47461,
            47481,
            47313,
            47705,
            47498,
            47844,
            48215,
            47251,
            47397,
            47443,
            47346,
            47524,
            47053,
            47588,
            47487,
            47409,
            47461,
            47464,
            47668,
            47526,
            47341,
            47532,
            47400,
            47868,
            47495,
            47303,
            47602,
            47348,
            47408,
            47405,
            47022,
            47480,
            47326,
            47394,
            47567,
            47415,
            47547,
            47440,
            47511,
            47556,
            47345,
            47889,
            47645,
            47628,
            47331
          ],
          [
            48431,
            47744,
            47566,
            47425,
            47588,
            49155,
            49633,
            47321,
            47522,
            47392,
            47305,
            47615,
            47311,
            47359,
            47334,
            47356,
            47493,
            47431,
            47461,
            47481,
            47313,
            47705,
            47498,
            47844,
            48215,
            47251,
            47397,
            47443,
            47346,
            47524,
            47053,
            47588,
            47487,
            47409,
            47461,
            47464,
            47668,
            47526,
            47341,
            47532,
            47400,
            47868,
            47495,
            47303,
            47602,
            47348,
            47408,
            47405,
            47022,
            47480,
            47326,
            47394,
            47567,
            47415,
            47547,
            47440,
            47511,
            47556,
            47345,
            47889,
            47645,
            47628,
            47331
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            74,
            925,
            5127,
            16316,
            30360,
            37934,
            35685,
            25639,
            14073,
            4528,
            814,
            115,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            250,
            2193,
            9894,
            23865,
            36201,
            38628,
            32873,
            21127,
            8334,
            1736,
            169,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            250,
            2289,
            10256,
            26276,
            38196,
            41497,
            35329,
            22821,
            9803,
            2541,
            360,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            867,
            5034,
            15894,
            28972,
            39262,
            36296,
            26885,
            12436,
            2537,
            306,
            25,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            12137,
            3339,
            241,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            136,
            1836,
            8878,
            21332,
            34962,
            37728,
            29484,
            16165,
            4991,
            672,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            366,
            4572,
            14612,
            28067,
            39111,
            35057,
            22757,
            9843,
            1892,
            177,
            4,
            0,
            0,
            0,
            0
          ],
          [
            45,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            546,
            4477,
            15380,
            28141,
            39988,
            41269,
            33760,
            22226,
            8310,
            1593,
            112,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            141,
            2591,
            12403,
            25823,
            37965,
            35950,
            24259,
            11522,
            3073,
            338,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            584,
            3762,
            14505,
            28004,
            39743,
            42193,
            35637,
            24263,
            13385,
            4268,
            1151,
            104,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            111,
            1108,
            5963,
            18847,
            31780,
            40680,
            41107,
            32381,
            20434,
            9722,
            2809,
            388,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2712916189993848,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015078629985509906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2920662110009289,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1761413170024753,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045484, 10011371), (411513, 411513), (40048780, 10012195))\nassert ((40045484 > 0 and 10011371 == 0\n  +10011371\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9c2f2190>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff9c0223d0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9c33c730>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045484, 10011371), (411513, 411513), (40048780, 10012195))\nE       assert ((40045484 > 0 and 10011371 == 0\nE         +10011371\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004976180000085151,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}