{
  "created": 1722033275.2835226,
  "duration": 23.251951694488525,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5042563419992803,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14807294300044305,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013636500007123686,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003947847999370424,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774863499769708,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012766780018864665,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13203914599944255,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1213995900034206,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013143590003892314,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003943378000258235,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12077158499960206,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012830979976570234,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034661270001379307,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14626588199826074,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012041670015605632,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0035322179974173196,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11959813999783364,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001189347000035923,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0035056380002060905,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14608812900041812,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012224370002513751,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034946269988722634,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11959732999821426,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012140069993620273,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004499980001128279,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021914890021434985,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011655560010694899,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034532870013208594,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017296580008405726,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011248150003666524,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003403966002224479,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004101061000255868,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033257.8598206,
            "msecs": 859.8206043243408,
            "relativeCreated": 7804.040908813477,
            "thread": 281473261756448,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5112
          }
        ]
      },
      "teardown": {
        "duration": 0.0012088469993614126,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0035163180000381544,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002401344001555117,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033257.8724694,
            "msecs": 872.469425201416,
            "relativeCreated": 7816.689729690552,
            "thread": 281473261756448,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5112
          }
        ]
      },
      "teardown": {
        "duration": 0.0011822960004792549,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002199138998548733,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002749020997725893,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033257.8822367,
            "msecs": 882.2367191314697,
            "relativeCreated": 7826.4570236206055,
            "thread": 281473261756448,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5112
          }
        ]
      },
      "teardown": {
        "duration": 0.0010472629983269144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002184078999562189,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003441406999627361,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033257.891971,
            "msecs": 891.9711112976074,
            "relativeCreated": 7836.191415786743,
            "thread": 281473261756448,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5112
          }
        ]
      },
      "teardown": {
        "duration": 0.0010983849970216397,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003457546998106409,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1463119629988796,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012273569991521072,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034455459972377867,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12008538000009139,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011958569994021673,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1778975650013308,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14735223600291647,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012774290007655509,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015290409999579424,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12138992899781442,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012856489993282594,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8374258069998177,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            5,
            17,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            74,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            22,
            126,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003585919999750331,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002916514997195918,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8990996520005865,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            13,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            214,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            190,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            40,
            255,
            255,
            255,
            2
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            54,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            109,
            0,
            0,
            0,
            0
          ],
          [
            0,
            16,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            98,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            213,
            255,
            255,
            255,
            255,
            0,
            0,
            202,
            0,
            144,
            255
          ],
          [
            255,
            0,
            184,
            0,
            255,
            0,
            246,
            103,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003496697001537541,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002948765999462921,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30261999900176306,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48449,
            47587,
            47600,
            49696,
            47783,
            48040,
            47574,
            49853,
            47689,
            47697,
            47628,
            47599,
            47817,
            47652,
            47788,
            47450,
            47602,
            47615,
            47706,
            47509,
            47631,
            47588,
            47587,
            47620,
            47645,
            47670,
            47675,
            47623,
            47635,
            47671,
            47654,
            47703,
            47695,
            47562,
            47398,
            47595,
            47963,
            47592,
            47763,
            47660,
            48057,
            47686,
            47585,
            47725,
            47495,
            47631,
            47519,
            47550,
            47482,
            47715,
            47581,
            47791,
            47728,
            47684,
            47561,
            47568,
            47456,
            47574,
            47555,
            47476,
            47504,
            47592,
            47635
          ],
          [
            48449,
            47587,
            47600,
            49696,
            47783,
            48040,
            47574,
            49853,
            47689,
            47697,
            47628,
            47599,
            47817,
            47652,
            47788,
            47450,
            47602,
            47615,
            47706,
            47509,
            47631,
            47588,
            47587,
            47620,
            47645,
            47670,
            47675,
            47623,
            47635,
            47671,
            47654,
            47703,
            47695,
            47562,
            47398,
            47595,
            47963,
            47592,
            47763,
            47660,
            48057,
            47686,
            47585,
            47725,
            47495,
            47631,
            47519,
            47550,
            47482,
            47715,
            47581,
            47791,
            47728,
            47684,
            47561,
            47568,
            47456,
            47574,
            47555,
            47476,
            47504,
            47592,
            47635
          ]
        ],
        "eTX_errcounts": [
          [
            40709,
            27035,
            8474,
            1483,
            111,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            299,
            2881,
            16313,
            35010,
            42486,
            31376,
            13846,
            2179,
            163,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            959,
            7989,
            25763,
            39401,
            37093,
            19119,
            5113,
            675,
            22,
            0,
            0,
            0
          ],
          [
            9,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            340,
            4258,
            18053,
            36143,
            42247,
            31697,
            13112,
            3273,
            340,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            426,
            4110,
            18661,
            36294,
            43145,
            35595,
            17083,
            3305,
            265,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13404745099978754,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016236660012509674,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06912150700009079,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47890,
            47200,
            47247,
            47156,
            47122,
            47260,
            47425,
            47083,
            47295,
            47331,
            47353,
            47311,
            47319,
            47355,
            47285,
            47699,
            47350,
            47149,
            47276,
            47172,
            47186,
            47150,
            47180,
            47218,
            47345,
            47252,
            47296,
            47332,
            47349,
            47259,
            47170,
            47022,
            47276,
            47402,
            47726,
            47220,
            47414,
            47233,
            47249,
            47164,
            46918,
            47299,
            47201,
            47026,
            47239,
            47221,
            47133,
            47230,
            47244,
            47419,
            47341,
            47282,
            47301,
            47684,
            47388,
            47225,
            47160,
            47109,
            47161,
            46949,
            47228,
            47139,
            47379
          ],
          [
            47890,
            47200,
            47247,
            47156,
            47122,
            47260,
            47425,
            47083,
            47295,
            47331,
            47353,
            47311,
            47319,
            47355,
            47285,
            47699,
            47350,
            47149,
            47276,
            47172,
            47186,
            47150,
            47180,
            47218,
            47345,
            47252,
            47296,
            47332,
            47349,
            47259,
            47170,
            47022,
            47276,
            47402,
            47726,
            47220,
            47414,
            47233,
            47249,
            47164,
            46918,
            47299,
            47201,
            47026,
            47239,
            47221,
            47133,
            47230,
            47244,
            47419,
            47341,
            47282,
            47301,
            47684,
            47388,
            47225,
            47160,
            47109,
            47161,
            46949,
            47228,
            47139,
            47379
          ],
          [
            47890,
            47200,
            47247,
            47156,
            47122,
            47260,
            47425,
            47083,
            47295,
            47331,
            47353,
            47311,
            47319,
            47355,
            47285,
            47699,
            47350,
            47149,
            47276,
            47172,
            47186,
            47150,
            47180,
            47218,
            47345,
            47252,
            47296,
            47332,
            47349,
            47259,
            47170,
            47022,
            47276,
            47402,
            47726,
            47220,
            47414,
            47233,
            47249,
            47164,
            46918,
            47299,
            47201,
            47026,
            47239,
            47221,
            47133,
            47230,
            47244,
            47419,
            47341,
            47282,
            47301,
            47684,
            47388,
            47225,
            47160,
            47109,
            47161,
            46949,
            47228,
            47139,
            47379
          ],
          [
            47890,
            47200,
            47247,
            47156,
            47122,
            47260,
            47425,
            47083,
            47295,
            47331,
            47353,
            47311,
            47319,
            47355,
            47285,
            47699,
            47350,
            47149,
            47276,
            47172,
            47186,
            47150,
            47180,
            47218,
            47345,
            47252,
            47296,
            47332,
            47349,
            47259,
            47170,
            47022,
            47276,
            47402,
            47726,
            47220,
            47414,
            47233,
            47249,
            47164,
            46918,
            47299,
            47201,
            47026,
            47239,
            47221,
            47133,
            47230,
            47244,
            47419,
            47341,
            47282,
            47301,
            47684,
            47388,
            47225,
            47160,
            47109,
            47161,
            46949,
            47228,
            47139,
            47379
          ],
          [
            47890,
            47200,
            47247,
            47156,
            47122,
            47260,
            47425,
            47083,
            47295,
            47331,
            47353,
            47311,
            47319,
            47355,
            47285,
            47699,
            47350,
            47149,
            47276,
            47172,
            47186,
            47150,
            47180,
            47218,
            47345,
            47252,
            47296,
            47332,
            47349,
            47259,
            47170,
            47022,
            47276,
            47402,
            47726,
            47220,
            47414,
            47233,
            47249,
            47164,
            46918,
            47299,
            47201,
            47026,
            47239,
            47221,
            47133,
            47230,
            47244,
            47419,
            47341,
            47282,
            47301,
            47684,
            47388,
            47225,
            47160,
            47109,
            47161,
            46949,
            47228,
            47139,
            47379
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            104,
            1431,
            5144,
            11760,
            22617,
            32345,
            31793,
            25920,
            19114,
            12834,
            6886,
            2381,
            367,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            174,
            1751,
            6322,
            13668,
            25779,
            33602,
            36758,
            31524,
            21911,
            12663,
            5435,
            1437,
            166,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            200,
            1310,
            3957,
            9775,
            21157,
            35564,
            39250,
            35014,
            25895,
            16139,
            9387,
            3876,
            735,
            76,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            14,
            206,
            1718,
            5940,
            14532,
            26164,
            32217,
            35907,
            36597,
            28755,
            17149,
            7323,
            1794,
            217,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            55,
            626,
            2424,
            6239,
            13365,
            27711
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            73,
            1021,
            4882,
            15260,
            30089,
            35027,
            31858,
            23215,
            13223,
            5337,
            1228,
            108,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            110,
            1200,
            6166,
            15301,
            28855,
            35573,
            33393,
            23941,
            12658,
            3414,
            536,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            338,
            2164,
            7697,
            19871,
            33274,
            37503,
            34107,
            26032,
            16026,
            7430,
            1737,
            195,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            34,
            613,
            2920,
            8095,
            16235,
            26875,
            36004,
            34038,
            25894,
            15630,
            7311,
            1978,
            189,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            11,
            153,
            1119,
            3494,
            7727,
            17581,
            33513,
            38905,
            36853,
            31348,
            23325,
            14055,
            8112,
            3372,
            649,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            106,
            1082,
            4535,
            11874,
            24992,
            32761,
            35767,
            37178,
            32872,
            24368,
            15664,
            8024,
            2282,
            272,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            9,
            100,
            992,
            3140,
            8749
          ]
        ]
      },
      "call": {
        "duration": 0.27212474100088,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff85053d50>()\n +    where <built-in method all of numpy.ndarray object at 0xffff85053d50> = array([21, 11, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff85039490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47890, 47200, 47247, 47156, 47122, 47260, ...], [47890, 47200, 47247, 47156, 47122, 47260, ...], [..., ...], [0, 0, 3, 200, 1310, 3957, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 2, 11, 153, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff85053d50>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff85053d50> = array([21, 11, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016481160018884111,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2927534699992975,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169098512000346,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014971830023569055,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2945234149992757,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            68,
            11,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            30,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003506807999656303,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002906704001361504,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.538797761000751,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            12,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            98,
            255,
            108,
            255,
            105,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            226,
            0,
            124,
            6,
            255,
            52,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            53,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            3,
            255,
            164,
            255,
            239,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            192,
            255,
            141,
            255,
            255,
            5,
            0,
            161,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            1,
            255,
            132,
            255,
            87
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034474970016162843,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002901304000261007,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956832449999638,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48266,
            47625,
            47545,
            47599,
            47603,
            47625,
            47601,
            47484,
            47413,
            47444,
            47546,
            47365,
            47672,
            47155,
            47196,
            47465,
            47512,
            47591,
            47435,
            47562,
            47639,
            47573,
            47502,
            47444,
            47450,
            47685,
            47596,
            47734,
            48023,
            47460,
            47926,
            47499,
            47526,
            47624,
            47662,
            47647,
            47645,
            47605,
            47382,
            47662,
            47601,
            47576,
            47493,
            47435,
            47558,
            47605,
            47517,
            47571,
            47581,
            47408,
            47477,
            47503,
            47526,
            47710,
            47644,
            47564,
            47625,
            47652,
            47398,
            49195,
            47540,
            47885,
            47648
          ],
          [
            48266,
            47625,
            47545,
            47599,
            47603,
            47625,
            47601,
            47484,
            47413,
            47444,
            47546,
            47365,
            47672,
            47155,
            47196,
            47465,
            47512,
            47591,
            47435,
            47562,
            47639,
            47573,
            47502,
            47444,
            47450,
            47685,
            47596,
            47734,
            48023,
            47460,
            47926,
            47499,
            47526,
            47624,
            47662,
            47647,
            47645,
            47605,
            47382,
            47662,
            47601,
            47576,
            47493,
            47435,
            47558,
            47605,
            47517,
            47571,
            47581,
            47408,
            47477,
            47503,
            47526,
            47710,
            47644,
            47564,
            47625,
            47652,
            47398,
            49195,
            47540,
            47885,
            47648
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            325,
            3617,
            18175,
            36470,
            36494,
            18485,
            3872,
            423,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            173,
            3306,
            16953,
            35670,
            40335,
            24795,
            8441,
            1019,
            103,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            1086,
            8907,
            29367,
            42233,
            38341,
            18146,
            4504,
            449,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            152,
            2775,
            13637,
            31941,
            42162,
            38687,
            20237,
            5082,
            486,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13388262700027553,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001711387998511782,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06880124999952386,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48067,
            47516,
            47341,
            47259,
            47345,
            47405,
            47057,
            47274,
            47241,
            47371,
            47416,
            47542,
            47515,
            47398,
            47563,
            49591,
            47180,
            47380,
            47319,
            47348,
            47108,
            47415,
            47178,
            47346,
            47318,
            47196,
            47334,
            47281,
            47346,
            47360,
            47383,
            46978,
            47496,
            47490,
            47368,
            47257,
            47168,
            47376,
            47103,
            47391,
            47182,
            47128,
            47345,
            47250,
            47341,
            47491,
            47426,
            47430,
            47340,
            47300,
            47433,
            48945,
            49096,
            47225,
            47440,
            47032,
            47278,
            47368,
            47218,
            47443,
            47296,
            47360,
            47121
          ],
          [
            48067,
            47516,
            47341,
            47259,
            47345,
            47405,
            47057,
            47274,
            47241,
            47371,
            47416,
            47542,
            47515,
            47398,
            47563,
            49591,
            47180,
            47380,
            47319,
            47348,
            47108,
            47415,
            47178,
            47346,
            47318,
            47196,
            47334,
            47281,
            47346,
            47360,
            47383,
            46978,
            47496,
            47490,
            47368,
            47257,
            47168,
            47376,
            47103,
            47391,
            47182,
            47128,
            47345,
            47250,
            47341,
            47491,
            47426,
            47430,
            47340,
            47300,
            47433,
            48945,
            49096,
            47225,
            47440,
            47032,
            47278,
            47368,
            47218,
            47443,
            47296,
            47360,
            47121
          ],
          [
            48067,
            47516,
            47341,
            47259,
            47345,
            47405,
            47057,
            47274,
            47241,
            47371,
            47416,
            47542,
            47515,
            47398,
            47563,
            49591,
            47180,
            47380,
            47319,
            47348,
            47108,
            47415,
            47178,
            47346,
            47318,
            47196,
            47334,
            47281,
            47346,
            47360,
            47383,
            46978,
            47496,
            47490,
            47368,
            47257,
            47168,
            47376,
            47103,
            47391,
            47182,
            47128,
            47345,
            47250,
            47341,
            47491,
            47426,
            47430,
            47340,
            47300,
            47433,
            48945,
            49096,
            47225,
            47440,
            47032,
            47278,
            47368,
            47218,
            47443,
            47296,
            47360,
            47121
          ],
          [
            48067,
            47516,
            47341,
            47259,
            47345,
            47405,
            47057,
            47274,
            47241,
            47371,
            47416,
            47542,
            47515,
            47398,
            47563,
            49591,
            47180,
            47380,
            47319,
            47348,
            47108,
            47415,
            47178,
            47346,
            47318,
            47196,
            47334,
            47281,
            47346,
            47360,
            47383,
            46978,
            47496,
            47490,
            47368,
            47257,
            47168,
            47376,
            47103,
            47391,
            47182,
            47128,
            47345,
            47250,
            47341,
            47491,
            47426,
            47430,
            47340,
            47300,
            47433,
            48945,
            49096,
            47225,
            47440,
            47032,
            47278,
            47368,
            47218,
            47443,
            47296,
            47360,
            47121
          ],
          [
            48067,
            47516,
            47341,
            47259,
            47345,
            47405,
            47057,
            47274,
            47241,
            47371,
            47416,
            47542,
            47515,
            47398,
            47563,
            49591,
            47180,
            47380,
            47319,
            47348,
            47108,
            47415,
            47178,
            47346,
            47318,
            47196,
            47334,
            47281,
            47346,
            47360,
            47383,
            46978,
            47496,
            47490,
            47368,
            47257,
            47168,
            47376,
            47103,
            47391,
            47182,
            47128,
            47345,
            47250,
            47341,
            47491,
            47426,
            47430,
            47340,
            47300,
            47433,
            48945,
            49096,
            47225,
            47440,
            47032,
            47278,
            47368,
            47218,
            47443,
            47296,
            47360,
            47121
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            536,
            3445,
            12810,
            25944,
            34580,
            35511,
            25816,
            11487,
            2691,
            322,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            13,
            581,
            4006,
            14289,
            27178,
            35030,
            37467,
            30045,
            18038,
            7372,
            1748,
            150,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13
          ],
          [
            0,
            8,
            183,
            1578,
            6730,
            18147,
            32963,
            38692,
            33251,
            18220,
            6357,
            940,
            46,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            217,
            1742,
            10245,
            24153,
            36175,
            42219,
            40424,
            31009,
            16556,
            4137,
            498,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            336,
            2312,
            7379,
            18539,
            32828,
            38016
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            258,
            4040,
            15703,
            30209,
            36531,
            31969,
            18423,
            6527,
            1023,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            944,
            7452,
            21524,
            36867,
            41739,
            35545,
            22677,
            9517,
            1917,
            146,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            99,
            1023,
            6779,
            19861,
            35180,
            40720,
            33930,
            20801,
            8165,
            1357,
            86,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            296,
            2725,
            12054,
            24173,
            33740,
            38676,
            35203,
            25621,
            12115,
            3002,
            226,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            16,
            199,
            2093,
            8788,
            21511,
            33316,
            39135,
            35496,
            24620,
            11614,
            2956,
            333,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            23,
            579,
            3843,
            14303,
            26314,
            35995,
            40864,
            37776,
            27159,
            13107,
            3560,
            499,
            18,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            61,
            834,
            5620,
            16668,
            32028
          ]
        ]
      },
      "call": {
        "duration": 0.2707477700023446,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001501473001553677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29128793699783273,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1682042219981668,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014811330001975875,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3566464859977714,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            123,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003504137999698287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028805439978896175,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5347569699988526,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            6,
            255,
            1,
            54,
            0,
            255,
            0,
            255,
            255
          ],
          [
            95,
            0,
            22,
            0,
            7,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            31,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            204,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            3,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            13,
            255,
            59,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            2,
            3,
            0,
            255,
            6,
            255,
            255
          ],
          [
            72,
            0,
            6,
            0,
            11,
            0,
            255,
            220,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            60,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            80,
            0,
            11,
            0,
            41,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            109,
            255,
            67,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003468016999249812,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002908204998675501,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961574050023046,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48084,
            47741,
            47585,
            47588,
            47418,
            47387,
            47423,
            47613,
            47508,
            47449,
            47453,
            47649,
            47484,
            47594,
            47343,
            47536,
            47584,
            47415,
            47524,
            47615,
            47675,
            47516,
            47597,
            47587,
            47601,
            47663,
            47621,
            49430,
            47551,
            47999,
            47581,
            49796,
            47246,
            47498,
            47628,
            47300,
            47539,
            47547,
            47584,
            47360,
            47523,
            47568,
            47503,
            47243,
            47273,
            47377,
            47646,
            47469,
            47620,
            47496,
            47561,
            47396,
            47343,
            47488,
            47483,
            47511,
            47555,
            47509,
            47581,
            47399,
            49319,
            47594,
            47912
          ],
          [
            48084,
            47741,
            47585,
            47588,
            47418,
            47387,
            47423,
            47613,
            47508,
            47449,
            47453,
            47649,
            47484,
            47594,
            47343,
            47536,
            47584,
            47415,
            47524,
            47615,
            47675,
            47516,
            47597,
            47587,
            47601,
            47663,
            47621,
            49430,
            47551,
            47999,
            47581,
            49796,
            47246,
            47498,
            47628,
            47300,
            47539,
            47547,
            47584,
            47360,
            47523,
            47568,
            47503,
            47243,
            47273,
            47377,
            47646,
            47469,
            47620,
            47496,
            47561,
            47396,
            47343,
            47488,
            47483,
            47511,
            47555,
            47509,
            47581,
            47399,
            49319,
            47594,
            47912
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            514,
            6799,
            25189,
            39380,
            34334,
            14898,
            3006,
            333,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            643,
            6720,
            22230,
            37586,
            38607,
            21203,
            5161,
            771,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            0,
            0,
            0,
            102,
            1855,
            14236,
            33319,
            41192,
            29461,
            9655,
            1400,
            162,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            35,
            694,
            6124,
            21951,
            38783,
            41780,
            30311,
            12431,
            2373,
            189,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            27,
            907,
            7593,
            27142,
            40850,
            43603
          ]
        ]
      },
      "call": {
        "duration": 0.1338836770009948,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016130750009324402,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06927790099871345,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48204,
            47439,
            47352,
            47971,
            49397,
            47169,
            47260,
            47307,
            47342,
            46910,
            47391,
            47106,
            47308,
            47287,
            47255,
            47084,
            47296,
            47203,
            47397,
            47317,
            47308,
            48722,
            47615,
            47381,
            47190,
            47215,
            47233,
            47250,
            47228,
            47277,
            47263,
            46963,
            47247,
            47213,
            47358,
            47429,
            47478,
            47394,
            47424,
            47316,
            44988,
            47518,
            47097,
            47289,
            47248,
            47304,
            47254,
            47232,
            47268,
            47304,
            48017,
            47614,
            47344,
            47395,
            47222,
            47442,
            47288,
            47287,
            47385,
            47459,
            47323,
            47253,
            47190
          ],
          [
            48204,
            47439,
            47352,
            47971,
            49397,
            47169,
            47260,
            47307,
            47342,
            46910,
            47391,
            47106,
            47308,
            47287,
            47255,
            47084,
            47296,
            47203,
            47397,
            47317,
            47308,
            48722,
            47615,
            47381,
            47190,
            47215,
            47233,
            47250,
            47228,
            47277,
            47263,
            46963,
            47247,
            47213,
            47358,
            47429,
            47478,
            47394,
            47424,
            47316,
            44988,
            47518,
            47097,
            47289,
            47248,
            47304,
            47254,
            47232,
            47268,
            47304,
            48017,
            47614,
            47344,
            47395,
            47222,
            47442,
            47288,
            47287,
            47385,
            47459,
            47323,
            47253,
            47190
          ],
          [
            48204,
            47439,
            47352,
            47971,
            49397,
            47169,
            47260,
            47307,
            47342,
            46910,
            47391,
            47106,
            47308,
            47287,
            47255,
            47084,
            47296,
            47203,
            47397,
            47317,
            47308,
            48722,
            47615,
            47381,
            47190,
            47215,
            47233,
            47250,
            47228,
            47277,
            47263,
            46963,
            47247,
            47213,
            47358,
            47429,
            47478,
            47394,
            47424,
            47316,
            44988,
            47518,
            47097,
            47289,
            47248,
            47304,
            47254,
            47232,
            47268,
            47304,
            48017,
            47614,
            47344,
            47395,
            47222,
            47442,
            47288,
            47287,
            47385,
            47459,
            47323,
            47253,
            47190
          ],
          [
            48204,
            47439,
            47352,
            47971,
            49397,
            47169,
            47260,
            47307,
            47342,
            46910,
            47391,
            47106,
            47308,
            47287,
            47255,
            47084,
            47296,
            47203,
            47397,
            47317,
            47308,
            48722,
            47615,
            47381,
            47190,
            47215,
            47233,
            47250,
            47228,
            47277,
            47263,
            46963,
            47247,
            47213,
            47358,
            47429,
            47478,
            47394,
            47424,
            47316,
            44988,
            47518,
            47097,
            47289,
            47248,
            47304,
            47254,
            47232,
            47268,
            47304,
            48017,
            47614,
            47344,
            47395,
            47222,
            47442,
            47288,
            47287,
            47385,
            47459,
            47323,
            47253,
            47190
          ],
          [
            48204,
            47439,
            47352,
            47971,
            49397,
            47169,
            47260,
            47307,
            47342,
            46910,
            47391,
            47106,
            47308,
            47287,
            47255,
            47084,
            47296,
            47203,
            47397,
            47317,
            47308,
            48722,
            47615,
            47381,
            47190,
            47215,
            47233,
            47250,
            47228,
            47277,
            47263,
            46963,
            47247,
            47213,
            47358,
            47429,
            47478,
            47394,
            47424,
            47316,
            44988,
            47518,
            47097,
            47289,
            47248,
            47304,
            47254,
            47232,
            47268,
            47304,
            48017,
            47614,
            47344,
            47395,
            47222,
            47442,
            47288,
            47287,
            47385,
            47459,
            47323,
            47253,
            47190
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            147,
            1135,
            6499,
            18536,
            29713,
            33988,
            33486,
            24193,
            14745,
            6479,
            1273,
            174,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            37,
            529,
            3377,
            11513,
            22402,
            32201,
            35554,
            30598,
            19984,
            9928,
            4117,
            802,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            36,
            787,
            4846,
            15258,
            26353,
            33887,
            38086,
            36525,
            26410,
            13151,
            4508,
            552,
            28,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            198,
            1487,
            5419,
            15566,
            25784,
            35474,
            34036,
            25889,
            12850,
            3881,
            734,
            59,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            13862,
            5316,
            854,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            208,
            2690,
            11705,
            23604,
            34770,
            39432,
            32503,
            19405,
            7501,
            1516,
            140,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            17,
            381,
            4228,
            15062,
            28759,
            38044,
            34867,
            22732,
            9582,
            2045,
            225,
            8,
            0,
            0,
            0,
            0
          ],
          [
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            50,
            972,
            6980,
            19850,
            31137,
            40011,
            39605,
            33619,
            23556,
            11978,
            3571,
            380,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50,
            627,
            3591,
            13308,
            25500,
            35723,
            33941,
            22108,
            10785,
            3869,
            835,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            111,
            1239,
            6075,
            17896,
            28098,
            36398,
            39183,
            35238,
            24246,
            12864,
            3487,
            490,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            217,
            1707,
            6633,
            18127,
            29759,
            38658,
            39871,
            32313,
            21727,
            12350,
            5729,
            1649,
            104,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2709297549990879,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015232240002660546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918668300007994,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1687583350030764,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004849217999435496,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}