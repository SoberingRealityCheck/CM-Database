{
  "created": 1722034388.7530742,
  "duration": 23.56283187866211,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5086365780007327,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14843410400135326,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00135021000096458,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037848550018679816,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14819865999743342,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012690580006164964,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1327172339988465,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12174211900128284,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012995990000490565,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003774504002649337,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12128736900194781,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012584680007421412,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033249750013055746,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14699428300082218,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011904269995284267,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003297582999948645,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12020041399955517,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011527450005814899,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00330376399870147,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14673471700007212,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001176116998976795,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033628349992795847,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12029245699886815,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011683160009852145,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0043680970011337195,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002097406999382656,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001124484999309061,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003310363998025423,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001745888999721501,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010788239997054916,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032794040016597137,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004040519997943193,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034371.0405128,
            "msecs": 40.512800216674805,
            "relativeCreated": 7822.137355804443,
            "thread": 281473855914016,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5642
          }
        ]
      },
      "teardown": {
        "duration": 0.0011890159985341597,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033304049975413363,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023576630010211375,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034371.052731,
            "msecs": 52.73103713989258,
            "relativeCreated": 7834.355592727661,
            "thread": 281473855914016,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5642
          }
        ]
      },
      "teardown": {
        "duration": 0.0011668160004774109,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020655459993577097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027309909964969847,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034371.0621388,
            "msecs": 62.13879585266113,
            "relativeCreated": 7843.76335144043,
            "thread": 281473855914016,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5642
          }
        ]
      },
      "teardown": {
        "duration": 0.0010286629985785112,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002039295999566093,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003416477000428131,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034371.0715113,
            "msecs": 71.51126861572266,
            "relativeCreated": 7853.135824203491,
            "thread": 281473855914016,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5642
          }
        ]
      },
      "teardown": {
        "duration": 0.001078733999747783,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033118339997599833,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467105960000481,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011940270014747512,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033143840009870473,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12042556899905321,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012014669991913252,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17980484500003513,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14784363099897746,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012525579986686353,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015209499000775395,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1213979809981538,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012393570032145362,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.847874255003262,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            11,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            46,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            9,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003565100003470434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029026550000708085,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9039257360018382,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            16,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            227,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            31,
            255,
            255,
            255,
            14
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            62,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            138,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            100,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            243,
            255,
            255,
            255,
            255,
            0,
            0,
            129,
            0,
            86,
            255
          ],
          [
            255,
            0,
            160,
            0,
            255,
            0,
            230,
            98,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003445487000135472,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028891850015497766,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30292042500150274,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48177,
            47666,
            47747,
            47769,
            47640,
            47561,
            47469,
            47519,
            47621,
            47654,
            47732,
            47084,
            47218,
            47457,
            47515,
            47379,
            47570,
            47513,
            47367,
            47539,
            47721,
            47647,
            47689,
            47695,
            47601,
            47549,
            47660,
            47542,
            49507,
            47696,
            47843,
            47570,
            50407,
            47517,
            47463,
            47607,
            47537,
            47617,
            47665,
            47574,
            47634,
            47737,
            47624,
            47559,
            47643,
            47660,
            47652,
            47695,
            47557,
            47611,
            47582,
            47642,
            47443,
            47343,
            47561,
            47547,
            47620,
            47524,
            47535,
            47960,
            47599,
            48001,
            47405
          ],
          [
            48177,
            47666,
            47747,
            47769,
            47640,
            47561,
            47469,
            47519,
            47621,
            47654,
            47732,
            47084,
            47218,
            47457,
            47515,
            47379,
            47570,
            47513,
            47367,
            47539,
            47721,
            47647,
            47689,
            47695,
            47601,
            47549,
            47660,
            47542,
            49507,
            47696,
            47843,
            47570,
            50407,
            47517,
            47463,
            47607,
            47537,
            47617,
            47665,
            47574,
            47634,
            47737,
            47624,
            47559,
            47643,
            47660,
            47652,
            47695,
            47557,
            47611,
            47582,
            47642,
            47443,
            47343,
            47561,
            47547,
            47620,
            47524,
            47535,
            47960,
            47599,
            48001,
            47405
          ]
        ],
        "eTX_errcounts": [
          [
            40882,
            26556,
            8165,
            1330,
            130,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            175,
            3269,
            16633,
            34999,
            42281,
            32745,
            14508,
            2364,
            170,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            29,
            928,
            7266,
            25581,
            40602,
            37063,
            18844,
            5097,
            582,
            18,
            0,
            0,
            0
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            359,
            4081,
            17611,
            36194,
            42181,
            31394,
            13352,
            3364,
            328,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            360,
            4257,
            19378,
            36312,
            42726,
            35676,
            17318,
            3280,
            310,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13445649200002663,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001622766001673881,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06895278899901314,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47916,
            47257,
            47258,
            47110,
            47275,
            46799,
            47134,
            47172,
            47171,
            47201,
            47338,
            47239,
            47069,
            47157,
            47601,
            47286,
            47059,
            47137,
            47195,
            47098,
            47115,
            47061,
            47266,
            47159,
            47160,
            47022,
            47303,
            47128,
            47045,
            47242,
            46925,
            47317,
            47228,
            49351,
            47481,
            47271,
            47205,
            47292,
            47185,
            47173,
            47270,
            47301,
            47400,
            47145,
            47236,
            47229,
            47210,
            47321,
            47374,
            47305,
            47345,
            47089,
            47325,
            47578,
            47199,
            47227,
            47269,
            47269,
            47234,
            47263,
            47175,
            47234,
            47230
          ],
          [
            47916,
            47257,
            47258,
            47110,
            47275,
            46799,
            47134,
            47172,
            47171,
            47201,
            47338,
            47239,
            47069,
            47157,
            47601,
            47286,
            47059,
            47137,
            47195,
            47098,
            47115,
            47061,
            47266,
            47159,
            47160,
            47022,
            47303,
            47128,
            47045,
            47242,
            46925,
            47317,
            47228,
            49351,
            47481,
            47271,
            47205,
            47292,
            47185,
            47173,
            47270,
            47301,
            47400,
            47145,
            47236,
            47229,
            47210,
            47321,
            47374,
            47305,
            47345,
            47089,
            47325,
            47578,
            47199,
            47227,
            47269,
            47269,
            47234,
            47263,
            47175,
            47234,
            47230
          ],
          [
            47916,
            47257,
            47258,
            47110,
            47275,
            46799,
            47134,
            47172,
            47171,
            47201,
            47338,
            47239,
            47069,
            47157,
            47601,
            47286,
            47059,
            47137,
            47195,
            47098,
            47115,
            47061,
            47266,
            47159,
            47160,
            47022,
            47303,
            47128,
            47045,
            47242,
            46925,
            47317,
            47228,
            49351,
            47481,
            47271,
            47205,
            47292,
            47185,
            47173,
            47270,
            47301,
            47400,
            47145,
            47236,
            47229,
            47210,
            47321,
            47374,
            47305,
            47345,
            47089,
            47325,
            47578,
            47199,
            47227,
            47269,
            47269,
            47234,
            47263,
            47175,
            47234,
            47230
          ],
          [
            47916,
            47257,
            47258,
            47110,
            47275,
            46799,
            47134,
            47172,
            47171,
            47201,
            47338,
            47239,
            47069,
            47157,
            47601,
            47286,
            47059,
            47137,
            47195,
            47098,
            47115,
            47061,
            47266,
            47159,
            47160,
            47022,
            47303,
            47128,
            47045,
            47242,
            46925,
            47317,
            47228,
            49351,
            47481,
            47271,
            47205,
            47292,
            47185,
            47173,
            47270,
            47301,
            47400,
            47145,
            47236,
            47229,
            47210,
            47321,
            47374,
            47305,
            47345,
            47089,
            47325,
            47578,
            47199,
            47227,
            47269,
            47269,
            47234,
            47263,
            47175,
            47234,
            47230
          ],
          [
            47916,
            47257,
            47258,
            47110,
            47275,
            46799,
            47134,
            47172,
            47171,
            47201,
            47338,
            47239,
            47069,
            47157,
            47601,
            47286,
            47059,
            47137,
            47195,
            47098,
            47115,
            47061,
            47266,
            47159,
            47160,
            47022,
            47303,
            47128,
            47045,
            47242,
            46925,
            47317,
            47228,
            49351,
            47481,
            47271,
            47205,
            47292,
            47185,
            47173,
            47270,
            47301,
            47400,
            47145,
            47236,
            47229,
            47210,
            47321,
            47374,
            47305,
            47345,
            47089,
            47325,
            47578,
            47199,
            47227,
            47269,
            47269,
            47234,
            47263,
            47175,
            47234,
            47230
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            154,
            1229,
            4641,
            12225,
            22996,
            31706,
            31586,
            26022,
            18668,
            12797,
            7048,
            2333,
            426,
            56,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            188,
            1649,
            5863,
            13073,
            24864,
            33296,
            36706,
            31619,
            22253,
            12929,
            5809,
            1249,
            125,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            4,
            138,
            1241,
            4082,
            9584,
            20804,
            35217,
            39212,
            35169,
            26639,
            16650,
            9325,
            4043,
            904,
            72,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            175,
            1676,
            5991,
            14774,
            25759,
            31839,
            35285,
            36318,
            29879,
            18522,
            8267,
            2110,
            342,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            69,
            537,
            2217,
            6047,
            13772,
            27016
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            77,
            1006,
            5215,
            16126,
            30441,
            35158,
            32006,
            23905,
            13769,
            5889,
            1495,
            118,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            113,
            1274,
            6123,
            15142,
            29092,
            35173,
            33973,
            24631,
            13334,
            3901,
            691,
            22,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            264,
            2217,
            7910,
            19175,
            33299,
            37227,
            33975,
            26382,
            16297,
            7296,
            1909,
            303,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            39,
            535,
            2723,
            7871,
            15988,
            26792,
            35924,
            34399,
            26163,
            16063,
            7750,
            2037,
            207,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            9,
            139,
            1151,
            3551,
            7540,
            17883,
            32980,
            39207,
            36913,
            30572,
            23160,
            14299,
            8449,
            3509,
            614,
            49,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            138,
            1096,
            4481,
            12359,
            24250,
            32353,
            34722,
            37094,
            33846,
            24992,
            16313,
            8343,
            2415,
            303,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            102,
            864,
            3241,
            8165
          ]
        ]
      },
      "call": {
        "duration": 0.27165492700078175,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa8434ed0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa8434ed0> = array([21, 12, 18, 21, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa86df4f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47916, 47257, 47258, 47110, 47275, 46799, ...], [47916, 47257, 47258, 47110, 47275, 46799, ...], [...0, ...], [0, 1, 4, 138, 1241, 4082, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 9, 139, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa8434ed0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa8434ed0> = array([21, 12, 18, 21, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016088759984995704,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29298321200258215,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170613540998602,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014372420009749476,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3055827150019468,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            30,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            231,
            66,
            7,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035685199982253835,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029113849996065255,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.534228799999255,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            17,
            255,
            240,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            76,
            255,
            138,
            255,
            114,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            194,
            0,
            124,
            4,
            255,
            42,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            89,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            3,
            255,
            161,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            191,
            255,
            255,
            11,
            0,
            159,
            0,
            255,
            255
          ],
          [
            255,
            1,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            103,
            255,
            146
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003446206999797141,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028646739992836956,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29599620999943,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48297,
            47690,
            47693,
            47514,
            47522,
            48013,
            47597,
            47950,
            47630,
            47486,
            47510,
            47447,
            47641,
            47528,
            47578,
            47498,
            47578,
            47678,
            47741,
            47551,
            47701,
            47526,
            47492,
            47580,
            47721,
            47593,
            47586,
            47517,
            47539,
            47733,
            47562,
            47544,
            47544,
            47698,
            47973,
            47800,
            48265,
            47750,
            47265,
            47143,
            47457,
            47680,
            47725,
            47695,
            47560,
            47532,
            47429,
            47476,
            47517,
            47518,
            47439,
            47573,
            47465,
            47695,
            47810,
            47700,
            47595,
            47661,
            47544,
            47676,
            47673,
            47642,
            47779
          ],
          [
            48297,
            47690,
            47693,
            47514,
            47522,
            48013,
            47597,
            47950,
            47630,
            47486,
            47510,
            47447,
            47641,
            47528,
            47578,
            47498,
            47578,
            47678,
            47741,
            47551,
            47701,
            47526,
            47492,
            47580,
            47721,
            47593,
            47586,
            47517,
            47539,
            47733,
            47562,
            47544,
            47544,
            47698,
            47973,
            47800,
            48265,
            47750,
            47265,
            47143,
            47457,
            47680,
            47725,
            47695,
            47560,
            47532,
            47429,
            47476,
            47517,
            47518,
            47439,
            47573,
            47465,
            47695,
            47810,
            47700,
            47595,
            47661,
            47544,
            47676,
            47673,
            47642,
            47779
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            220,
            3739,
            17877,
            36792,
            36972,
            18860,
            4025,
            409,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            156,
            2898,
            16382,
            34820,
            39781,
            26009,
            8556,
            1019,
            80,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            858,
            8306,
            28631,
            42035,
            38935,
            18466,
            4639,
            411,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            183,
            2325,
            13483,
            31670,
            42851,
            38546,
            20071,
            5059,
            505,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13444947199968738,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015945960003591608,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06888861900006304,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47984,
            47270,
            47229,
            47115,
            47269,
            47272,
            47311,
            47241,
            47396,
            47282,
            47318,
            47376,
            47653,
            47167,
            47471,
            49159,
            49398,
            47303,
            46836,
            47237,
            47265,
            47159,
            47235,
            47270,
            47181,
            47120,
            47325,
            47381,
            47333,
            47184,
            47227,
            46986,
            47643,
            47291,
            47921,
            47329,
            47391,
            47323,
            47134,
            47189,
            47326,
            47179,
            47371,
            46830,
            47525,
            47306,
            47276,
            47280,
            47243,
            47145,
            47430,
            47148,
            47550,
            49907,
            47296,
            47141,
            47453,
            47109,
            47356,
            47237,
            47398,
            47231,
            47377
          ],
          [
            47984,
            47270,
            47229,
            47115,
            47269,
            47272,
            47311,
            47241,
            47396,
            47282,
            47318,
            47376,
            47653,
            47167,
            47471,
            49159,
            49398,
            47303,
            46836,
            47237,
            47265,
            47159,
            47235,
            47270,
            47181,
            47120,
            47325,
            47381,
            47333,
            47184,
            47227,
            46986,
            47643,
            47291,
            47921,
            47329,
            47391,
            47323,
            47134,
            47189,
            47326,
            47179,
            47371,
            46830,
            47525,
            47306,
            47276,
            47280,
            47243,
            47145,
            47430,
            47148,
            47550,
            49907,
            47296,
            47141,
            47453,
            47109,
            47356,
            47237,
            47398,
            47231,
            47377
          ],
          [
            47984,
            47270,
            47229,
            47115,
            47269,
            47272,
            47311,
            47241,
            47396,
            47282,
            47318,
            47376,
            47653,
            47167,
            47471,
            49159,
            49398,
            47303,
            46836,
            47237,
            47265,
            47159,
            47235,
            47270,
            47181,
            47120,
            47325,
            47381,
            47333,
            47184,
            47227,
            46986,
            47643,
            47291,
            47921,
            47329,
            47391,
            47323,
            47134,
            47189,
            47326,
            47179,
            47371,
            46830,
            47525,
            47306,
            47276,
            47280,
            47243,
            47145,
            47430,
            47148,
            47550,
            49907,
            47296,
            47141,
            47453,
            47109,
            47356,
            47237,
            47398,
            47231,
            47377
          ],
          [
            47984,
            47270,
            47229,
            47115,
            47269,
            47272,
            47311,
            47241,
            47396,
            47282,
            47318,
            47376,
            47653,
            47167,
            47471,
            49159,
            49398,
            47303,
            46836,
            47237,
            47265,
            47159,
            47235,
            47270,
            47181,
            47120,
            47325,
            47381,
            47333,
            47184,
            47227,
            46986,
            47643,
            47291,
            47921,
            47329,
            47391,
            47323,
            47134,
            47189,
            47326,
            47179,
            47371,
            46830,
            47525,
            47306,
            47276,
            47280,
            47243,
            47145,
            47430,
            47148,
            47550,
            49907,
            47296,
            47141,
            47453,
            47109,
            47356,
            47237,
            47398,
            47231,
            47377
          ],
          [
            47984,
            47270,
            47229,
            47115,
            47269,
            47272,
            47311,
            47241,
            47396,
            47282,
            47318,
            47376,
            47653,
            47167,
            47471,
            49159,
            49398,
            47303,
            46836,
            47237,
            47265,
            47159,
            47235,
            47270,
            47181,
            47120,
            47325,
            47381,
            47333,
            47184,
            47227,
            46986,
            47643,
            47291,
            47921,
            47329,
            47391,
            47323,
            47134,
            47189,
            47326,
            47179,
            47371,
            46830,
            47525,
            47306,
            47276,
            47280,
            47243,
            47145,
            47430,
            47148,
            47550,
            49907,
            47296,
            47141,
            47453,
            47109,
            47356,
            47237,
            47398,
            47231,
            47377
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            34,
            489,
            2964,
            12410,
            25306,
            33793,
            35447,
            25770,
            12402,
            2869,
            229,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            544,
            3825,
            13595,
            26373,
            35013,
            37210,
            30023,
            18498,
            7039,
            1552,
            139,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23
          ],
          [
            1,
            4,
            180,
            1521,
            6179,
            17273,
            32960,
            38756,
            34054,
            19077,
            6306,
            769,
            83,
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            142,
            1823,
            10313,
            24149,
            35804,
            42726,
            40944,
            31632,
            17417,
            4329,
            484,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            338,
            2133,
            7520,
            18480,
            32370,
            38638
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            366,
            3762,
            15751,
            29714,
            36614,
            32648,
            18625,
            6702,
            1300,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            21,
            1063,
            7296,
            20468,
            37457,
            41677,
            35361,
            22402,
            9705,
            2046,
            125,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            108,
            935,
            6434,
            19343,
            34618,
            40776,
            36073,
            21276,
            7729,
            1313,
            114,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            269,
            2713,
            11546,
            24089,
            33557,
            38861,
            35527,
            26352,
            11700,
            2985,
            162,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            11,
            207,
            1840,
            8429,
            21144,
            33259,
            39145,
            36386,
            24648,
            12175,
            3132,
            445,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            672,
            3779,
            14009,
            26558,
            35672,
            40996,
            38152,
            27817,
            13764,
            3927,
            571,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            78,
            959,
            5536,
            16108,
            31383
          ]
        ]
      },
      "call": {
        "duration": 0.27076780699644587,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001488513000367675,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29176830600044923,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703000650013564,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014426120033022016,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3444270420004614,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            118,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003478007001831429,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028909840002597775,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.536109362001298,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            4,
            255,
            11,
            255,
            0,
            55,
            0,
            255,
            1,
            255,
            255
          ],
          [
            70,
            0,
            11,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            22,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            198,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            30,
            0,
            5,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            10,
            255,
            54,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            1,
            0,
            255,
            2,
            255,
            255
          ],
          [
            86,
            0,
            1,
            0,
            3,
            0,
            255,
            228,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            74,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            84,
            0,
            7,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            78,
            255,
            66,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034473470004741102,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002890473999286769,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2964345799991861,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48202,
            47828,
            47930,
            47939,
            47642,
            47744,
            47972,
            47635,
            47707,
            47784,
            47604,
            47542,
            47571,
            47432,
            47541,
            47745,
            47549,
            47505,
            47531,
            47519,
            47722,
            47945,
            47490,
            47566,
            47692,
            47537,
            47809,
            47655,
            47591,
            47669,
            47808,
            47657,
            47734,
            49548,
            47377,
            47605,
            47584,
            47790,
            47868,
            47464,
            47623,
            47679,
            47790,
            47885,
            47849,
            47688,
            47786,
            47590,
            47617,
            47693,
            47626,
            47537,
            47512,
            47570,
            47532,
            47489,
            47847,
            47664,
            47598,
            47583,
            47510,
            47724,
            47824
          ],
          [
            48202,
            47828,
            47930,
            47939,
            47642,
            47744,
            47972,
            47635,
            47707,
            47784,
            47604,
            47542,
            47571,
            47432,
            47541,
            47745,
            47549,
            47505,
            47531,
            47519,
            47722,
            47945,
            47490,
            47566,
            47692,
            47537,
            47809,
            47655,
            47591,
            47669,
            47808,
            47657,
            47734,
            49548,
            47377,
            47605,
            47584,
            47790,
            47868,
            47464,
            47623,
            47679,
            47790,
            47885,
            47849,
            47688,
            47786,
            47590,
            47617,
            47693,
            47626,
            47537,
            47512,
            47570,
            47532,
            47489,
            47847,
            47664,
            47598,
            47583,
            47510,
            47724,
            47824
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            513,
            6332,
            24569,
            39091,
            34402,
            15896,
            3129,
            359,
            11,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            611,
            6230,
            22436,
            37743,
            38081,
            21749,
            5654,
            652,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            0,
            0,
            0,
            0,
            113,
            2184,
            13514,
            32917,
            40743,
            29410,
            9537,
            1568,
            165,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            531,
            5661,
            22883,
            38298,
            41618,
            30240,
            12348,
            2569,
            227,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            999,
            7794,
            25288,
            40311,
            43413
          ]
        ]
      },
      "call": {
        "duration": 0.13462332600101945,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016086060022644233,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06908371299869032,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47788,
            47468,
            47350,
            47276,
            47180,
            47305,
            47328,
            47125,
            47247,
            47165,
            47272,
            47264,
            47130,
            47220,
            46926,
            47302,
            46896,
            47224,
            47309,
            47397,
            47369,
            47233,
            47156,
            47762,
            47580,
            47150,
            47136,
            47303,
            47340,
            47289,
            47051,
            47109,
            47299,
            47233,
            47174,
            47329,
            47285,
            47382,
            47270,
            47309,
            47511,
            47014,
            47362,
            47131,
            47378,
            47166,
            47106,
            47141,
            47279,
            47312,
            47207,
            47162,
            47086,
            47139,
            47318,
            47194,
            47215,
            47239,
            47248,
            47341,
            49332,
            48744,
            47137
          ],
          [
            47788,
            47468,
            47350,
            47276,
            47180,
            47305,
            47328,
            47125,
            47247,
            47165,
            47272,
            47264,
            47130,
            47220,
            46926,
            47302,
            46896,
            47224,
            47309,
            47397,
            47369,
            47233,
            47156,
            47762,
            47580,
            47150,
            47136,
            47303,
            47340,
            47289,
            47051,
            47109,
            47299,
            47233,
            47174,
            47329,
            47285,
            47382,
            47270,
            47309,
            47511,
            47014,
            47362,
            47131,
            47378,
            47166,
            47106,
            47141,
            47279,
            47312,
            47207,
            47162,
            47086,
            47139,
            47318,
            47194,
            47215,
            47239,
            47248,
            47341,
            49332,
            48744,
            47137
          ],
          [
            47788,
            47468,
            47350,
            47276,
            47180,
            47305,
            47328,
            47125,
            47247,
            47165,
            47272,
            47264,
            47130,
            47220,
            46926,
            47302,
            46896,
            47224,
            47309,
            47397,
            47369,
            47233,
            47156,
            47762,
            47580,
            47150,
            47136,
            47303,
            47340,
            47289,
            47051,
            47109,
            47299,
            47233,
            47174,
            47329,
            47285,
            47382,
            47270,
            47309,
            47511,
            47014,
            47362,
            47131,
            47378,
            47166,
            47106,
            47141,
            47279,
            47312,
            47207,
            47162,
            47086,
            47139,
            47318,
            47194,
            47215,
            47239,
            47248,
            47341,
            49332,
            48744,
            47137
          ],
          [
            47788,
            47468,
            47350,
            47276,
            47180,
            47305,
            47328,
            47125,
            47247,
            47165,
            47272,
            47264,
            47130,
            47220,
            46926,
            47302,
            46896,
            47224,
            47309,
            47397,
            47369,
            47233,
            47156,
            47762,
            47580,
            47150,
            47136,
            47303,
            47340,
            47289,
            47051,
            47109,
            47299,
            47233,
            47174,
            47329,
            47285,
            47382,
            47270,
            47309,
            47511,
            47014,
            47362,
            47131,
            47378,
            47166,
            47106,
            47141,
            47279,
            47312,
            47207,
            47162,
            47086,
            47139,
            47318,
            47194,
            47215,
            47239,
            47248,
            47341,
            49332,
            48744,
            47137
          ],
          [
            47788,
            47468,
            47350,
            47276,
            47180,
            47305,
            47328,
            47125,
            47247,
            47165,
            47272,
            47264,
            47130,
            47220,
            46926,
            47302,
            46896,
            47224,
            47309,
            47397,
            47369,
            47233,
            47156,
            47762,
            47580,
            47150,
            47136,
            47303,
            47340,
            47289,
            47051,
            47109,
            47299,
            47233,
            47174,
            47329,
            47285,
            47382,
            47270,
            47309,
            47511,
            47014,
            47362,
            47131,
            47378,
            47166,
            47106,
            47141,
            47279,
            47312,
            47207,
            47162,
            47086,
            47139,
            47318,
            47194,
            47215,
            47239,
            47248,
            47341,
            49332,
            48744,
            47137
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            122,
            1054,
            6532,
            18902,
            29429,
            33899,
            32584,
            24190,
            14945,
            6588,
            1171,
            167,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            26,
            517,
            3067,
            10164,
            21160,
            30940,
            35229,
            30943,
            20301,
            10674,
            4364,
            780,
            51,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            65,
            695,
            4666,
            15498,
            26360,
            33784,
            38058,
            37044,
            27138,
            13279,
            4312,
            602,
            38,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            144,
            1386,
            5206,
            14753,
            27032,
            34512,
            34947,
            26516,
            13369,
            4467,
            997,
            67,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            14634,
            5554,
            850,
            75,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            193,
            2395,
            11357,
            23629,
            35129,
            39509,
            32056,
            20229,
            8732,
            1855,
            174,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            345,
            4108,
            13971,
            27651,
            37647,
            35501,
            23113,
            9597,
            2187,
            235,
            16,
            0,
            0,
            0,
            0
          ],
          [
            64,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            63,
            1091,
            7434,
            19772,
            31088,
            38540,
            39152,
            34167,
            24179,
            12155,
            3390,
            402,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            42,
            460,
            3208,
            11953,
            24929,
            35572,
            34164,
            22725,
            10915,
            3944,
            808,
            100,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            92,
            1171,
            6295,
            17618,
            28152,
            36426,
            38738,
            35161,
            23703,
            13109,
            3544,
            574,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            158,
            1518,
            6665,
            16801,
            29511,
            38393,
            40125,
            33463,
            22697,
            13427,
            6063,
            1784,
            133,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2707258649970754,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015071439993334934,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2922084450001421,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.171391998999752,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045664, 10011416), (411644, 411644), (40048328, 10012082))\nassert ((40045664 > 0 and 10011416 == 0\n  +10011416\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffffa86df100>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffffa852c1c0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffffa87f5430>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045664, 10011416), (411644, 411644), (40048328, 10012082))\nE       assert ((40045664 > 0 and 10011416 == 0\nE         +10011416\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004896228998404695,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}