{
  "created": 1722033331.1376526,
  "duration": 23.514402151107788,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5068057690004935,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14803730100175017,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013261499989312142,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038201349998416845,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14777374600089388,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012626080024347175,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13253784700282267,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1213909190009872,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012786890001734719,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038228050034376793,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1228335909981979,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012852880026912317,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033520050019433256,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14632621399869095,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001195406002807431,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003367785000591539,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11968382199847838,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001180195999040734,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003368893998413114,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14622709099785425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011565259992494248,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033815550013969187,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11974805299905711,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001154035999206826,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004411959002027288,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020948269993823487,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001107744003093103,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003323204000480473,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017003169996314682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011294949981675018,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033360750021529384,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004016098999272799,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033313.453963,
            "msecs": 453.963041305542,
            "relativeCreated": 7805.946350097656,
            "thread": 281473555693600,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5141
          }
        ]
      },
      "teardown": {
        "duration": 0.0012607179996848572,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003385664997040294,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024362949989154004,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033313.4662366,
            "msecs": 466.2365913391113,
            "relativeCreated": 7818.219900131226,
            "thread": 281473555693600,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5141
          }
        ]
      },
      "teardown": {
        "duration": 0.0011340559976815712,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002067976001853822,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026720399982878007,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033313.4757214,
            "msecs": 475.7213592529297,
            "relativeCreated": 7827.704668045044,
            "thread": 281473555693600,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5141
          }
        ]
      },
      "teardown": {
        "duration": 0.00107735400160891,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002106676998664625,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003419145999941975,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033313.485112,
            "msecs": 485.11195182800293,
            "relativeCreated": 7837.095260620117,
            "thread": 281473555693600,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5141
          }
        ]
      },
      "teardown": {
        "duration": 0.00107171399940853,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033802049983933102,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14618296100161388,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011788160009018611,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003345973997056717,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12009704999945825,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011878160003107041,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17952315200091107,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14747826999882818,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012544480014184956,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01521249800134683,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12107261200071662,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00125249799748417,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8448588620012742,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            9,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            51,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            22,
            135,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003544668998074485,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028695639994111843,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8930024670007697,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            12
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            45,
            255,
            255,
            255,
            9
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            31,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            55,
            0,
            0,
            0,
            0
          ],
          [
            0,
            19,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            197,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            126,
            255,
            255,
            255,
            255,
            0,
            0,
            131,
            0,
            91,
            255
          ],
          [
            255,
            0,
            110,
            0,
            255,
            0,
            255,
            114,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003474706998531474,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029637349980475847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3036032400013937,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\nFailed on attempt 0 at write 0 of 279.\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48359,
            47715,
            47493,
            47492,
            47472,
            47576,
            47629,
            47830,
            47570,
            47663,
            47447,
            47345,
            47506,
            47752,
            47629,
            48011,
            47592,
            48032,
            47605,
            48276,
            47650,
            47468,
            47630,
            47464,
            47619,
            47814,
            47530,
            47516,
            47712,
            47498,
            47500,
            47576,
            47538,
            47425,
            47378,
            47585,
            47447,
            47761,
            47674,
            47655,
            47630,
            47454,
            47481,
            47674,
            47609,
            47638,
            47609,
            47518,
            49217,
            47796,
            47897,
            47482,
            49946,
            47562,
            47323,
            47881,
            47554,
            47684,
            47520,
            47660,
            47070,
            47354,
            47589
          ],
          [
            48359,
            47715,
            47493,
            47492,
            47472,
            47576,
            47629,
            47830,
            47570,
            47663,
            47447,
            47345,
            47506,
            47752,
            47629,
            48011,
            47592,
            48032,
            47605,
            48276,
            47650,
            47468,
            47630,
            47464,
            47619,
            47814,
            47530,
            47516,
            47712,
            47498,
            47500,
            47576,
            47538,
            47425,
            47378,
            47585,
            47447,
            47761,
            47674,
            47655,
            47630,
            47454,
            47481,
            47674,
            47609,
            47638,
            47609,
            47518,
            49217,
            47796,
            47897,
            47482,
            49946,
            47562,
            47323,
            47881,
            47554,
            47684,
            47520,
            47660,
            47070,
            47354,
            47589
          ]
        ],
        "eTX_errcounts": [
          [
            40761,
            25929,
            7852,
            1265,
            40,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            254,
            3221,
            16305,
            35441,
            42253,
            31158,
            14024,
            2640,
            103,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            31,
            872,
            8784,
            26114,
            40781,
            37450,
            19420,
            5026,
            467,
            15,
            0,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            276,
            4006,
            18455,
            35948,
            42162,
            31653,
            13101,
            2860,
            240,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            396,
            4306,
            19827,
            38040,
            43097,
            35412,
            16408,
            3542,
            289,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13402483000027132,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016178459991351701,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06902469499982544,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48699,
            49939,
            47346,
            47305,
            47099,
            47430,
            47386,
            47373,
            47233,
            47533,
            47201,
            47305,
            47106,
            47380,
            47435,
            47431,
            47382,
            47200,
            47338,
            47625,
            47354,
            47230,
            47324,
            47422,
            47310,
            47390,
            46835,
            47268,
            47214,
            47239,
            47208,
            47263,
            47422,
            47328,
            47356,
            47575,
            47358,
            47613,
            47684,
            47415,
            47300,
            47195,
            47229,
            47286,
            47427,
            47259,
            47094,
            47473,
            47242,
            47412,
            47367,
            47481,
            47379,
            47445,
            47118,
            47784,
            47311,
            47781,
            47424,
            47519,
            47308,
            47322,
            47178
          ],
          [
            48699,
            49939,
            47346,
            47305,
            47099,
            47430,
            47386,
            47373,
            47233,
            47533,
            47201,
            47305,
            47106,
            47380,
            47435,
            47431,
            47382,
            47200,
            47338,
            47625,
            47354,
            47230,
            47324,
            47422,
            47310,
            47390,
            46835,
            47268,
            47214,
            47239,
            47208,
            47263,
            47422,
            47328,
            47356,
            47575,
            47358,
            47613,
            47684,
            47415,
            47300,
            47195,
            47229,
            47286,
            47427,
            47259,
            47094,
            47473,
            47242,
            47412,
            47367,
            47481,
            47379,
            47445,
            47118,
            47784,
            47311,
            47781,
            47424,
            47519,
            47308,
            47322,
            47178
          ],
          [
            48699,
            49939,
            47346,
            47305,
            47099,
            47430,
            47386,
            47373,
            47233,
            47533,
            47201,
            47305,
            47106,
            47380,
            47435,
            47431,
            47382,
            47200,
            47338,
            47625,
            47354,
            47230,
            47324,
            47422,
            47310,
            47390,
            46835,
            47268,
            47214,
            47239,
            47208,
            47263,
            47422,
            47328,
            47356,
            47575,
            47358,
            47613,
            47684,
            47415,
            47300,
            47195,
            47229,
            47286,
            47427,
            47259,
            47094,
            47473,
            47242,
            47412,
            47367,
            47481,
            47379,
            47445,
            47118,
            47784,
            47311,
            47781,
            47424,
            47519,
            47308,
            47322,
            47178
          ],
          [
            48699,
            49939,
            47346,
            47305,
            47099,
            47430,
            47386,
            47373,
            47233,
            47533,
            47201,
            47305,
            47106,
            47380,
            47435,
            47431,
            47382,
            47200,
            47338,
            47625,
            47354,
            47230,
            47324,
            47422,
            47310,
            47390,
            46835,
            47268,
            47214,
            47239,
            47208,
            47263,
            47422,
            47328,
            47356,
            47575,
            47358,
            47613,
            47684,
            47415,
            47300,
            47195,
            47229,
            47286,
            47427,
            47259,
            47094,
            47473,
            47242,
            47412,
            47367,
            47481,
            47379,
            47445,
            47118,
            47784,
            47311,
            47781,
            47424,
            47519,
            47308,
            47322,
            47178
          ],
          [
            48699,
            49939,
            47346,
            47305,
            47099,
            47430,
            47386,
            47373,
            47233,
            47533,
            47201,
            47305,
            47106,
            47380,
            47435,
            47431,
            47382,
            47200,
            47338,
            47625,
            47354,
            47230,
            47324,
            47422,
            47310,
            47390,
            46835,
            47268,
            47214,
            47239,
            47208,
            47263,
            47422,
            47328,
            47356,
            47575,
            47358,
            47613,
            47684,
            47415,
            47300,
            47195,
            47229,
            47286,
            47427,
            47259,
            47094,
            47473,
            47242,
            47412,
            47367,
            47481,
            47379,
            47445,
            47118,
            47784,
            47311,
            47781,
            47424,
            47519,
            47308,
            47322,
            47178
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            57,
            655,
            4248,
            14498,
            28422,
            35546,
            35337,
            27703,
            18274,
            9974,
            2834,
            392,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            56,
            873,
            4880,
            14977,
            28073,
            34620,
            36854,
            30794,
            21855,
            12016,
            4292,
            924,
            102,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            9,
            249,
            2204,
            11009,
            22954,
            33502,
            38537,
            34183,
            23733,
            12651,
            4589,
            872,
            106,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            396,
            3490,
            14026,
            26637,
            35201,
            39602,
            36300,
            25547,
            18580,
            9336,
            2458,
            350,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            80,
            761,
            4481,
            14118,
            25674
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            82,
            1352,
            7373,
            20513,
            31150,
            33885,
            30206,
            21753,
            11128,
            3489,
            544,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            65,
            1263,
            8554,
            21010,
            33087,
            35529,
            31175,
            24346,
            16463,
            6651,
            1522,
            80,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            166,
            1666,
            9391,
            21556,
            31349,
            33961,
            31280,
            23057,
            13575,
            5177,
            1043,
            86,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            195,
            2132,
            8986,
            21554,
            30421,
            34251,
            30975,
            24291,
            17295,
            8170,
            2898,
            383,
            19,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            1,
            31,
            375,
            2525,
            10504,
            21877,
            31818,
            39204,
            39369,
            30051,
            20689,
            11388,
            3216,
            450,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            605,
            3883,
            12517,
            23656,
            34225,
            40749,
            36922,
            28193,
            20129,
            11921,
            5134,
            1987,
            475,
            74,
            4,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            121,
            1386,
            7550
          ]
        ]
      },
      "call": {
        "duration": 0.2721791019976081,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff968a3cf0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff968a3cf0> = array([14, 12, 15, 13,  9]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9688e4c0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48699, 49939, 47346, 47305, 47099, 47430, ...], [48699, 49939, 47346, 47305, 47099, 47430, ...], [... 0, 0, ...], [0, 0, 0, 9, 249, 2204, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 1, 31, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff968a3cf0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff968a3cf0> = array([14, 12, 15, 13,  9]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016374959996028338,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29298432499854243,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703924110006483,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001457582002331037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.309049347997643,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            255,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            205,
            65,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003533418999722926,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028960550007468555,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.533795839000959,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            139,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            155,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            90,
            255,
            178,
            255,
            186,
            0,
            0,
            200,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            248,
            0,
            73,
            2,
            255,
            20,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            61,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            148,
            255,
            162,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            230,
            255,
            211,
            255,
            255,
            3,
            0,
            91,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            57,
            255,
            176
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003458716997556621,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028691740008071065,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960722329989949,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48149,
            47699,
            47814,
            47602,
            47720,
            47469,
            47607,
            49270,
            47777,
            48101,
            47590,
            49801,
            47556,
            47525,
            47725,
            47480,
            47597,
            47505,
            47574,
            47539,
            47732,
            47515,
            47519,
            47410,
            47645,
            47323,
            47363,
            47499,
            47577,
            47612,
            47657,
            47444,
            47761,
            47566,
            47653,
            47494,
            47607,
            47786,
            47871,
            47538,
            49501,
            47483,
            48010,
            47626,
            49935,
            47606,
            47406,
            47575,
            47524,
            47654,
            47625,
            47643,
            47517,
            47635,
            47598,
            47570,
            47586,
            47709,
            47370,
            47463,
            47488,
            47675,
            47623
          ],
          [
            48149,
            47699,
            47814,
            47602,
            47720,
            47469,
            47607,
            49270,
            47777,
            48101,
            47590,
            49801,
            47556,
            47525,
            47725,
            47480,
            47597,
            47505,
            47574,
            47539,
            47732,
            47515,
            47519,
            47410,
            47645,
            47323,
            47363,
            47499,
            47577,
            47612,
            47657,
            47444,
            47761,
            47566,
            47653,
            47494,
            47607,
            47786,
            47871,
            47538,
            49501,
            47483,
            48010,
            47626,
            49935,
            47606,
            47406,
            47575,
            47524,
            47654,
            47625,
            47643,
            47517,
            47635,
            47598,
            47570,
            47586,
            47709,
            47370,
            47463,
            47488,
            47675,
            47623
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            250,
            3718,
            17923,
            36408,
            36738,
            18833,
            4477,
            494,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            136,
            2583,
            16094,
            35019,
            40067,
            26163,
            8556,
            1031,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            947,
            8632,
            28828,
            42003,
            38857,
            18998,
            4585,
            464,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            122,
            2599,
            14075,
            31747,
            42811,
            40928,
            20862,
            5395,
            606,
            34,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1339120880002156,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016053660001489334,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06772908600032679,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48011,
            47641,
            47488,
            47372,
            47545,
            49178,
            49099,
            47376,
            47481,
            47298,
            47408,
            47421,
            47068,
            47372,
            47264,
            47247,
            47381,
            47286,
            47260,
            47418,
            47517,
            47526,
            47487,
            47431,
            48963,
            47800,
            47466,
            47168,
            47218,
            47377,
            47386,
            47133,
            47293,
            47146,
            47241,
            47472,
            47475,
            47134,
            47389,
            47399,
            47347,
            47339,
            47329,
            47303,
            47895,
            47343,
            47190,
            47161,
            47272,
            47261,
            47314,
            47344,
            47304,
            47273,
            47274,
            47252,
            47302,
            47408,
            47242,
            47345,
            47440,
            47529,
            47153
          ],
          [
            48011,
            47641,
            47488,
            47372,
            47545,
            49178,
            49099,
            47376,
            47481,
            47298,
            47408,
            47421,
            47068,
            47372,
            47264,
            47247,
            47381,
            47286,
            47260,
            47418,
            47517,
            47526,
            47487,
            47431,
            48963,
            47800,
            47466,
            47168,
            47218,
            47377,
            47386,
            47133,
            47293,
            47146,
            47241,
            47472,
            47475,
            47134,
            47389,
            47399,
            47347,
            47339,
            47329,
            47303,
            47895,
            47343,
            47190,
            47161,
            47272,
            47261,
            47314,
            47344,
            47304,
            47273,
            47274,
            47252,
            47302,
            47408,
            47242,
            47345,
            47440,
            47529,
            47153
          ],
          [
            48011,
            47641,
            47488,
            47372,
            47545,
            49178,
            49099,
            47376,
            47481,
            47298,
            47408,
            47421,
            47068,
            47372,
            47264,
            47247,
            47381,
            47286,
            47260,
            47418,
            47517,
            47526,
            47487,
            47431,
            48963,
            47800,
            47466,
            47168,
            47218,
            47377,
            47386,
            47133,
            47293,
            47146,
            47241,
            47472,
            47475,
            47134,
            47389,
            47399,
            47347,
            47339,
            47329,
            47303,
            47895,
            47343,
            47190,
            47161,
            47272,
            47261,
            47314,
            47344,
            47304,
            47273,
            47274,
            47252,
            47302,
            47408,
            47242,
            47345,
            47440,
            47529,
            47153
          ],
          [
            48011,
            47641,
            47488,
            47372,
            47545,
            49178,
            49099,
            47376,
            47481,
            47298,
            47408,
            47421,
            47068,
            47372,
            47264,
            47247,
            47381,
            47286,
            47260,
            47418,
            47517,
            47526,
            47487,
            47431,
            48963,
            47800,
            47466,
            47168,
            47218,
            47377,
            47386,
            47133,
            47293,
            47146,
            47241,
            47472,
            47475,
            47134,
            47389,
            47399,
            47347,
            47339,
            47329,
            47303,
            47895,
            47343,
            47190,
            47161,
            47272,
            47261,
            47314,
            47344,
            47304,
            47273,
            47274,
            47252,
            47302,
            47408,
            47242,
            47345,
            47440,
            47529,
            47153
          ],
          [
            48011,
            47641,
            47488,
            47372,
            47545,
            49178,
            49099,
            47376,
            47481,
            47298,
            47408,
            47421,
            47068,
            47372,
            47264,
            47247,
            47381,
            47286,
            47260,
            47418,
            47517,
            47526,
            47487,
            47431,
            48963,
            47800,
            47466,
            47168,
            47218,
            47377,
            47386,
            47133,
            47293,
            47146,
            47241,
            47472,
            47475,
            47134,
            47389,
            47399,
            47347,
            47339,
            47329,
            47303,
            47895,
            47343,
            47190,
            47161,
            47272,
            47261,
            47314,
            47344,
            47304,
            47273,
            47274,
            47252,
            47302,
            47408,
            47242,
            47345,
            47440,
            47529,
            47153
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            419,
            3187,
            12117,
            23536,
            35716,
            37503,
            25439,
            10743,
            2607,
            249,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            106,
            1008,
            3998,
            11250,
            25043,
            37936,
            40269,
            27052,
            12683,
            3099,
            602,
            51,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            0,
            0,
            32,
            801,
            5141,
            15049,
            30137,
            39215,
            36271,
            19911,
            6069,
            686,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            283,
            1953,
            7314,
            18904,
            34161,
            42866,
            40304,
            27260,
            12700,
            2830,
            203,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            142,
            1788,
            8717,
            20861,
            35874,
            41302
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            686,
            4718,
            14898,
            27546,
            36717,
            31989,
            16029,
            3891,
            382,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            553,
            5026,
            16986,
            36058,
            41797,
            34531,
            19599,
            6259,
            763,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            75,
            1084,
            6061,
            16288,
            30900,
            39128,
            31761,
            16990,
            5262,
            598,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            240,
            1777,
            6842,
            18110,
            34560,
            42486,
            35727,
            22102,
            7837,
            1398,
            110,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            157,
            2087,
            8475,
            19657,
            32216,
            40893,
            39654,
            26145,
            10688,
            1570,
            118,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            85,
            765,
            3480,
            11038,
            22959,
            35449,
            43079,
            38348,
            25119,
            10223,
            2881,
            334,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            133,
            1729,
            9256,
            20405,
            33438
          ]
        ]
      },
      "call": {
        "duration": 0.2703307310002856,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001490643000579439,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292793401000381,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703694300013012,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014795730021432973,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3358509240024432,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            124,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035227980006311554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002857864001271082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5363454159996763,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            3,
            255,
            3,
            26,
            0,
            255,
            0,
            255,
            255
          ],
          [
            75,
            0,
            18,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            23,
            0,
            2,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            19,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            2,
            0,
            255,
            0,
            255,
            255
          ],
          [
            51,
            0,
            5,
            0,
            7,
            0,
            255,
            170,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            102,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            59,
            0,
            2,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            83,
            255,
            30,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003458836999925552,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002867103998141829,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2964147810016584,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48428,
            48364,
            47312,
            47996,
            47796,
            49787,
            47678,
            47532,
            47798,
            47585,
            47555,
            47495,
            47668,
            47401,
            47668,
            47648,
            47545,
            47405,
            47638,
            47509,
            47705,
            47621,
            47607,
            47535,
            47621,
            47487,
            47643,
            47738,
            47583,
            47464,
            47572,
            47660,
            49670,
            47661,
            47703,
            47718,
            49883,
            47508,
            47511,
            47656,
            47455,
            47626,
            47491,
            47423,
            47435,
            47637,
            47693,
            47576,
            47694,
            47664,
            47522,
            47743,
            47222,
            47210,
            47555,
            47524,
            47622,
            47719,
            47475,
            47485,
            47493,
            47510,
            47645
          ],
          [
            48428,
            48364,
            47312,
            47996,
            47796,
            49787,
            47678,
            47532,
            47798,
            47585,
            47555,
            47495,
            47668,
            47401,
            47668,
            47648,
            47545,
            47405,
            47638,
            47509,
            47705,
            47621,
            47607,
            47535,
            47621,
            47487,
            47643,
            47738,
            47583,
            47464,
            47572,
            47660,
            49670,
            47661,
            47703,
            47718,
            49883,
            47508,
            47511,
            47656,
            47455,
            47626,
            47491,
            47423,
            47435,
            47637,
            47693,
            47576,
            47694,
            47664,
            47522,
            47743,
            47222,
            47210,
            47555,
            47524,
            47622,
            47719,
            47475,
            47485,
            47493,
            47510,
            47645
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            818,
            7148,
            24923,
            40066,
            33944,
            14861,
            2799,
            225,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            57,
            757,
            6046,
            22582,
            38343,
            37615,
            21334,
            5060,
            631,
            41,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            132,
            2309,
            14604,
            33307,
            41985,
            29124,
            9455,
            1358,
            54,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            71,
            619,
            6433,
            22004,
            38892,
            41412,
            31678,
            12111,
            2127,
            272,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            764,
            7625,
            25641,
            40303,
            43640
          ]
        ]
      },
      "call": {
        "duration": 0.13406608100194717,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016015859982871916,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06824977799988119,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48321,
            47749,
            47319,
            47242,
            47442,
            47207,
            47279,
            47266,
            47185,
            47453,
            47200,
            47367,
            47368,
            47371,
            47351,
            47393,
            47518,
            47277,
            47184,
            47364,
            47439,
            47472,
            47223,
            47277,
            47283,
            46940,
            47531,
            47278,
            47301,
            47326,
            47318,
            47390,
            47274,
            47416,
            47407,
            47460,
            47680,
            47467,
            47478,
            47951,
            47482,
            47481,
            47204,
            47359,
            47339,
            47305,
            47388,
            47168,
            47155,
            47406,
            46961,
            47365,
            47325,
            47362,
            47418,
            47324,
            47462,
            47338,
            47672,
            49585,
            47321,
            47421,
            47320
          ],
          [
            48321,
            47749,
            47319,
            47242,
            47442,
            47207,
            47279,
            47266,
            47185,
            47453,
            47200,
            47367,
            47368,
            47371,
            47351,
            47393,
            47518,
            47277,
            47184,
            47364,
            47439,
            47472,
            47223,
            47277,
            47283,
            46940,
            47531,
            47278,
            47301,
            47326,
            47318,
            47390,
            47274,
            47416,
            47407,
            47460,
            47680,
            47467,
            47478,
            47951,
            47482,
            47481,
            47204,
            47359,
            47339,
            47305,
            47388,
            47168,
            47155,
            47406,
            46961,
            47365,
            47325,
            47362,
            47418,
            47324,
            47462,
            47338,
            47672,
            49585,
            47321,
            47421,
            47320
          ],
          [
            48321,
            47749,
            47319,
            47242,
            47442,
            47207,
            47279,
            47266,
            47185,
            47453,
            47200,
            47367,
            47368,
            47371,
            47351,
            47393,
            47518,
            47277,
            47184,
            47364,
            47439,
            47472,
            47223,
            47277,
            47283,
            46940,
            47531,
            47278,
            47301,
            47326,
            47318,
            47390,
            47274,
            47416,
            47407,
            47460,
            47680,
            47467,
            47478,
            47951,
            47482,
            47481,
            47204,
            47359,
            47339,
            47305,
            47388,
            47168,
            47155,
            47406,
            46961,
            47365,
            47325,
            47362,
            47418,
            47324,
            47462,
            47338,
            47672,
            49585,
            47321,
            47421,
            47320
          ],
          [
            48321,
            47749,
            47319,
            47242,
            47442,
            47207,
            47279,
            47266,
            47185,
            47453,
            47200,
            47367,
            47368,
            47371,
            47351,
            47393,
            47518,
            47277,
            47184,
            47364,
            47439,
            47472,
            47223,
            47277,
            47283,
            46940,
            47531,
            47278,
            47301,
            47326,
            47318,
            47390,
            47274,
            47416,
            47407,
            47460,
            47680,
            47467,
            47478,
            47951,
            47482,
            47481,
            47204,
            47359,
            47339,
            47305,
            47388,
            47168,
            47155,
            47406,
            46961,
            47365,
            47325,
            47362,
            47418,
            47324,
            47462,
            47338,
            47672,
            49585,
            47321,
            47421,
            47320
          ],
          [
            48321,
            47749,
            47319,
            47242,
            47442,
            47207,
            47279,
            47266,
            47185,
            47453,
            47200,
            47367,
            47368,
            47371,
            47351,
            47393,
            47518,
            47277,
            47184,
            47364,
            47439,
            47472,
            47223,
            47277,
            47283,
            46940,
            47531,
            47278,
            47301,
            47326,
            47318,
            47390,
            47274,
            47416,
            47407,
            47460,
            47680,
            47467,
            47478,
            47951,
            47482,
            47481,
            47204,
            47359,
            47339,
            47305,
            47388,
            47168,
            47155,
            47406,
            46961,
            47365,
            47325,
            47362,
            47418,
            47324,
            47462,
            47338,
            47672,
            49585,
            47321,
            47421,
            47320
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            338,
            2111,
            6854,
            15178,
            28112,
            37806,
            35021,
            21546,
            8993,
            2074,
            377,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            623,
            4296,
            14172,
            25170,
            35317,
            39654,
            33978,
            20370,
            7636,
            1654,
            162,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            246,
            1550,
            4940,
            11069,
            21920,
            34659,
            41177,
            35834,
            22100,
            8497,
            2029,
            216,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            151,
            1127,
            6406,
            16555,
            29565,
            40532,
            39613,
            28972,
            11937,
            2053,
            248,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            12055,
            2999,
            347,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            64,
            1290,
            7072,
            18404,
            32624,
            38221,
            30454,
            15424,
            5289,
            600,
            48,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            116,
            1490,
            8332,
            17868,
            29045,
            38567,
            34400,
            21401,
            7975,
            1367,
            130,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            95,
            896,
            4402,
            13221,
            25680,
            39351,
            42873,
            34756,
            20600,
            7939,
            1672,
            135,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            80,
            936,
            6336,
            16914,
            27456,
            37673,
            35694,
            22773,
            8601,
            1956,
            131,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            219,
            2042,
            6751,
            15770,
            25170,
            36265,
            40862,
            35559,
            22163,
            9748,
            2246,
            398,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            7,
            246,
            3005,
            10402,
            20889,
            31738,
            40533,
            42666,
            37704,
            24083,
            9463,
            1993,
            272,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2702082089999749,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014900130008754786,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2931057679998048,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1714147129969206,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045560, 10011390), (411139, 411139), (40048661, 10012166))\nassert ((40045560 > 0 and 10011390 == 0\n  +10011390\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9688e2e0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff96623a30>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff96985910>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045560, 10011390), (411139, 411139), (40048661, 10012166))\nE       assert ((40045560 > 0 and 10011390 == 0\nE         +10011390\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004941769002471119,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}