{
  "created": 1722032747.190071,
  "duration": 23.46641516685486,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5048417149992019,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14827829700152506,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013291799987200648,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003922316998796305,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14797424000062165,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013120199982949998,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13270024099983857,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12162903399803326,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013136989982740488,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038876660000823904,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12101741100195795,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012763480008288752,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033989549992838874,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14660812999863992,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012037769993185066,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003430007000133628,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11982428500050446,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011886569991474971,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034251159995619673,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14618842100026086,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012122670013923198,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034317460012971424,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11997854800210916,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012682189990300685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004433079000591533,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021021169995947275,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011629159998847172,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003410295001231134,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017534189973957837,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010822139993251767,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003342074000102002,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004053630000271369,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032729.4880936,
            "msecs": 488.09361457824707,
            "relativeCreated": 7740.286588668823,
            "thread": 281473061036064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4860
          }
        ]
      },
      "teardown": {
        "duration": 0.0011941760021727532,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034271260010427795,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023678020006627776,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032729.5005352,
            "msecs": 500.535249710083,
            "relativeCreated": 7752.728223800659,
            "thread": 281473061036064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4860
          }
        ]
      },
      "teardown": {
        "duration": 0.001173835997178685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002147808001609519,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002721061002375791,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032729.5101464,
            "msecs": 510.1463794708252,
            "relativeCreated": 7762.339353561401,
            "thread": 281473061036064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4860
          }
        ]
      },
      "teardown": {
        "duration": 0.0010347829993406776,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002126837000105297,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003429856002185261,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032729.519735,
            "msecs": 519.7350978851318,
            "relativeCreated": 7771.928071975708,
            "thread": 281473061036064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4860
          }
        ]
      },
      "teardown": {
        "duration": 0.0010868640019907616,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003398746001039399,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14651386799960164,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012105269997846335,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034009049995802343,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12014586099758162,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001184156000817893,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.18157366800005548,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14760448200104292,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001251117999345297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015328121000493411,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1210199310007738,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012907189993711654,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.834508692001691,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            5,
            10,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            84,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            23,
            137,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035524989980331156,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029693159995076712,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9064077850016474,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            7,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            209,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            119,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            17,
            255,
            255,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            62,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            103,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            114,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            232,
            255,
            255,
            255,
            255,
            0,
            0,
            127,
            0,
            95,
            255
          ],
          [
            255,
            0,
            139,
            0,
            255,
            0,
            166,
            46,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035160779989382718,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029483750004146714,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3026190400014457,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48330,
            47565,
            47481,
            47554,
            47406,
            47546,
            47410,
            47549,
            47465,
            47441,
            47458,
            47583,
            47308,
            47204,
            47514,
            47492,
            47635,
            47954,
            47475,
            47444,
            47515,
            49746,
            47560,
            47511,
            47613,
            47543,
            47500,
            47575,
            47464,
            47417,
            47557,
            47437,
            47604,
            47367,
            47462,
            47467,
            47593,
            47506,
            47716,
            47376,
            47462,
            47472,
            47615,
            47488,
            47477,
            47525,
            47515,
            47610,
            47510,
            47532,
            47562,
            47497,
            49417,
            47388,
            47880,
            47576,
            48048,
            47463,
            50679,
            47493,
            47423,
            47443,
            47133
          ],
          [
            48330,
            47565,
            47481,
            47554,
            47406,
            47546,
            47410,
            47549,
            47465,
            47441,
            47458,
            47583,
            47308,
            47204,
            47514,
            47492,
            47635,
            47954,
            47475,
            47444,
            47515,
            49746,
            47560,
            47511,
            47613,
            47543,
            47500,
            47575,
            47464,
            47417,
            47557,
            47437,
            47604,
            47367,
            47462,
            47467,
            47593,
            47506,
            47716,
            47376,
            47462,
            47472,
            47615,
            47488,
            47477,
            47525,
            47515,
            47610,
            47510,
            47532,
            47562,
            47497,
            49417,
            47388,
            47880,
            47576,
            48048,
            47463,
            50679,
            47493,
            47423,
            47443,
            47133
          ]
        ],
        "eTX_errcounts": [
          [
            40756,
            26578,
            8472,
            1450,
            157,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            247,
            3050,
            15997,
            34759,
            42526,
            31657,
            14946,
            2230,
            194,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            891,
            7847,
            26137,
            40781,
            38046,
            19955,
            5362,
            639,
            15,
            0,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            270,
            3811,
            17436,
            37375,
            41974,
            31732,
            13401,
            3394,
            385,
            15,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            14,
            445,
            4167,
            19371,
            36667,
            43183,
            35814,
            17399,
            3721,
            310,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13369713200154365,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016237859999819193,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06906948599862517,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48151,
            47606,
            47344,
            47437,
            47139,
            47066,
            47365,
            47393,
            47318,
            47227,
            47438,
            47447,
            47400,
            47335,
            47296,
            47405,
            47494,
            47351,
            47366,
            47314,
            47465,
            47761,
            47233,
            47392,
            47316,
            47392,
            47345,
            47384,
            47394,
            47257,
            47182,
            47095,
            47432,
            47610,
            47375,
            47611,
            47562,
            47400,
            47436,
            49191,
            49334,
            47333,
            47245,
            47306,
            47245,
            47481,
            47386,
            47186,
            47385,
            47366,
            47449,
            47449,
            47348,
            47357,
            47303,
            47180,
            47596,
            47416,
            47389,
            47282,
            47408,
            47154,
            47262
          ],
          [
            48151,
            47606,
            47344,
            47437,
            47139,
            47066,
            47365,
            47393,
            47318,
            47227,
            47438,
            47447,
            47400,
            47335,
            47296,
            47405,
            47494,
            47351,
            47366,
            47314,
            47465,
            47761,
            47233,
            47392,
            47316,
            47392,
            47345,
            47384,
            47394,
            47257,
            47182,
            47095,
            47432,
            47610,
            47375,
            47611,
            47562,
            47400,
            47436,
            49191,
            49334,
            47333,
            47245,
            47306,
            47245,
            47481,
            47386,
            47186,
            47385,
            47366,
            47449,
            47449,
            47348,
            47357,
            47303,
            47180,
            47596,
            47416,
            47389,
            47282,
            47408,
            47154,
            47262
          ],
          [
            48151,
            47606,
            47344,
            47437,
            47139,
            47066,
            47365,
            47393,
            47318,
            47227,
            47438,
            47447,
            47400,
            47335,
            47296,
            47405,
            47494,
            47351,
            47366,
            47314,
            47465,
            47761,
            47233,
            47392,
            47316,
            47392,
            47345,
            47384,
            47394,
            47257,
            47182,
            47095,
            47432,
            47610,
            47375,
            47611,
            47562,
            47400,
            47436,
            49191,
            49334,
            47333,
            47245,
            47306,
            47245,
            47481,
            47386,
            47186,
            47385,
            47366,
            47449,
            47449,
            47348,
            47357,
            47303,
            47180,
            47596,
            47416,
            47389,
            47282,
            47408,
            47154,
            47262
          ],
          [
            48151,
            47606,
            47344,
            47437,
            47139,
            47066,
            47365,
            47393,
            47318,
            47227,
            47438,
            47447,
            47400,
            47335,
            47296,
            47405,
            47494,
            47351,
            47366,
            47314,
            47465,
            47761,
            47233,
            47392,
            47316,
            47392,
            47345,
            47384,
            47394,
            47257,
            47182,
            47095,
            47432,
            47610,
            47375,
            47611,
            47562,
            47400,
            47436,
            49191,
            49334,
            47333,
            47245,
            47306,
            47245,
            47481,
            47386,
            47186,
            47385,
            47366,
            47449,
            47449,
            47348,
            47357,
            47303,
            47180,
            47596,
            47416,
            47389,
            47282,
            47408,
            47154,
            47262
          ],
          [
            48151,
            47606,
            47344,
            47437,
            47139,
            47066,
            47365,
            47393,
            47318,
            47227,
            47438,
            47447,
            47400,
            47335,
            47296,
            47405,
            47494,
            47351,
            47366,
            47314,
            47465,
            47761,
            47233,
            47392,
            47316,
            47392,
            47345,
            47384,
            47394,
            47257,
            47182,
            47095,
            47432,
            47610,
            47375,
            47611,
            47562,
            47400,
            47436,
            49191,
            49334,
            47333,
            47245,
            47306,
            47245,
            47481,
            47386,
            47186,
            47385,
            47366,
            47449,
            47449,
            47348,
            47357,
            47303,
            47180,
            47596,
            47416,
            47389,
            47282,
            47408,
            47154,
            47262
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            62,
            1253,
            5104,
            14321,
            24965,
            31383,
            32573,
            28091,
            19785,
            10412,
            2847,
            319,
            30,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            237,
            1859,
            5688,
            12622,
            25071,
            35572,
            39165,
            32087,
            21670,
            10203,
            2755,
            389,
            32,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            42,
            640,
            3225,
            11261,
            22412,
            31960,
            36310,
            34692,
            26282,
            15274,
            5593,
            1228,
            148,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            219,
            1458,
            5123,
            11078,
            21339,
            32328,
            41467,
            39533,
            28578,
            19491,
            7100,
            1005,
            45,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            218,
            1321,
            5438,
            13290,
            23166
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            209,
            1705,
            6805,
            17253,
            30118,
            36080,
            32674,
            23686,
            12793,
            3868,
            503,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            157,
            1400,
            6628,
            17406,
            31421,
            34403,
            31151,
            24345,
            13685,
            4291,
            521,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            319,
            2588,
            9244,
            19003,
            31006,
            38029,
            35501,
            25769,
            13317,
            3661,
            499,
            25,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            60,
            635,
            2563,
            6932,
            16785,
            30849,
            38882,
            36310,
            28747,
            17370,
            6876,
            1581,
            104,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            9,
            152,
            1068,
            3669,
            8905,
            20052,
            32568,
            38152,
            37225,
            31502,
            22605,
            10257,
            2897,
            559,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            139,
            1272,
            5026,
            10234,
            18129,
            30300,
            40736,
            43031,
            36998,
            23218,
            11141,
            3793,
            727,
            106,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            77,
            651,
            2888,
            8161
          ]
        ]
      },
      "call": {
        "duration": 0.2722367039968958,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff79125750>()\n +    where <built-in method all of numpy.ndarray object at 0xffff79125750> = array([21, 13, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff79102550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48151, 47606, 47344, 47437, 47139, 47066, ...], [48151, 47606, 47344, 47437, 47139, 47066, ...], [..., 0, ...], [0, 0, 1, 42, 640, 3225, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 9, 152, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff79125750>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff79125750> = array([21, 13, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001623337000637548,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2924036320000596,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1690565409990086,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001431811000657035,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2931912649983133,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            28,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            2,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            226,
            69,
            8,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034926779990200885,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028735529995174147,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5381795370012696,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            225,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            213,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            103,
            255,
            153,
            255,
            158,
            0,
            0,
            250,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            227,
            0,
            113,
            0,
            255,
            24,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            89,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            5,
            255,
            154,
            255,
            189,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            245,
            255,
            130,
            255,
            255,
            2,
            0,
            117,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            90,
            255,
            149
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034750669983623084,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002886694001063006,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2957056849991204,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48141,
            47438,
            47608,
            47554,
            47595,
            47511,
            47580,
            47453,
            47640,
            47523,
            47513,
            47231,
            47228,
            47801,
            47585,
            47682,
            47904,
            47538,
            47983,
            47484,
            47874,
            47646,
            47634,
            47693,
            47709,
            47580,
            47654,
            47708,
            47548,
            47580,
            47589,
            47798,
            47607,
            47569,
            47574,
            47621,
            47536,
            47490,
            47696,
            47536,
            47619,
            47470,
            47557,
            47461,
            47635,
            47610,
            47272,
            47278,
            47548,
            49553,
            47548,
            47885,
            47642,
            49721,
            47580,
            47493,
            47487,
            47465,
            47606,
            47569,
            47730,
            47541,
            47588
          ],
          [
            48141,
            47438,
            47608,
            47554,
            47595,
            47511,
            47580,
            47453,
            47640,
            47523,
            47513,
            47231,
            47228,
            47801,
            47585,
            47682,
            47904,
            47538,
            47983,
            47484,
            47874,
            47646,
            47634,
            47693,
            47709,
            47580,
            47654,
            47708,
            47548,
            47580,
            47589,
            47798,
            47607,
            47569,
            47574,
            47621,
            47536,
            47490,
            47696,
            47536,
            47619,
            47470,
            47557,
            47461,
            47635,
            47610,
            47272,
            47278,
            47548,
            49553,
            47548,
            47885,
            47642,
            49721,
            47580,
            47493,
            47487,
            47465,
            47606,
            47569,
            47730,
            47541,
            47588
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            230,
            3554,
            18272,
            36563,
            36590,
            19279,
            4648,
            533,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            164,
            2533,
            16101,
            34168,
            40512,
            27615,
            9196,
            1088,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            991,
            7941,
            29068,
            42831,
            39056,
            19321,
            4740,
            358,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            174,
            2279,
            13733,
            31144,
            42548,
            39262,
            20419,
            5650,
            600,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13382532600007835,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016398359985032585,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.068720128001587,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48204,
            47314,
            47496,
            47396,
            47443,
            47239,
            47463,
            47405,
            47368,
            47377,
            47562,
            47552,
            47351,
            47805,
            47580,
            47339,
            47122,
            47382,
            47225,
            47405,
            47311,
            47426,
            47037,
            47330,
            47334,
            47453,
            47350,
            47525,
            47466,
            47458,
            47586,
            47188,
            49206,
            48881,
            47352,
            47354,
            47219,
            47260,
            47287,
            47442,
            47243,
            47374,
            47263,
            47394,
            47375,
            47336,
            47421,
            47173,
            47445,
            47462,
            47480,
            47373,
            47821,
            47427,
            47248,
            47359,
            47346,
            47311,
            47294,
            47323,
            47227,
            47358,
            47274
          ],
          [
            48204,
            47314,
            47496,
            47396,
            47443,
            47239,
            47463,
            47405,
            47368,
            47377,
            47562,
            47552,
            47351,
            47805,
            47580,
            47339,
            47122,
            47382,
            47225,
            47405,
            47311,
            47426,
            47037,
            47330,
            47334,
            47453,
            47350,
            47525,
            47466,
            47458,
            47586,
            47188,
            49206,
            48881,
            47352,
            47354,
            47219,
            47260,
            47287,
            47442,
            47243,
            47374,
            47263,
            47394,
            47375,
            47336,
            47421,
            47173,
            47445,
            47462,
            47480,
            47373,
            47821,
            47427,
            47248,
            47359,
            47346,
            47311,
            47294,
            47323,
            47227,
            47358,
            47274
          ],
          [
            48204,
            47314,
            47496,
            47396,
            47443,
            47239,
            47463,
            47405,
            47368,
            47377,
            47562,
            47552,
            47351,
            47805,
            47580,
            47339,
            47122,
            47382,
            47225,
            47405,
            47311,
            47426,
            47037,
            47330,
            47334,
            47453,
            47350,
            47525,
            47466,
            47458,
            47586,
            47188,
            49206,
            48881,
            47352,
            47354,
            47219,
            47260,
            47287,
            47442,
            47243,
            47374,
            47263,
            47394,
            47375,
            47336,
            47421,
            47173,
            47445,
            47462,
            47480,
            47373,
            47821,
            47427,
            47248,
            47359,
            47346,
            47311,
            47294,
            47323,
            47227,
            47358,
            47274
          ],
          [
            48204,
            47314,
            47496,
            47396,
            47443,
            47239,
            47463,
            47405,
            47368,
            47377,
            47562,
            47552,
            47351,
            47805,
            47580,
            47339,
            47122,
            47382,
            47225,
            47405,
            47311,
            47426,
            47037,
            47330,
            47334,
            47453,
            47350,
            47525,
            47466,
            47458,
            47586,
            47188,
            49206,
            48881,
            47352,
            47354,
            47219,
            47260,
            47287,
            47442,
            47243,
            47374,
            47263,
            47394,
            47375,
            47336,
            47421,
            47173,
            47445,
            47462,
            47480,
            47373,
            47821,
            47427,
            47248,
            47359,
            47346,
            47311,
            47294,
            47323,
            47227,
            47358,
            47274
          ],
          [
            48204,
            47314,
            47496,
            47396,
            47443,
            47239,
            47463,
            47405,
            47368,
            47377,
            47562,
            47552,
            47351,
            47805,
            47580,
            47339,
            47122,
            47382,
            47225,
            47405,
            47311,
            47426,
            47037,
            47330,
            47334,
            47453,
            47350,
            47525,
            47466,
            47458,
            47586,
            47188,
            49206,
            48881,
            47352,
            47354,
            47219,
            47260,
            47287,
            47442,
            47243,
            47374,
            47263,
            47394,
            47375,
            47336,
            47421,
            47173,
            47445,
            47462,
            47480,
            47373,
            47821,
            47427,
            47248,
            47359,
            47346,
            47311,
            47294,
            47323,
            47227,
            47358,
            47274
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            743,
            4040,
            15969,
            28349,
            34777,
            33671,
            25056,
            14977,
            5748,
            1049,
            106,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            74,
            955,
            4043,
            11859,
            24886,
            36969,
            39255,
            28371,
            14631,
            3866,
            488,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            24
          ],
          [
            0,
            8,
            122,
            1580,
            8100,
            20645,
            37037,
            40647,
            34494,
            21867,
            10130,
            2580,
            320,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            401,
            1977,
            8623,
            22276,
            37085,
            44057,
            41700,
            27921,
            12983,
            2823,
            285,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            40,
            572,
            3098,
            8858,
            20486,
            33869,
            38103
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            49,
            665,
            6603,
            20804,
            33719,
            38684,
            33022,
            15213,
            3759,
            431,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            611,
            5277,
            17645,
            34583,
            41274,
            34091,
            19184,
            6542,
            965,
            81,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            93,
            1761,
            9963,
            26424,
            39151,
            41813,
            34253,
            18460,
            5511,
            846,
            75,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            214,
            1847,
            8742,
            20518,
            34316,
            41578,
            35668,
            23414,
            9616,
            2174,
            236,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            11,
            273,
            2305,
            11014,
            26224,
            38365,
            39512,
            34861,
            27316,
            16929,
            6296,
            1587,
            115,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            645,
            3668,
            11902,
            24502,
            36245,
            42863,
            40697,
            29866,
            14539,
            4605,
            759,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            189,
            1512,
            6867,
            16955,
            30023
          ]
        ]
      },
      "call": {
        "duration": 0.2700417350024509,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001494003998232074,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29122568599996157,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689348290019552,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014707219997944776,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.366080856998451,
        "outcome": "passed",
        "stdout": "Failed on attempt 0 at write 0 of 228.\n     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            112,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035582589989644475,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002892873999371659,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.534445113997208,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            3,
            255,
            18,
            255,
            0,
            51,
            0,
            255,
            0,
            255,
            255
          ],
          [
            87,
            0,
            15,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            241,
            255,
            0,
            14,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            42,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            8,
            0,
            255,
            6,
            255,
            255
          ],
          [
            89,
            0,
            1,
            0,
            7,
            0,
            255,
            217,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            109,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            49,
            0,
            1,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            132,
            255,
            51,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.0034711369989963714,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028844740008935332,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29597596100211376,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48343,
            47659,
            47654,
            47680,
            47807,
            47698,
            47583,
            47679,
            47448,
            47607,
            47200,
            47356,
            47637,
            47668,
            47778,
            47942,
            47482,
            47584,
            47441,
            49997,
            47570,
            47711,
            47644,
            47481,
            47576,
            47548,
            47677,
            47492,
            47728,
            47460,
            47445,
            47543,
            47595,
            47550,
            47586,
            47701,
            47365,
            47539,
            47565,
            47437,
            47522,
            47750,
            47596,
            47621,
            47704,
            47732,
            47643,
            47626,
            47620,
            47572,
            47957,
            47578,
            47933,
            47661,
            50194,
            47553,
            47445,
            47547,
            47404,
            47552,
            47157,
            47370,
            47612
          ],
          [
            48343,
            47659,
            47654,
            47680,
            47807,
            47698,
            47583,
            47679,
            47448,
            47607,
            47200,
            47356,
            47637,
            47668,
            47778,
            47942,
            47482,
            47584,
            47441,
            49997,
            47570,
            47711,
            47644,
            47481,
            47576,
            47548,
            47677,
            47492,
            47728,
            47460,
            47445,
            47543,
            47595,
            47550,
            47586,
            47701,
            47365,
            47539,
            47565,
            47437,
            47522,
            47750,
            47596,
            47621,
            47704,
            47732,
            47643,
            47626,
            47620,
            47572,
            47957,
            47578,
            47933,
            47661,
            50194,
            47553,
            47445,
            47547,
            47404,
            47552,
            47157,
            47370,
            47612
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            500,
            6622,
            24672,
            39279,
            34427,
            15391,
            3153,
            316,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            556,
            6045,
            22046,
            38406,
            37901,
            21815,
            4998,
            632,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            121,
            1982,
            13588,
            32427,
            40950,
            29683,
            9788,
            1668,
            129,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            17,
            693,
            6344,
            21841,
            38645,
            42240,
            30898,
            12798,
            2398,
            255,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            48,
            668,
            7650,
            24824,
            40297,
            44041
          ]
        ]
      },
      "call": {
        "duration": 0.13372056300067925,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015998460003174841,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06910083599723293,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47915,
            47643,
            47819,
            47762,
            47028,
            47563,
            47315,
            47436,
            47215,
            47363,
            47175,
            47340,
            47424,
            47196,
            47412,
            47417,
            47319,
            47516,
            47412,
            47278,
            47400,
            47879,
            47395,
            47267,
            47129,
            47350,
            47208,
            47293,
            47200,
            46902,
            47398,
            47106,
            47328,
            47565,
            47419,
            47370,
            47424,
            47489,
            47281,
            47502,
            47656,
            47605,
            47361,
            47298,
            47383,
            47196,
            47232,
            47391,
            47276,
            47215,
            47313,
            47305,
            47305,
            47452,
            47048,
            47410,
            47317,
            47486,
            49481,
            49114,
            47239,
            47229,
            47238
          ],
          [
            47915,
            47643,
            47819,
            47762,
            47028,
            47563,
            47315,
            47436,
            47215,
            47363,
            47175,
            47340,
            47424,
            47196,
            47412,
            47417,
            47319,
            47516,
            47412,
            47278,
            47400,
            47879,
            47395,
            47267,
            47129,
            47350,
            47208,
            47293,
            47200,
            46902,
            47398,
            47106,
            47328,
            47565,
            47419,
            47370,
            47424,
            47489,
            47281,
            47502,
            47656,
            47605,
            47361,
            47298,
            47383,
            47196,
            47232,
            47391,
            47276,
            47215,
            47313,
            47305,
            47305,
            47452,
            47048,
            47410,
            47317,
            47486,
            49481,
            49114,
            47239,
            47229,
            47238
          ],
          [
            47915,
            47643,
            47819,
            47762,
            47028,
            47563,
            47315,
            47436,
            47215,
            47363,
            47175,
            47340,
            47424,
            47196,
            47412,
            47417,
            47319,
            47516,
            47412,
            47278,
            47400,
            47879,
            47395,
            47267,
            47129,
            47350,
            47208,
            47293,
            47200,
            46902,
            47398,
            47106,
            47328,
            47565,
            47419,
            47370,
            47424,
            47489,
            47281,
            47502,
            47656,
            47605,
            47361,
            47298,
            47383,
            47196,
            47232,
            47391,
            47276,
            47215,
            47313,
            47305,
            47305,
            47452,
            47048,
            47410,
            47317,
            47486,
            49481,
            49114,
            47239,
            47229,
            47238
          ],
          [
            47915,
            47643,
            47819,
            47762,
            47028,
            47563,
            47315,
            47436,
            47215,
            47363,
            47175,
            47340,
            47424,
            47196,
            47412,
            47417,
            47319,
            47516,
            47412,
            47278,
            47400,
            47879,
            47395,
            47267,
            47129,
            47350,
            47208,
            47293,
            47200,
            46902,
            47398,
            47106,
            47328,
            47565,
            47419,
            47370,
            47424,
            47489,
            47281,
            47502,
            47656,
            47605,
            47361,
            47298,
            47383,
            47196,
            47232,
            47391,
            47276,
            47215,
            47313,
            47305,
            47305,
            47452,
            47048,
            47410,
            47317,
            47486,
            49481,
            49114,
            47239,
            47229,
            47238
          ],
          [
            47915,
            47643,
            47819,
            47762,
            47028,
            47563,
            47315,
            47436,
            47215,
            47363,
            47175,
            47340,
            47424,
            47196,
            47412,
            47417,
            47319,
            47516,
            47412,
            47278,
            47400,
            47879,
            47395,
            47267,
            47129,
            47350,
            47208,
            47293,
            47200,
            46902,
            47398,
            47106,
            47328,
            47565,
            47419,
            47370,
            47424,
            47489,
            47281,
            47502,
            47656,
            47605,
            47361,
            47298,
            47383,
            47196,
            47232,
            47391,
            47276,
            47215,
            47313,
            47305,
            47305,
            47452,
            47048,
            47410,
            47317,
            47486,
            49481,
            49114,
            47239,
            47229,
            47238
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            237,
            1853,
            6813,
            15727,
            27453,
            37170,
            36247,
            24553,
            12233,
            2903,
            359,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            51,
            804,
            3922,
            12336,
            23321,
            32481,
            33473,
            28777,
            20414,
            11345,
            4531,
            801,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            213,
            1494,
            5007,
            12216,
            24801,
            36555,
            43247,
            38239,
            23495,
            8768,
            2074,
            237,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            477,
            2709,
            6942,
            14989,
            29091,
            39285,
            37335,
            27367,
            14074,
            4434,
            773,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            62
          ],
          [
            11829,
            3527,
            463,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            90,
            1272,
            8182,
            19793,
            32492,
            39357,
            30616,
            16161,
            5749,
            806,
            56,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            64,
            779,
            5134,
            14606,
            27198,
            35667,
            32948,
            22207,
            8518,
            1905,
            145,
            10,
            0,
            0,
            0,
            0
          ],
          [
            79,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            871,
            6211,
            16631,
            27541,
            39001,
            40936,
            32338,
            20670,
            10072,
            2949,
            415,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            96,
            862,
            4140,
            14367,
            26813,
            34923,
            33225,
            24121,
            11830,
            3851,
            787,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            124,
            1376,
            5603,
            15712,
            26641,
            36703,
            40856,
            38096,
            25424,
            14307,
            4474,
            691,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            34,
            519,
            2648,
            7803,
            17851,
            29599,
            36891,
            36589,
            30841,
            23186,
            13805,
            5578,
            1389,
            90,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27053602599698934,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015113429981283844,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917252860024746,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1694197899996652,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40022039, 10005510), (412277, 412277), (40048640, 10012160))\nassert ((40022039 > 0 and 10005510 == 0\n  +10005510\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff79102340>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff78ea8520>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff7da352b0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40022039, 10005510), (412277, 412277), (40048640, 10012160))\nE       assert ((40022039 > 0 and 10005510 == 0\nE         +10005510\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004938320002111141,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}