{
  "created": 1722031886.396211,
  "duration": 23.72515320777893,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5037323739998101,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14905819200066617,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013019990001339465,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037988639996910933,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.148442519002856,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012914689978060778,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13274422000176855,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12186246800047229,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012997490011912305,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037897740003245417,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12128060499890125,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001263507998373825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033361040004820097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14691830499941716,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012000559981970582,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033581839998078067,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12008762800178374,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011663659970508888,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033255439993808977,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14688488400133792,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011736560009012464,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033619650021137204,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12020283099991502,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011771359968406614,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004423417998623336,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020874469992122613,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011429959995439276,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351914001541445,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00173994799843058,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010961640000459738,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033249740008614026,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004072141000506235,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031868.4246783,
            "msecs": 424.6783256530762,
            "relativeCreated": 7730.2350997924805,
            "thread": 281473607544864,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4447
          }
        ]
      },
      "teardown": {
        "duration": 0.001197506997414166,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034013559998129494,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002346772998862434,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031868.4369907,
            "msecs": 436.99073791503906,
            "relativeCreated": 7742.547512054443,
            "thread": 281473607544864,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4447
          }
        ]
      },
      "teardown": {
        "duration": 0.0011739260007743724,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002102747002936667,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002715149999858113,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031868.4464502,
            "msecs": 446.45023345947266,
            "relativeCreated": 7752.007007598877,
            "thread": 281473607544864,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4447
          }
        ]
      },
      "teardown": {
        "duration": 0.0010338829997635912,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00206419599999208,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0033991059972322546,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031868.4559145,
            "msecs": 455.9144973754883,
            "relativeCreated": 7761.471271514893,
            "thread": 281473607544864,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4447
          }
        ]
      },
      "teardown": {
        "duration": 0.0010820640018209815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033425239998905454,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14684228300029645,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012109169983887114,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003344744000060018,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12037848500040127,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011747360003937501,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17803604599976097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477810039978067,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012760779973177705,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01535239200165961,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12127778500143904,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001254057999176439,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.848992597002507,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            14,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            96,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            21,
            154,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035696589984581806,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028898149976157583,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9000627200002782,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            249,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            214,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            18,
            255,
            255,
            255,
            9
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            27,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            56,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            172,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            161,
            255,
            255,
            255,
            255,
            0,
            0,
            142,
            1,
            132,
            255
          ],
          [
            255,
            0,
            127,
            0,
            255,
            0,
            255,
            71,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034622569983184803,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029008239980612416,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3030862949999573,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48460,
            46999,
            47167,
            47079,
            47245,
            47506,
            47474,
            47403,
            47536,
            47214,
            47502,
            47614,
            47465,
            47176,
            47250,
            47420,
            47367,
            47647,
            49353,
            47425,
            47782,
            47402,
            47788,
            47558,
            47533,
            47401,
            47357,
            47491,
            47175,
            47598,
            47501,
            47421,
            47368,
            47486,
            47244,
            47617,
            47452,
            47631,
            47443,
            47295,
            47240,
            47547,
            47435,
            47487,
            47446,
            47357,
            47378,
            47665,
            47476,
            47408,
            47434,
            47506,
            47086,
            52075,
            47660,
            47881,
            47472,
            47743,
            47292,
            47545,
            47480,
            47192,
            47475
          ],
          [
            48460,
            46999,
            47167,
            47079,
            47245,
            47506,
            47474,
            47403,
            47536,
            47214,
            47502,
            47614,
            47465,
            47176,
            47250,
            47420,
            47367,
            47647,
            49353,
            47425,
            47782,
            47402,
            47788,
            47558,
            47533,
            47401,
            47357,
            47491,
            47175,
            47598,
            47501,
            47421,
            47368,
            47486,
            47244,
            47617,
            47452,
            47631,
            47443,
            47295,
            47240,
            47547,
            47435,
            47487,
            47446,
            47357,
            47378,
            47665,
            47476,
            47408,
            47434,
            47506,
            47086,
            52075,
            47660,
            47881,
            47472,
            47743,
            47292,
            47545,
            47480,
            47192,
            47475
          ]
        ],
        "eTX_errcounts": [
          [
            41216,
            26872,
            8443,
            1486,
            93,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            190,
            2715,
            15069,
            33884,
            42375,
            31784,
            15296,
            2407,
            155,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            739,
            7210,
            27807,
            40444,
            38307,
            20624,
            5763,
            699,
            52,
            0,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            377,
            3976,
            17240,
            35718,
            42290,
            32492,
            14043,
            3451,
            443,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            400,
            3841,
            18004,
            35822,
            42653,
            35187,
            17088,
            3426,
            306,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13430194399916218,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016392659999837633,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06905892400027369,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47368,
            47427,
            47299,
            47290,
            47235,
            47323,
            47213,
            47300,
            47321,
            47060,
            47044,
            47843,
            47399,
            47133,
            47152,
            47099,
            47084,
            47158,
            47359,
            47177,
            47054,
            47215,
            47170,
            47269,
            47353,
            47004,
            47000,
            47088,
            47145,
            49000,
            48556,
            47054,
            47144,
            47112,
            46894,
            47211,
            47144,
            47034,
            47150,
            47072,
            47075,
            47301,
            47106,
            47323,
            47173,
            47392,
            47418,
            47353,
            47537,
            46984,
            46991,
            47054,
            47122,
            47054,
            47129,
            382171,
            49736,
            51339,
            47387,
            47186,
            47128,
            47266,
            47222
          ],
          [
            47368,
            47427,
            47299,
            47290,
            47235,
            47323,
            47213,
            47300,
            47321,
            47060,
            47044,
            47843,
            47399,
            47133,
            47152,
            47099,
            47084,
            47158,
            47359,
            47177,
            47054,
            47215,
            47170,
            47269,
            47353,
            47004,
            47000,
            47088,
            47145,
            49000,
            48556,
            47054,
            47144,
            47112,
            46894,
            47211,
            47144,
            47034,
            47150,
            47072,
            47075,
            47301,
            47106,
            47323,
            47173,
            47392,
            47418,
            47353,
            47537,
            46984,
            46991,
            47054,
            47122,
            47054,
            47129,
            382171,
            49736,
            51339,
            47387,
            47186,
            47128,
            47266,
            47222
          ],
          [
            47368,
            47427,
            47299,
            47290,
            47235,
            47323,
            47213,
            47300,
            47321,
            47060,
            47044,
            47843,
            47399,
            47133,
            47152,
            47099,
            47084,
            47158,
            47359,
            47177,
            47054,
            47215,
            47170,
            47269,
            47353,
            47004,
            47000,
            47088,
            47145,
            49000,
            48556,
            47054,
            47144,
            47112,
            46894,
            47211,
            47144,
            47034,
            47150,
            47072,
            47075,
            47301,
            47106,
            47323,
            47173,
            47392,
            47418,
            47353,
            47537,
            46984,
            46991,
            47054,
            47122,
            47054,
            47129,
            382171,
            49736,
            51339,
            47387,
            47186,
            47128,
            47266,
            47222
          ],
          [
            47368,
            47427,
            47299,
            47290,
            47235,
            47323,
            47213,
            47300,
            47321,
            47060,
            47044,
            47843,
            47399,
            47133,
            47152,
            47099,
            47084,
            47158,
            47359,
            47177,
            47054,
            47215,
            47170,
            47269,
            47353,
            47004,
            47000,
            47088,
            47145,
            49000,
            48556,
            47054,
            47144,
            47112,
            46894,
            47211,
            47144,
            47034,
            47150,
            47072,
            47075,
            47301,
            47106,
            47323,
            47173,
            47392,
            47418,
            47353,
            47537,
            46984,
            46991,
            47054,
            47122,
            47054,
            47129,
            382171,
            49736,
            51339,
            47387,
            47186,
            47128,
            47266,
            47222
          ],
          [
            47368,
            47427,
            47299,
            47290,
            47235,
            47323,
            47213,
            47300,
            47321,
            47060,
            47044,
            47843,
            47399,
            47133,
            47152,
            47099,
            47084,
            47158,
            47359,
            47177,
            47054,
            47215,
            47170,
            47269,
            47353,
            47004,
            47000,
            47088,
            47145,
            49000,
            48556,
            47054,
            47144,
            47112,
            46894,
            47211,
            47144,
            47034,
            47150,
            47072,
            47075,
            47301,
            47106,
            47323,
            47173,
            47392,
            47418,
            47353,
            47537,
            46984,
            46991,
            47054,
            47122,
            47054,
            47129,
            382171,
            49736,
            51339,
            47387,
            47186,
            47128,
            47266,
            47222
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            51,
            750,
            3466,
            10823,
            22310,
            28560,
            29543,
            25929,
            18595,
            9867,
            2693,
            257,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            78,
            1015,
            4374,
            11832,
            21839,
            29437,
            32583,
            27984,
            22453,
            15587,
            7412,
            2141,
            429,
            19,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            3,
            170,
            1810,
            10491,
            23074,
            33259,
            38061,
            33900,
            23719,
            13180,
            4796,
            921,
            89,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            270,
            2824,
            12508,
            25376,
            34435,
            39703,
            36611,
            26343,
            18205,
            8876,
            2574,
            343,
            32,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            59,
            751,
            4421,
            13392,
            24986
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            60,
            1184,
            7460,
            20109,
            30876,
            33457,
            30609,
            21239,
            10843,
            3147,
            486,
            47,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            1,
            120,
            1386,
            9470,
            21637,
            32755,
            35039,
            31497,
            24117,
            16286,
            7136,
            1441,
            86,
            2,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            93,
            1306,
            9105,
            21374,
            31224,
            34179,
            31905,
            23047,
            13989,
            5273,
            973,
            90,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            198,
            2182,
            8153,
            21836,
            30577,
            34085,
            31368,
            25292,
            17201,
            8240,
            2909,
            357,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            14,
            365,
            3084,
            10499,
            21748,
            31777,
            39280,
            39899,
            30481,
            20630,
            11402,
            3433,
            573,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            501,
            3673,
            11958,
            23543,
            33640,
            40092,
            36913,
            28068,
            20827,
            11843,
            5138,
            1978,
            583,
            92,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            155,
            1466,
            7121
          ]
        ]
      },
      "call": {
        "duration": 0.2747659660017234,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff99a97f30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff99a97f30> = array([13, 12, 14, 13, 11]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff99aab550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47368, 47427, 47299, 47290, 47235, 47323, ...], [47368, 47427, 47299, 47290, 47235, 47323, ...], [... 0, 0, ...], [0, 0, 0, 3, 170, 1810, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 14, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff99a97f30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff99a97f30> = array([13, 12, 14, 13, 11]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016179660015041009,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2929231189991697,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170796247999533,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001476692999858642,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.455260578000889,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            255,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            235,
            66,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035147880007571075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002894285000365926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5354761090020475,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            157,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            163,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            71,
            255,
            165,
            255,
            187,
            0,
            0,
            196,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            237,
            0,
            57,
            0,
            255,
            15,
            255,
            12
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            100,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            255,
            136,
            255,
            145,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            207,
            255,
            255,
            0,
            0,
            101,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            75,
            255,
            174
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          6,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034554160010884516,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029029240031377412,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960858789992926,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50346,
            47415,
            47681,
            47454,
            50137,
            47249,
            47506,
            47398,
            47301,
            47415,
            47391,
            47418,
            47439,
            47473,
            47231,
            47417,
            47420,
            47335,
            47607,
            47652,
            47397,
            47671,
            47473,
            47661,
            47589,
            47569,
            47436,
            47506,
            47520,
            47439,
            47523,
            47386,
            47461,
            49212,
            47537,
            47764,
            47492,
            47960,
            47495,
            47713,
            47517,
            47439,
            47566,
            47269,
            47292,
            47603,
            47629,
            47437,
            47350,
            47148,
            47189,
            47283,
            47265,
            47166,
            47450,
            47262,
            47368,
            47423,
            47465,
            47443,
            47520,
            47551,
            47419
          ],
          [
            50346,
            47415,
            47681,
            47454,
            50137,
            47249,
            47506,
            47398,
            47301,
            47415,
            47391,
            47418,
            47439,
            47473,
            47231,
            47417,
            47420,
            47335,
            47607,
            47652,
            47397,
            47671,
            47473,
            47661,
            47589,
            47569,
            47436,
            47506,
            47520,
            47439,
            47523,
            47386,
            47461,
            49212,
            47537,
            47764,
            47492,
            47960,
            47495,
            47713,
            47517,
            47439,
            47566,
            47269,
            47292,
            47603,
            47629,
            47437,
            47350,
            47148,
            47189,
            47283,
            47265,
            47166,
            47450,
            47262,
            47368,
            47423,
            47465,
            47443,
            47520,
            47551,
            47419
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            186,
            3598,
            18105,
            36531,
            36967,
            19384,
            4327,
            298,
            38,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            98,
            2992,
            16004,
            34576,
            40701,
            26234,
            8276,
            1005,
            63,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            1085,
            8108,
            29702,
            42132,
            39144,
            19240,
            4752,
            527,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            135,
            2160,
            13056,
            30526,
            42125,
            38555,
            21074,
            5816,
            735,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1336830000000191,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016341059999831486,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06781185699946946,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47671,
            47174,
            47104,
            47088,
            47139,
            47043,
            47226,
            47181,
            47204,
            47433,
            47428,
            47203,
            47316,
            47223,
            47584,
            49592,
            47105,
            47149,
            47162,
            47157,
            47107,
            46838,
            47033,
            47144,
            47269,
            47351,
            47217,
            47109,
            47243,
            47343,
            47151,
            47112,
            47363,
            47494,
            47465,
            49508,
            47071,
            47140,
            47159,
            47267,
            47084,
            47361,
            47152,
            47196,
            47126,
            46993,
            46836,
            47190,
            47216,
            47270,
            47279,
            47210,
            47276,
            47353,
            47592,
            47451,
            47064,
            47064,
            47095,
            47217,
            47164,
            47127,
            47101
          ],
          [
            47671,
            47174,
            47104,
            47088,
            47139,
            47043,
            47226,
            47181,
            47204,
            47433,
            47428,
            47203,
            47316,
            47223,
            47584,
            49592,
            47105,
            47149,
            47162,
            47157,
            47107,
            46838,
            47033,
            47144,
            47269,
            47351,
            47217,
            47109,
            47243,
            47343,
            47151,
            47112,
            47363,
            47494,
            47465,
            49508,
            47071,
            47140,
            47159,
            47267,
            47084,
            47361,
            47152,
            47196,
            47126,
            46993,
            46836,
            47190,
            47216,
            47270,
            47279,
            47210,
            47276,
            47353,
            47592,
            47451,
            47064,
            47064,
            47095,
            47217,
            47164,
            47127,
            47101
          ],
          [
            47671,
            47174,
            47104,
            47088,
            47139,
            47043,
            47226,
            47181,
            47204,
            47433,
            47428,
            47203,
            47316,
            47223,
            47584,
            49592,
            47105,
            47149,
            47162,
            47157,
            47107,
            46838,
            47033,
            47144,
            47269,
            47351,
            47217,
            47109,
            47243,
            47343,
            47151,
            47112,
            47363,
            47494,
            47465,
            49508,
            47071,
            47140,
            47159,
            47267,
            47084,
            47361,
            47152,
            47196,
            47126,
            46993,
            46836,
            47190,
            47216,
            47270,
            47279,
            47210,
            47276,
            47353,
            47592,
            47451,
            47064,
            47064,
            47095,
            47217,
            47164,
            47127,
            47101
          ],
          [
            47671,
            47174,
            47104,
            47088,
            47139,
            47043,
            47226,
            47181,
            47204,
            47433,
            47428,
            47203,
            47316,
            47223,
            47584,
            49592,
            47105,
            47149,
            47162,
            47157,
            47107,
            46838,
            47033,
            47144,
            47269,
            47351,
            47217,
            47109,
            47243,
            47343,
            47151,
            47112,
            47363,
            47494,
            47465,
            49508,
            47071,
            47140,
            47159,
            47267,
            47084,
            47361,
            47152,
            47196,
            47126,
            46993,
            46836,
            47190,
            47216,
            47270,
            47279,
            47210,
            47276,
            47353,
            47592,
            47451,
            47064,
            47064,
            47095,
            47217,
            47164,
            47127,
            47101
          ],
          [
            47671,
            47174,
            47104,
            47088,
            47139,
            47043,
            47226,
            47181,
            47204,
            47433,
            47428,
            47203,
            47316,
            47223,
            47584,
            49592,
            47105,
            47149,
            47162,
            47157,
            47107,
            46838,
            47033,
            47144,
            47269,
            47351,
            47217,
            47109,
            47243,
            47343,
            47151,
            47112,
            47363,
            47494,
            47465,
            49508,
            47071,
            47140,
            47159,
            47267,
            47084,
            47361,
            47152,
            47196,
            47126,
            46993,
            46836,
            47190,
            47216,
            47270,
            47279,
            47210,
            47276,
            47353,
            47592,
            47451,
            47064,
            47064,
            47095,
            47217,
            47164,
            47127,
            47101
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            220,
            2172,
            10893,
            24728,
            37002,
            37168,
            23348,
            7809,
            1288,
            117,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            462,
            2785,
            13567,
            28057,
            37527,
            37919,
            28433,
            17799,
            5575,
            775,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            25,
            540,
            3958,
            14044,
            29471,
            39507,
            35460,
            19179,
            5476,
            619,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            14,
            177,
            1633,
            7287,
            19240,
            34433,
            43379,
            43057,
            26952,
            12290,
            2528,
            261,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            80,
            1456,
            8157,
            21043,
            35924,
            41272
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            734,
            4981,
            14906,
            28320,
            37565,
            32359,
            15743,
            4216,
            286,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            644,
            5602,
            17174,
            35375,
            41551,
            34309,
            18785,
            5940,
            708,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            112,
            1150,
            6012,
            16578,
            30958,
            41180,
            32072,
            16474,
            4679,
            406,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            233,
            1885,
            7082,
            18427,
            34322,
            41813,
            36019,
            22818,
            7573,
            1304,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            10,
            141,
            2004,
            8588,
            19411,
            31604,
            41191,
            39421,
            26218,
            11031,
            1472,
            195,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            66,
            807,
            3362,
            10603,
            23790,
            37375,
            42193,
            38493,
            25117,
            10536,
            2653,
            473,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            137,
            1838,
            9585,
            20197,
            33569
          ]
        ]
      },
      "call": {
        "duration": 0.2697219840010803,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001490193000790896,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2930879730010929,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170291816997633,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014325619995361194,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.4545435620020726,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            93,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035152080017724074,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002928515001258347,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5398797870002454,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            4,
            255,
            12,
            255,
            7,
            37,
            0,
            255,
            0,
            255,
            255
          ],
          [
            67,
            0,
            8,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            46,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            250,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            10,
            255,
            48,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            3,
            1,
            0,
            255,
            0,
            255,
            255
          ],
          [
            109,
            0,
            1,
            0,
            11,
            0,
            255,
            144,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            111,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            68,
            0,
            2,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            97,
            255,
            35,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034555370002635755,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028687230005743913,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2966213909967337,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48078,
            47656,
            47626,
            47359,
            47613,
            47426,
            47578,
            47604,
            47562,
            47422,
            47434,
            47581,
            47477,
            47488,
            47541,
            47181,
            47287,
            47587,
            47660,
            47655,
            47658,
            47454,
            47484,
            47513,
            47609,
            47664,
            47480,
            47441,
            47415,
            47483,
            47398,
            47550,
            47443,
            47487,
            47490,
            47506,
            47251,
            47681,
            47339,
            47434,
            47536,
            47742,
            47611,
            47707,
            47435,
            47420,
            47323,
            47345,
            47497,
            47606,
            47538,
            47513,
            47532,
            47396,
            47507,
            49347,
            47466,
            47831,
            47514,
            49938,
            47510,
            47413,
            47486
          ],
          [
            48078,
            47656,
            47626,
            47359,
            47613,
            47426,
            47578,
            47604,
            47562,
            47422,
            47434,
            47581,
            47477,
            47488,
            47541,
            47181,
            47287,
            47587,
            47660,
            47655,
            47658,
            47454,
            47484,
            47513,
            47609,
            47664,
            47480,
            47441,
            47415,
            47483,
            47398,
            47550,
            47443,
            47487,
            47490,
            47506,
            47251,
            47681,
            47339,
            47434,
            47536,
            47742,
            47611,
            47707,
            47435,
            47420,
            47323,
            47345,
            47497,
            47606,
            47538,
            47513,
            47532,
            47396,
            47507,
            49347,
            47466,
            47831,
            47514,
            49938,
            47510,
            47413,
            47486
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            569,
            6588,
            24728,
            39296,
            34004,
            14839,
            2886,
            285,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            510,
            6218,
            21901,
            37630,
            38793,
            21843,
            5405,
            720,
            29,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            1,
            78,
            1850,
            14151,
            32248,
            41267,
            29285,
            9690,
            1678,
            120,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            485,
            5747,
            21505,
            38412,
            41957,
            30800,
            12538,
            2270,
            270,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            37,
            905,
            7979,
            24540,
            40105,
            43350
          ]
        ]
      },
      "call": {
        "duration": 0.1341086800021003,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001620246002858039,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06830152799739153,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47751,
            47333,
            47301,
            47492,
            47161,
            47185,
            47432,
            46888,
            47599,
            47283,
            47375,
            47530,
            47187,
            47459,
            47321,
            49203,
            49114,
            47403,
            47494,
            47255,
            47301,
            47446,
            47235,
            47480,
            47325,
            47296,
            47470,
            47266,
            47476,
            47304,
            47509,
            47533,
            47127,
            47910,
            47380,
            47246,
            47448,
            47334,
            47199,
            47166,
            47227,
            47412,
            47159,
            47327,
            47401,
            47319,
            47586,
            47442,
            47647,
            47297,
            47817,
            47711,
            47390,
            47333,
            47167,
            47191,
            47038,
            47224,
            47505,
            47111,
            47366,
            47367,
            47224
          ],
          [
            47751,
            47333,
            47301,
            47492,
            47161,
            47185,
            47432,
            46888,
            47599,
            47283,
            47375,
            47530,
            47187,
            47459,
            47321,
            49203,
            49114,
            47403,
            47494,
            47255,
            47301,
            47446,
            47235,
            47480,
            47325,
            47296,
            47470,
            47266,
            47476,
            47304,
            47509,
            47533,
            47127,
            47910,
            47380,
            47246,
            47448,
            47334,
            47199,
            47166,
            47227,
            47412,
            47159,
            47327,
            47401,
            47319,
            47586,
            47442,
            47647,
            47297,
            47817,
            47711,
            47390,
            47333,
            47167,
            47191,
            47038,
            47224,
            47505,
            47111,
            47366,
            47367,
            47224
          ],
          [
            47751,
            47333,
            47301,
            47492,
            47161,
            47185,
            47432,
            46888,
            47599,
            47283,
            47375,
            47530,
            47187,
            47459,
            47321,
            49203,
            49114,
            47403,
            47494,
            47255,
            47301,
            47446,
            47235,
            47480,
            47325,
            47296,
            47470,
            47266,
            47476,
            47304,
            47509,
            47533,
            47127,
            47910,
            47380,
            47246,
            47448,
            47334,
            47199,
            47166,
            47227,
            47412,
            47159,
            47327,
            47401,
            47319,
            47586,
            47442,
            47647,
            47297,
            47817,
            47711,
            47390,
            47333,
            47167,
            47191,
            47038,
            47224,
            47505,
            47111,
            47366,
            47367,
            47224
          ],
          [
            47751,
            47333,
            47301,
            47492,
            47161,
            47185,
            47432,
            46888,
            47599,
            47283,
            47375,
            47530,
            47187,
            47459,
            47321,
            49203,
            49114,
            47403,
            47494,
            47255,
            47301,
            47446,
            47235,
            47480,
            47325,
            47296,
            47470,
            47266,
            47476,
            47304,
            47509,
            47533,
            47127,
            47910,
            47380,
            47246,
            47448,
            47334,
            47199,
            47166,
            47227,
            47412,
            47159,
            47327,
            47401,
            47319,
            47586,
            47442,
            47647,
            47297,
            47817,
            47711,
            47390,
            47333,
            47167,
            47191,
            47038,
            47224,
            47505,
            47111,
            47366,
            47367,
            47224
          ],
          [
            47751,
            47333,
            47301,
            47492,
            47161,
            47185,
            47432,
            46888,
            47599,
            47283,
            47375,
            47530,
            47187,
            47459,
            47321,
            49203,
            49114,
            47403,
            47494,
            47255,
            47301,
            47446,
            47235,
            47480,
            47325,
            47296,
            47470,
            47266,
            47476,
            47304,
            47509,
            47533,
            47127,
            47910,
            47380,
            47246,
            47448,
            47334,
            47199,
            47166,
            47227,
            47412,
            47159,
            47327,
            47401,
            47319,
            47586,
            47442,
            47647,
            47297,
            47817,
            47711,
            47390,
            47333,
            47167,
            47191,
            47038,
            47224,
            47505,
            47111,
            47366,
            47367,
            47224
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            75,
            677,
            5359,
            16995,
            29506,
            35675,
            33053,
            25129,
            15781,
            4604,
            647,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            175,
            1641,
            8720,
            22029,
            35766,
            40797,
            33765,
            19723,
            6468,
            1154,
            89,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            171,
            1119,
            4312,
            10434,
            22069,
            35196,
            41259,
            37988,
            23878,
            8828,
            1652,
            172,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            57,
            916,
            5325,
            14951,
            29044,
            40501,
            40069,
            29400,
            12422,
            2352,
            228,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            11846,
            2872,
            258,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            170,
            1586,
            7019,
            18077,
            32413,
            38519,
            31086,
            16059,
            4942,
            700,
            14,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            95,
            1483,
            8410,
            18399,
            29332,
            38236,
            34565,
            21639,
            7759,
            1268,
            123,
            1,
            0,
            0,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            58,
            937,
            4527,
            12710,
            25548,
            38814,
            42687,
            35504,
            21932,
            8454,
            1798,
            210,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            72,
            1170,
            6550,
            17040,
            27918,
            37999,
            36169,
            23103,
            9101,
            1824,
            159,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            238,
            1893,
            6376,
            15526,
            25677,
            37266,
            42429,
            35959,
            22238,
            10325,
            2592,
            480,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            310,
            2740,
            10285,
            19925,
            31725,
            40548,
            42940,
            36813,
            23897,
            9802,
            1921,
            261,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27145347199984826,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014805029968556482,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29316519500207505,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.171464962997561,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045739, 10011435), (411160, 411160), (40045999, 10011499))\nassert ((40045739 > 0 and 10011435 == 0\n  +10011435\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff99aab310>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff998633a0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff99aec3a0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045739, 10011435), (411160, 411160), (40045999, 10011499))\nE       assert ((40045739 > 0 and 10011435 == 0\nE         +10011435\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004983471000741702,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}