{
  "created": 1722031830.3645513,
  "duration": 23.195513486862183,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5050562129981699,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1483964079998259,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013165790005587041,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003903805998561438,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1480219090008177,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012479370016080793,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13287121200119145,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12164808300076402,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012600580012076534,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003913526998076122,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12109418099862523,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012652779987547547,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034729070030152798,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14669711000169627,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012109470007999334,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034848470022552647,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12020460099665797,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011831060000986326,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034825379989342764,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464661050013092,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012200970013509504,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034950479966937564,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12017507999917143,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011967870013904758,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004498930000409018,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021031969990872312,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011650760025077034,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034360069985268638,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017352690010739025,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011015950003638864,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003396105999854626,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040637400015839376,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031812.9279797,
            "msecs": 927.9797077178955,
            "relativeCreated": 7730.602264404297,
            "thread": 281473885237280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4421
          }
        ]
      },
      "teardown": {
        "duration": 0.0011999669986835215,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003444796999247046,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002379382996878121,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031812.9404511,
            "msecs": 940.4511451721191,
            "relativeCreated": 7743.0737018585205,
            "thread": 281473885237280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4421
          }
        ]
      },
      "teardown": {
        "duration": 0.0011922869998670649,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021961090023978613,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027300309993734118,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031812.9501543,
            "msecs": 950.1543045043945,
            "relativeCreated": 7752.776861190796,
            "thread": 281473885237280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4421
          }
        ]
      },
      "teardown": {
        "duration": 0.001053983000019798,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021547379983530845,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034085850020346697,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031812.9598017,
            "msecs": 959.8016738891602,
            "relativeCreated": 7762.4242305755615,
            "thread": 281473885237280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4421
          }
        ]
      },
      "teardown": {
        "duration": 0.0011107140016974881,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034261370019521564,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464393740025116,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011990370003331918,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003431416000239551,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12040770500243525,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001180195999040734,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17841522399976384,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14763874100026442,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012725389970000833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015404592002596473,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120659400170553,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012609280020114966,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8500037390003854,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            13,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            89,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            10,
            82,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003571009998267982,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028722339993692003,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9039269269997021,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            14,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            240,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            49,
            255,
            255,
            255,
            14
          ],
          [
            19,
            0,
            2,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            62,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            137,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            180,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            236,
            255,
            255,
            255,
            255,
            0,
            0,
            186,
            2,
            136,
            255
          ],
          [
            255,
            0,
            138,
            0,
            255,
            0,
            219,
            70,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.00348247800138779,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002898095001000911,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3029540219977207,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            51290,
            47560,
            47402,
            47612,
            47270,
            47378,
            47188,
            47468,
            47405,
            47539,
            47279,
            47634,
            47372,
            47475,
            47324,
            47613,
            47334,
            47591,
            47359,
            47348,
            47504,
            47512,
            47450,
            47511,
            47160,
            47184,
            47422,
            47436,
            47142,
            47064,
            47464,
            47990,
            47515,
            47763,
            47421,
            49812,
            47567,
            47560,
            47489,
            47539,
            47505,
            47465,
            47485,
            47378,
            47592,
            47465,
            47543,
            47611,
            47365,
            47267,
            47469,
            47471,
            47489,
            47406,
            47411,
            47516,
            47391,
            47533,
            47303,
            47604,
            47288,
            47384,
            47483
          ],
          [
            51290,
            47560,
            47402,
            47612,
            47270,
            47378,
            47188,
            47468,
            47405,
            47539,
            47279,
            47634,
            47372,
            47475,
            47324,
            47613,
            47334,
            47591,
            47359,
            47348,
            47504,
            47512,
            47450,
            47511,
            47160,
            47184,
            47422,
            47436,
            47142,
            47064,
            47464,
            47990,
            47515,
            47763,
            47421,
            49812,
            47567,
            47560,
            47489,
            47539,
            47505,
            47465,
            47485,
            47378,
            47592,
            47465,
            47543,
            47611,
            47365,
            47267,
            47469,
            47471,
            47489,
            47406,
            47411,
            47516,
            47391,
            47533,
            47303,
            47604,
            47288,
            47384,
            47483
          ]
        ],
        "eTX_errcounts": [
          [
            42995,
            26213,
            8537,
            1137,
            151,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            233,
            2843,
            15901,
            33721,
            42638,
            31312,
            14508,
            2250,
            111,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            1050,
            7845,
            25673,
            39677,
            37823,
            19613,
            5736,
            677,
            10,
            2,
            0,
            0
          ],
          [
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            8,
            282,
            3781,
            17268,
            35912,
            41738,
            31684,
            13160,
            3209,
            431,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            22,
            351,
            4187,
            18906,
            36032,
            42873,
            35027,
            17506,
            3523,
            327,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13365456000246922,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016056950007623527,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06922410799961654,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48153,
            47349,
            47267,
            47035,
            49067,
            49241,
            47221,
            47274,
            47157,
            47360,
            47101,
            46839,
            47044,
            47280,
            47175,
            47196,
            47320,
            47297,
            47154,
            47462,
            47089,
            47311,
            47355,
            49173,
            47536,
            47166,
            47099,
            47370,
            47155,
            47119,
            46918,
            47231,
            47110,
            47255,
            47171,
            47198,
            46862,
            47279,
            47110,
            47294,
            47304,
            47184,
            47351,
            47549,
            47126,
            47245,
            47158,
            47214,
            47131,
            47244,
            47172,
            47217,
            47279,
            47098,
            47198,
            47340,
            47341,
            47311,
            47431,
            47305,
            47288,
            47011,
            47538
          ],
          [
            48153,
            47349,
            47267,
            47035,
            49067,
            49241,
            47221,
            47274,
            47157,
            47360,
            47101,
            46839,
            47044,
            47280,
            47175,
            47196,
            47320,
            47297,
            47154,
            47462,
            47089,
            47311,
            47355,
            49173,
            47536,
            47166,
            47099,
            47370,
            47155,
            47119,
            46918,
            47231,
            47110,
            47255,
            47171,
            47198,
            46862,
            47279,
            47110,
            47294,
            47304,
            47184,
            47351,
            47549,
            47126,
            47245,
            47158,
            47214,
            47131,
            47244,
            47172,
            47217,
            47279,
            47098,
            47198,
            47340,
            47341,
            47311,
            47431,
            47305,
            47288,
            47011,
            47538
          ],
          [
            48153,
            47349,
            47267,
            47035,
            49067,
            49241,
            47221,
            47274,
            47157,
            47360,
            47101,
            46839,
            47044,
            47280,
            47175,
            47196,
            47320,
            47297,
            47154,
            47462,
            47089,
            47311,
            47355,
            49173,
            47536,
            47166,
            47099,
            47370,
            47155,
            47119,
            46918,
            47231,
            47110,
            47255,
            47171,
            47198,
            46862,
            47279,
            47110,
            47294,
            47304,
            47184,
            47351,
            47549,
            47126,
            47245,
            47158,
            47214,
            47131,
            47244,
            47172,
            47217,
            47279,
            47098,
            47198,
            47340,
            47341,
            47311,
            47431,
            47305,
            47288,
            47011,
            47538
          ],
          [
            48153,
            47349,
            47267,
            47035,
            49067,
            49241,
            47221,
            47274,
            47157,
            47360,
            47101,
            46839,
            47044,
            47280,
            47175,
            47196,
            47320,
            47297,
            47154,
            47462,
            47089,
            47311,
            47355,
            49173,
            47536,
            47166,
            47099,
            47370,
            47155,
            47119,
            46918,
            47231,
            47110,
            47255,
            47171,
            47198,
            46862,
            47279,
            47110,
            47294,
            47304,
            47184,
            47351,
            47549,
            47126,
            47245,
            47158,
            47214,
            47131,
            47244,
            47172,
            47217,
            47279,
            47098,
            47198,
            47340,
            47341,
            47311,
            47431,
            47305,
            47288,
            47011,
            47538
          ],
          [
            48153,
            47349,
            47267,
            47035,
            49067,
            49241,
            47221,
            47274,
            47157,
            47360,
            47101,
            46839,
            47044,
            47280,
            47175,
            47196,
            47320,
            47297,
            47154,
            47462,
            47089,
            47311,
            47355,
            49173,
            47536,
            47166,
            47099,
            47370,
            47155,
            47119,
            46918,
            47231,
            47110,
            47255,
            47171,
            47198,
            46862,
            47279,
            47110,
            47294,
            47304,
            47184,
            47351,
            47549,
            47126,
            47245,
            47158,
            47214,
            47131,
            47244,
            47172,
            47217,
            47279,
            47098,
            47198,
            47340,
            47341,
            47311,
            47431,
            47305,
            47288,
            47011,
            47538
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            21,
            487,
            2510,
            9199,
            21885,
            33181,
            36534,
            31798,
            21950,
            9840,
            2693,
            476,
            91,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            46,
            753,
            4072,
            11942,
            23248,
            32028,
            36023,
            31195,
            23562,
            12822,
            4948,
            992,
            144,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            8,
            189,
            1321,
            4212,
            9919,
            21916,
            35682,
            39533,
            35453,
            26426,
            16378,
            9312,
            3391,
            772,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            176,
            1397,
            5906,
            15211,
            26550,
            32044,
            34398,
            35892,
            28734,
            17415,
            7078,
            1681,
            158,
            15,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            47,
            569,
            2247,
            5941,
            13222,
            26749
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            111,
            1028,
            5059,
            15512,
            30732,
            35390,
            32446,
            23353,
            13372,
            5172,
            1187,
            91,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            108,
            1192,
            6307,
            14583,
            28220,
            35889,
            33862,
            23938,
            12414,
            3282,
            451,
            28,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            355,
            2172,
            8239,
            19401,
            33928,
            37994,
            34816,
            26858,
            16532,
            7405,
            1799,
            158,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            41,
            571,
            2992,
            7942,
            16385,
            27685,
            36435,
            34631,
            26498,
            16331,
            7264,
            1922,
            181,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            19,
            228,
            1266,
            3572,
            7885,
            17629,
            33309,
            39012,
            37166,
            31120,
            22848,
            14341,
            8243,
            3174,
            537,
            64,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            164,
            1231,
            4657,
            12777,
            24718,
            32955,
            35564,
            37731,
            33706,
            24653,
            15613,
            7637,
            1801,
            266,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            122,
            975,
            3176,
            8544
          ]
        ]
      },
      "call": {
        "duration": 0.27222919900304987,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffaa2c8750>()\n +    where <built-in method all of numpy.ndarray object at 0xffffaa2c8750> = array([21, 12, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffaa2d1490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48153, 47349, 47267, 47035, 49067, 49241, ...], [48153, 47349, 47267, 47035, 49067, 49241, ...], [..., ...], [0, 0, 8, 189, 1321, 4212, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 2, 19, 228, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffaa2c8750>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffaa2c8750> = array([21, 12, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016291259998979513,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2929129190015374,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170774166999763,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014208609973138664,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.315267717000097,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            31,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            201,
            92,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035253479982202407,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029043350004940294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5341463900003873,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            239,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            5,
            255,
            231,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            85,
            255,
            124,
            255,
            139,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            210,
            0,
            158,
            7,
            255,
            52,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            50,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            11,
            255,
            242,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            192,
            255,
            165,
            255,
            255,
            3,
            0,
            174,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            0,
            255,
            133,
            255,
            126
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003478396996797528,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028866040011052974,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29599296699961997,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48522,
            47773,
            47618,
            47551,
            47625,
            47575,
            47497,
            47737,
            47501,
            47478,
            47251,
            47518,
            47385,
            47532,
            47409,
            47478,
            47278,
            47511,
            47411,
            47443,
            47456,
            47458,
            47464,
            47334,
            47330,
            47458,
            47375,
            47515,
            47387,
            47552,
            47403,
            47521,
            47467,
            47870,
            47358,
            47817,
            47590,
            49529,
            47466,
            47344,
            47338,
            47353,
            47462,
            47334,
            47375,
            47428,
            47524,
            47479,
            47428,
            47125,
            47137,
            47372,
            47464,
            47287,
            47438,
            47504,
            47499,
            47410,
            47299,
            47298,
            47430,
            47512,
            47523
          ],
          [
            48522,
            47773,
            47618,
            47551,
            47625,
            47575,
            47497,
            47737,
            47501,
            47478,
            47251,
            47518,
            47385,
            47532,
            47409,
            47478,
            47278,
            47511,
            47411,
            47443,
            47456,
            47458,
            47464,
            47334,
            47330,
            47458,
            47375,
            47515,
            47387,
            47552,
            47403,
            47521,
            47467,
            47870,
            47358,
            47817,
            47590,
            49529,
            47466,
            47344,
            47338,
            47353,
            47462,
            47334,
            47375,
            47428,
            47524,
            47479,
            47428,
            47125,
            47137,
            47372,
            47464,
            47287,
            47438,
            47504,
            47499,
            47410,
            47299,
            47298,
            47430,
            47512,
            47523
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            341,
            3552,
            17034,
            36390,
            36525,
            19403,
            4551,
            355,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            111,
            2839,
            15643,
            35209,
            40202,
            26435,
            8685,
            900,
            105,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            821,
            8428,
            28999,
            41946,
            38678,
            18935,
            4765,
            378,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            226,
            2265,
            13332,
            31123,
            41918,
            38803,
            20622,
            5499,
            551,
            60,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1335498570006166,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016317959998559672,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689306719978049,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47932,
            47445,
            47322,
            47295,
            47261,
            47423,
            47318,
            47291,
            47702,
            47237,
            47364,
            47242,
            47241,
            46964,
            47275,
            47328,
            47400,
            47245,
            47231,
            47114,
            47305,
            47158,
            47461,
            47288,
            47007,
            47421,
            47743,
            47088,
            47282,
            47141,
            47150,
            47230,
            47261,
            47216,
            47236,
            47352,
            47365,
            47273,
            47323,
            47083,
            47391,
            47267,
            47279,
            47248,
            47675,
            49724,
            47148,
            47119,
            47014,
            47186,
            47357,
            47035,
            47233,
            47153,
            47180,
            47264,
            47224,
            47338,
            47360,
            47132,
            47540,
            47264,
            47138
          ],
          [
            47932,
            47445,
            47322,
            47295,
            47261,
            47423,
            47318,
            47291,
            47702,
            47237,
            47364,
            47242,
            47241,
            46964,
            47275,
            47328,
            47400,
            47245,
            47231,
            47114,
            47305,
            47158,
            47461,
            47288,
            47007,
            47421,
            47743,
            47088,
            47282,
            47141,
            47150,
            47230,
            47261,
            47216,
            47236,
            47352,
            47365,
            47273,
            47323,
            47083,
            47391,
            47267,
            47279,
            47248,
            47675,
            49724,
            47148,
            47119,
            47014,
            47186,
            47357,
            47035,
            47233,
            47153,
            47180,
            47264,
            47224,
            47338,
            47360,
            47132,
            47540,
            47264,
            47138
          ],
          [
            47932,
            47445,
            47322,
            47295,
            47261,
            47423,
            47318,
            47291,
            47702,
            47237,
            47364,
            47242,
            47241,
            46964,
            47275,
            47328,
            47400,
            47245,
            47231,
            47114,
            47305,
            47158,
            47461,
            47288,
            47007,
            47421,
            47743,
            47088,
            47282,
            47141,
            47150,
            47230,
            47261,
            47216,
            47236,
            47352,
            47365,
            47273,
            47323,
            47083,
            47391,
            47267,
            47279,
            47248,
            47675,
            49724,
            47148,
            47119,
            47014,
            47186,
            47357,
            47035,
            47233,
            47153,
            47180,
            47264,
            47224,
            47338,
            47360,
            47132,
            47540,
            47264,
            47138
          ],
          [
            47932,
            47445,
            47322,
            47295,
            47261,
            47423,
            47318,
            47291,
            47702,
            47237,
            47364,
            47242,
            47241,
            46964,
            47275,
            47328,
            47400,
            47245,
            47231,
            47114,
            47305,
            47158,
            47461,
            47288,
            47007,
            47421,
            47743,
            47088,
            47282,
            47141,
            47150,
            47230,
            47261,
            47216,
            47236,
            47352,
            47365,
            47273,
            47323,
            47083,
            47391,
            47267,
            47279,
            47248,
            47675,
            49724,
            47148,
            47119,
            47014,
            47186,
            47357,
            47035,
            47233,
            47153,
            47180,
            47264,
            47224,
            47338,
            47360,
            47132,
            47540,
            47264,
            47138
          ],
          [
            47932,
            47445,
            47322,
            47295,
            47261,
            47423,
            47318,
            47291,
            47702,
            47237,
            47364,
            47242,
            47241,
            46964,
            47275,
            47328,
            47400,
            47245,
            47231,
            47114,
            47305,
            47158,
            47461,
            47288,
            47007,
            47421,
            47743,
            47088,
            47282,
            47141,
            47150,
            47230,
            47261,
            47216,
            47236,
            47352,
            47365,
            47273,
            47323,
            47083,
            47391,
            47267,
            47279,
            47248,
            47675,
            49724,
            47148,
            47119,
            47014,
            47186,
            47357,
            47035,
            47233,
            47153,
            47180,
            47264,
            47224,
            47338,
            47360,
            47132,
            47540,
            47264,
            47138
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            233,
            2663,
            12546,
            25485,
            34342,
            33870,
            23593,
            10903,
            3146,
            459,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            830,
            4747,
            15133,
            25915,
            36242,
            39098,
            31634,
            18650,
            4693,
            749,
            19,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            6,
            193,
            1565,
            6422,
            17913,
            33212,
            38737,
            33568,
            18445,
            6584,
            1006,
            115,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            165,
            1969,
            10364,
            24787,
            36563,
            42046,
            40590,
            30610,
            16582,
            5093,
            765,
            35,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            50,
            393,
            2357,
            8065,
            18812,
            32389,
            37598
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            425,
            3827,
            16136,
            30550,
            36487,
            31644,
            18228,
            7048,
            1236,
            72,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            892,
            7613,
            21194,
            37836,
            43747,
            35701,
            22030,
            9847,
            2045,
            129,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            134,
            1118,
            6254,
            19529,
            34013,
            38425,
            33863,
            20320,
            8367,
            1578,
            110,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            243,
            3097,
            12231,
            24344,
            33677,
            38486,
            35147,
            25834,
            13028,
            3243,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            8,
            179,
            1987,
            8546,
            21432,
            33730,
            39437,
            35857,
            24590,
            12293,
            2853,
            447,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            503,
            3941,
            14514,
            26292,
            35976,
            40967,
            37838,
            27447,
            13183,
            3654,
            488,
            22,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            90,
            943,
            5521,
            16793,
            31734
          ]
        ]
      },
      "call": {
        "duration": 0.2708920990007755,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001474862998293247,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2919047769973986,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170596354000736,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014273419983510394,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3341551760022412,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            92,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003502337000099942,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002883424000174273,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5349908179996419,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            8,
            255,
            15,
            255,
            1,
            60,
            0,
            255,
            1,
            255,
            255
          ],
          [
            88,
            0,
            21,
            0,
            5,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            47,
            255,
            2,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            224,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            17,
            255,
            55,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            3,
            0,
            255,
            2,
            255,
            255
          ],
          [
            67,
            0,
            2,
            0,
            17,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            100,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            84,
            0,
            6,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            113,
            255,
            88,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003477166999800829,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028860650018032175,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2966088810026122,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47993,
            47578,
            47514,
            47501,
            47494,
            47568,
            47358,
            47433,
            47436,
            47454,
            47438,
            47481,
            47553,
            47505,
            47503,
            47640,
            47478,
            47342,
            47485,
            47493,
            47627,
            47603,
            47524,
            47879,
            47511,
            47898,
            47231,
            48139,
            47468,
            47371,
            47316,
            47370,
            47597,
            47373,
            47491,
            47439,
            47335,
            47404,
            47471,
            47455,
            47459,
            47460,
            47473,
            47477,
            47494,
            47609,
            47462,
            47458,
            47475,
            47407,
            47489,
            47526,
            47548,
            47536,
            47438,
            47431,
            47461,
            47389,
            47843,
            47484,
            47720,
            47409,
            49586
          ],
          [
            47993,
            47578,
            47514,
            47501,
            47494,
            47568,
            47358,
            47433,
            47436,
            47454,
            47438,
            47481,
            47553,
            47505,
            47503,
            47640,
            47478,
            47342,
            47485,
            47493,
            47627,
            47603,
            47524,
            47879,
            47511,
            47898,
            47231,
            48139,
            47468,
            47371,
            47316,
            47370,
            47597,
            47373,
            47491,
            47439,
            47335,
            47404,
            47471,
            47455,
            47459,
            47460,
            47473,
            47477,
            47494,
            47609,
            47462,
            47458,
            47475,
            47407,
            47489,
            47526,
            47548,
            47536,
            47438,
            47431,
            47461,
            47389,
            47843,
            47484,
            47720,
            47409,
            49586
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            437,
            6589,
            23213,
            39739,
            34346,
            15543,
            3324,
            235,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            499,
            5703,
            21859,
            37831,
            38536,
            22331,
            5471,
            809,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            3,
            121,
            1749,
            13809,
            32810,
            40957,
            29949,
            10596,
            1699,
            86,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            531,
            6007,
            21395,
            38487,
            42308,
            30660,
            12879,
            2198,
            191,
            13,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            882,
            7664,
            24644,
            40108,
            46093
          ]
        ]
      },
      "call": {
        "duration": 0.13362563899863744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015861650026636198,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06900102399958996,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48136,
            47454,
            47273,
            47685,
            48868,
            49133,
            47136,
            47211,
            47166,
            47153,
            47121,
            47168,
            46829,
            47199,
            47316,
            47197,
            47064,
            47395,
            47116,
            47251,
            47376,
            47361,
            47151,
            47648,
            49141,
            47204,
            47101,
            47338,
            47033,
            47377,
            47217,
            47286,
            47290,
            47243,
            47124,
            47511,
            47225,
            47069,
            47479,
            47248,
            47433,
            47375,
            47779,
            47294,
            47147,
            47261,
            47034,
            47183,
            47150,
            47153,
            47133,
            47170,
            47165,
            47077,
            47137,
            47267,
            47205,
            47238,
            47125,
            47214,
            47312,
            47593,
            47755
          ],
          [
            48136,
            47454,
            47273,
            47685,
            48868,
            49133,
            47136,
            47211,
            47166,
            47153,
            47121,
            47168,
            46829,
            47199,
            47316,
            47197,
            47064,
            47395,
            47116,
            47251,
            47376,
            47361,
            47151,
            47648,
            49141,
            47204,
            47101,
            47338,
            47033,
            47377,
            47217,
            47286,
            47290,
            47243,
            47124,
            47511,
            47225,
            47069,
            47479,
            47248,
            47433,
            47375,
            47779,
            47294,
            47147,
            47261,
            47034,
            47183,
            47150,
            47153,
            47133,
            47170,
            47165,
            47077,
            47137,
            47267,
            47205,
            47238,
            47125,
            47214,
            47312,
            47593,
            47755
          ],
          [
            48136,
            47454,
            47273,
            47685,
            48868,
            49133,
            47136,
            47211,
            47166,
            47153,
            47121,
            47168,
            46829,
            47199,
            47316,
            47197,
            47064,
            47395,
            47116,
            47251,
            47376,
            47361,
            47151,
            47648,
            49141,
            47204,
            47101,
            47338,
            47033,
            47377,
            47217,
            47286,
            47290,
            47243,
            47124,
            47511,
            47225,
            47069,
            47479,
            47248,
            47433,
            47375,
            47779,
            47294,
            47147,
            47261,
            47034,
            47183,
            47150,
            47153,
            47133,
            47170,
            47165,
            47077,
            47137,
            47267,
            47205,
            47238,
            47125,
            47214,
            47312,
            47593,
            47755
          ],
          [
            48136,
            47454,
            47273,
            47685,
            48868,
            49133,
            47136,
            47211,
            47166,
            47153,
            47121,
            47168,
            46829,
            47199,
            47316,
            47197,
            47064,
            47395,
            47116,
            47251,
            47376,
            47361,
            47151,
            47648,
            49141,
            47204,
            47101,
            47338,
            47033,
            47377,
            47217,
            47286,
            47290,
            47243,
            47124,
            47511,
            47225,
            47069,
            47479,
            47248,
            47433,
            47375,
            47779,
            47294,
            47147,
            47261,
            47034,
            47183,
            47150,
            47153,
            47133,
            47170,
            47165,
            47077,
            47137,
            47267,
            47205,
            47238,
            47125,
            47214,
            47312,
            47593,
            47755
          ],
          [
            48136,
            47454,
            47273,
            47685,
            48868,
            49133,
            47136,
            47211,
            47166,
            47153,
            47121,
            47168,
            46829,
            47199,
            47316,
            47197,
            47064,
            47395,
            47116,
            47251,
            47376,
            47361,
            47151,
            47648,
            49141,
            47204,
            47101,
            47338,
            47033,
            47377,
            47217,
            47286,
            47290,
            47243,
            47124,
            47511,
            47225,
            47069,
            47479,
            47248,
            47433,
            47375,
            47779,
            47294,
            47147,
            47261,
            47034,
            47183,
            47150,
            47153,
            47133,
            47170,
            47165,
            47077,
            47137,
            47267,
            47205,
            47238,
            47125,
            47214,
            47312,
            47593,
            47755
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            223,
            2043,
            8593,
            17915,
            28547,
            35688,
            35615,
            27374,
            13726,
            3187,
            289,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            273,
            2478,
            10004,
            21990,
            34058,
            37992,
            33061,
            20142,
            8487,
            2257,
            384,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            64,
            778,
            4729,
            15209,
            27245,
            34982,
            38613,
            36598,
            25965,
            13662,
            5212,
            816,
            38,
            4,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            152,
            1478,
            6000,
            15535,
            28169,
            35444,
            34926,
            26502,
            13416,
            4343,
            995,
            77,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            14573,
            5607,
            1035,
            74,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            191,
            2463,
            11041,
            23866,
            36749,
            39814,
            32678,
            19569,
            8000,
            1731,
            88,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            364,
            3994,
            14493,
            27704,
            38364,
            35224,
            23241,
            9753,
            2322,
            278,
            12,
            0,
            0,
            0,
            0
          ],
          [
            83,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            103,
            1222,
            6962,
            20162,
            31097,
            39172,
            39417,
            33778,
            25201,
            12214,
            3649,
            381,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            44,
            488,
            2971,
            12278,
            25002,
            34917,
            33192,
            22649,
            10486,
            4076,
            900,
            98,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            59,
            1321,
            6384,
            18351,
            28563,
            36947,
            39462,
            35189,
            24319,
            12555,
            3322,
            447,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            229,
            1497,
            6906,
            18020,
            30238,
            39064,
            40017,
            33596,
            23032,
            12758,
            5660,
            1577,
            171,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27058408300217707,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014851829982944764,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2920808210001269,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1706711150000046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004798186000698479,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}