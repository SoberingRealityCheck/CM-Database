{
  "created": 1722032580.7712328,
  "duration": 23.462968587875366,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5062464069997077,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14834513799723936,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013260290033940692,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038105950006865896,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14791477900143946,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012735580021399073,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13249038600042695,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1217064960001153,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012705879998975433,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003805554999416927,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12107408200245118,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001302208998822607,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033709349991113413,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14651776800019434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012298180008656345,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033693149998725858,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11999522900077864,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012217769981361926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033648749995336402,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1461063990027469,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00117806599882897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00334849499995471,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11994785700153443,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011793260018748697,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004413398000906454,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021441479984787293,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011359449999872595,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003316033002192853,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001722937999147689,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011259249986323994,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003318433999083936,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040621499974804465,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032563.073559,
            "msecs": 73.55904579162598,
            "relativeCreated": 7737.642049789429,
            "thread": 281473303068704,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4782
          }
        ]
      },
      "teardown": {
        "duration": 0.0012360879991319962,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033890250015247148,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00242234400138841,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032563.0859234,
            "msecs": 85.92343330383301,
            "relativeCreated": 7750.006437301636,
            "thread": 281473303068704,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4782
          }
        ]
      },
      "teardown": {
        "duration": 0.0011449150006228592,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002063776002614759,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027338110012351535,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032563.095449,
            "msecs": 95.44897079467773,
            "relativeCreated": 7759.5319747924805,
            "thread": 281473303068704,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4782
          }
        ]
      },
      "teardown": {
        "duration": 0.0010821840005519334,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020822859987674747,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003460997002548538,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032563.1049135,
            "msecs": 104.91347312927246,
            "relativeCreated": 7768.996477127075,
            "thread": 281473303068704,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4782
          }
        ]
      },
      "teardown": {
        "duration": 0.0010611239995341748,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033142339998448733,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1465291079985036,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011904269995284267,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003336705001856899,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12041919799958123,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011793559970101342,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17454898100186256,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14753332100008265,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012731980023090728,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0152496090013301,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12134192799931043,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012695080004050396,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8391014949993405,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            10,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            69,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            17,
            121,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035970799981441814,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029123149979568552,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8955599340006302,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            5,
            0,
            0,
            0,
            0
          ],
          [
            0,
            19,
            0,
            0,
            0,
            28,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            15,
            255,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            21
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            255,
            50,
            255,
            255,
            255,
            7
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            31,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            65,
            0,
            0,
            0,
            0
          ],
          [
            0,
            22,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            247,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            144,
            255,
            255,
            255,
            255,
            0,
            0,
            203,
            0,
            170,
            255
          ],
          [
            255,
            0,
            174,
            0,
            255,
            0,
            255,
            121,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          3
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035074980005447287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.003030217001651181,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3025818390015047,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48422,
            47762,
            47586,
            47798,
            47636,
            47613,
            47590,
            47678,
            47610,
            47629,
            47723,
            47587,
            47531,
            47659,
            47612,
            49977,
            47774,
            47911,
            47305,
            53798,
            47577,
            47673,
            47681,
            47498,
            47599,
            47727,
            47607,
            47590,
            47681,
            47567,
            47508,
            47540,
            47496,
            47414,
            47609,
            47511,
            47630,
            47565,
            47451,
            47550,
            47630,
            47593,
            47537,
            47686,
            47555,
            47543,
            48064,
            47570,
            47883,
            47807,
            47802,
            47471,
            47473,
            47579,
            47414,
            47658,
            47323,
            47610,
            47614,
            47545,
            47676,
            47666,
            47608
          ],
          [
            48422,
            47762,
            47586,
            47798,
            47636,
            47613,
            47590,
            47678,
            47610,
            47629,
            47723,
            47587,
            47531,
            47659,
            47612,
            49977,
            47774,
            47911,
            47305,
            53798,
            47577,
            47673,
            47681,
            47498,
            47599,
            47727,
            47607,
            47590,
            47681,
            47567,
            47508,
            47540,
            47496,
            47414,
            47609,
            47511,
            47630,
            47565,
            47451,
            47550,
            47630,
            47593,
            47537,
            47686,
            47555,
            47543,
            48064,
            47570,
            47883,
            47807,
            47802,
            47471,
            47473,
            47579,
            47414,
            47658,
            47323,
            47610,
            47614,
            47545,
            47676,
            47666,
            47608
          ]
        ],
        "eTX_errcounts": [
          [
            40889,
            27196,
            8478,
            1429,
            60,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            228,
            3193,
            16087,
            34041,
            42570,
            31797,
            14728,
            2099,
            141,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            56,
            650,
            7329,
            25712,
            40203,
            37612,
            20045,
            5361,
            548,
            15,
            1,
            0,
            0
          ],
          [
            11,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            258,
            4387,
            16958,
            36363,
            42762,
            31346,
            14031,
            3330,
            325,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            397,
            4098,
            18686,
            36829,
            43285,
            35897,
            17045,
            3350,
            326,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13424770499841543,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016117260020109825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689786440016178,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47988,
            47486,
            47418,
            47369,
            47271,
            47282,
            47322,
            47225,
            46957,
            47339,
            47243,
            47265,
            47375,
            47302,
            47388,
            47271,
            47161,
            47196,
            47352,
            47234,
            47170,
            47631,
            47480,
            47123,
            47260,
            47141,
            47281,
            47152,
            47233,
            47263,
            47244,
            46875,
            47182,
            46894,
            47259,
            47101,
            47089,
            47057,
            47342,
            47243,
            47184,
            48745,
            49304,
            47269,
            47144,
            47146,
            47286,
            47222,
            47232,
            47152,
            47292,
            47178,
            47249,
            47265,
            47419,
            47116,
            47147,
            47221,
            47213,
            48083,
            47396,
            48656,
            49108
          ],
          [
            47988,
            47486,
            47418,
            47369,
            47271,
            47282,
            47322,
            47225,
            46957,
            47339,
            47243,
            47265,
            47375,
            47302,
            47388,
            47271,
            47161,
            47196,
            47352,
            47234,
            47170,
            47631,
            47480,
            47123,
            47260,
            47141,
            47281,
            47152,
            47233,
            47263,
            47244,
            46875,
            47182,
            46894,
            47259,
            47101,
            47089,
            47057,
            47342,
            47243,
            47184,
            48745,
            49304,
            47269,
            47144,
            47146,
            47286,
            47222,
            47232,
            47152,
            47292,
            47178,
            47249,
            47265,
            47419,
            47116,
            47147,
            47221,
            47213,
            48083,
            47396,
            48656,
            49108
          ],
          [
            47988,
            47486,
            47418,
            47369,
            47271,
            47282,
            47322,
            47225,
            46957,
            47339,
            47243,
            47265,
            47375,
            47302,
            47388,
            47271,
            47161,
            47196,
            47352,
            47234,
            47170,
            47631,
            47480,
            47123,
            47260,
            47141,
            47281,
            47152,
            47233,
            47263,
            47244,
            46875,
            47182,
            46894,
            47259,
            47101,
            47089,
            47057,
            47342,
            47243,
            47184,
            48745,
            49304,
            47269,
            47144,
            47146,
            47286,
            47222,
            47232,
            47152,
            47292,
            47178,
            47249,
            47265,
            47419,
            47116,
            47147,
            47221,
            47213,
            48083,
            47396,
            48656,
            49108
          ],
          [
            47988,
            47486,
            47418,
            47369,
            47271,
            47282,
            47322,
            47225,
            46957,
            47339,
            47243,
            47265,
            47375,
            47302,
            47388,
            47271,
            47161,
            47196,
            47352,
            47234,
            47170,
            47631,
            47480,
            47123,
            47260,
            47141,
            47281,
            47152,
            47233,
            47263,
            47244,
            46875,
            47182,
            46894,
            47259,
            47101,
            47089,
            47057,
            47342,
            47243,
            47184,
            48745,
            49304,
            47269,
            47144,
            47146,
            47286,
            47222,
            47232,
            47152,
            47292,
            47178,
            47249,
            47265,
            47419,
            47116,
            47147,
            47221,
            47213,
            48083,
            47396,
            48656,
            49108
          ],
          [
            47988,
            47486,
            47418,
            47369,
            47271,
            47282,
            47322,
            47225,
            46957,
            47339,
            47243,
            47265,
            47375,
            47302,
            47388,
            47271,
            47161,
            47196,
            47352,
            47234,
            47170,
            47631,
            47480,
            47123,
            47260,
            47141,
            47281,
            47152,
            47233,
            47263,
            47244,
            46875,
            47182,
            46894,
            47259,
            47101,
            47089,
            47057,
            47342,
            47243,
            47184,
            48745,
            49304,
            47269,
            47144,
            47146,
            47286,
            47222,
            47232,
            47152,
            47292,
            47178,
            47249,
            47265,
            47419,
            47116,
            47147,
            47221,
            47213,
            48083,
            47396,
            48656,
            49108
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            42,
            655,
            4110,
            13017,
            25222,
            35041,
            36810,
            29590,
            17931,
            8492,
            2247,
            307,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            95,
            1031,
            6173,
            14499,
            24887,
            33004,
            36358,
            32845,
            25331,
            13136,
            3553,
            597,
            27,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            7,
            86,
            682,
            3090,
            10342,
            20741,
            30510,
            37090,
            34682,
            25737,
            15702,
            5930,
            1126,
            92,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            48,
            727,
            4126,
            12149,
            23606,
            33043,
            38046,
            37896,
            31266,
            20439,
            10942,
            4205,
            687,
            47,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            197,
            1518,
            5874,
            15775,
            27413
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            77,
            857,
            4980,
            16520,
            27277,
            31735,
            32793,
            25799,
            15072,
            5972,
            1199,
            101,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            227,
            1803,
            9192,
            16958,
            27982,
            33634,
            31060,
            24546,
            16345,
            8517,
            3120,
            360,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            287,
            1969,
            8652,
            18850,
            28956,
            34485,
            34038,
            27814,
            18992,
            9853,
            2553,
            153,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            504,
            3214,
            10455,
            21786,
            29436,
            34013,
            30778,
            25961,
            19423,
            11731,
            4974,
            960,
            78,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            1,
            56,
            639,
            3549,
            10012,
            19871,
            30342,
            38276,
            39394,
            31619,
            21727,
            10928,
            4068,
            831,
            41,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            75,
            818,
            4248,
            11147,
            22733,
            32577,
            39393,
            39296,
            33895,
            27745,
            18443,
            7242,
            1360,
            78,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            265,
            1710,
            8011
          ]
        ]
      },
      "call": {
        "duration": 0.2711736599994765,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff877e7cf0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff877e7cf0> = array([21, 13, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff878525b0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47988, 47486, 47418, 47369, 47271, 47282, ...], [47988, 47486, 47418, 47369, 47271, 47282, ...], [...0, 0, ...], [0, 0, 7, 86, 682, 3090, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 1, 56, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff877e7cf0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff877e7cf0> = array([21, 13, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001630055998248281,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29266922699753195,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169578523000382,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014338520013552625,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2969991900026798,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            24,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            37,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            72,
            8,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003507527999317972,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002857534000213491,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5384624430007534,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            166,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            170,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            81,
            255,
            113,
            255,
            128,
            0,
            0,
            201,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            251,
            0,
            94,
            1,
            255,
            19,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            90,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            7,
            255,
            134,
            255,
            167,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            202,
            255,
            130,
            255,
            255,
            3,
            0,
            97,
            0,
            255,
            255
          ],
          [
            255,
            4,
            255,
            0,
            255,
            5,
            255,
            0,
            255,
            78,
            255,
            159
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          3,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034773480001604185,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002888074999646051,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956914950009377,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47888,
            47708,
            47425,
            47513,
            47532,
            47526,
            47480,
            47653,
            47537,
            47463,
            47653,
            47624,
            47544,
            47616,
            47458,
            47499,
            47567,
            47513,
            49549,
            47627,
            47946,
            47562,
            49739,
            47525,
            47561,
            47483,
            47409,
            47662,
            47545,
            47451,
            47366,
            47502,
            47348,
            47494,
            47437,
            47469,
            47509,
            47468,
            47493,
            47474,
            47553,
            47449,
            47464,
            47618,
            47494,
            47448,
            47548,
            47458,
            47487,
            47583,
            47193,
            47134,
            47573,
            47586,
            47362,
            49317,
            47454,
            47548,
            47463,
            47358,
            47541,
            47646,
            47464
          ],
          [
            47888,
            47708,
            47425,
            47513,
            47532,
            47526,
            47480,
            47653,
            47537,
            47463,
            47653,
            47624,
            47544,
            47616,
            47458,
            47499,
            47567,
            47513,
            49549,
            47627,
            47946,
            47562,
            49739,
            47525,
            47561,
            47483,
            47409,
            47662,
            47545,
            47451,
            47366,
            47502,
            47348,
            47494,
            47437,
            47469,
            47509,
            47468,
            47493,
            47474,
            47553,
            47449,
            47464,
            47618,
            47494,
            47448,
            47548,
            47458,
            47487,
            47583,
            47193,
            47134,
            47573,
            47586,
            47362,
            49317,
            47454,
            47548,
            47463,
            47358,
            47541,
            47646,
            47464
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            269,
            3576,
            18199,
            36705,
            36692,
            19616,
            4336,
            416,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            173,
            2628,
            16983,
            35343,
            40220,
            25792,
            8355,
            1229,
            43,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            1030,
            8557,
            28988,
            42229,
            39392,
            19772,
            4700,
            417,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            151,
            2346,
            13792,
            30640,
            42502,
            38867,
            20062,
            5284,
            609,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13384707599834655,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016261860000668094,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06873551799799316,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48610,
            47307,
            47216,
            47284,
            47245,
            47219,
            47231,
            47405,
            47167,
            47269,
            47385,
            47229,
            47379,
            47335,
            47574,
            49546,
            47257,
            47223,
            47362,
            47207,
            47206,
            47541,
            47271,
            47197,
            47003,
            47367,
            47233,
            47291,
            47378,
            47361,
            47336,
            47120,
            47116,
            47415,
            49158,
            48942,
            47327,
            47338,
            47966,
            47485,
            47270,
            47440,
            47310,
            47401,
            47147,
            47406,
            47346,
            47087,
            47281,
            47108,
            47232,
            47453,
            47333,
            47231,
            47717,
            49787,
            47055,
            47263,
            47178,
            47229,
            47219,
            47311,
            47094
          ],
          [
            48610,
            47307,
            47216,
            47284,
            47245,
            47219,
            47231,
            47405,
            47167,
            47269,
            47385,
            47229,
            47379,
            47335,
            47574,
            49546,
            47257,
            47223,
            47362,
            47207,
            47206,
            47541,
            47271,
            47197,
            47003,
            47367,
            47233,
            47291,
            47378,
            47361,
            47336,
            47120,
            47116,
            47415,
            49158,
            48942,
            47327,
            47338,
            47966,
            47485,
            47270,
            47440,
            47310,
            47401,
            47147,
            47406,
            47346,
            47087,
            47281,
            47108,
            47232,
            47453,
            47333,
            47231,
            47717,
            49787,
            47055,
            47263,
            47178,
            47229,
            47219,
            47311,
            47094
          ],
          [
            48610,
            47307,
            47216,
            47284,
            47245,
            47219,
            47231,
            47405,
            47167,
            47269,
            47385,
            47229,
            47379,
            47335,
            47574,
            49546,
            47257,
            47223,
            47362,
            47207,
            47206,
            47541,
            47271,
            47197,
            47003,
            47367,
            47233,
            47291,
            47378,
            47361,
            47336,
            47120,
            47116,
            47415,
            49158,
            48942,
            47327,
            47338,
            47966,
            47485,
            47270,
            47440,
            47310,
            47401,
            47147,
            47406,
            47346,
            47087,
            47281,
            47108,
            47232,
            47453,
            47333,
            47231,
            47717,
            49787,
            47055,
            47263,
            47178,
            47229,
            47219,
            47311,
            47094
          ],
          [
            48610,
            47307,
            47216,
            47284,
            47245,
            47219,
            47231,
            47405,
            47167,
            47269,
            47385,
            47229,
            47379,
            47335,
            47574,
            49546,
            47257,
            47223,
            47362,
            47207,
            47206,
            47541,
            47271,
            47197,
            47003,
            47367,
            47233,
            47291,
            47378,
            47361,
            47336,
            47120,
            47116,
            47415,
            49158,
            48942,
            47327,
            47338,
            47966,
            47485,
            47270,
            47440,
            47310,
            47401,
            47147,
            47406,
            47346,
            47087,
            47281,
            47108,
            47232,
            47453,
            47333,
            47231,
            47717,
            49787,
            47055,
            47263,
            47178,
            47229,
            47219,
            47311,
            47094
          ],
          [
            48610,
            47307,
            47216,
            47284,
            47245,
            47219,
            47231,
            47405,
            47167,
            47269,
            47385,
            47229,
            47379,
            47335,
            47574,
            49546,
            47257,
            47223,
            47362,
            47207,
            47206,
            47541,
            47271,
            47197,
            47003,
            47367,
            47233,
            47291,
            47378,
            47361,
            47336,
            47120,
            47116,
            47415,
            49158,
            48942,
            47327,
            47338,
            47966,
            47485,
            47270,
            47440,
            47310,
            47401,
            47147,
            47406,
            47346,
            47087,
            47281,
            47108,
            47232,
            47453,
            47333,
            47231,
            47717,
            49787,
            47055,
            47263,
            47178,
            47229,
            47219,
            47311,
            47094
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            306,
            2237,
            10832,
            23610,
            34174,
            35522,
            24964,
            11924,
            3693,
            636,
            64,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            679,
            3240,
            12931,
            26016,
            36106,
            37953,
            28264,
            14880,
            4010,
            591,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            0,
            0,
            10,
            411,
            4433,
            15714,
            31606,
            39469,
            35343,
            20123,
            7085,
            943,
            74,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            91,
            872,
            7009,
            23187,
            38326,
            45563,
            41441,
            26330,
            12751,
            3006,
            259,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            98,
            1069,
            7557,
            20671,
            34719,
            39257
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            334,
            3540,
            13767,
            26964,
            33964,
            29014,
            14650,
            4196,
            495,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            82,
            701,
            5799,
            18935,
            34628,
            40049,
            33383,
            19263,
            6502,
            912,
            101,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            44,
            812,
            5610,
            17080,
            31982,
            40173,
            31895,
            18525,
            6222,
            1007,
            60,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            122,
            1574,
            8594,
            21604,
            35470,
            41024,
            35476,
            23398,
            9136,
            1663,
            95,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            83,
            1426,
            7539,
            20581,
            33594,
            40957,
            38322,
            26250,
            13081,
            3223,
            492,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            297,
            2249,
            10147,
            26080,
            39232,
            43680,
            39338,
            27767,
            12685,
            4151,
            1082,
            147,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            12,
            657,
            5151,
            15961,
            31130
          ]
        ]
      },
      "call": {
        "duration": 0.2697955500007083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014955030019336846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29133875900151907,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1691161829985504,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014815530012128875,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3662380899986601,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            98,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            246,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.008496338999975706,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029135149998182897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5336504870028875,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            4,
            255,
            3,
            18,
            0,
            255,
            0,
            255,
            255
          ],
          [
            77,
            0,
            4,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            175,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            38,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            3,
            0,
            255,
            3,
            255,
            255
          ],
          [
            66,
            0,
            1,
            0,
            5,
            0,
            255,
            119,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            153,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            47,
            0,
            6,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            85,
            255,
            44,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003466006997769,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002854864000255475,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961940959976346,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48185,
            47607,
            47331,
            47813,
            47393,
            47807,
            47559,
            49888,
            47443,
            47646,
            47433,
            47717,
            47582,
            47155,
            47189,
            47554,
            47494,
            47349,
            47412,
            47368,
            47587,
            47434,
            47431,
            47554,
            47451,
            47481,
            47394,
            47494,
            47353,
            47467,
            47430,
            47647,
            47448,
            47628,
            47405,
            47449,
            47423,
            47448,
            49385,
            47642,
            47776,
            47490,
            49701,
            47571,
            47377,
            47470,
            47388,
            47519,
            47350,
            47450,
            47355,
            47523,
            47356,
            47583,
            47433,
            47613,
            47325,
            47551,
            47287,
            47572,
            47419,
            47538,
            47636
          ],
          [
            48185,
            47607,
            47331,
            47813,
            47393,
            47807,
            47559,
            49888,
            47443,
            47646,
            47433,
            47717,
            47582,
            47155,
            47189,
            47554,
            47494,
            47349,
            47412,
            47368,
            47587,
            47434,
            47431,
            47554,
            47451,
            47481,
            47394,
            47494,
            47353,
            47467,
            47430,
            47647,
            47448,
            47628,
            47405,
            47449,
            47423,
            47448,
            49385,
            47642,
            47776,
            47490,
            49701,
            47571,
            47377,
            47470,
            47388,
            47519,
            47350,
            47450,
            47355,
            47523,
            47356,
            47583,
            47433,
            47613,
            47325,
            47551,
            47287,
            47572,
            47419,
            47538,
            47636
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            564,
            6753,
            24852,
            39228,
            34608,
            14964,
            3074,
            178,
            3,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            588,
            6355,
            23363,
            38075,
            38673,
            21484,
            5251,
            674,
            57,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            0,
            136,
            2133,
            14172,
            35090,
            40787,
            29315,
            9371,
            1681,
            190,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            674,
            6739,
            22319,
            38468,
            41232,
            30226,
            12070,
            2003,
            261,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            696,
            7935,
            25547,
            40719,
            43842
          ]
        ]
      },
      "call": {
        "duration": 0.133599750999565,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016104360001918394,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0691345570012345,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48141,
            47233,
            47160,
            47402,
            47144,
            47280,
            47152,
            47314,
            47191,
            47203,
            47420,
            47352,
            47211,
            47283,
            47284,
            47323,
            47140,
            47240,
            47556,
            49550,
            47315,
            47139,
            47093,
            47193,
            47293,
            47165,
            47253,
            47158,
            47208,
            47226,
            47253,
            46978,
            47230,
            47325,
            47388,
            47238,
            47386,
            47254,
            47648,
            49424,
            47156,
            47203,
            47082,
            47248,
            47133,
            47240,
            47246,
            47104,
            47173,
            47242,
            47139,
            47205,
            47245,
            47232,
            47238,
            47345,
            47007,
            47242,
            47643,
            47498,
            47171,
            47102,
            47061
          ],
          [
            48141,
            47233,
            47160,
            47402,
            47144,
            47280,
            47152,
            47314,
            47191,
            47203,
            47420,
            47352,
            47211,
            47283,
            47284,
            47323,
            47140,
            47240,
            47556,
            49550,
            47315,
            47139,
            47093,
            47193,
            47293,
            47165,
            47253,
            47158,
            47208,
            47226,
            47253,
            46978,
            47230,
            47325,
            47388,
            47238,
            47386,
            47254,
            47648,
            49424,
            47156,
            47203,
            47082,
            47248,
            47133,
            47240,
            47246,
            47104,
            47173,
            47242,
            47139,
            47205,
            47245,
            47232,
            47238,
            47345,
            47007,
            47242,
            47643,
            47498,
            47171,
            47102,
            47061
          ],
          [
            48141,
            47233,
            47160,
            47402,
            47144,
            47280,
            47152,
            47314,
            47191,
            47203,
            47420,
            47352,
            47211,
            47283,
            47284,
            47323,
            47140,
            47240,
            47556,
            49550,
            47315,
            47139,
            47093,
            47193,
            47293,
            47165,
            47253,
            47158,
            47208,
            47226,
            47253,
            46978,
            47230,
            47325,
            47388,
            47238,
            47386,
            47254,
            47648,
            49424,
            47156,
            47203,
            47082,
            47248,
            47133,
            47240,
            47246,
            47104,
            47173,
            47242,
            47139,
            47205,
            47245,
            47232,
            47238,
            47345,
            47007,
            47242,
            47643,
            47498,
            47171,
            47102,
            47061
          ],
          [
            48141,
            47233,
            47160,
            47402,
            47144,
            47280,
            47152,
            47314,
            47191,
            47203,
            47420,
            47352,
            47211,
            47283,
            47284,
            47323,
            47140,
            47240,
            47556,
            49550,
            47315,
            47139,
            47093,
            47193,
            47293,
            47165,
            47253,
            47158,
            47208,
            47226,
            47253,
            46978,
            47230,
            47325,
            47388,
            47238,
            47386,
            47254,
            47648,
            49424,
            47156,
            47203,
            47082,
            47248,
            47133,
            47240,
            47246,
            47104,
            47173,
            47242,
            47139,
            47205,
            47245,
            47232,
            47238,
            47345,
            47007,
            47242,
            47643,
            47498,
            47171,
            47102,
            47061
          ],
          [
            48141,
            47233,
            47160,
            47402,
            47144,
            47280,
            47152,
            47314,
            47191,
            47203,
            47420,
            47352,
            47211,
            47283,
            47284,
            47323,
            47140,
            47240,
            47556,
            49550,
            47315,
            47139,
            47093,
            47193,
            47293,
            47165,
            47253,
            47158,
            47208,
            47226,
            47253,
            46978,
            47230,
            47325,
            47388,
            47238,
            47386,
            47254,
            47648,
            49424,
            47156,
            47203,
            47082,
            47248,
            47133,
            47240,
            47246,
            47104,
            47173,
            47242,
            47139,
            47205,
            47245,
            47232,
            47238,
            47345,
            47007,
            47242,
            47643,
            47498,
            47171,
            47102,
            47061
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            109,
            1097,
            6047,
            16893,
            30121,
            35372,
            32210,
            22338,
            11021,
            3058,
            347,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            180,
            1889,
            9540,
            24482,
            36627,
            39070,
            30724,
            17035,
            6956,
            2090,
            351,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            366,
            2910,
            12148,
            26255,
            38975,
            41012,
            34393,
            22043,
            9618,
            2551,
            264,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            33,
            876,
            5604,
            17592,
            29487,
            38087,
            34703,
            25974,
            12088,
            2590,
            199,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0
          ],
          [
            11237,
            2906,
            377,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            109,
            1594,
            8657,
            22098,
            34372,
            37843,
            29424,
            15603,
            5021,
            576,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            347,
            4187,
            15057,
            28399,
            39269,
            34961,
            22050,
            9409,
            2039,
            145,
            11,
            0,
            0,
            0,
            0
          ],
          [
            40,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            29,
            502,
            4860,
            16580,
            28944,
            39615,
            40496,
            31971,
            21588,
            8117,
            1536,
            69,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            190,
            2664,
            12364,
            26764,
            38121,
            35172,
            23691,
            10835,
            2944,
            261,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            662,
            3823,
            15054,
            28329,
            39749,
            41681,
            35290,
            23889,
            12880,
            3710,
            949,
            96,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            132,
            1123,
            5732,
            17638,
            32094,
            40641,
            40771,
            32894,
            20043,
            9172,
            2286,
            278,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2697622479972779,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015074140028445981,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917662380023103,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1702221870000358,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045820, 10011455), (411409, 411409), (40048599, 10012150))\nassert ((40045820 > 0 and 10011455 == 0\n  +10011455\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff87852310>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff8757c100>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff87899820>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045820, 10011455), (411409, 411409), (40048599, 10012150))\nE       assert ((40045820 > 0 and 10011455 == 0\nE         +10011455\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.0049388600018573925,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}