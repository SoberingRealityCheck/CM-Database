{
  "created": 1722033887.5287085,
  "duration": 23.527735233306885,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5081403969998064,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1484227950022614,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013459799993142951,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038239459972828627,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14809293700091075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012797089984815102,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13272857300034957,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1216338470003393,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012572080013342202,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037953840001136996,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12103728299916838,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012646180002775509,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351764000399271,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14650917200197,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012043770002492238,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033488549997855444,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11981592599840951,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011924960017495323,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033454939984949306,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14661933399838745,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011666060017887503,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033684449990687426,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11996313899726374,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011580259997572284,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004383397998026339,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021251580001262482,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011141350005345885,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032989339997584466,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017097080017265398,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011107739992439747,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032998040005622897,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040375499993388075,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033869.8175294,
            "msecs": 817.5294399261475,
            "relativeCreated": 7794.827938079834,
            "thread": 281473855348768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5403
          }
        ]
      },
      "teardown": {
        "duration": 0.0012272370004211552,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033611250000831205,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024151140023604967,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033869.829781,
            "msecs": 829.7810554504395,
            "relativeCreated": 7807.079553604126,
            "thread": 281473855348768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5403
          }
        ]
      },
      "teardown": {
        "duration": 0.001143744997534668,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020747260023199487,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027654320001602173,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033869.8392951,
            "msecs": 839.2951488494873,
            "relativeCreated": 7816.593647003174,
            "thread": 281473855348768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5403
          }
        ]
      },
      "teardown": {
        "duration": 0.0010775940027087927,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020928160010953434,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034531970013631508,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033869.8487358,
            "msecs": 848.7358093261719,
            "relativeCreated": 7826.034307479858,
            "thread": 281473855348768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5403
          }
        ]
      },
      "teardown": {
        "duration": 0.001060012997186277,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033134240002254955,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14662350399885327,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011848169997392688,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003340095001476584,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12039496799843619,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011821459993370809,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17474868199860794,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14778342000136035,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012687889975495636,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015187568998953793,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12149473300087266,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001257748001080472,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.831058158997621,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            7,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            91,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            26,
            146,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          3,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003584810001484584,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002900344999943627,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8960263789995224,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            6,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            242,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            235,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            26,
            255,
            255,
            255,
            6
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            26,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            107,
            0,
            0,
            0,
            0
          ],
          [
            0,
            3,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            154,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            137,
            255,
            255,
            255,
            255,
            0,
            0,
            124,
            1,
            74,
            255
          ],
          [
            255,
            0,
            102,
            0,
            255,
            0,
            255,
            39,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034630070003913715,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002887653998186579,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3026161579982727,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48213,
            47636,
            47538,
            47579,
            47499,
            47623,
            47824,
            49339,
            47592,
            47886,
            47317,
            54279,
            47599,
            47662,
            47448,
            47688,
            47540,
            47500,
            47635,
            47530,
            47556,
            47527,
            47548,
            47440,
            47602,
            47533,
            47744,
            47482,
            47469,
            47496,
            47645,
            47621,
            47470,
            47595,
            47624,
            47474,
            47480,
            47500,
            47710,
            47610,
            49321,
            47491,
            47843,
            47431,
            49758,
            47612,
            47399,
            47637,
            47532,
            47540,
            47526,
            47684,
            47546,
            47553,
            47726,
            47606,
            47563,
            47603,
            47393,
            47432,
            47255,
            47135,
            47551
          ],
          [
            48213,
            47636,
            47538,
            47579,
            47499,
            47623,
            47824,
            49339,
            47592,
            47886,
            47317,
            54279,
            47599,
            47662,
            47448,
            47688,
            47540,
            47500,
            47635,
            47530,
            47556,
            47527,
            47548,
            47440,
            47602,
            47533,
            47744,
            47482,
            47469,
            47496,
            47645,
            47621,
            47470,
            47595,
            47624,
            47474,
            47480,
            47500,
            47710,
            47610,
            49321,
            47491,
            47843,
            47431,
            49758,
            47612,
            47399,
            47637,
            47532,
            47540,
            47526,
            47684,
            47546,
            47553,
            47726,
            47606,
            47563,
            47603,
            47393,
            47432,
            47255,
            47135,
            47551
          ]
        ],
        "eTX_errcounts": [
          [
            40718,
            26400,
            8469,
            1129,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            186,
            2725,
            16482,
            34665,
            42909,
            31849,
            14161,
            1970,
            214,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            82,
            931,
            7412,
            25863,
            40830,
            38024,
            19448,
            5610,
            631,
            17,
            1,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            304,
            4241,
            17695,
            36517,
            42195,
            31627,
            13388,
            3343,
            363,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            376,
            4254,
            19485,
            37113,
            43292,
            34971,
            17062,
            3592,
            341,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13401815299948794,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016207560001930688,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06908629200188443,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47887,
            47301,
            47283,
            47569,
            46885,
            47312,
            47324,
            47218,
            47357,
            47046,
            47231,
            47347,
            47288,
            47405,
            47353,
            47438,
            47424,
            47640,
            47195,
            47278,
            47285,
            47355,
            47269,
            47290,
            47162,
            47326,
            47243,
            47220,
            47216,
            47245,
            47354,
            47114,
            47623,
            47424,
            47503,
            48839,
            49307,
            47471,
            47351,
            47333,
            47346,
            47196,
            47233,
            47354,
            47167,
            47229,
            47268,
            47363,
            47423,
            47277,
            47491,
            47426,
            47368,
            47486,
            47428,
            47581,
            47280,
            47197,
            47487,
            47109,
            47352,
            47306,
            47231
          ],
          [
            47887,
            47301,
            47283,
            47569,
            46885,
            47312,
            47324,
            47218,
            47357,
            47046,
            47231,
            47347,
            47288,
            47405,
            47353,
            47438,
            47424,
            47640,
            47195,
            47278,
            47285,
            47355,
            47269,
            47290,
            47162,
            47326,
            47243,
            47220,
            47216,
            47245,
            47354,
            47114,
            47623,
            47424,
            47503,
            48839,
            49307,
            47471,
            47351,
            47333,
            47346,
            47196,
            47233,
            47354,
            47167,
            47229,
            47268,
            47363,
            47423,
            47277,
            47491,
            47426,
            47368,
            47486,
            47428,
            47581,
            47280,
            47197,
            47487,
            47109,
            47352,
            47306,
            47231
          ],
          [
            47887,
            47301,
            47283,
            47569,
            46885,
            47312,
            47324,
            47218,
            47357,
            47046,
            47231,
            47347,
            47288,
            47405,
            47353,
            47438,
            47424,
            47640,
            47195,
            47278,
            47285,
            47355,
            47269,
            47290,
            47162,
            47326,
            47243,
            47220,
            47216,
            47245,
            47354,
            47114,
            47623,
            47424,
            47503,
            48839,
            49307,
            47471,
            47351,
            47333,
            47346,
            47196,
            47233,
            47354,
            47167,
            47229,
            47268,
            47363,
            47423,
            47277,
            47491,
            47426,
            47368,
            47486,
            47428,
            47581,
            47280,
            47197,
            47487,
            47109,
            47352,
            47306,
            47231
          ],
          [
            47887,
            47301,
            47283,
            47569,
            46885,
            47312,
            47324,
            47218,
            47357,
            47046,
            47231,
            47347,
            47288,
            47405,
            47353,
            47438,
            47424,
            47640,
            47195,
            47278,
            47285,
            47355,
            47269,
            47290,
            47162,
            47326,
            47243,
            47220,
            47216,
            47245,
            47354,
            47114,
            47623,
            47424,
            47503,
            48839,
            49307,
            47471,
            47351,
            47333,
            47346,
            47196,
            47233,
            47354,
            47167,
            47229,
            47268,
            47363,
            47423,
            47277,
            47491,
            47426,
            47368,
            47486,
            47428,
            47581,
            47280,
            47197,
            47487,
            47109,
            47352,
            47306,
            47231
          ],
          [
            47887,
            47301,
            47283,
            47569,
            46885,
            47312,
            47324,
            47218,
            47357,
            47046,
            47231,
            47347,
            47288,
            47405,
            47353,
            47438,
            47424,
            47640,
            47195,
            47278,
            47285,
            47355,
            47269,
            47290,
            47162,
            47326,
            47243,
            47220,
            47216,
            47245,
            47354,
            47114,
            47623,
            47424,
            47503,
            48839,
            49307,
            47471,
            47351,
            47333,
            47346,
            47196,
            47233,
            47354,
            47167,
            47229,
            47268,
            47363,
            47423,
            47277,
            47491,
            47426,
            47368,
            47486,
            47428,
            47581,
            47280,
            47197,
            47487,
            47109,
            47352,
            47306,
            47231
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            63,
            730,
            3550,
            11764,
            22560,
            28791,
            30003,
            26057,
            18525,
            10034,
            2523,
            275,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            64,
            928,
            4500,
            11748,
            22176,
            29446,
            32540,
            28026,
            22278,
            15147,
            7726,
            2056,
            332,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            12,
            170,
            1780,
            10788,
            22754,
            33226,
            37540,
            33687,
            23051,
            12613,
            4689,
            907,
            97,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            277,
            2706,
            12635,
            26374,
            36417,
            41496,
            36655,
            25827,
            17969,
            8637,
            2349,
            297,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            688,
            4153,
            13544,
            24827
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            57,
            1057,
            7603,
            19924,
            30549,
            33697,
            30410,
            21332,
            10399,
            3174,
            439,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            161,
            1488,
            9098,
            21714,
            32875,
            35335,
            31461,
            24026,
            16041,
            6579,
            1427,
            118,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            119,
            1779,
            9649,
            21517,
            31305,
            34636,
            31637,
            23194,
            13617,
            5490,
            1088,
            82,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            192,
            2083,
            8903,
            21566,
            30513,
            34102,
            31192,
            24812,
            17537,
            8423,
            2679,
            380,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            17,
            373,
            3114,
            10866,
            21942,
            31677,
            39286,
            39714,
            30046,
            20639,
            11450,
            3471,
            470,
            31,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            24,
            452,
            4270,
            13133,
            24863,
            34456,
            40739,
            36688,
            27803,
            19966,
            11942,
            5126,
            2060,
            562,
            76,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            167,
            1537,
            7176
          ]
        ]
      },
      "call": {
        "duration": 0.2723244520020671,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa8467210>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa8467210> = array([21, 14, 18, 20, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa865b430>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47887, 47301, 47283, 47569, 46885, 47312, ...], [47887, 47301, 47283, 47569, 46885, 47312, ...], [...0, 0, ...], [0, 0, 0, 12, 170, 1780, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 17, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa8467210>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa8467210> = array([21, 14, 18, 20, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016063260009104852,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2928381889978482,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168808040998556,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014372419973369688,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2915947529982077,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            8,
            24,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            37,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            216,
            65,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034700270007306244,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028845050001109485,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5449484300006588,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            156,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            176,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            91,
            255,
            163,
            255,
            148,
            0,
            0,
            211,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            59,
            3,
            255,
            11,
            255,
            25
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            76,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            255,
            109,
            255,
            163,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            248,
            255,
            164,
            255,
            255,
            1,
            0,
            96,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            87,
            255,
            155
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          6,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003443806999712251,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028914949980389792,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29563983200205257,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48219,
            47728,
            47611,
            47458,
            47664,
            47362,
            47622,
            47408,
            47609,
            47586,
            47651,
            47412,
            47654,
            47542,
            47557,
            47668,
            47700,
            47627,
            47636,
            47584,
            47780,
            47878,
            47650,
            47574,
            47507,
            47447,
            49187,
            47591,
            47936,
            47669,
            47621,
            47554,
            47497,
            47707,
            47395,
            47457,
            47526,
            47611,
            47695,
            47867,
            47346,
            47442,
            47681,
            47537,
            47501,
            47633,
            47585,
            47518,
            47548,
            47639,
            47620,
            47682,
            47674,
            47488,
            47432,
            49375,
            47610,
            47730,
            47546,
            47974,
            47590,
            47531,
            47654
          ],
          [
            48219,
            47728,
            47611,
            47458,
            47664,
            47362,
            47622,
            47408,
            47609,
            47586,
            47651,
            47412,
            47654,
            47542,
            47557,
            47668,
            47700,
            47627,
            47636,
            47584,
            47780,
            47878,
            47650,
            47574,
            47507,
            47447,
            49187,
            47591,
            47936,
            47669,
            47621,
            47554,
            47497,
            47707,
            47395,
            47457,
            47526,
            47611,
            47695,
            47867,
            47346,
            47442,
            47681,
            47537,
            47501,
            47633,
            47585,
            47518,
            47548,
            47639,
            47620,
            47682,
            47674,
            47488,
            47432,
            49375,
            47610,
            47730,
            47546,
            47974,
            47590,
            47531,
            47654
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            405,
            3890,
            18387,
            36787,
            37157,
            18249,
            4348,
            380,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            175,
            2729,
            16829,
            34753,
            40121,
            25679,
            8601,
            982,
            63,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            26,
            807,
            8510,
            29495,
            42182,
            38499,
            19113,
            5062,
            388,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            124,
            2269,
            14180,
            31783,
            42578,
            38641,
            20334,
            5445,
            536,
            37,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13427555800080881,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016231560002779588,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06883494700014126,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47808,
            47510,
            47207,
            47350,
            47320,
            47281,
            47330,
            47334,
            47502,
            47427,
            47473,
            47510,
            47354,
            49080,
            49275,
            47517,
            47480,
            47283,
            47370,
            47040,
            47476,
            47453,
            47190,
            47439,
            47458,
            47457,
            47530,
            47231,
            47155,
            47470,
            47533,
            49181,
            48821,
            47375,
            47314,
            47459,
            47411,
            47332,
            47365,
            47311,
            47365,
            47472,
            47251,
            47338,
            47159,
            47556,
            47571,
            47436,
            47527,
            49016,
            49001,
            47396,
            47186,
            47369,
            47241,
            47463,
            47636,
            47252,
            47351,
            47423,
            47534,
            47473,
            47313
          ],
          [
            47808,
            47510,
            47207,
            47350,
            47320,
            47281,
            47330,
            47334,
            47502,
            47427,
            47473,
            47510,
            47354,
            49080,
            49275,
            47517,
            47480,
            47283,
            47370,
            47040,
            47476,
            47453,
            47190,
            47439,
            47458,
            47457,
            47530,
            47231,
            47155,
            47470,
            47533,
            49181,
            48821,
            47375,
            47314,
            47459,
            47411,
            47332,
            47365,
            47311,
            47365,
            47472,
            47251,
            47338,
            47159,
            47556,
            47571,
            47436,
            47527,
            49016,
            49001,
            47396,
            47186,
            47369,
            47241,
            47463,
            47636,
            47252,
            47351,
            47423,
            47534,
            47473,
            47313
          ],
          [
            47808,
            47510,
            47207,
            47350,
            47320,
            47281,
            47330,
            47334,
            47502,
            47427,
            47473,
            47510,
            47354,
            49080,
            49275,
            47517,
            47480,
            47283,
            47370,
            47040,
            47476,
            47453,
            47190,
            47439,
            47458,
            47457,
            47530,
            47231,
            47155,
            47470,
            47533,
            49181,
            48821,
            47375,
            47314,
            47459,
            47411,
            47332,
            47365,
            47311,
            47365,
            47472,
            47251,
            47338,
            47159,
            47556,
            47571,
            47436,
            47527,
            49016,
            49001,
            47396,
            47186,
            47369,
            47241,
            47463,
            47636,
            47252,
            47351,
            47423,
            47534,
            47473,
            47313
          ],
          [
            47808,
            47510,
            47207,
            47350,
            47320,
            47281,
            47330,
            47334,
            47502,
            47427,
            47473,
            47510,
            47354,
            49080,
            49275,
            47517,
            47480,
            47283,
            47370,
            47040,
            47476,
            47453,
            47190,
            47439,
            47458,
            47457,
            47530,
            47231,
            47155,
            47470,
            47533,
            49181,
            48821,
            47375,
            47314,
            47459,
            47411,
            47332,
            47365,
            47311,
            47365,
            47472,
            47251,
            47338,
            47159,
            47556,
            47571,
            47436,
            47527,
            49016,
            49001,
            47396,
            47186,
            47369,
            47241,
            47463,
            47636,
            47252,
            47351,
            47423,
            47534,
            47473,
            47313
          ],
          [
            47808,
            47510,
            47207,
            47350,
            47320,
            47281,
            47330,
            47334,
            47502,
            47427,
            47473,
            47510,
            47354,
            49080,
            49275,
            47517,
            47480,
            47283,
            47370,
            47040,
            47476,
            47453,
            47190,
            47439,
            47458,
            47457,
            47530,
            47231,
            47155,
            47470,
            47533,
            49181,
            48821,
            47375,
            47314,
            47459,
            47411,
            47332,
            47365,
            47311,
            47365,
            47472,
            47251,
            47338,
            47159,
            47556,
            47571,
            47436,
            47527,
            49016,
            49001,
            47396,
            47186,
            47369,
            47241,
            47463,
            47636,
            47252,
            47351,
            47423,
            47534,
            47473,
            47313
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            222,
            2098,
            10735,
            24998,
            38494,
            37693,
            22045,
            8114,
            1285,
            119,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            421,
            3014,
            14637,
            29119,
            37412,
            37767,
            27967,
            16977,
            5276,
            738,
            51,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            4,
            38,
            661,
            4564,
            14126,
            28996,
            39373,
            35738,
            18682,
            5449,
            587,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            189,
            1633,
            7181,
            20393,
            34535,
            43450,
            40466,
            26919,
            12058,
            2245,
            175,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            135,
            1602,
            7679,
            20911,
            36249,
            41637
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            44,
            899,
            5118,
            14584,
            28404,
            37565,
            31500,
            15484,
            3485,
            343,
            2,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            56,
            720,
            5718,
            17682,
            35451,
            41936,
            33943,
            19099,
            6087,
            840,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            58,
            1094,
            6292,
            17275,
            32313,
            38861,
            32400,
            16296,
            4500,
            436,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            234,
            2015,
            7192,
            18545,
            34625,
            42063,
            35419,
            22298,
            7521,
            1355,
            135,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            3,
            221,
            2031,
            8357,
            18945,
            32025,
            41434,
            39497,
            26137,
            10827,
            1641,
            132,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            90,
            807,
            3765,
            10996,
            23546,
            35905,
            42914,
            38140,
            24254,
            9595,
            2825,
            387,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            155,
            1934,
            9703,
            20767,
            33795
          ]
        ]
      },
      "call": {
        "duration": 0.2710800540007767,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015007830006652512,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2914017580005748,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168559814999753,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014849729996058159,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3823460589992465,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            157,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003571099998225691,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002992085999721894,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5365129000019806,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            4,
            255,
            2,
            40,
            1,
            255,
            1,
            255,
            255
          ],
          [
            80,
            0,
            25,
            0,
            4,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            49,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            9,
            255,
            39,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            2,
            0,
            255,
            2,
            255,
            255
          ],
          [
            96,
            0,
            1,
            0,
            13,
            0,
            255,
            131,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            170,
            255,
            2,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            59,
            0,
            2,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            69,
            255,
            35,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003489797996735433,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028908350031997543,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29625544599912246,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47961,
            47462,
            47467,
            47533,
            47482,
            47527,
            47620,
            47532,
            47386,
            47485,
            47219,
            47301,
            47633,
            47492,
            47401,
            47494,
            47509,
            47583,
            47628,
            47478,
            47448,
            49326,
            47464,
            40810,
            47633,
            47845,
            47448,
            47431,
            47453,
            47492,
            48517,
            47288,
            47628,
            47432,
            47522,
            47521,
            47713,
            47444,
            47387,
            47455,
            47415,
            47566,
            47692,
            47493,
            47705,
            47427,
            47473,
            47442,
            47709,
            47581,
            47379,
            47476,
            47547,
            47639,
            47987,
            47412,
            49571,
            47548,
            47321,
            47423,
            47315,
            47310,
            47438
          ],
          [
            47961,
            47462,
            47467,
            47533,
            47482,
            47527,
            47620,
            47532,
            47386,
            47485,
            47219,
            47301,
            47633,
            47492,
            47401,
            47494,
            47509,
            47583,
            47628,
            47478,
            47448,
            49326,
            47464,
            40810,
            47633,
            47845,
            47448,
            47431,
            47453,
            47492,
            48517,
            47288,
            47628,
            47432,
            47522,
            47521,
            47713,
            47444,
            47387,
            47455,
            47415,
            47566,
            47692,
            47493,
            47705,
            47427,
            47473,
            47442,
            47709,
            47581,
            47379,
            47476,
            47547,
            47639,
            47987,
            47412,
            49571,
            47548,
            47321,
            47423,
            47315,
            47310,
            47438
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            504,
            6686,
            24465,
            39633,
            34432,
            14838,
            3179,
            315,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            598,
            6226,
            22241,
            38124,
            38382,
            21424,
            5260,
            660,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            0,
            0,
            2,
            135,
            2131,
            14473,
            32761,
            40988,
            29325,
            9434,
            1405,
            155,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            527,
            5630,
            21949,
            38570,
            41877,
            30825,
            12459,
            2377,
            295,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            960,
            7670,
            24892,
            39752,
            43552
          ]
        ]
      },
      "call": {
        "duration": 0.13418213700060733,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016011660009098705,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06906811299995752,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48028,
            47599,
            48715,
            49464,
            46934,
            47463,
            47191,
            47378,
            47419,
            47354,
            47175,
            41536,
            47880,
            47493,
            47217,
            47374,
            46917,
            47528,
            47606,
            49188,
            49075,
            47372,
            47296,
            47609,
            47176,
            47349,
            47164,
            47354,
            47495,
            47269,
            47163,
            47232,
            47118,
            47685,
            47211,
            47316,
            48915,
            49752,
            47421,
            47233,
            47106,
            47290,
            47178,
            47516,
            47159,
            47253,
            47308,
            47382,
            47416,
            47276,
            47043,
            47543,
            47368,
            48977,
            47285,
            47382,
            47039,
            47240,
            47475,
            47292,
            47204,
            47374,
            47218
          ],
          [
            48028,
            47599,
            48715,
            49464,
            46934,
            47463,
            47191,
            47378,
            47419,
            47354,
            47175,
            41536,
            47880,
            47493,
            47217,
            47374,
            46917,
            47528,
            47606,
            49188,
            49075,
            47372,
            47296,
            47609,
            47176,
            47349,
            47164,
            47354,
            47495,
            47269,
            47163,
            47232,
            47118,
            47685,
            47211,
            47316,
            48915,
            49752,
            47421,
            47233,
            47106,
            47290,
            47178,
            47516,
            47159,
            47253,
            47308,
            47382,
            47416,
            47276,
            47043,
            47543,
            47368,
            48977,
            47285,
            47382,
            47039,
            47240,
            47475,
            47292,
            47204,
            47374,
            47218
          ],
          [
            48028,
            47599,
            48715,
            49464,
            46934,
            47463,
            47191,
            47378,
            47419,
            47354,
            47175,
            41536,
            47880,
            47493,
            47217,
            47374,
            46917,
            47528,
            47606,
            49188,
            49075,
            47372,
            47296,
            47609,
            47176,
            47349,
            47164,
            47354,
            47495,
            47269,
            47163,
            47232,
            47118,
            47685,
            47211,
            47316,
            48915,
            49752,
            47421,
            47233,
            47106,
            47290,
            47178,
            47516,
            47159,
            47253,
            47308,
            47382,
            47416,
            47276,
            47043,
            47543,
            47368,
            48977,
            47285,
            47382,
            47039,
            47240,
            47475,
            47292,
            47204,
            47374,
            47218
          ],
          [
            48028,
            47599,
            48715,
            49464,
            46934,
            47463,
            47191,
            47378,
            47419,
            47354,
            47175,
            41536,
            47880,
            47493,
            47217,
            47374,
            46917,
            47528,
            47606,
            49188,
            49075,
            47372,
            47296,
            47609,
            47176,
            47349,
            47164,
            47354,
            47495,
            47269,
            47163,
            47232,
            47118,
            47685,
            47211,
            47316,
            48915,
            49752,
            47421,
            47233,
            47106,
            47290,
            47178,
            47516,
            47159,
            47253,
            47308,
            47382,
            47416,
            47276,
            47043,
            47543,
            47368,
            48977,
            47285,
            47382,
            47039,
            47240,
            47475,
            47292,
            47204,
            47374,
            47218
          ],
          [
            48028,
            47599,
            48715,
            49464,
            46934,
            47463,
            47191,
            47378,
            47419,
            47354,
            47175,
            41536,
            47880,
            47493,
            47217,
            47374,
            46917,
            47528,
            47606,
            49188,
            49075,
            47372,
            47296,
            47609,
            47176,
            47349,
            47164,
            47354,
            47495,
            47269,
            47163,
            47232,
            47118,
            47685,
            47211,
            47316,
            48915,
            49752,
            47421,
            47233,
            47106,
            47290,
            47178,
            47516,
            47159,
            47253,
            47308,
            47382,
            47416,
            47276,
            47043,
            47543,
            47368,
            48977,
            47285,
            47382,
            47039,
            47240,
            47475,
            47292,
            47204,
            47374,
            47218
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            76,
            869,
            5328,
            17556,
            31067,
            37330,
            32576,
            24376,
            14444,
            4005,
            363,
            41,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            132,
            1685,
            8157,
            21164,
            35620,
            40714,
            33627,
            18625,
            5865,
            887,
            69,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            161,
            1228,
            4490,
            9384,
            23148,
            35309,
            41445,
            36271,
            21292,
            7387,
            1572,
            194,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            115,
            1051,
            5879,
            16028,
            28878,
            40393,
            39530,
            28859,
            11406,
            2152,
            206,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12
          ],
          [
            10783,
            2828,
            228,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            95,
            1488,
            7792,
            19330,
            32405,
            38954,
            29630,
            14740,
            4967,
            508,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            158,
            1467,
            8379,
            18724,
            29640,
            38984,
            34683,
            20448,
            7416,
            1109,
            68,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            102,
            962,
            4761,
            13460,
            26718,
            39640,
            42448,
            33818,
            20266,
            7241,
            1552,
            167,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            112,
            1012,
            6049,
            17319,
            27941,
            38053,
            35046,
            21979,
            8087,
            1416,
            169,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            237,
            1720,
            7002,
            15840,
            25748,
            36256,
            40342,
            35302,
            21142,
            10054,
            2448,
            286,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            13,
            370,
            3181,
            10231,
            20476,
            32261,
            41141,
            42865,
            37115,
            23950,
            9266,
            1759,
            218,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2719189620001998,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001481192997744074,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2916684029987664,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170055198999762,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045604, 10011401), (411016, 411016), (40048662, 10012166))\nassert ((40045604 > 0 and 10011401 == 0\n  +10011401\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffffa865b280>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffffa83e4940>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffffa8776040>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045604, 10011401), (411016, 411016), (40048662, 10012166))\nE       assert ((40045604 > 0 and 10011401 == 0\nE         +10011401\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.0049695510024321266,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}