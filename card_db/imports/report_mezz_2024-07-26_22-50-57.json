{
  "created": 1722034276.7582078,
  "duration": 23.25860571861267,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5077241079998203,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14844616499976837,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013144789991201833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038826269992568996,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14836882400049944,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013150489976396784,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13296938900020905,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12217595800029812,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012974989986105356,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038699970027664676,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12156394499834278,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012707679998129606,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033990759984590113,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14676861699990695,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001196365999931004,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033900160015036818,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12018349299978581,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011739559995476156,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003426766001211945,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1466620250030246,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00118763699720148,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033481649988971185,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12043864999941434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011773760015785228,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004431909001141321,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021310980009729974,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001133485002355883,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033339740002702456,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017155289970105514,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001136875001975568,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033518540003569797,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040764010009297635,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034259.3295486,
            "msecs": 329.54859733581543,
            "relativeCreated": 7805.991649627686,
            "thread": 281472935714848,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5589
          }
        ]
      },
      "teardown": {
        "duration": 0.0013021790000493638,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033933160011656582,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002448743998684222,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034259.3419294,
            "msecs": 341.92943572998047,
            "relativeCreated": 7818.372488021851,
            "thread": 281472935714848,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5589
          }
        ]
      },
      "teardown": {
        "duration": 0.0011759070002881344,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002101067002513446,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002750340998318279,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034259.3515003,
            "msecs": 351.5002727508545,
            "relativeCreated": 7827.943325042725,
            "thread": 281472935714848,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5589
          }
        ]
      },
      "teardown": {
        "duration": 0.0011241850006626919,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002116276999004185,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003458387996943202,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034259.3609948,
            "msecs": 360.994815826416,
            "relativeCreated": 7837.437868118286,
            "thread": 281472935714848,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5589
          }
        ]
      },
      "teardown": {
        "duration": 0.0010840150025615003,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033784059996833093,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14659797399872332,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011951369997404981,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003361215000040829,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12025900599837769,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011961870004597586,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17925289300183067,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14768420799737214,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012817189999623224,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015154327997151995,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12106080299781752,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012700780025625136,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8358206160010013,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            18,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            77,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            11,
            64,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.0035875110006600153,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002928455000073882,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9011172229984368,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            16,
            0,
            1,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            219,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            227,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            20,
            255,
            255,
            255,
            14
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            56,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            134,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            105,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            244,
            255,
            255,
            255,
            255,
            0,
            0,
            166,
            0,
            86,
            255
          ],
          [
            255,
            0,
            222,
            0,
            255,
            0,
            239,
            78,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003472937001788523,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029139650032448117,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30251232600130606,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48155,
            47595,
            47433,
            47444,
            47299,
            47445,
            47446,
            47415,
            47442,
            47333,
            47400,
            47345,
            47419,
            47420,
            47233,
            47356,
            47679,
            47348,
            47749,
            47579,
            49663,
            47270,
            47743,
            47525,
            47471,
            47471,
            47293,
            47418,
            47438,
            47432,
            47580,
            47385,
            47281,
            47421,
            47501,
            47545,
            47498,
            47580,
            47348,
            47421,
            47577,
            47318,
            47576,
            47479,
            47394,
            47483,
            47106,
            47073,
            47621,
            47536,
            47305,
            47361,
            47484,
            47393,
            47163,
            51995,
            47464,
            47478,
            47671,
            47424,
            47653,
            47561,
            47452
          ],
          [
            48155,
            47595,
            47433,
            47444,
            47299,
            47445,
            47446,
            47415,
            47442,
            47333,
            47400,
            47345,
            47419,
            47420,
            47233,
            47356,
            47679,
            47348,
            47749,
            47579,
            49663,
            47270,
            47743,
            47525,
            47471,
            47471,
            47293,
            47418,
            47438,
            47432,
            47580,
            47385,
            47281,
            47421,
            47501,
            47545,
            47498,
            47580,
            47348,
            47421,
            47577,
            47318,
            47576,
            47479,
            47394,
            47483,
            47106,
            47073,
            47621,
            47536,
            47305,
            47361,
            47484,
            47393,
            47163,
            51995,
            47464,
            47478,
            47671,
            47424,
            47653,
            47561,
            47452
          ]
        ],
        "eTX_errcounts": [
          [
            40045,
            25761,
            7789,
            1098,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            295,
            3491,
            17247,
            35125,
            41601,
            30374,
            13562,
            2068,
            163,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            60,
            1027,
            8593,
            27056,
            40486,
            40283,
            18857,
            4384,
            546,
            17,
            1,
            0,
            0
          ],
          [
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            418,
            4507,
            18802,
            36940,
            42382,
            30398,
            12501,
            2816,
            217,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            24,
            383,
            4776,
            19720,
            36695,
            43156,
            34195,
            16106,
            3163,
            254,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13331838700105436,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016494369992869906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06920824600092601,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48143,
            47291,
            47299,
            47139,
            47262,
            47263,
            47371,
            47406,
            47195,
            47329,
            47443,
            47352,
            47489,
            47717,
            47439,
            47185,
            47243,
            47204,
            47087,
            47239,
            47160,
            47196,
            47009,
            47182,
            47481,
            47220,
            47444,
            47356,
            47309,
            47445,
            47254,
            47374,
            47334,
            48927,
            49056,
            47328,
            47573,
            46894,
            47353,
            47138,
            47103,
            47297,
            47165,
            47199,
            47140,
            47206,
            47200,
            46981,
            47487,
            47340,
            47395,
            47364,
            47406,
            48804,
            47297,
            47356,
            47224,
            47180,
            47168,
            47276,
            47360,
            47244,
            47461
          ],
          [
            48143,
            47291,
            47299,
            47139,
            47262,
            47263,
            47371,
            47406,
            47195,
            47329,
            47443,
            47352,
            47489,
            47717,
            47439,
            47185,
            47243,
            47204,
            47087,
            47239,
            47160,
            47196,
            47009,
            47182,
            47481,
            47220,
            47444,
            47356,
            47309,
            47445,
            47254,
            47374,
            47334,
            48927,
            49056,
            47328,
            47573,
            46894,
            47353,
            47138,
            47103,
            47297,
            47165,
            47199,
            47140,
            47206,
            47200,
            46981,
            47487,
            47340,
            47395,
            47364,
            47406,
            48804,
            47297,
            47356,
            47224,
            47180,
            47168,
            47276,
            47360,
            47244,
            47461
          ],
          [
            48143,
            47291,
            47299,
            47139,
            47262,
            47263,
            47371,
            47406,
            47195,
            47329,
            47443,
            47352,
            47489,
            47717,
            47439,
            47185,
            47243,
            47204,
            47087,
            47239,
            47160,
            47196,
            47009,
            47182,
            47481,
            47220,
            47444,
            47356,
            47309,
            47445,
            47254,
            47374,
            47334,
            48927,
            49056,
            47328,
            47573,
            46894,
            47353,
            47138,
            47103,
            47297,
            47165,
            47199,
            47140,
            47206,
            47200,
            46981,
            47487,
            47340,
            47395,
            47364,
            47406,
            48804,
            47297,
            47356,
            47224,
            47180,
            47168,
            47276,
            47360,
            47244,
            47461
          ],
          [
            48143,
            47291,
            47299,
            47139,
            47262,
            47263,
            47371,
            47406,
            47195,
            47329,
            47443,
            47352,
            47489,
            47717,
            47439,
            47185,
            47243,
            47204,
            47087,
            47239,
            47160,
            47196,
            47009,
            47182,
            47481,
            47220,
            47444,
            47356,
            47309,
            47445,
            47254,
            47374,
            47334,
            48927,
            49056,
            47328,
            47573,
            46894,
            47353,
            47138,
            47103,
            47297,
            47165,
            47199,
            47140,
            47206,
            47200,
            46981,
            47487,
            47340,
            47395,
            47364,
            47406,
            48804,
            47297,
            47356,
            47224,
            47180,
            47168,
            47276,
            47360,
            47244,
            47461
          ],
          [
            48143,
            47291,
            47299,
            47139,
            47262,
            47263,
            47371,
            47406,
            47195,
            47329,
            47443,
            47352,
            47489,
            47717,
            47439,
            47185,
            47243,
            47204,
            47087,
            47239,
            47160,
            47196,
            47009,
            47182,
            47481,
            47220,
            47444,
            47356,
            47309,
            47445,
            47254,
            47374,
            47334,
            48927,
            49056,
            47328,
            47573,
            46894,
            47353,
            47138,
            47103,
            47297,
            47165,
            47199,
            47140,
            47206,
            47200,
            46981,
            47487,
            47340,
            47395,
            47364,
            47406,
            48804,
            47297,
            47356,
            47224,
            47180,
            47168,
            47276,
            47360,
            47244,
            47461
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            37,
            507,
            2859,
            10272,
            22403,
            34024,
            36328,
            31227,
            20216,
            9007,
            2249,
            457,
            57,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            48,
            956,
            4572,
            12585,
            24305,
            32401,
            35723,
            30903,
            22695,
            12013,
            4086,
            979,
            127,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            9,
            212,
            1346,
            4299,
            10603,
            22680,
            36163,
            39541,
            34859,
            25249,
            15714,
            8416,
            3319,
            549,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            198,
            1427,
            5822,
            16384,
            28283,
            32638,
            35203,
            35717,
            27685,
            16511,
            6798,
            1407,
            146,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            74,
            632,
            2483,
            6169,
            13913,
            28000
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            84,
            1183,
            5629,
            17041,
            31062,
            35618,
            32498,
            22817,
            12799,
            5009,
            1011,
            71,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            148,
            1306,
            6986,
            15715,
            29083,
            35987,
            33167,
            23428,
            11428,
            3179,
            503,
            32,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            33,
            440,
            2495,
            8302,
            20881,
            34411,
            37675,
            33580,
            25848,
            15731,
            6881,
            1607,
            156,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            70,
            720,
            3332,
            8485,
            16955,
            28114,
            36059,
            33853,
            25572,
            15091,
            6662,
            1632,
            133,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            14,
            236,
            1302,
            3709,
            8486,
            18901,
            34003,
            39596,
            36907,
            30642,
            22885,
            13582,
            7457,
            2624,
            432,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            119,
            1398,
            5261,
            13157,
            25270,
            32521,
            35720,
            37390,
            32849,
            23821,
            14960,
            7065,
            1803,
            206,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            126,
            980,
            3398,
            8863
          ]
        ]
      },
      "call": {
        "duration": 0.27125399799842853,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff71963b10>()\n +    where <built-in method all of numpy.ndarray object at 0xffff71963b10> = array([20, 12, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff7194b370>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48143, 47291, 47299, 47139, 47262, 47263, ...], [48143, 47291, 47299, 47139, 47262, 47263, ...], [..., ...], [0, 1, 9, 212, 1346, 4299, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 14, 236, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff71963b10>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff71963b10> = array([20, 12, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016665369985275902,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2927928579993022,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1680903649976244,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015011139985290356,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2945211379992543,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            255,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            210,
            50,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035011079999094363,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002932565999799408,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5380366649987991,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            216,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            15,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            74,
            255,
            121,
            255,
            150,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            208,
            0,
            128,
            3,
            255,
            44,
            255,
            13
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            81,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            3,
            255,
            155,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            194,
            255,
            124,
            255,
            255,
            12,
            0,
            186,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            0,
            255,
            139,
            255,
            120
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003469818002486136,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029213449997769203,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29584608699951787,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47837,
            47584,
            47249,
            47467,
            58723,
            47646,
            47411,
            47597,
            47507,
            47402,
            47626,
            47332,
            47518,
            47627,
            47372,
            47321,
            47674,
            47418,
            47338,
            47604,
            47471,
            47487,
            47548,
            49678,
            47601,
            47875,
            47483,
            47824,
            47478,
            47303,
            47116,
            47442,
            47471,
            47167,
            47337,
            47391,
            47548,
            47512,
            47374,
            47413,
            47461,
            47323,
            47469,
            47637,
            47444,
            47394,
            47748,
            47423,
            47350,
            47499,
            47371,
            47486,
            47602,
            47442,
            47471,
            47486,
            47510,
            47452,
            47596,
            47355,
            47375,
            47656,
            49188
          ],
          [
            47837,
            47584,
            47249,
            47467,
            58723,
            47646,
            47411,
            47597,
            47507,
            47402,
            47626,
            47332,
            47518,
            47627,
            47372,
            47321,
            47674,
            47418,
            47338,
            47604,
            47471,
            47487,
            47548,
            49678,
            47601,
            47875,
            47483,
            47824,
            47478,
            47303,
            47116,
            47442,
            47471,
            47167,
            47337,
            47391,
            47548,
            47512,
            47374,
            47413,
            47461,
            47323,
            47469,
            47637,
            47444,
            47394,
            47748,
            47423,
            47350,
            47499,
            47371,
            47486,
            47602,
            47442,
            47471,
            47486,
            47510,
            47452,
            47596,
            47355,
            47375,
            47656,
            49188
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            255,
            4067,
            18038,
            36150,
            36760,
            18807,
            4910,
            383,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            220,
            2756,
            16737,
            35141,
            39504,
            25681,
            7966,
            1009,
            74,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            47,
            1057,
            8589,
            29261,
            42565,
            39079,
            19163,
            4521,
            571,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            162,
            2428,
            13473,
            31475,
            42824,
            38360,
            20482,
            5265,
            491,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13339410899789073,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016281070020340849,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0688828279999143,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47968,
            47307,
            47328,
            47405,
            47370,
            47428,
            47238,
            47860,
            47448,
            47344,
            47312,
            47324,
            47256,
            47250,
            46964,
            47326,
            47225,
            47337,
            47220,
            47320,
            47258,
            47291,
            47116,
            47489,
            47429,
            47337,
            47352,
            47792,
            47369,
            47336,
            47225,
            47301,
            47337,
            47310,
            47224,
            47406,
            47317,
            47292,
            47161,
            46934,
            47220,
            47461,
            47329,
            47298,
            47253,
            47468,
            47426,
            47698,
            49686,
            47406,
            47184,
            47258,
            47115,
            47309,
            47261,
            47232,
            47207,
            47327,
            47327,
            47420,
            47258,
            47460,
            47405
          ],
          [
            47968,
            47307,
            47328,
            47405,
            47370,
            47428,
            47238,
            47860,
            47448,
            47344,
            47312,
            47324,
            47256,
            47250,
            46964,
            47326,
            47225,
            47337,
            47220,
            47320,
            47258,
            47291,
            47116,
            47489,
            47429,
            47337,
            47352,
            47792,
            47369,
            47336,
            47225,
            47301,
            47337,
            47310,
            47224,
            47406,
            47317,
            47292,
            47161,
            46934,
            47220,
            47461,
            47329,
            47298,
            47253,
            47468,
            47426,
            47698,
            49686,
            47406,
            47184,
            47258,
            47115,
            47309,
            47261,
            47232,
            47207,
            47327,
            47327,
            47420,
            47258,
            47460,
            47405
          ],
          [
            47968,
            47307,
            47328,
            47405,
            47370,
            47428,
            47238,
            47860,
            47448,
            47344,
            47312,
            47324,
            47256,
            47250,
            46964,
            47326,
            47225,
            47337,
            47220,
            47320,
            47258,
            47291,
            47116,
            47489,
            47429,
            47337,
            47352,
            47792,
            47369,
            47336,
            47225,
            47301,
            47337,
            47310,
            47224,
            47406,
            47317,
            47292,
            47161,
            46934,
            47220,
            47461,
            47329,
            47298,
            47253,
            47468,
            47426,
            47698,
            49686,
            47406,
            47184,
            47258,
            47115,
            47309,
            47261,
            47232,
            47207,
            47327,
            47327,
            47420,
            47258,
            47460,
            47405
          ],
          [
            47968,
            47307,
            47328,
            47405,
            47370,
            47428,
            47238,
            47860,
            47448,
            47344,
            47312,
            47324,
            47256,
            47250,
            46964,
            47326,
            47225,
            47337,
            47220,
            47320,
            47258,
            47291,
            47116,
            47489,
            47429,
            47337,
            47352,
            47792,
            47369,
            47336,
            47225,
            47301,
            47337,
            47310,
            47224,
            47406,
            47317,
            47292,
            47161,
            46934,
            47220,
            47461,
            47329,
            47298,
            47253,
            47468,
            47426,
            47698,
            49686,
            47406,
            47184,
            47258,
            47115,
            47309,
            47261,
            47232,
            47207,
            47327,
            47327,
            47420,
            47258,
            47460,
            47405
          ],
          [
            47968,
            47307,
            47328,
            47405,
            47370,
            47428,
            47238,
            47860,
            47448,
            47344,
            47312,
            47324,
            47256,
            47250,
            46964,
            47326,
            47225,
            47337,
            47220,
            47320,
            47258,
            47291,
            47116,
            47489,
            47429,
            47337,
            47352,
            47792,
            47369,
            47336,
            47225,
            47301,
            47337,
            47310,
            47224,
            47406,
            47317,
            47292,
            47161,
            46934,
            47220,
            47461,
            47329,
            47298,
            47253,
            47468,
            47426,
            47698,
            49686,
            47406,
            47184,
            47258,
            47115,
            47309,
            47261,
            47232,
            47207,
            47327,
            47327,
            47420,
            47258,
            47460,
            47405
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            257,
            2702,
            13360,
            25886,
            34788,
            33573,
            22936,
            10680,
            3161,
            475,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            846,
            4761,
            14918,
            25888,
            35906,
            39247,
            31565,
            18081,
            4412,
            583,
            25,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            0,
            13,
            177,
            1543,
            6688,
            19165,
            33335,
            39819,
            32913,
            18307,
            6180,
            1030,
            74,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            156,
            1954,
            10546,
            24997,
            36620,
            42224,
            40320,
            30324,
            16453,
            4714,
            673,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            350,
            2360,
            8419,
            19152,
            32586,
            37510
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            513,
            4131,
            16212,
            30317,
            36436,
            31905,
            18076,
            6890,
            1077,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            54,
            895,
            7657,
            21705,
            37614,
            42152,
            35365,
            22523,
            9596,
            1920,
            200,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            103,
            1278,
            6706,
            20132,
            34152,
            38298,
            33181,
            20864,
            8128,
            1424,
            113,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            17,
            312,
            3008,
            12142,
            24703,
            34053,
            38506,
            35197,
            25216,
            11748,
            2968,
            277,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            168,
            2231,
            8386,
            21619,
            33781,
            39483,
            35402,
            23993,
            12047,
            2814,
            381,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            664,
            4071,
            14726,
            26553,
            36403,
            40714,
            37735,
            27305,
            13187,
            3647,
            451,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            109,
            1049,
            5864,
            16732,
            31778
          ]
        ]
      },
      "call": {
        "duration": 0.26962490100049763,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015047439992486034,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29142347800006974,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169765152000764,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014527519997500349,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3714666160012712,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            225,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            138,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            215,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003614180997828953,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029632859987032134,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.536674213999504,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            3,
            255,
            11,
            255,
            3,
            67,
            0,
            255,
            1,
            255,
            255
          ],
          [
            81,
            0,
            32,
            0,
            4,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            27,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            28,
            0,
            7,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            10,
            255,
            63,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            3,
            255
          ],
          [
            255,
            0,
            255,
            3,
            255,
            3,
            5,
            0,
            255,
            4,
            255,
            255
          ],
          [
            89,
            0,
            10,
            0,
            12,
            0,
            255,
            241,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            108,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            78,
            0,
            5,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            121,
            255,
            76,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00346306799838203,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002911594998295186,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960833620018093,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47918,
            47444,
            47430,
            47312,
            47256,
            47391,
            47556,
            47515,
            47440,
            47447,
            47345,
            47361,
            47348,
            47641,
            47292,
            47468,
            49293,
            47419,
            47781,
            47511,
            47775,
            47358,
            47699,
            47405,
            47277,
            47484,
            47271,
            47341,
            47252,
            47119,
            47296,
            48114,
            47278,
            47335,
            47182,
            47408,
            48244,
            47451,
            47274,
            47294,
            47384,
            47379,
            47370,
            47543,
            47340,
            47323,
            47450,
            47422,
            47224,
            47173,
            47385,
            47374,
            47476,
            47320,
            47494,
            49337,
            47399,
            47584,
            47405,
            49499,
            47320,
            47511,
            47395
          ],
          [
            47918,
            47444,
            47430,
            47312,
            47256,
            47391,
            47556,
            47515,
            47440,
            47447,
            47345,
            47361,
            47348,
            47641,
            47292,
            47468,
            49293,
            47419,
            47781,
            47511,
            47775,
            47358,
            47699,
            47405,
            47277,
            47484,
            47271,
            47341,
            47252,
            47119,
            47296,
            48114,
            47278,
            47335,
            47182,
            47408,
            48244,
            47451,
            47274,
            47294,
            47384,
            47379,
            47370,
            47543,
            47340,
            47323,
            47450,
            47422,
            47224,
            47173,
            47385,
            47374,
            47476,
            47320,
            47494,
            49337,
            47399,
            47584,
            47405,
            49499,
            47320,
            47511,
            47395
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            646,
            7473,
            25728,
            39626,
            33577,
            14386,
            2969,
            239,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            28,
            740,
            6593,
            23155,
            38493,
            37154,
            20061,
            5184,
            568,
            35,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            123,
            2240,
            14669,
            33437,
            41120,
            28664,
            9263,
            1361,
            104,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            671,
            6029,
            22252,
            38587,
            41618,
            30445,
            12064,
            2054,
            267,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            788,
            8950,
            25796,
            40813,
            43793
          ]
        ]
      },
      "call": {
        "duration": 0.13351669199983007,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001634855998418061,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06908584299890208,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47527,
            47298,
            47082,
            47032,
            47055,
            47087,
            47146,
            47097,
            47473,
            47202,
            47226,
            47177,
            47271,
            47031,
            47264,
            47406,
            47111,
            47119,
            47008,
            47232,
            47156,
            47005,
            47116,
            47049,
            47106,
            47147,
            47038,
            47091,
            47056,
            47152,
            47283,
            47238,
            47149,
            47179,
            47257,
            49007,
            47432,
            47237,
            39254,
            47075,
            47098,
            47089,
            47202,
            47235,
            47187,
            47153,
            47311,
            47122,
            46958,
            47139,
            47207,
            48278,
            47178,
            47036,
            47277,
            47215,
            48956,
            47532,
            47183,
            47018,
            47136,
            47264,
            47248
          ],
          [
            47527,
            47298,
            47082,
            47032,
            47055,
            47087,
            47146,
            47097,
            47473,
            47202,
            47226,
            47177,
            47271,
            47031,
            47264,
            47406,
            47111,
            47119,
            47008,
            47232,
            47156,
            47005,
            47116,
            47049,
            47106,
            47147,
            47038,
            47091,
            47056,
            47152,
            47283,
            47238,
            47149,
            47179,
            47257,
            49007,
            47432,
            47237,
            39254,
            47075,
            47098,
            47089,
            47202,
            47235,
            47187,
            47153,
            47311,
            47122,
            46958,
            47139,
            47207,
            48278,
            47178,
            47036,
            47277,
            47215,
            48956,
            47532,
            47183,
            47018,
            47136,
            47264,
            47248
          ],
          [
            47527,
            47298,
            47082,
            47032,
            47055,
            47087,
            47146,
            47097,
            47473,
            47202,
            47226,
            47177,
            47271,
            47031,
            47264,
            47406,
            47111,
            47119,
            47008,
            47232,
            47156,
            47005,
            47116,
            47049,
            47106,
            47147,
            47038,
            47091,
            47056,
            47152,
            47283,
            47238,
            47149,
            47179,
            47257,
            49007,
            47432,
            47237,
            39254,
            47075,
            47098,
            47089,
            47202,
            47235,
            47187,
            47153,
            47311,
            47122,
            46958,
            47139,
            47207,
            48278,
            47178,
            47036,
            47277,
            47215,
            48956,
            47532,
            47183,
            47018,
            47136,
            47264,
            47248
          ],
          [
            47527,
            47298,
            47082,
            47032,
            47055,
            47087,
            47146,
            47097,
            47473,
            47202,
            47226,
            47177,
            47271,
            47031,
            47264,
            47406,
            47111,
            47119,
            47008,
            47232,
            47156,
            47005,
            47116,
            47049,
            47106,
            47147,
            47038,
            47091,
            47056,
            47152,
            47283,
            47238,
            47149,
            47179,
            47257,
            49007,
            47432,
            47237,
            39254,
            47075,
            47098,
            47089,
            47202,
            47235,
            47187,
            47153,
            47311,
            47122,
            46958,
            47139,
            47207,
            48278,
            47178,
            47036,
            47277,
            47215,
            48956,
            47532,
            47183,
            47018,
            47136,
            47264,
            47248
          ],
          [
            47527,
            47298,
            47082,
            47032,
            47055,
            47087,
            47146,
            47097,
            47473,
            47202,
            47226,
            47177,
            47271,
            47031,
            47264,
            47406,
            47111,
            47119,
            47008,
            47232,
            47156,
            47005,
            47116,
            47049,
            47106,
            47147,
            47038,
            47091,
            47056,
            47152,
            47283,
            47238,
            47149,
            47179,
            47257,
            49007,
            47432,
            47237,
            39254,
            47075,
            47098,
            47089,
            47202,
            47235,
            47187,
            47153,
            47311,
            47122,
            46958,
            47139,
            47207,
            48278,
            47178,
            47036,
            47277,
            47215,
            48956,
            47532,
            47183,
            47018,
            47136,
            47264,
            47248
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            192,
            1964,
            8945,
            18682,
            28338,
            35672,
            35388,
            26392,
            12829,
            2794,
            306,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            346,
            2691,
            10486,
            23374,
            34376,
            37843,
            32605,
            19234,
            7780,
            2362,
            285,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            80,
            687,
            4964,
            15635,
            26930,
            34667,
            38752,
            36795,
            25500,
            12934,
            4650,
            869,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            182,
            1328,
            4737,
            15968,
            27957,
            35265,
            34221,
            25329,
            12509,
            3946,
            599,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            13490,
            5071,
            757,
            43,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            235,
            2306,
            11120,
            23650,
            35125,
            39230,
            32335,
            18868,
            8084,
            1523,
            115,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            431,
            4256,
            15483,
            29594,
            37866,
            34825,
            22054,
            9134,
            2126,
            217,
            12,
            4,
            0,
            0,
            0
          ],
          [
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            74,
            1413,
            7770,
            20128,
            31413,
            38801,
            39127,
            32982,
            23298,
            11294,
            3007,
            316,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            43,
            518,
            3449,
            13098,
            25203,
            35019,
            32865,
            21912,
            10602,
            3651,
            721,
            41,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            111,
            1302,
            6117,
            17786,
            29266,
            37335,
            39413,
            34415,
            23205,
            12664,
            3095,
            394,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            10,
            177,
            1682,
            6926,
            17797,
            30542,
            39095,
            39847,
            33277,
            21945,
            12231,
            5394,
            1540,
            121,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.269174650999048,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015434140004799701,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29175243499776116,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.167761797001731,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004814177998923697,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}