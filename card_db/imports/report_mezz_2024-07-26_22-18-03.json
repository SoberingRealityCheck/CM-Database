{
  "created": 1722032302.9228165,
  "duration": 23.364664793014526,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.505226887002209,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14789737600221997,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013418400012596976,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003780533999815816,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14784427599806804,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012733180010400247,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13359512799797812,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12148958999750903,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012956989994563628,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003747892998944735,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12083809499745257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012852590007241815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003348403999552829,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14653117600028054,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011798960003943648,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003339523998874938,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11973125099757453,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011613259994192049,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033481640020909254,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14601015399966855,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011763270013034344,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003346394001709996,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11991860500347684,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011787559997173958,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004373046998807695,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002114597002218943,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001155866000772221,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003308264000224881,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017831490004027728,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010755529983725864,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003262423000705894,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004048439997859532,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032285.447898,
            "msecs": 447.89791107177734,
            "relativeCreated": 7862.021446228027,
            "thread": 281473712836640,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4646
          }
        ]
      },
      "teardown": {
        "duration": 0.001203686999360798,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033070930003304966,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002389523000601912,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032285.4601538,
            "msecs": 460.15381813049316,
            "relativeCreated": 7874.277353286743,
            "thread": 281473712836640,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4646
          }
        ]
      },
      "teardown": {
        "duration": 0.0011723359966708813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020821359976253007,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027486310027597938,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032285.469621,
            "msecs": 469.620943069458,
            "relativeCreated": 7883.744478225708,
            "thread": 281473712836640,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4646
          }
        ]
      },
      "teardown": {
        "duration": 0.0010322630005248357,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002054025997495046,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034351670001342427,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032285.4790628,
            "msecs": 479.0627956390381,
            "relativeCreated": 7893.186330795288,
            "thread": 281473712836640,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4646
          }
        ]
      },
      "teardown": {
        "duration": 0.001088335000531515,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003331453997816425,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1461915690015303,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011587459994188976,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003325424000649946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11986775399782346,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011725460026354995,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17942429700269713,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14745993700125837,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012414880002324935,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015144696000788826,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12087757600238547,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013004689972149208,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8314856190008868,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            4,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            82,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            17,
            141,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035488389985403046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028941649979969952,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9340041249997739,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            12,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            11
          ],
          [
            222,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            147,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            26,
            255,
            255,
            255,
            6
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            48,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            75,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            100,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            192,
            255,
            255,
            255,
            255,
            0,
            0,
            103,
            0,
            61,
            255
          ],
          [
            255,
            0,
            120,
            0,
            255,
            0,
            153,
            40,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003475996996712638,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00287358399873483,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30238788000133354,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48185,
            47443,
            47337,
            47339,
            47198,
            47403,
            47348,
            47307,
            47389,
            47377,
            47375,
            47513,
            47455,
            47475,
            47376,
            47404,
            47415,
            47572,
            47367,
            47481,
            47451,
            47415,
            47422,
            48946,
            47348,
            47848,
            47158,
            54135,
            47575,
            47394,
            47493,
            47457,
            47485,
            47400,
            47537,
            47329,
            47373,
            47407,
            47339,
            47359,
            47300,
            47340,
            47377,
            47382,
            47414,
            47288,
            47297,
            47425,
            47409,
            47353,
            47372,
            47536,
            47335,
            47562,
            47494,
            47414,
            49023,
            47438,
            47666,
            47410,
            49229,
            47376,
            47305
          ],
          [
            48185,
            47443,
            47337,
            47339,
            47198,
            47403,
            47348,
            47307,
            47389,
            47377,
            47375,
            47513,
            47455,
            47475,
            47376,
            47404,
            47415,
            47572,
            47367,
            47481,
            47451,
            47415,
            47422,
            48946,
            47348,
            47848,
            47158,
            54135,
            47575,
            47394,
            47493,
            47457,
            47485,
            47400,
            47537,
            47329,
            47373,
            47407,
            47339,
            47359,
            47300,
            47340,
            47377,
            47382,
            47414,
            47288,
            47297,
            47425,
            47409,
            47353,
            47372,
            47536,
            47335,
            47562,
            47494,
            47414,
            49023,
            47438,
            47666,
            47410,
            49229,
            47376,
            47305
          ]
        ],
        "eTX_errcounts": [
          [
            40284,
            26075,
            8079,
            1208,
            157,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            272,
            3284,
            16090,
            34431,
            48362,
            31511,
            14287,
            2095,
            143,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            1015,
            7891,
            25527,
            40584,
            36828,
            19739,
            5113,
            549,
            21,
            1,
            0,
            0
          ],
          [
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            352,
            4093,
            17282,
            36002,
            42458,
            32843,
            13688,
            3499,
            350,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            449,
            4717,
            19039,
            36031,
            43294,
            35333,
            16993,
            3513,
            362,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1339271459983138,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016179060003196355,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06879398900127853,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47745,
            47264,
            47211,
            47353,
            47237,
            47677,
            47181,
            47165,
            47156,
            47257,
            47198,
            47193,
            46827,
            47260,
            47136,
            47246,
            47184,
            47299,
            47403,
            47339,
            47272,
            47187,
            47100,
            49093,
            48986,
            47132,
            47160,
            47151,
            47238,
            47173,
            47228,
            46935,
            47129,
            47289,
            47164,
            47184,
            47179,
            47025,
            47124,
            47371,
            47176,
            47320,
            47468,
            47360,
            47170,
            47279,
            47185,
            47194,
            47165,
            47501,
            47166,
            47268,
            47033,
            47293,
            47177,
            46986,
            47243,
            47175,
            47133,
            47249,
            47112,
            47587,
            47456
          ],
          [
            47745,
            47264,
            47211,
            47353,
            47237,
            47677,
            47181,
            47165,
            47156,
            47257,
            47198,
            47193,
            46827,
            47260,
            47136,
            47246,
            47184,
            47299,
            47403,
            47339,
            47272,
            47187,
            47100,
            49093,
            48986,
            47132,
            47160,
            47151,
            47238,
            47173,
            47228,
            46935,
            47129,
            47289,
            47164,
            47184,
            47179,
            47025,
            47124,
            47371,
            47176,
            47320,
            47468,
            47360,
            47170,
            47279,
            47185,
            47194,
            47165,
            47501,
            47166,
            47268,
            47033,
            47293,
            47177,
            46986,
            47243,
            47175,
            47133,
            47249,
            47112,
            47587,
            47456
          ],
          [
            47745,
            47264,
            47211,
            47353,
            47237,
            47677,
            47181,
            47165,
            47156,
            47257,
            47198,
            47193,
            46827,
            47260,
            47136,
            47246,
            47184,
            47299,
            47403,
            47339,
            47272,
            47187,
            47100,
            49093,
            48986,
            47132,
            47160,
            47151,
            47238,
            47173,
            47228,
            46935,
            47129,
            47289,
            47164,
            47184,
            47179,
            47025,
            47124,
            47371,
            47176,
            47320,
            47468,
            47360,
            47170,
            47279,
            47185,
            47194,
            47165,
            47501,
            47166,
            47268,
            47033,
            47293,
            47177,
            46986,
            47243,
            47175,
            47133,
            47249,
            47112,
            47587,
            47456
          ],
          [
            47745,
            47264,
            47211,
            47353,
            47237,
            47677,
            47181,
            47165,
            47156,
            47257,
            47198,
            47193,
            46827,
            47260,
            47136,
            47246,
            47184,
            47299,
            47403,
            47339,
            47272,
            47187,
            47100,
            49093,
            48986,
            47132,
            47160,
            47151,
            47238,
            47173,
            47228,
            46935,
            47129,
            47289,
            47164,
            47184,
            47179,
            47025,
            47124,
            47371,
            47176,
            47320,
            47468,
            47360,
            47170,
            47279,
            47185,
            47194,
            47165,
            47501,
            47166,
            47268,
            47033,
            47293,
            47177,
            46986,
            47243,
            47175,
            47133,
            47249,
            47112,
            47587,
            47456
          ],
          [
            47745,
            47264,
            47211,
            47353,
            47237,
            47677,
            47181,
            47165,
            47156,
            47257,
            47198,
            47193,
            46827,
            47260,
            47136,
            47246,
            47184,
            47299,
            47403,
            47339,
            47272,
            47187,
            47100,
            49093,
            48986,
            47132,
            47160,
            47151,
            47238,
            47173,
            47228,
            46935,
            47129,
            47289,
            47164,
            47184,
            47179,
            47025,
            47124,
            47371,
            47176,
            47320,
            47468,
            47360,
            47170,
            47279,
            47185,
            47194,
            47165,
            47501,
            47166,
            47268,
            47033,
            47293,
            47177,
            46986,
            47243,
            47175,
            47133,
            47249,
            47112,
            47587,
            47456
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            84,
            1173,
            5126,
            13417,
            23861,
            31013,
            32557,
            28399,
            20480,
            10890,
            2994,
            366,
            24,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            203,
            1720,
            5629,
            12349,
            24170,
            35659,
            39479,
            32528,
            22026,
            10620,
            2865,
            454,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            59,
            599,
            2795,
            10406,
            21478,
            32126,
            35907,
            34407,
            26474,
            15229,
            6515,
            1516,
            208,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            161,
            1507,
            5017,
            11158,
            20582,
            32531,
            40644,
            39626,
            28900,
            18429,
            6630,
            1307,
            71,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            162,
            1311,
            5314,
            13525,
            23246
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            152,
            1594,
            6413,
            16791,
            30127,
            36195,
            32557,
            24483,
            13560,
            4482,
            742,
            30,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            125,
            1318,
            6497,
            16512,
            30953,
            34826,
            31241,
            24431,
            14441,
            4312,
            643,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            303,
            2282,
            8268,
            18283,
            30484,
            38186,
            35801,
            25929,
            13290,
            3486,
            484,
            10,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            47,
            595,
            2610,
            6533,
            16262,
            30256,
            38315,
            36422,
            29293,
            17966,
            7211,
            1452,
            109,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            11,
            109,
            952,
            3568,
            8916,
            19081,
            31856,
            38146,
            36717,
            31919,
            23639,
            10907,
            3031,
            496,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            127,
            1364,
            4864,
            9985,
            17355,
            29394,
            39914,
            41530,
            35043,
            24028,
            11631,
            3788,
            843,
            102,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            69,
            659,
            2973,
            8233
          ]
        ]
      },
      "call": {
        "duration": 0.2721536279968859,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9febb570>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9febb570> = array([22, 13, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9ff18340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47745, 47264, 47211, 47353, 47237, 47677, ...], [47745, 47264, 47211, 47353, 47237, 47677, ...], [... 0, ...], [0, 0, 1, 59, 599, 2795, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 11, 109, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9febb570>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9febb570> = array([22, 13, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016293360022245906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2922850649993052,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1685841790022096,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015185740012384485,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3006021319997672,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            63,
            12,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035081880014331546,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002899593997426564,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5326887769988389,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            218,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            214,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            82,
            255,
            130,
            255,
            127,
            0,
            0,
            234,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            141,
            2,
            255,
            39,
            255,
            12
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            102,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            202,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            157,
            255,
            255,
            9,
            0,
            149,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            2,
            255,
            182,
            255,
            169
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034606369990797248,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002873132998502115,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29565372000070056,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48038,
            47449,
            47353,
            48966,
            47336,
            47813,
            47414,
            47759,
            47419,
            47609,
            47528,
            47486,
            47456,
            47271,
            47291,
            47087,
            47278,
            47359,
            47495,
            47249,
            47360,
            47362,
            47492,
            47309,
            47373,
            47347,
            47372,
            47324,
            47375,
            47333,
            47398,
            47259,
            47298,
            47419,
            47547,
            47451,
            47326,
            47457,
            47499,
            47320,
            48985,
            47470,
            47744,
            47442,
            49271,
            47388,
            47399,
            47401,
            47411,
            47447,
            47494,
            47349,
            47253,
            47664,
            47407,
            47450,
            47286,
            47396,
            47426,
            47443,
            47270,
            47471,
            47364
          ],
          [
            48038,
            47449,
            47353,
            48966,
            47336,
            47813,
            47414,
            47759,
            47419,
            47609,
            47528,
            47486,
            47456,
            47271,
            47291,
            47087,
            47278,
            47359,
            47495,
            47249,
            47360,
            47362,
            47492,
            47309,
            47373,
            47347,
            47372,
            47324,
            47375,
            47333,
            47398,
            47259,
            47298,
            47419,
            47547,
            47451,
            47326,
            47457,
            47499,
            47320,
            48985,
            47470,
            47744,
            47442,
            49271,
            47388,
            47399,
            47401,
            47411,
            47447,
            47494,
            47349,
            47253,
            47664,
            47407,
            47450,
            47286,
            47396,
            47426,
            47443,
            47270,
            47471,
            47364
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            221,
            3328,
            17071,
            35649,
            36662,
            19268,
            4624,
            325,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            184,
            2679,
            16576,
            34706,
            40848,
            25831,
            8445,
            998,
            70,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            1047,
            8028,
            28377,
            41811,
            38950,
            19324,
            4746,
            383,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            135,
            2646,
            13334,
            31462,
            42197,
            40514,
            20651,
            5390,
            732,
            46,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1335015859986015,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001617125999473501,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06869597699915175,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48340,
            49361,
            49028,
            47113,
            47254,
            47251,
            47162,
            47109,
            47171,
            47342,
            47411,
            47301,
            47146,
            47338,
            47153,
            47253,
            47350,
            47200,
            47139,
            47394,
            47511,
            49417,
            47134,
            47220,
            47154,
            47306,
            47196,
            47245,
            47271,
            47134,
            47188,
            47179,
            47047,
            47374,
            47206,
            47274,
            47224,
            47548,
            47333,
            49397,
            48747,
            47341,
            47147,
            47483,
            46843,
            47159,
            47307,
            47315,
            47240,
            47289,
            47180,
            47311,
            47451,
            47394,
            47240,
            47637,
            47186,
            47062,
            48972,
            48785,
            47227,
            47423,
            47295
          ],
          [
            48340,
            49361,
            49028,
            47113,
            47254,
            47251,
            47162,
            47109,
            47171,
            47342,
            47411,
            47301,
            47146,
            47338,
            47153,
            47253,
            47350,
            47200,
            47139,
            47394,
            47511,
            49417,
            47134,
            47220,
            47154,
            47306,
            47196,
            47245,
            47271,
            47134,
            47188,
            47179,
            47047,
            47374,
            47206,
            47274,
            47224,
            47548,
            47333,
            49397,
            48747,
            47341,
            47147,
            47483,
            46843,
            47159,
            47307,
            47315,
            47240,
            47289,
            47180,
            47311,
            47451,
            47394,
            47240,
            47637,
            47186,
            47062,
            48972,
            48785,
            47227,
            47423,
            47295
          ],
          [
            48340,
            49361,
            49028,
            47113,
            47254,
            47251,
            47162,
            47109,
            47171,
            47342,
            47411,
            47301,
            47146,
            47338,
            47153,
            47253,
            47350,
            47200,
            47139,
            47394,
            47511,
            49417,
            47134,
            47220,
            47154,
            47306,
            47196,
            47245,
            47271,
            47134,
            47188,
            47179,
            47047,
            47374,
            47206,
            47274,
            47224,
            47548,
            47333,
            49397,
            48747,
            47341,
            47147,
            47483,
            46843,
            47159,
            47307,
            47315,
            47240,
            47289,
            47180,
            47311,
            47451,
            47394,
            47240,
            47637,
            47186,
            47062,
            48972,
            48785,
            47227,
            47423,
            47295
          ],
          [
            48340,
            49361,
            49028,
            47113,
            47254,
            47251,
            47162,
            47109,
            47171,
            47342,
            47411,
            47301,
            47146,
            47338,
            47153,
            47253,
            47350,
            47200,
            47139,
            47394,
            47511,
            49417,
            47134,
            47220,
            47154,
            47306,
            47196,
            47245,
            47271,
            47134,
            47188,
            47179,
            47047,
            47374,
            47206,
            47274,
            47224,
            47548,
            47333,
            49397,
            48747,
            47341,
            47147,
            47483,
            46843,
            47159,
            47307,
            47315,
            47240,
            47289,
            47180,
            47311,
            47451,
            47394,
            47240,
            47637,
            47186,
            47062,
            48972,
            48785,
            47227,
            47423,
            47295
          ],
          [
            48340,
            49361,
            49028,
            47113,
            47254,
            47251,
            47162,
            47109,
            47171,
            47342,
            47411,
            47301,
            47146,
            47338,
            47153,
            47253,
            47350,
            47200,
            47139,
            47394,
            47511,
            49417,
            47134,
            47220,
            47154,
            47306,
            47196,
            47245,
            47271,
            47134,
            47188,
            47179,
            47047,
            47374,
            47206,
            47274,
            47224,
            47548,
            47333,
            49397,
            48747,
            47341,
            47147,
            47483,
            46843,
            47159,
            47307,
            47315,
            47240,
            47289,
            47180,
            47311,
            47451,
            47394,
            47240,
            47637,
            47186,
            47062,
            48972,
            48785,
            47227,
            47423,
            47295
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            37,
            694,
            4353,
            15327,
            28075,
            34298,
            33092,
            25377,
            15427,
            5973,
            1236,
            80,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            71,
            782,
            3743,
            11701,
            24937,
            38203,
            39440,
            28469,
            15614,
            3922,
            468,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45
          ],
          [
            0,
            3,
            159,
            1580,
            7544,
            19504,
            35630,
            40342,
            34490,
            22694,
            9819,
            2541,
            272,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            373,
            2096,
            8131,
            19910,
            35517,
            43884,
            42098,
            28488,
            13311,
            2881,
            282,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            402,
            2939,
            8887,
            20467,
            34172,
            37605
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            31,
            904,
            6313,
            20239,
            33284,
            38616,
            32702,
            15687,
            4220,
            398,
            7,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            399,
            4958,
            16779,
            34032,
            41678,
            34808,
            19264,
            6118,
            994,
            108,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            131,
            1563,
            9402,
            25316,
            38511,
            41635,
            34491,
            18540,
            5790,
            708,
            73,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            155,
            1914,
            8218,
            20978,
            33920,
            41485,
            36369,
            22958,
            9340,
            2323,
            201,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            11,
            268,
            2032,
            10401,
            25987,
            37781,
            39753,
            34423,
            27301,
            16720,
            6317,
            1629,
            118,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            45,
            570,
            2927,
            11111,
            24161,
            35459,
            42808,
            41373,
            29620,
            15732,
            4754,
            820,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            176,
            1512,
            6977,
            16733,
            29654
          ]
        ]
      },
      "call": {
        "duration": 0.2703320770015125,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015242139998008497,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2912243609971483,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168865374998859,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00143757199839456,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3376318640002864,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            89,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035263379977550358,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002886813999793958,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5343021520020557,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            9,
            255,
            1,
            37,
            0,
            255,
            0,
            255,
            255
          ],
          [
            84,
            0,
            26,
            0,
            7,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            41,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            16,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            15,
            255,
            35,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            6,
            255,
            6,
            7,
            0,
            255,
            5,
            255,
            255
          ],
          [
            75,
            0,
            1,
            0,
            5,
            0,
            255,
            214,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            118,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            66,
            0,
            16,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            141,
            255,
            55,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034734180007944815,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028956339992873836,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29609544900085893,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47982,
            47454,
            47424,
            47507,
            48981,
            47437,
            47777,
            47555,
            47302,
            47333,
            47546,
            47293,
            47366,
            47624,
            47213,
            47446,
            47269,
            47525,
            47214,
            47458,
            47368,
            47486,
            47196,
            47561,
            47227,
            47246,
            47417,
            47499,
            47325,
            47602,
            47489,
            47347,
            47385,
            47413,
            47416,
            47504,
            47383,
            47434,
            47476,
            47520,
            47418,
            48999,
            47451,
            47602,
            47017,
            47630,
            47450,
            47535,
            47277,
            47395,
            47356,
            47383,
            47360,
            47386,
            47455,
            47398,
            47383,
            47349,
            47439,
            47467,
            47340,
            47286,
            47525
          ],
          [
            47982,
            47454,
            47424,
            47507,
            48981,
            47437,
            47777,
            47555,
            47302,
            47333,
            47546,
            47293,
            47366,
            47624,
            47213,
            47446,
            47269,
            47525,
            47214,
            47458,
            47368,
            47486,
            47196,
            47561,
            47227,
            47246,
            47417,
            47499,
            47325,
            47602,
            47489,
            47347,
            47385,
            47413,
            47416,
            47504,
            47383,
            47434,
            47476,
            47520,
            47418,
            48999,
            47451,
            47602,
            47017,
            47630,
            47450,
            47535,
            47277,
            47395,
            47356,
            47383,
            47360,
            47386,
            47455,
            47398,
            47383,
            47349,
            47439,
            47467,
            47340,
            47286,
            47525
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            570,
            7189,
            24032,
            39322,
            34734,
            15509,
            3138,
            367,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            714,
            6422,
            21702,
            38055,
            37846,
            22486,
            5511,
            635,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            0,
            0,
            138,
            2105,
            14148,
            33018,
            40737,
            29917,
            10175,
            1865,
            170,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            526,
            5965,
            21743,
            38462,
            41589,
            30146,
            12537,
            2218,
            202,
            15,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            623,
            7338,
            24729,
            40217,
            43592
          ]
        ]
      },
      "call": {
        "duration": 0.13346405599804712,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016335660002368968,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06896646300083376,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47809,
            47201,
            47275,
            47287,
            47213,
            47373,
            47181,
            47320,
            47294,
            47255,
            47550,
            47273,
            47031,
            47225,
            47211,
            47210,
            47125,
            47336,
            47270,
            47359,
            47253,
            47034,
            47185,
            47396,
            47012,
            47325,
            47195,
            47405,
            47280,
            47627,
            47217,
            47227,
            47124,
            47509,
            46985,
            47218,
            47250,
            47228,
            47311,
            47026,
            47151,
            47315,
            47048,
            47586,
            47238,
            47311,
            47002,
            47333,
            47592,
            47646,
            47203,
            47275,
            47120,
            47335,
            47182,
            47220,
            46991,
            47282,
            47320,
            47321,
            47095,
            47347,
            47180
          ],
          [
            47809,
            47201,
            47275,
            47287,
            47213,
            47373,
            47181,
            47320,
            47294,
            47255,
            47550,
            47273,
            47031,
            47225,
            47211,
            47210,
            47125,
            47336,
            47270,
            47359,
            47253,
            47034,
            47185,
            47396,
            47012,
            47325,
            47195,
            47405,
            47280,
            47627,
            47217,
            47227,
            47124,
            47509,
            46985,
            47218,
            47250,
            47228,
            47311,
            47026,
            47151,
            47315,
            47048,
            47586,
            47238,
            47311,
            47002,
            47333,
            47592,
            47646,
            47203,
            47275,
            47120,
            47335,
            47182,
            47220,
            46991,
            47282,
            47320,
            47321,
            47095,
            47347,
            47180
          ],
          [
            47809,
            47201,
            47275,
            47287,
            47213,
            47373,
            47181,
            47320,
            47294,
            47255,
            47550,
            47273,
            47031,
            47225,
            47211,
            47210,
            47125,
            47336,
            47270,
            47359,
            47253,
            47034,
            47185,
            47396,
            47012,
            47325,
            47195,
            47405,
            47280,
            47627,
            47217,
            47227,
            47124,
            47509,
            46985,
            47218,
            47250,
            47228,
            47311,
            47026,
            47151,
            47315,
            47048,
            47586,
            47238,
            47311,
            47002,
            47333,
            47592,
            47646,
            47203,
            47275,
            47120,
            47335,
            47182,
            47220,
            46991,
            47282,
            47320,
            47321,
            47095,
            47347,
            47180
          ],
          [
            47809,
            47201,
            47275,
            47287,
            47213,
            47373,
            47181,
            47320,
            47294,
            47255,
            47550,
            47273,
            47031,
            47225,
            47211,
            47210,
            47125,
            47336,
            47270,
            47359,
            47253,
            47034,
            47185,
            47396,
            47012,
            47325,
            47195,
            47405,
            47280,
            47627,
            47217,
            47227,
            47124,
            47509,
            46985,
            47218,
            47250,
            47228,
            47311,
            47026,
            47151,
            47315,
            47048,
            47586,
            47238,
            47311,
            47002,
            47333,
            47592,
            47646,
            47203,
            47275,
            47120,
            47335,
            47182,
            47220,
            46991,
            47282,
            47320,
            47321,
            47095,
            47347,
            47180
          ],
          [
            47809,
            47201,
            47275,
            47287,
            47213,
            47373,
            47181,
            47320,
            47294,
            47255,
            47550,
            47273,
            47031,
            47225,
            47211,
            47210,
            47125,
            47336,
            47270,
            47359,
            47253,
            47034,
            47185,
            47396,
            47012,
            47325,
            47195,
            47405,
            47280,
            47627,
            47217,
            47227,
            47124,
            47509,
            46985,
            47218,
            47250,
            47228,
            47311,
            47026,
            47151,
            47315,
            47048,
            47586,
            47238,
            47311,
            47002,
            47333,
            47592,
            47646,
            47203,
            47275,
            47120,
            47335,
            47182,
            47220,
            46991,
            47282,
            47320,
            47321,
            47095,
            47347,
            47180
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            203,
            1597,
            6865,
            15080,
            26924,
            37319,
            35417,
            24696,
            12367,
            3440,
            261,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            70,
            897,
            3893,
            12222,
            23566,
            32966,
            33561,
            28842,
            20221,
            10803,
            4454,
            786,
            69,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            229,
            1562,
            5089,
            12199,
            24630,
            36511,
            42948,
            38495,
            24419,
            9338,
            2220,
            203,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            30,
            381,
            2766,
            6919,
            15378,
            29344,
            39238,
            36280,
            27386,
            14209,
            4306,
            720,
            46,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            88
          ],
          [
            12278,
            3371,
            416,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            71,
            1517,
            8340,
            19880,
            31764,
            39802,
            30669,
            16486,
            5653,
            968,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            62,
            740,
            5126,
            14879,
            27928,
            35720,
            33397,
            21914,
            9271,
            1796,
            196,
            8,
            0,
            0,
            0,
            0
          ],
          [
            84,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            964,
            5712,
            15986,
            27163,
            38224,
            40677,
            32761,
            21943,
            10097,
            3198,
            421,
            8,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            107,
            920,
            4221,
            14625,
            27141,
            35479,
            33035,
            23688,
            12122,
            4210,
            687,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            141,
            1430,
            5642,
            15619,
            26879,
            36401,
            40622,
            37631,
            26044,
            14670,
            4362,
            826,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            497,
            2767,
            7871,
            17687,
            29949,
            37316,
            36616,
            30894,
            22763,
            13227,
            5606,
            1316,
            67,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2718481910014816,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9fbe9e70>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9fbe9e70> = array([18, 12, 16, 14, 20]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9ff18340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47809, 47201, 47275, 47287, 47213, 47373, ...], [47809, 47201, 47275, 47287, 47213, 47373, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [12278, 3371, 416, 28, 0, 0, ...], [84, 4, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9fbe9e70>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9fbe9e70> = array([18, 12, 16, 14, 20]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016048260004026815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2920121780007321,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1693418760005443,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004821646998607321,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}