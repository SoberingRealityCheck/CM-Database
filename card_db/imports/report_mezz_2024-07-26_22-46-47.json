{
  "created": 1722034026.8191807,
  "duration": 23.56102442741394,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5068481479975162,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14813514799971017,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013295999997353647,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003840776000288315,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14791680299822474,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012389380026434083,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13260194099711953,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12170830800096155,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012543280026875436,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003825145999144297,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12101160200109007,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012620979978237301,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034030659990094136,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14629784700082382,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011931270018976647,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033587249999982305,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11962686100014253,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00116471599903889,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033442050007579383,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14606288200229756,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011787570001615677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00336100499771419,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11982909600192215,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001166125999588985,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0044292989987297915,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002063656000245828,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011273659983999096,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003299714000604581,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016928779987210874,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001128145999246044,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003343334999954095,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004023239998787176,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034009.1140656,
            "msecs": 114.06564712524414,
            "relativeCreated": 7826.918840408325,
            "thread": 281473127792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5472
          }
        ]
      },
      "teardown": {
        "duration": 0.0012269369981368072,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033867450001707766,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002388713000982534,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034009.1270475,
            "msecs": 127.04753875732422,
            "relativeCreated": 7839.900732040405,
            "thread": 281473127792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5472
          }
        ]
      },
      "teardown": {
        "duration": 0.0012005370008409955,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021288179996190593,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002696699997613905,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034009.1371884,
            "msecs": 137.18843460083008,
            "relativeCreated": 7850.041627883911,
            "thread": 281473127792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5472
          }
        ]
      },
      "teardown": {
        "duration": 0.0010484630001883488,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021160670003155246,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003421966001042165,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034009.1472878,
            "msecs": 147.28784561157227,
            "relativeCreated": 7860.141038894653,
            "thread": 281473127792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5472
          }
        ]
      },
      "teardown": {
        "duration": 0.0010917250001512002,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003368955000041751,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14641952899910393,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001201046001369832,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033805350030888803,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12016525299986824,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011744669973268174,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17942875599692343,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14735092999762855,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012532479995570611,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015233649999572663,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12095415099975071,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012790490000043064,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8312248729998828,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            95,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            31,
            126,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035541489996830933,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028444230010791216,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9074260929992306,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            5,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            0,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            14,
            255,
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            19
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            61,
            255,
            255,
            255,
            15
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            19,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            61,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            196,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            199,
            255,
            255,
            255,
            255,
            0,
            0,
            179,
            0,
            161,
            255
          ],
          [
            255,
            0,
            183,
            0,
            255,
            0,
            255,
            70,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003459827999904519,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002879763997043483,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30237270199722843,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48211,
            47491,
            47344,
            47392,
            47432,
            47479,
            47385,
            47552,
            47492,
            47364,
            47401,
            47380,
            47374,
            47458,
            47473,
            47553,
            47563,
            47550,
            49434,
            47561,
            47807,
            47496,
            49575,
            47408,
            47586,
            47433,
            47117,
            47152,
            47424,
            47499,
            47291,
            47461,
            47396,
            47422,
            47353,
            47563,
            47287,
            47410,
            47163,
            47197,
            47575,
            47533,
            47464,
            47399,
            47449,
            47583,
            47448,
            47305,
            47687,
            47322,
            47487,
            47388,
            47341,
            47487,
            47486,
            49123,
            47392,
            47559,
            47414,
            47742,
            47521,
            49668,
            47445
          ],
          [
            48211,
            47491,
            47344,
            47392,
            47432,
            47479,
            47385,
            47552,
            47492,
            47364,
            47401,
            47380,
            47374,
            47458,
            47473,
            47553,
            47563,
            47550,
            49434,
            47561,
            47807,
            47496,
            49575,
            47408,
            47586,
            47433,
            47117,
            47152,
            47424,
            47499,
            47291,
            47461,
            47396,
            47422,
            47353,
            47563,
            47287,
            47410,
            47163,
            47197,
            47575,
            47533,
            47464,
            47399,
            47449,
            47583,
            47448,
            47305,
            47687,
            47322,
            47487,
            47388,
            47341,
            47487,
            47486,
            49123,
            47392,
            47559,
            47414,
            47742,
            47521,
            49668,
            47445
          ]
        ],
        "eTX_errcounts": [
          [
            40585,
            26358,
            7721,
            980,
            166,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            233,
            3455,
            16520,
            34610,
            42296,
            31429,
            14033,
            2193,
            164,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            687,
            7283,
            25935,
            40443,
            38811,
            19680,
            5454,
            559,
            24,
            0,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            332,
            3928,
            18090,
            36231,
            44079,
            31151,
            13598,
            3110,
            356,
            15,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            410,
            4752,
            19686,
            36865,
            42685,
            35210,
            16547,
            3141,
            283,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13343475999863585,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016250459993898403,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06886419799775467,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47837,
            47252,
            47095,
            47314,
            47178,
            47585,
            47381,
            47290,
            47232,
            47294,
            47285,
            47683,
            49839,
            47106,
            47243,
            47303,
            47280,
            47124,
            47087,
            47244,
            47421,
            47275,
            47135,
            47054,
            47159,
            47455,
            47251,
            47169,
            47293,
            47204,
            47455,
            47506,
            47308,
            47337,
            47318,
            47371,
            47283,
            46909,
            47178,
            47225,
            47319,
            47250,
            47235,
            47193,
            47271,
            47508,
            47413,
            47422,
            47378,
            47260,
            47811,
            49556,
            47218,
            47188,
            47320,
            47437,
            47205,
            47045,
            47293,
            47290,
            47218,
            47153,
            46866
          ],
          [
            47837,
            47252,
            47095,
            47314,
            47178,
            47585,
            47381,
            47290,
            47232,
            47294,
            47285,
            47683,
            49839,
            47106,
            47243,
            47303,
            47280,
            47124,
            47087,
            47244,
            47421,
            47275,
            47135,
            47054,
            47159,
            47455,
            47251,
            47169,
            47293,
            47204,
            47455,
            47506,
            47308,
            47337,
            47318,
            47371,
            47283,
            46909,
            47178,
            47225,
            47319,
            47250,
            47235,
            47193,
            47271,
            47508,
            47413,
            47422,
            47378,
            47260,
            47811,
            49556,
            47218,
            47188,
            47320,
            47437,
            47205,
            47045,
            47293,
            47290,
            47218,
            47153,
            46866
          ],
          [
            47837,
            47252,
            47095,
            47314,
            47178,
            47585,
            47381,
            47290,
            47232,
            47294,
            47285,
            47683,
            49839,
            47106,
            47243,
            47303,
            47280,
            47124,
            47087,
            47244,
            47421,
            47275,
            47135,
            47054,
            47159,
            47455,
            47251,
            47169,
            47293,
            47204,
            47455,
            47506,
            47308,
            47337,
            47318,
            47371,
            47283,
            46909,
            47178,
            47225,
            47319,
            47250,
            47235,
            47193,
            47271,
            47508,
            47413,
            47422,
            47378,
            47260,
            47811,
            49556,
            47218,
            47188,
            47320,
            47437,
            47205,
            47045,
            47293,
            47290,
            47218,
            47153,
            46866
          ],
          [
            47837,
            47252,
            47095,
            47314,
            47178,
            47585,
            47381,
            47290,
            47232,
            47294,
            47285,
            47683,
            49839,
            47106,
            47243,
            47303,
            47280,
            47124,
            47087,
            47244,
            47421,
            47275,
            47135,
            47054,
            47159,
            47455,
            47251,
            47169,
            47293,
            47204,
            47455,
            47506,
            47308,
            47337,
            47318,
            47371,
            47283,
            46909,
            47178,
            47225,
            47319,
            47250,
            47235,
            47193,
            47271,
            47508,
            47413,
            47422,
            47378,
            47260,
            47811,
            49556,
            47218,
            47188,
            47320,
            47437,
            47205,
            47045,
            47293,
            47290,
            47218,
            47153,
            46866
          ],
          [
            47837,
            47252,
            47095,
            47314,
            47178,
            47585,
            47381,
            47290,
            47232,
            47294,
            47285,
            47683,
            49839,
            47106,
            47243,
            47303,
            47280,
            47124,
            47087,
            47244,
            47421,
            47275,
            47135,
            47054,
            47159,
            47455,
            47251,
            47169,
            47293,
            47204,
            47455,
            47506,
            47308,
            47337,
            47318,
            47371,
            47283,
            46909,
            47178,
            47225,
            47319,
            47250,
            47235,
            47193,
            47271,
            47508,
            47413,
            47422,
            47378,
            47260,
            47811,
            49556,
            47218,
            47188,
            47320,
            47437,
            47205,
            47045,
            47293,
            47290,
            47218,
            47153,
            46866
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            132,
            1270,
            5378,
            13471,
            23841,
            30960,
            31706,
            28107,
            22740,
            12894,
            3577,
            399,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            60,
            749,
            4038,
            12970,
            26054,
            32367,
            32327,
            27515,
            22836,
            16345,
            10027,
            3547,
            733,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            10,
            119,
            679,
            3346,
            10619,
            20689,
            30928,
            37743,
            34713,
            25927,
            16137,
            5070,
            880,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            31,
            469,
            3716,
            12728,
            24073,
            33324,
            37747,
            37656,
            31654,
            21489,
            10572,
            3437,
            536,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            25,
            230,
            1430,
            6318,
            15792,
            26650
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            55,
            1039,
            6147,
            16326,
            27200,
            31576,
            32041,
            25052,
            14780,
            5087,
            1114,
            43,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            11,
            172,
            1725,
            8424,
            17203,
            28146,
            33292,
            30735,
            24316,
            16486,
            8745,
            2682,
            281,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            294,
            2161,
            9127,
            19881,
            30003,
            34770,
            34425,
            27954,
            18919,
            9164,
            2041,
            122,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            67,
            531,
            3374,
            10535,
            20650,
            28896,
            34184,
            31077,
            26892,
            19955,
            11451,
            4799,
            848,
            51,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            1,
            65,
            659,
            3724,
            10601,
            20541,
            30522,
            38115,
            41074,
            31041,
            21324,
            10741,
            3780,
            806,
            61,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            96,
            832,
            4517,
            11820,
            22852,
            32374,
            38519,
            38993,
            33797,
            26607,
            18002,
            7666,
            1416,
            139,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            317,
            2217,
            8082
          ]
        ]
      },
      "call": {
        "duration": 0.2716812070029846,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff7d09e930>()\n +    where <built-in method all of numpy.ndarray object at 0xffff7d09e930> = array([21, 13, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff7d0794c0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47837, 47252, 47095, 47314, 47178, 47585, ...], [47837, 47252, 47095, 47314, 47178, 47585, ...], [... 0, ...], [0, 0, 10, 119, 679, 3346, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 1, 65, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff7d09e930>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff7d09e930> = array([21, 13, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0015977459988789633,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29262758500044583,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168814611999551,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014433930009545293,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2913668370019877,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            28,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            28,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            219,
            34,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034915379983431194,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028776040016964544,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5335895749994961,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            132,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            163,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            100,
            255,
            164,
            255,
            135,
            0,
            0,
            168,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            234,
            0,
            51,
            0,
            255,
            15,
            255,
            2
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            52,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            12,
            255,
            168,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            222,
            255,
            255,
            1,
            0,
            92,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            78,
            255,
            196
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003448006998951314,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028365329999360256,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29538017599770683,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48194,
            47476,
            47386,
            49483,
            47524,
            47752,
            47469,
            47778,
            47442,
            47595,
            47497,
            47058,
            47135,
            47413,
            47314,
            47387,
            47388,
            47297,
            47443,
            47430,
            47449,
            47308,
            47481,
            47526,
            47452,
            47354,
            47519,
            47371,
            47517,
            47460,
            47389,
            47358,
            47460,
            47413,
            47561,
            47384,
            47483,
            47488,
            47399,
            47480,
            47500,
            47398,
            47314,
            47400,
            49613,
            47480,
            47871,
            47398,
            47493,
            47514,
            47721,
            47443,
            47591,
            47649,
            47165,
            47078,
            47479,
            47564,
            47488,
            47537,
            47450,
            47449,
            47221
          ],
          [
            48194,
            47476,
            47386,
            49483,
            47524,
            47752,
            47469,
            47778,
            47442,
            47595,
            47497,
            47058,
            47135,
            47413,
            47314,
            47387,
            47388,
            47297,
            47443,
            47430,
            47449,
            47308,
            47481,
            47526,
            47452,
            47354,
            47519,
            47371,
            47517,
            47460,
            47389,
            47358,
            47460,
            47413,
            47561,
            47384,
            47483,
            47488,
            47399,
            47480,
            47500,
            47398,
            47314,
            47400,
            49613,
            47480,
            47871,
            47398,
            47493,
            47514,
            47721,
            47443,
            47591,
            47649,
            47165,
            47078,
            47479,
            47564,
            47488,
            47537,
            47450,
            47449,
            47221
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            220,
            3523,
            18422,
            36419,
            36391,
            18961,
            4080,
            462,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            210,
            2940,
            16285,
            34420,
            40326,
            25582,
            8228,
            986,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            1237,
            8946,
            29366,
            41949,
            38334,
            18586,
            4925,
            379,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            118,
            2341,
            13549,
            30685,
            42519,
            40133,
            20396,
            5591,
            724,
            50,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13313481300065177,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001597565998963546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06857055100044818,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48163,
            47825,
            47392,
            47163,
            47193,
            46943,
            47073,
            46997,
            47210,
            47062,
            47039,
            47347,
            47241,
            47115,
            47237,
            47289,
            47347,
            47340,
            47154,
            47063,
            47189,
            47363,
            47239,
            47545,
            47271,
            47132,
            47096,
            47159,
            47311,
            47157,
            46800,
            46768,
            47154,
            47270,
            47168,
            47174,
            47245,
            47120,
            47247,
            47235,
            47264,
            47163,
            47349,
            47229,
            48855,
            47354,
            47192,
            47201,
            47080,
            47186,
            47188,
            47114,
            47093,
            47205,
            47112,
            47004,
            47152,
            47159,
            47288,
            47163,
            47112,
            47109,
            47222
          ],
          [
            48163,
            47825,
            47392,
            47163,
            47193,
            46943,
            47073,
            46997,
            47210,
            47062,
            47039,
            47347,
            47241,
            47115,
            47237,
            47289,
            47347,
            47340,
            47154,
            47063,
            47189,
            47363,
            47239,
            47545,
            47271,
            47132,
            47096,
            47159,
            47311,
            47157,
            46800,
            46768,
            47154,
            47270,
            47168,
            47174,
            47245,
            47120,
            47247,
            47235,
            47264,
            47163,
            47349,
            47229,
            48855,
            47354,
            47192,
            47201,
            47080,
            47186,
            47188,
            47114,
            47093,
            47205,
            47112,
            47004,
            47152,
            47159,
            47288,
            47163,
            47112,
            47109,
            47222
          ],
          [
            48163,
            47825,
            47392,
            47163,
            47193,
            46943,
            47073,
            46997,
            47210,
            47062,
            47039,
            47347,
            47241,
            47115,
            47237,
            47289,
            47347,
            47340,
            47154,
            47063,
            47189,
            47363,
            47239,
            47545,
            47271,
            47132,
            47096,
            47159,
            47311,
            47157,
            46800,
            46768,
            47154,
            47270,
            47168,
            47174,
            47245,
            47120,
            47247,
            47235,
            47264,
            47163,
            47349,
            47229,
            48855,
            47354,
            47192,
            47201,
            47080,
            47186,
            47188,
            47114,
            47093,
            47205,
            47112,
            47004,
            47152,
            47159,
            47288,
            47163,
            47112,
            47109,
            47222
          ],
          [
            48163,
            47825,
            47392,
            47163,
            47193,
            46943,
            47073,
            46997,
            47210,
            47062,
            47039,
            47347,
            47241,
            47115,
            47237,
            47289,
            47347,
            47340,
            47154,
            47063,
            47189,
            47363,
            47239,
            47545,
            47271,
            47132,
            47096,
            47159,
            47311,
            47157,
            46800,
            46768,
            47154,
            47270,
            47168,
            47174,
            47245,
            47120,
            47247,
            47235,
            47264,
            47163,
            47349,
            47229,
            48855,
            47354,
            47192,
            47201,
            47080,
            47186,
            47188,
            47114,
            47093,
            47205,
            47112,
            47004,
            47152,
            47159,
            47288,
            47163,
            47112,
            47109,
            47222
          ],
          [
            48163,
            47825,
            47392,
            47163,
            47193,
            46943,
            47073,
            46997,
            47210,
            47062,
            47039,
            47347,
            47241,
            47115,
            47237,
            47289,
            47347,
            47340,
            47154,
            47063,
            47189,
            47363,
            47239,
            47545,
            47271,
            47132,
            47096,
            47159,
            47311,
            47157,
            46800,
            46768,
            47154,
            47270,
            47168,
            47174,
            47245,
            47120,
            47247,
            47235,
            47264,
            47163,
            47349,
            47229,
            48855,
            47354,
            47192,
            47201,
            47080,
            47186,
            47188,
            47114,
            47093,
            47205,
            47112,
            47004,
            47152,
            47159,
            47288,
            47163,
            47112,
            47109,
            47222
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            297,
            2408,
            11638,
            26469,
            37342,
            36824,
            26684,
            12949,
            2979,
            284,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            484,
            2488,
            12114,
            27680,
            38604,
            39045,
            29980,
            16518,
            5147,
            1111,
            139,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21
          ],
          [
            0,
            0,
            5,
            435,
            4356,
            14596,
            31919,
            39634,
            34550,
            18771,
            5958,
            759,
            79,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            67,
            1088,
            6776,
            22253,
            37930,
            43864,
            39653,
            26764,
            12109,
            2601,
            295,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            112,
            1135,
            7442,
            20636,
            35521,
            39626
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            400,
            3143,
            13720,
            27119,
            34186,
            28864,
            14133,
            3552,
            301,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            75,
            825,
            6477,
            19800,
            36361,
            40048,
            32734,
            18470,
            6116,
            814,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            76,
            855,
            5929,
            18233,
            33048,
            38712,
            31951,
            17813,
            5342,
            737,
            83,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            131,
            1837,
            8668,
            22478,
            35949,
            41545,
            35104,
            23005,
            8313,
            1834,
            110,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            102,
            1482,
            7945,
            20985,
            34456,
            40889,
            37153,
            25632,
            12425,
            2721,
            311,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            362,
            2276,
            10652,
            25641,
            38097,
            43693,
            38732,
            26596,
            12681,
            4096,
            1038,
            122,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            55,
            757,
            5600,
            16574,
            32138
          ]
        ]
      },
      "call": {
        "duration": 0.26854922699931194,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014792429974477272,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2910673400001542,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1687597400014056,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014328019969980232,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.371454675001587,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            87,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035283180004626047,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028748440017807297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5363796669989824,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            6,
            255,
            0,
            29,
            0,
            255,
            0,
            255,
            255
          ],
          [
            46,
            0,
            15,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            23,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            244,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            9,
            255,
            34,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            1,
            255,
            2,
            255,
            1,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            88,
            0,
            1,
            0,
            9,
            0,
            255,
            114,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            169,
            255,
            3,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            73,
            0,
            1,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            83,
            255,
            81,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003422537000005832,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028686340010608546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29600026000116486,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48147,
            47121,
            47414,
            47625,
            47573,
            47447,
            47472,
            47613,
            47498,
            47536,
            47419,
            47527,
            47413,
            47543,
            47506,
            47601,
            47612,
            47547,
            47471,
            47502,
            47603,
            47545,
            47421,
            47444,
            47505,
            47492,
            49071,
            47521,
            47813,
            47507,
            49560,
            47748,
            47720,
            47548,
            47378,
            47434,
            47535,
            47601,
            47568,
            47734,
            47502,
            47447,
            47426,
            47611,
            47546,
            47603,
            47352,
            47536,
            47416,
            47575,
            47608,
            47577,
            47187,
            47229,
            47626,
            47706,
            47638,
            47665,
            47408,
            47452,
            47509,
            49390,
            47608
          ],
          [
            48147,
            47121,
            47414,
            47625,
            47573,
            47447,
            47472,
            47613,
            47498,
            47536,
            47419,
            47527,
            47413,
            47543,
            47506,
            47601,
            47612,
            47547,
            47471,
            47502,
            47603,
            47545,
            47421,
            47444,
            47505,
            47492,
            49071,
            47521,
            47813,
            47507,
            49560,
            47748,
            47720,
            47548,
            47378,
            47434,
            47535,
            47601,
            47568,
            47734,
            47502,
            47447,
            47426,
            47611,
            47546,
            47603,
            47352,
            47536,
            47416,
            47575,
            47608,
            47577,
            47187,
            47229,
            47626,
            47706,
            47638,
            47665,
            47408,
            47452,
            47509,
            49390,
            47608
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            507,
            7030,
            24636,
            38561,
            33871,
            15312,
            2620,
            183,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            578,
            6696,
            22711,
            38541,
            38456,
            21530,
            5081,
            713,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            0,
            2,
            75,
            2195,
            13800,
            32994,
            40972,
            29717,
            9749,
            1534,
            113,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            690,
            6263,
            22463,
            38688,
            41453,
            30869,
            13004,
            2473,
            204,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            992,
            7928,
            24995,
            41738,
            43512
          ]
        ]
      },
      "call": {
        "duration": 0.13364101399929496,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015776449981785845,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06895179900311632,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47398,
            47364,
            47251,
            47278,
            47142,
            47286,
            47235,
            47170,
            47426,
            47189,
            47357,
            47312,
            47313,
            47398,
            47260,
            47296,
            49044,
            49182,
            47265,
            47146,
            47129,
            47111,
            47071,
            47436,
            47257,
            47002,
            47554,
            47256,
            47448,
            47372,
            47326,
            47004,
            47233,
            47392,
            47088,
            47728,
            47306,
            47343,
            47278,
            47166,
            47194,
            47092,
            47126,
            47312,
            47164,
            47386,
            47145,
            47329,
            47467,
            47251,
            46968,
            47239,
            47330,
            47590,
            47243,
            47301,
            47773,
            47647,
            47537,
            47295,
            47091,
            47080,
            47106
          ],
          [
            47398,
            47364,
            47251,
            47278,
            47142,
            47286,
            47235,
            47170,
            47426,
            47189,
            47357,
            47312,
            47313,
            47398,
            47260,
            47296,
            49044,
            49182,
            47265,
            47146,
            47129,
            47111,
            47071,
            47436,
            47257,
            47002,
            47554,
            47256,
            47448,
            47372,
            47326,
            47004,
            47233,
            47392,
            47088,
            47728,
            47306,
            47343,
            47278,
            47166,
            47194,
            47092,
            47126,
            47312,
            47164,
            47386,
            47145,
            47329,
            47467,
            47251,
            46968,
            47239,
            47330,
            47590,
            47243,
            47301,
            47773,
            47647,
            47537,
            47295,
            47091,
            47080,
            47106
          ],
          [
            47398,
            47364,
            47251,
            47278,
            47142,
            47286,
            47235,
            47170,
            47426,
            47189,
            47357,
            47312,
            47313,
            47398,
            47260,
            47296,
            49044,
            49182,
            47265,
            47146,
            47129,
            47111,
            47071,
            47436,
            47257,
            47002,
            47554,
            47256,
            47448,
            47372,
            47326,
            47004,
            47233,
            47392,
            47088,
            47728,
            47306,
            47343,
            47278,
            47166,
            47194,
            47092,
            47126,
            47312,
            47164,
            47386,
            47145,
            47329,
            47467,
            47251,
            46968,
            47239,
            47330,
            47590,
            47243,
            47301,
            47773,
            47647,
            47537,
            47295,
            47091,
            47080,
            47106
          ],
          [
            47398,
            47364,
            47251,
            47278,
            47142,
            47286,
            47235,
            47170,
            47426,
            47189,
            47357,
            47312,
            47313,
            47398,
            47260,
            47296,
            49044,
            49182,
            47265,
            47146,
            47129,
            47111,
            47071,
            47436,
            47257,
            47002,
            47554,
            47256,
            47448,
            47372,
            47326,
            47004,
            47233,
            47392,
            47088,
            47728,
            47306,
            47343,
            47278,
            47166,
            47194,
            47092,
            47126,
            47312,
            47164,
            47386,
            47145,
            47329,
            47467,
            47251,
            46968,
            47239,
            47330,
            47590,
            47243,
            47301,
            47773,
            47647,
            47537,
            47295,
            47091,
            47080,
            47106
          ],
          [
            47398,
            47364,
            47251,
            47278,
            47142,
            47286,
            47235,
            47170,
            47426,
            47189,
            47357,
            47312,
            47313,
            47398,
            47260,
            47296,
            49044,
            49182,
            47265,
            47146,
            47129,
            47111,
            47071,
            47436,
            47257,
            47002,
            47554,
            47256,
            47448,
            47372,
            47326,
            47004,
            47233,
            47392,
            47088,
            47728,
            47306,
            47343,
            47278,
            47166,
            47194,
            47092,
            47126,
            47312,
            47164,
            47386,
            47145,
            47329,
            47467,
            47251,
            46968,
            47239,
            47330,
            47590,
            47243,
            47301,
            47773,
            47647,
            47537,
            47295,
            47091,
            47080,
            47106
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            94,
            955,
            5306,
            16374,
            30879,
            38290,
            35597,
            25280,
            13689,
            4394,
            871,
            91,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            324,
            2165,
            10225,
            24375,
            36298,
            39187,
            32690,
            20397,
            7474,
            1458,
            184,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            267,
            2497,
            10271,
            26097,
            39387,
            41664,
            34957,
            22773,
            9815,
            2250,
            223,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            712,
            5729,
            16502,
            30147,
            38567,
            35166,
            25618,
            12377,
            2637,
            343,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            10641,
            2739,
            267,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            94,
            1457,
            8829,
            21857,
            34346,
            36980,
            29196,
            15127,
            4868,
            633,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            330,
            4395,
            15264,
            28899,
            38901,
            33966,
            21983,
            8883,
            1919,
            213,
            15,
            0,
            0,
            0,
            0
          ],
          [
            17,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            54,
            550,
            4535,
            15669,
            28279,
            39559,
            40748,
            32726,
            21176,
            7962,
            1377,
            89,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            298,
            2986,
            12375,
            27091,
            38019,
            34787,
            23014,
            10246,
            2559,
            246,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            540,
            4024,
            15540,
            28132,
            39780,
            43641,
            36850,
            23720,
            12574,
            3964,
            1038,
            83,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            113,
            1186,
            6694,
            19099,
            32399,
            40769,
            40879,
            32045,
            19442,
            9625,
            2511,
            315,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.269884887002263,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015018640006019268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2915637610021804,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17023157299991,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045796, 10011449), (411093, 411093), (40054018, 10013505))\nassert ((40045796 > 0 and 10011449 == 0\n  +10011449\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff7d079130>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff7ce108e0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff7d195220>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045796, 10011449), (411093, 411093), (40054018, 10013505))\nE       assert ((40045796 > 0 and 10011449 == 0\nE         +10011449\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004906849997496465,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}