{
  "created": 1722033720.3518586,
  "duration": 23.502904415130615,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5078900410007918,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14791143299953546,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013290599999891128,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003823045000899583,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1474917830018967,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012665680005738977,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13233361600214266,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12144109200016828,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012943490000907332,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00381926500267582,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12079670700040879,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013055390008958057,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003365655997185968,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1461511440029426,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012085169983038213,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033321150003757793,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11984940599722904,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011706859986588825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033295040011580568,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14582914699713,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012125069988542236,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033647850032139104,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11975217399958638,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011906959989573807,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004404878000059398,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002097676999255782,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011646559978544246,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033425850015191827,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017382379992341157,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011198050015082117,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033193340022990014,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004064971002662787,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033702.639589,
            "msecs": 639.5890712738037,
            "relativeCreated": 7766.564607620239,
            "thread": 281472821231648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5324
          }
        ]
      },
      "teardown": {
        "duration": 0.0012302680006541777,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00334432499948889,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024222249994636513,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033702.6519585,
            "msecs": 651.9584655761719,
            "relativeCreated": 7778.934001922607,
            "thread": 281472821231648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5324
          }
        ]
      },
      "teardown": {
        "duration": 0.0011852060015371535,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021033769990026485,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027784220001194626,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033702.661494,
            "msecs": 661.4940166473389,
            "relativeCreated": 7788.469552993774,
            "thread": 281472821231648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5324
          }
        ]
      },
      "teardown": {
        "duration": 0.0010512240005482454,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020806060019822326,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034331860006204806,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033702.6710532,
            "msecs": 671.0531711578369,
            "relativeCreated": 7798.0287075042725,
            "thread": 281472821231648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5324
          }
        ]
      },
      "teardown": {
        "duration": 0.0011057949996029492,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003352065003127791,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14623655600007623,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011881760001415387,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033501149991934653,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1200080499984324,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012185369996586815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1799246079972363,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14754137500131037,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013355999981286004,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015190299000096275,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12093870000171592,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001286039001570316,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8484797880009864,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            10,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            92,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            12,
            129,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.003941667997423792,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002933974999905331,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8922784850001335,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            9,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            223,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            205,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            28,
            255,
            255,
            255,
            8
          ],
          [
            17,
            0,
            2,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            65,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            157,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            116,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            201,
            255,
            255,
            255,
            255,
            0,
            0,
            154,
            0,
            107,
            255
          ],
          [
            255,
            0,
            154,
            0,
            255,
            0,
            185,
            77,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035183289983251598,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029883369970775675,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30275791099847993,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48297,
            48130,
            47450,
            47361,
            47126,
            47896,
            47446,
            47265,
            47524,
            47252,
            47421,
            47421,
            47421,
            47120,
            47208,
            47698,
            47662,
            47428,
            47674,
            47491,
            47447,
            47306,
            47305,
            47377,
            47353,
            47359,
            47508,
            47372,
            47373,
            47359,
            47543,
            47638,
            49530,
            47430,
            47861,
            47594,
            49964,
            47588,
            47664,
            47461,
            47422,
            47373,
            47303,
            47241,
            47401,
            47215,
            47226,
            47284,
            47561,
            47433,
            47479,
            47314,
            47343,
            47389,
            47068,
            47162,
            47572,
            47490,
            47481,
            47545,
            47508,
            47378,
            47482
          ],
          [
            48297,
            48130,
            47450,
            47361,
            47126,
            47896,
            47446,
            47265,
            47524,
            47252,
            47421,
            47421,
            47421,
            47120,
            47208,
            47698,
            47662,
            47428,
            47674,
            47491,
            47447,
            47306,
            47305,
            47377,
            47353,
            47359,
            47508,
            47372,
            47373,
            47359,
            47543,
            47638,
            49530,
            47430,
            47861,
            47594,
            49964,
            47588,
            47664,
            47461,
            47422,
            47373,
            47303,
            47241,
            47401,
            47215,
            47226,
            47284,
            47561,
            47433,
            47479,
            47314,
            47343,
            47389,
            47068,
            47162,
            47572,
            47490,
            47481,
            47545,
            47508,
            47378,
            47482
          ]
        ],
        "eTX_errcounts": [
          [
            40461,
            26989,
            8288,
            1218,
            93,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            227,
            3184,
            16781,
            35030,
            41960,
            31422,
            14304,
            2007,
            159,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            65,
            818,
            7883,
            26059,
            40258,
            37015,
            19422,
            4923,
            549,
            7,
            0,
            0,
            0
          ],
          [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            217,
            4021,
            17093,
            35719,
            42386,
            31253,
            13500,
            3103,
            275,
            14,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            309,
            4692,
            18949,
            36358,
            42883,
            34742,
            16842,
            3455,
            459,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13409522399888374,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016230660003202502,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06875670500085107,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47930,
            46977,
            47033,
            47042,
            47168,
            47175,
            47125,
            47177,
            47036,
            47225,
            46892,
            47178,
            47216,
            47120,
            47267,
            47196,
            49126,
            48684,
            47052,
            47017,
            47071,
            47049,
            47139,
            46987,
            46960,
            46998,
            46789,
            47311,
            46949,
            47038,
            47137,
            47174,
            47166,
            47139,
            47197,
            47113,
            47588,
            47107,
            47090,
            47135,
            47060,
            47151,
            47116,
            47092,
            47212,
            47154,
            47114,
            47197,
            46995,
            47132,
            47191,
            46908,
            47244,
            47267,
            47118,
            47362,
            47366,
            47098,
            47063,
            47135,
            47108,
            46989,
            47180
          ],
          [
            47930,
            46977,
            47033,
            47042,
            47168,
            47175,
            47125,
            47177,
            47036,
            47225,
            46892,
            47178,
            47216,
            47120,
            47267,
            47196,
            49126,
            48684,
            47052,
            47017,
            47071,
            47049,
            47139,
            46987,
            46960,
            46998,
            46789,
            47311,
            46949,
            47038,
            47137,
            47174,
            47166,
            47139,
            47197,
            47113,
            47588,
            47107,
            47090,
            47135,
            47060,
            47151,
            47116,
            47092,
            47212,
            47154,
            47114,
            47197,
            46995,
            47132,
            47191,
            46908,
            47244,
            47267,
            47118,
            47362,
            47366,
            47098,
            47063,
            47135,
            47108,
            46989,
            47180
          ],
          [
            47930,
            46977,
            47033,
            47042,
            47168,
            47175,
            47125,
            47177,
            47036,
            47225,
            46892,
            47178,
            47216,
            47120,
            47267,
            47196,
            49126,
            48684,
            47052,
            47017,
            47071,
            47049,
            47139,
            46987,
            46960,
            46998,
            46789,
            47311,
            46949,
            47038,
            47137,
            47174,
            47166,
            47139,
            47197,
            47113,
            47588,
            47107,
            47090,
            47135,
            47060,
            47151,
            47116,
            47092,
            47212,
            47154,
            47114,
            47197,
            46995,
            47132,
            47191,
            46908,
            47244,
            47267,
            47118,
            47362,
            47366,
            47098,
            47063,
            47135,
            47108,
            46989,
            47180
          ],
          [
            47930,
            46977,
            47033,
            47042,
            47168,
            47175,
            47125,
            47177,
            47036,
            47225,
            46892,
            47178,
            47216,
            47120,
            47267,
            47196,
            49126,
            48684,
            47052,
            47017,
            47071,
            47049,
            47139,
            46987,
            46960,
            46998,
            46789,
            47311,
            46949,
            47038,
            47137,
            47174,
            47166,
            47139,
            47197,
            47113,
            47588,
            47107,
            47090,
            47135,
            47060,
            47151,
            47116,
            47092,
            47212,
            47154,
            47114,
            47197,
            46995,
            47132,
            47191,
            46908,
            47244,
            47267,
            47118,
            47362,
            47366,
            47098,
            47063,
            47135,
            47108,
            46989,
            47180
          ],
          [
            47930,
            46977,
            47033,
            47042,
            47168,
            47175,
            47125,
            47177,
            47036,
            47225,
            46892,
            47178,
            47216,
            47120,
            47267,
            47196,
            49126,
            48684,
            47052,
            47017,
            47071,
            47049,
            47139,
            46987,
            46960,
            46998,
            46789,
            47311,
            46949,
            47038,
            47137,
            47174,
            47166,
            47139,
            47197,
            47113,
            47588,
            47107,
            47090,
            47135,
            47060,
            47151,
            47116,
            47092,
            47212,
            47154,
            47114,
            47197,
            46995,
            47132,
            47191,
            46908,
            47244,
            47267,
            47118,
            47362,
            47366,
            47098,
            47063,
            47135,
            47108,
            46989,
            47180
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            138,
            1381,
            5327,
            12058,
            23482,
            31819,
            32398,
            26449,
            18475,
            12647,
            7033,
            2124,
            443,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            205,
            1879,
            6050,
            13694,
            25325,
            33406,
            36930,
            30796,
            21603,
            12753,
            5354,
            1160,
            125,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            9,
            174,
            1286,
            4165,
            10032,
            21858,
            35791,
            39271,
            34872,
            25649,
            16080,
            9160,
            3472,
            779,
            83,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            189,
            1656,
            6271,
            14966,
            26043,
            32020,
            35574,
            36101,
            28981,
            18269,
            7159,
            1810,
            198,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            64,
            532,
            2400,
            6412,
            14100,
            27371
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            121,
            1249,
            5583,
            16164,
            30713,
            34973,
            31894,
            23090,
            13238,
            5632,
            1354,
            116,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            125,
            1347,
            6714,
            15854,
            29217,
            36167,
            33131,
            24317,
            11909,
            3470,
            493,
            33,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            424,
            2266,
            8299,
            20156,
            34990,
            38514,
            33867,
            26205,
            16569,
            7115,
            1861,
            230,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            59,
            581,
            3025,
            7997,
            16545,
            27684,
            36087,
            33914,
            25888,
            15946,
            7293,
            1917,
            165,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            10,
            183,
            1184,
            3662,
            7857,
            17950,
            32998,
            39275,
            36842,
            30825,
            22606,
            14003,
            8663,
            3640,
            540,
            43,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            154,
            1217,
            4918,
            12764,
            25418,
            32723,
            35089,
            37076,
            32958,
            24552,
            15396,
            7538,
            2037,
            293,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            99,
            1024,
            3404,
            8832
          ]
        ]
      },
      "call": {
        "duration": 0.27192823299992597,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6ac35f30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6ac35f30> = array([12, 12, 18, 21, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6ac195b0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47930, 46977, 47033, 47042, 47168, 47175, ...], [47930, 46977, 47033, 47042, 47168, 47175, ...], [..., ...], [0, 0, 9, 174, 1286, 4165, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 10, 183, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6ac35f30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6ac35f30> = array([12, 12, 18, 21, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016502770013175905,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2928859800013015,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170448477998434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014508929998555686,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3038115050003398,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            24,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            31,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            42,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034761779970722273,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00293322499783244,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5377013170000282,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            4,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            47,
            255,
            105,
            255,
            96,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            244,
            0,
            109,
            1,
            255,
            35,
            255,
            11
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            78,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            5,
            255,
            188,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            208,
            255,
            153,
            255,
            255,
            2,
            0,
            103,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            159,
            255,
            136
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034773480001604185,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029326549993129447,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29571624399977736,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47744,
            47564,
            47374,
            47461,
            47411,
            47521,
            47352,
            47470,
            47537,
            47366,
            47543,
            47536,
            47453,
            47390,
            49180,
            47497,
            47880,
            47368,
            50294,
            47500,
            47401,
            47431,
            47402,
            47489,
            47591,
            47432,
            47534,
            47696,
            47113,
            47050,
            47373,
            47465,
            47141,
            47167,
            47370,
            47427,
            47398,
            47415,
            47435,
            47434,
            47543,
            47424,
            47385,
            47538,
            47630,
            47474,
            47530,
            47566,
            47461,
            47735,
            47405,
            47760,
            47507,
            50550,
            47384,
            47247,
            47391,
            47387,
            47472,
            47368,
            47429,
            47225,
            47347
          ],
          [
            47744,
            47564,
            47374,
            47461,
            47411,
            47521,
            47352,
            47470,
            47537,
            47366,
            47543,
            47536,
            47453,
            47390,
            49180,
            47497,
            47880,
            47368,
            50294,
            47500,
            47401,
            47431,
            47402,
            47489,
            47591,
            47432,
            47534,
            47696,
            47113,
            47050,
            47373,
            47465,
            47141,
            47167,
            47370,
            47427,
            47398,
            47415,
            47435,
            47434,
            47543,
            47424,
            47385,
            47538,
            47630,
            47474,
            47530,
            47566,
            47461,
            47735,
            47405,
            47760,
            47507,
            50550,
            47384,
            47247,
            47391,
            47387,
            47472,
            47368,
            47429,
            47225,
            47347
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            228,
            3651,
            17719,
            36629,
            36462,
            18670,
            4401,
            372,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            199,
            2832,
            16276,
            34718,
            40350,
            26206,
            8602,
            1417,
            72,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            786,
            8472,
            28563,
            42426,
            38772,
            19861,
            4919,
            400,
            10,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            140,
            2502,
            13356,
            31556,
            42612,
            38378,
            20379,
            5395,
            823,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13365208400136908,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001651326001592679,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06849662999957218,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47913,
            47176,
            47088,
            47019,
            47169,
            47239,
            46788,
            47042,
            47169,
            47153,
            47277,
            47209,
            47185,
            47288,
            47444,
            49003,
            47054,
            47185,
            47136,
            46996,
            47123,
            47049,
            47215,
            47153,
            46926,
            47223,
            47195,
            47401,
            47318,
            47209,
            47096,
            47260,
            47150,
            48943,
            48825,
            47095,
            47027,
            47195,
            47107,
            47152,
            46896,
            47085,
            47166,
            47034,
            47167,
            47185,
            47255,
            47192,
            47062,
            47301,
            47228,
            47110,
            47203,
            47341,
            47046,
            47077,
            47169,
            47248,
            47073,
            47048,
            47095,
            47113,
            47051
          ],
          [
            47913,
            47176,
            47088,
            47019,
            47169,
            47239,
            46788,
            47042,
            47169,
            47153,
            47277,
            47209,
            47185,
            47288,
            47444,
            49003,
            47054,
            47185,
            47136,
            46996,
            47123,
            47049,
            47215,
            47153,
            46926,
            47223,
            47195,
            47401,
            47318,
            47209,
            47096,
            47260,
            47150,
            48943,
            48825,
            47095,
            47027,
            47195,
            47107,
            47152,
            46896,
            47085,
            47166,
            47034,
            47167,
            47185,
            47255,
            47192,
            47062,
            47301,
            47228,
            47110,
            47203,
            47341,
            47046,
            47077,
            47169,
            47248,
            47073,
            47048,
            47095,
            47113,
            47051
          ],
          [
            47913,
            47176,
            47088,
            47019,
            47169,
            47239,
            46788,
            47042,
            47169,
            47153,
            47277,
            47209,
            47185,
            47288,
            47444,
            49003,
            47054,
            47185,
            47136,
            46996,
            47123,
            47049,
            47215,
            47153,
            46926,
            47223,
            47195,
            47401,
            47318,
            47209,
            47096,
            47260,
            47150,
            48943,
            48825,
            47095,
            47027,
            47195,
            47107,
            47152,
            46896,
            47085,
            47166,
            47034,
            47167,
            47185,
            47255,
            47192,
            47062,
            47301,
            47228,
            47110,
            47203,
            47341,
            47046,
            47077,
            47169,
            47248,
            47073,
            47048,
            47095,
            47113,
            47051
          ],
          [
            47913,
            47176,
            47088,
            47019,
            47169,
            47239,
            46788,
            47042,
            47169,
            47153,
            47277,
            47209,
            47185,
            47288,
            47444,
            49003,
            47054,
            47185,
            47136,
            46996,
            47123,
            47049,
            47215,
            47153,
            46926,
            47223,
            47195,
            47401,
            47318,
            47209,
            47096,
            47260,
            47150,
            48943,
            48825,
            47095,
            47027,
            47195,
            47107,
            47152,
            46896,
            47085,
            47166,
            47034,
            47167,
            47185,
            47255,
            47192,
            47062,
            47301,
            47228,
            47110,
            47203,
            47341,
            47046,
            47077,
            47169,
            47248,
            47073,
            47048,
            47095,
            47113,
            47051
          ],
          [
            47913,
            47176,
            47088,
            47019,
            47169,
            47239,
            46788,
            47042,
            47169,
            47153,
            47277,
            47209,
            47185,
            47288,
            47444,
            49003,
            47054,
            47185,
            47136,
            46996,
            47123,
            47049,
            47215,
            47153,
            46926,
            47223,
            47195,
            47401,
            47318,
            47209,
            47096,
            47260,
            47150,
            48943,
            48825,
            47095,
            47027,
            47195,
            47107,
            47152,
            46896,
            47085,
            47166,
            47034,
            47167,
            47185,
            47255,
            47192,
            47062,
            47301,
            47228,
            47110,
            47203,
            47341,
            47046,
            47077,
            47169,
            47248,
            47073,
            47048,
            47095,
            47113,
            47051
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            35,
            609,
            3340,
            12379,
            25372,
            33857,
            34888,
            25456,
            11356,
            2310,
            285,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            507,
            3733,
            13411,
            26708,
            34810,
            37505,
            30205,
            18172,
            7323,
            1759,
            132,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16
          ],
          [
            1,
            4,
            199,
            1439,
            6020,
            17390,
            32413,
            38983,
            33457,
            18335,
            5953,
            1038,
            58,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            108,
            1960,
            10248,
            23727,
            37178,
            43778,
            40228,
            30920,
            16656,
            4650,
            560,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            392,
            2269,
            7524,
            18014,
            32351,
            37939
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            38,
            456,
            3832,
            15035,
            30722,
            36543,
            32662,
            18763,
            6340,
            1170,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            45,
            842,
            7319,
            21223,
            37055,
            41430,
            35724,
            22555,
            9114,
            1991,
            144,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            82,
            1008,
            6474,
            19487,
            34978,
            40726,
            34034,
            20227,
            8031,
            1389,
            123,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            220,
            2594,
            11844,
            23965,
            33679,
            38697,
            35537,
            25920,
            11900,
            2878,
            257,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            118,
            1817,
            8610,
            21411,
            33386,
            39090,
            35783,
            25132,
            11843,
            3194,
            376,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            626,
            3991,
            14553,
            27296,
            35683,
            40674,
            38090,
            27910,
            13755,
            3777,
            442,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            88,
            975,
            5251,
            16236,
            31488
          ]
        ]
      },
      "call": {
        "duration": 0.27015888299865765,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015080140001373366,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29149517900077626,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1706598630007647,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014517330018861685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.358713600999181,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            64,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035121490000165068,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029232049964775797,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5392398719995981,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            5,
            255,
            4,
            255,
            3,
            64,
            0,
            255,
            1,
            255,
            255
          ],
          [
            61,
            0,
            5,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            45,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            248,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            0,
            2,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            51,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            3,
            5,
            0,
            255,
            6,
            255,
            255
          ],
          [
            72,
            0,
            1,
            0,
            2,
            0,
            255,
            207,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            117,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            94,
            0,
            18,
            0,
            31,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            139,
            255,
            69,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034870379968197085,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029507459985325113,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296060861001024,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47875,
            47500,
            47546,
            47464,
            47272,
            47292,
            47487,
            47300,
            47359,
            47394,
            47516,
            47625,
            47465,
            47493,
            47693,
            47520,
            47386,
            47527,
            47600,
            47457,
            47446,
            49218,
            47684,
            47752,
            47251,
            47876,
            47507,
            47489,
            47412,
            47350,
            47436,
            47350,
            47411,
            47618,
            47679,
            47484,
            47504,
            47354,
            47596,
            47422,
            47306,
            47542,
            47564,
            47508,
            47265,
            47433,
            47549,
            47158,
            46903,
            47355,
            47491,
            47518,
            47408,
            47563,
            49457,
            47322,
            47745,
            47483,
            49570,
            47377,
            47269,
            47309,
            47560
          ],
          [
            47875,
            47500,
            47546,
            47464,
            47272,
            47292,
            47487,
            47300,
            47359,
            47394,
            47516,
            47625,
            47465,
            47493,
            47693,
            47520,
            47386,
            47527,
            47600,
            47457,
            47446,
            49218,
            47684,
            47752,
            47251,
            47876,
            47507,
            47489,
            47412,
            47350,
            47436,
            47350,
            47411,
            47618,
            47679,
            47484,
            47504,
            47354,
            47596,
            47422,
            47306,
            47542,
            47564,
            47508,
            47265,
            47433,
            47549,
            47158,
            46903,
            47355,
            47491,
            47518,
            47408,
            47563,
            49457,
            47322,
            47745,
            47483,
            49570,
            47377,
            47269,
            47309,
            47560
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            577,
            6807,
            23646,
            39229,
            34796,
            15942,
            3008,
            373,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            535,
            5763,
            21373,
            37206,
            38326,
            22085,
            6021,
            916,
            40,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            1,
            140,
            1969,
            13085,
            32278,
            41569,
            29407,
            10282,
            1920,
            151,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            434,
            5356,
            20959,
            38197,
            41931,
            30484,
            12818,
            2076,
            295,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            646,
            7413,
            24429,
            39407,
            43600
          ]
        ]
      },
      "call": {
        "duration": 0.1339316309968126,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016213869967032224,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06895722999979625,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47960,
            47437,
            47298,
            47315,
            49912,
            50717,
            47159,
            47181,
            47066,
            47177,
            47139,
            47027,
            47207,
            47254,
            47277,
            47208,
            47084,
            47006,
            47289,
            47260,
            47307,
            47252,
            47195,
            47144,
            47606,
            49282,
            47091,
            47192,
            47339,
            47152,
            47197,
            47246,
            47244,
            47333,
            47064,
            47127,
            47309,
            47137,
            47353,
            47424,
            47234,
            46861,
            47191,
            47190,
            47636,
            49537,
            47186,
            46913,
            47033,
            47191,
            47065,
            47017,
            47241,
            47269,
            47153,
            47219,
            46749,
            47177,
            47287,
            47294,
            47259,
            47360,
            49101
          ],
          [
            47960,
            47437,
            47298,
            47315,
            49912,
            50717,
            47159,
            47181,
            47066,
            47177,
            47139,
            47027,
            47207,
            47254,
            47277,
            47208,
            47084,
            47006,
            47289,
            47260,
            47307,
            47252,
            47195,
            47144,
            47606,
            49282,
            47091,
            47192,
            47339,
            47152,
            47197,
            47246,
            47244,
            47333,
            47064,
            47127,
            47309,
            47137,
            47353,
            47424,
            47234,
            46861,
            47191,
            47190,
            47636,
            49537,
            47186,
            46913,
            47033,
            47191,
            47065,
            47017,
            47241,
            47269,
            47153,
            47219,
            46749,
            47177,
            47287,
            47294,
            47259,
            47360,
            49101
          ],
          [
            47960,
            47437,
            47298,
            47315,
            49912,
            50717,
            47159,
            47181,
            47066,
            47177,
            47139,
            47027,
            47207,
            47254,
            47277,
            47208,
            47084,
            47006,
            47289,
            47260,
            47307,
            47252,
            47195,
            47144,
            47606,
            49282,
            47091,
            47192,
            47339,
            47152,
            47197,
            47246,
            47244,
            47333,
            47064,
            47127,
            47309,
            47137,
            47353,
            47424,
            47234,
            46861,
            47191,
            47190,
            47636,
            49537,
            47186,
            46913,
            47033,
            47191,
            47065,
            47017,
            47241,
            47269,
            47153,
            47219,
            46749,
            47177,
            47287,
            47294,
            47259,
            47360,
            49101
          ],
          [
            47960,
            47437,
            47298,
            47315,
            49912,
            50717,
            47159,
            47181,
            47066,
            47177,
            47139,
            47027,
            47207,
            47254,
            47277,
            47208,
            47084,
            47006,
            47289,
            47260,
            47307,
            47252,
            47195,
            47144,
            47606,
            49282,
            47091,
            47192,
            47339,
            47152,
            47197,
            47246,
            47244,
            47333,
            47064,
            47127,
            47309,
            47137,
            47353,
            47424,
            47234,
            46861,
            47191,
            47190,
            47636,
            49537,
            47186,
            46913,
            47033,
            47191,
            47065,
            47017,
            47241,
            47269,
            47153,
            47219,
            46749,
            47177,
            47287,
            47294,
            47259,
            47360,
            49101
          ],
          [
            47960,
            47437,
            47298,
            47315,
            49912,
            50717,
            47159,
            47181,
            47066,
            47177,
            47139,
            47027,
            47207,
            47254,
            47277,
            47208,
            47084,
            47006,
            47289,
            47260,
            47307,
            47252,
            47195,
            47144,
            47606,
            49282,
            47091,
            47192,
            47339,
            47152,
            47197,
            47246,
            47244,
            47333,
            47064,
            47127,
            47309,
            47137,
            47353,
            47424,
            47234,
            46861,
            47191,
            47190,
            47636,
            49537,
            47186,
            46913,
            47033,
            47191,
            47065,
            47017,
            47241,
            47269,
            47153,
            47219,
            46749,
            47177,
            47287,
            47294,
            47259,
            47360,
            49101
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            122,
            1220,
            7036,
            18937,
            29609,
            34050,
            32619,
            24305,
            14963,
            6676,
            1411,
            121,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            36,
            566,
            3237,
            11564,
            21954,
            31526,
            35243,
            31059,
            19662,
            10432,
            4155,
            590,
            65,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            776,
            4888,
            15398,
            25990,
            33896,
            38340,
            36879,
            27043,
            13162,
            4412,
            698,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            150,
            1427,
            5531,
            15397,
            27193,
            34457,
            33924,
            25651,
            13047,
            4165,
            778,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            14375,
            5304,
            925,
            81,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            223,
            2424,
            11055,
            23301,
            34435,
            40824,
            32262,
            19433,
            7879,
            1805,
            81,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            381,
            3924,
            14896,
            27189,
            38055,
            35484,
            23061,
            9740,
            2109,
            271,
            8,
            0,
            0,
            0,
            0
          ],
          [
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            101,
            1376,
            7746,
            19985,
            31257,
            38965,
            39465,
            33656,
            24347,
            12713,
            3465,
            402,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            71,
            549,
            3391,
            12214,
            25008,
            35215,
            33749,
            23572,
            10888,
            3718,
            825,
            97,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            91,
            1295,
            5795,
            18037,
            28708,
            36680,
            38931,
            34598,
            23626,
            12969,
            3592,
            478,
            23,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            222,
            1671,
            6781,
            17059,
            29715,
            38532,
            40397,
            34410,
            21836,
            12849,
            5819,
            1884,
            158,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27012153200121247,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014895929998601787,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29166960300062783,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1714738109985774,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045829, 10011458), (411285, 411285), (40048569, 10012142))\nassert ((40045829 > 0 and 10011458 == 0\n  +10011458\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff6ac192b0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff6aa72a30>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff6ac280d0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045829, 10011458), (411285, 411285), (40048569, 10012142))\nE       assert ((40045829 > 0 and 10011458 == 0\nE         +10011458\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005051752999861492,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}