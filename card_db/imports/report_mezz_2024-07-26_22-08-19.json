{
  "created": 1722031719.1471088,
  "duration": 23.231287479400635,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5093442079996748,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14858196199929807,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013710910025110934,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038192950014490634,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482638039997255,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012927290008519776,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1335909890003677,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12191823899775045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012842680007452145,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038249350000114646,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117827199836029,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013084790007269476,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033753149982658215,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467746320013248,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001232127000548644,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003380865000508493,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1200550169996859,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012148170026193839,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033365240014973097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14632723099930445,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011836769990622997,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003369493999343831,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12025050199736143,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011869160007336177,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00444033899839269,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020967159980500583,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011358550000295509,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003349815000547096,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001741239000693895,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001158115999714937,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033470540001871996,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004036589001771063,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031701.7142396,
            "msecs": 714.2395973205566,
            "relativeCreated": 7771.086692810059,
            "thread": 281473674706976,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4366
          }
        ]
      },
      "teardown": {
        "duration": 0.0012543279990495648,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003380205002031289,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002414454000245314,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031701.726622,
            "msecs": 726.6221046447754,
            "relativeCreated": 7783.469200134277,
            "thread": 281473674706976,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4366
          }
        ]
      },
      "teardown": {
        "duration": 0.0011590459980652668,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020719960011774674,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026994600011676084,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031701.7361498,
            "msecs": 736.149787902832,
            "relativeCreated": 7792.996883392334,
            "thread": 281473674706976,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4366
          }
        ]
      },
      "teardown": {
        "duration": 0.0010635830003593583,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020968970020476263,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034499560024414677,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031701.745628,
            "msecs": 745.6281185150146,
            "relativeCreated": 7802.475214004517,
            "thread": 281473674706976,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4366
          }
        ]
      },
      "teardown": {
        "duration": 0.0010772339992399793,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003360314000019571,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14653618599913898,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012062070018146187,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033163629996124655,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1204725679999683,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011777660001826007,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1793153649996384,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477029420020699,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001257177998922998,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015251108998199925,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12134291699840105,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013125890000083018,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8440375380014302,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            9,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            108,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            31,
            163,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003608419996453449,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029075739985273685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9074949660025595,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            12,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            35,
            255,
            255,
            255,
            10
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            46,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            129,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            110,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            241,
            255,
            255,
            255,
            255,
            0,
            0,
            179,
            0,
            114,
            255
          ],
          [
            255,
            0,
            147,
            0,
            255,
            1,
            225,
            88,
            255,
            255,
            255,
            4
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          2
        ]
      },
      "call": {
        "duration": 0.0035036580011365004,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002940006001153961,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30291130100158625,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48406,
            47776,
            49371,
            47562,
            47830,
            47629,
            47904,
            47727,
            47434,
            47548,
            47386,
            47705,
            47533,
            47535,
            47237,
            47335,
            47606,
            47893,
            47573,
            47648,
            47476,
            47671,
            47421,
            47596,
            47553,
            47548,
            47431,
            47562,
            47500,
            47591,
            47501,
            47599,
            47413,
            47615,
            47649,
            47651,
            47702,
            48064,
            47604,
            47597,
            47541,
            47925,
            47522,
            47520,
            47462,
            47564,
            47520,
            47623,
            47558,
            47445,
            47501,
            47477,
            47579,
            47540,
            47612,
            47628,
            47592,
            47616,
            47594,
            47671,
            47561,
            47709,
            47532
          ],
          [
            48406,
            47776,
            49371,
            47562,
            47830,
            47629,
            47904,
            47727,
            47434,
            47548,
            47386,
            47705,
            47533,
            47535,
            47237,
            47335,
            47606,
            47893,
            47573,
            47648,
            47476,
            47671,
            47421,
            47596,
            47553,
            47548,
            47431,
            47562,
            47500,
            47591,
            47501,
            47599,
            47413,
            47615,
            47649,
            47651,
            47702,
            48064,
            47604,
            47597,
            47541,
            47925,
            47522,
            47520,
            47462,
            47564,
            47520,
            47623,
            47558,
            47445,
            47501,
            47477,
            47579,
            47540,
            47612,
            47628,
            47592,
            47616,
            47594,
            47671,
            47561,
            47709,
            47532
          ]
        ],
        "eTX_errcounts": [
          [
            40570,
            26348,
            9186,
            1431,
            91,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            167,
            2902,
            16057,
            34477,
            42555,
            31772,
            13885,
            2403,
            169,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            57,
            872,
            8020,
            26022,
            40645,
            37675,
            20208,
            5495,
            814,
            8,
            0,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            292,
            3810,
            17425,
            36203,
            41910,
            31920,
            13743,
            3098,
            327,
            7,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            495,
            4328,
            18972,
            36574,
            42755,
            35321,
            17586,
            2975,
            377,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1338122140004998,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001666267002292443,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06913356600125553,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47777,
            47553,
            47378,
            47318,
            47453,
            47679,
            47368,
            47603,
            47508,
            47303,
            47306,
            47302,
            47192,
            47337,
            47218,
            47329,
            47281,
            47332,
            47243,
            47418,
            47322,
            47388,
            47179,
            47405,
            47331,
            47366,
            47460,
            47437,
            47200,
            47258,
            47034,
            47121,
            47285,
            47285,
            47305,
            47360,
            47151,
            47371,
            47225,
            47333,
            47283,
            47421,
            47390,
            47427,
            47326,
            47449,
            47304,
            47301,
            47252,
            47311,
            47248,
            47274,
            47313,
            47317,
            47217,
            47435,
            47008,
            47470,
            47264,
            47419,
            47385,
            47462,
            47326
          ],
          [
            47777,
            47553,
            47378,
            47318,
            47453,
            47679,
            47368,
            47603,
            47508,
            47303,
            47306,
            47302,
            47192,
            47337,
            47218,
            47329,
            47281,
            47332,
            47243,
            47418,
            47322,
            47388,
            47179,
            47405,
            47331,
            47366,
            47460,
            47437,
            47200,
            47258,
            47034,
            47121,
            47285,
            47285,
            47305,
            47360,
            47151,
            47371,
            47225,
            47333,
            47283,
            47421,
            47390,
            47427,
            47326,
            47449,
            47304,
            47301,
            47252,
            47311,
            47248,
            47274,
            47313,
            47317,
            47217,
            47435,
            47008,
            47470,
            47264,
            47419,
            47385,
            47462,
            47326
          ],
          [
            47777,
            47553,
            47378,
            47318,
            47453,
            47679,
            47368,
            47603,
            47508,
            47303,
            47306,
            47302,
            47192,
            47337,
            47218,
            47329,
            47281,
            47332,
            47243,
            47418,
            47322,
            47388,
            47179,
            47405,
            47331,
            47366,
            47460,
            47437,
            47200,
            47258,
            47034,
            47121,
            47285,
            47285,
            47305,
            47360,
            47151,
            47371,
            47225,
            47333,
            47283,
            47421,
            47390,
            47427,
            47326,
            47449,
            47304,
            47301,
            47252,
            47311,
            47248,
            47274,
            47313,
            47317,
            47217,
            47435,
            47008,
            47470,
            47264,
            47419,
            47385,
            47462,
            47326
          ],
          [
            47777,
            47553,
            47378,
            47318,
            47453,
            47679,
            47368,
            47603,
            47508,
            47303,
            47306,
            47302,
            47192,
            47337,
            47218,
            47329,
            47281,
            47332,
            47243,
            47418,
            47322,
            47388,
            47179,
            47405,
            47331,
            47366,
            47460,
            47437,
            47200,
            47258,
            47034,
            47121,
            47285,
            47285,
            47305,
            47360,
            47151,
            47371,
            47225,
            47333,
            47283,
            47421,
            47390,
            47427,
            47326,
            47449,
            47304,
            47301,
            47252,
            47311,
            47248,
            47274,
            47313,
            47317,
            47217,
            47435,
            47008,
            47470,
            47264,
            47419,
            47385,
            47462,
            47326
          ],
          [
            47777,
            47553,
            47378,
            47318,
            47453,
            47679,
            47368,
            47603,
            47508,
            47303,
            47306,
            47302,
            47192,
            47337,
            47218,
            47329,
            47281,
            47332,
            47243,
            47418,
            47322,
            47388,
            47179,
            47405,
            47331,
            47366,
            47460,
            47437,
            47200,
            47258,
            47034,
            47121,
            47285,
            47285,
            47305,
            47360,
            47151,
            47371,
            47225,
            47333,
            47283,
            47421,
            47390,
            47427,
            47326,
            47449,
            47304,
            47301,
            47252,
            47311,
            47248,
            47274,
            47313,
            47317,
            47217,
            47435,
            47008,
            47470,
            47264,
            47419,
            47385,
            47462,
            47326
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            168,
            1208,
            5006,
            11033,
            22804,
            31803,
            31486,
            26233,
            19228,
            13155,
            7510,
            2510,
            455,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            159,
            1647,
            6182,
            13519,
            24946,
            33093,
            37333,
            31490,
            22500,
            13101,
            5923,
            1189,
            208,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            5,
            146,
            1239,
            3916,
            9673,
            21625,
            35467,
            39447,
            35316,
            26017,
            16326,
            10087,
            3932,
            840,
            82,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            175,
            1740,
            5812,
            14593,
            25262,
            31848,
            35207,
            36643,
            29786,
            18097,
            7569,
            2102,
            282,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            40,
            519,
            2402,
            6008,
            13588,
            27275
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            115,
            1114,
            4959,
            15140,
            29627,
            34990,
            32560,
            24051,
            13570,
            5949,
            1521,
            116,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            173,
            1133,
            6191,
            15134,
            28776,
            35729,
            34077,
            24989,
            13213,
            4109,
            669,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            325,
            1942,
            7625,
            19469,
            33458,
            37587,
            34491,
            27070,
            17155,
            7803,
            2044,
            219,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            543,
            2809,
            7710,
            16381,
            27335,
            36253,
            34753,
            26426,
            16377,
            7545,
            2227,
            247,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            10,
            131,
            1067,
            3518,
            7866,
            17535,
            32491,
            39532,
            36951,
            31748,
            23055,
            14204,
            8577,
            3741,
            717,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            99,
            1089,
            4290,
            11897,
            24936,
            32642,
            35113,
            37424,
            33541,
            25259,
            16346,
            8413,
            2332,
            349,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            124,
            834,
            3157,
            8426
          ]
        ]
      },
      "call": {
        "duration": 0.2721163370006252,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9da4bc30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9da4bc30> = array([12, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9da0b580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47777, 47553, 47378, 47318, 47453, 47679, ...], [47777, 47553, 47378, 47318, 47453, 47679, ...], [..., ...], [0, 0, 5, 146, 1239, 3916, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 10, 131, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9da4bc30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9da4bc30> = array([12, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016361460002372041,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2929340990012861,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1701216229994316,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014984740009822417,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3048150350005017,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            23,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            64,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            34,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035169480033800937,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002960556001198711,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5361663939984282,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            222,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            80,
            255,
            113,
            255,
            110,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            193,
            0,
            152,
            7,
            255,
            57,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            67,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            15
          ],
          [
            5,
            255,
            228,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            230,
            255,
            144,
            255,
            255,
            1,
            0,
            146,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            152,
            255,
            98
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003482446998532396,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002914295000664424,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959699869970791,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48153,
            47998,
            47500,
            50256,
            47699,
            47618,
            47500,
            47607,
            47551,
            47607,
            47615,
            47390,
            47530,
            47441,
            47482,
            47527,
            47555,
            47441,
            47628,
            47442,
            47521,
            47450,
            47533,
            47539,
            47623,
            47557,
            47604,
            47587,
            47548,
            47555,
            47594,
            47565,
            47474,
            47547,
            49282,
            47577,
            47878,
            47480,
            49874,
            47599,
            47489,
            47480,
            47344,
            47326,
            47474,
            47608,
            47485,
            47556,
            47454,
            47514,
            47439,
            47509,
            47445,
            47403,
            47503,
            47538,
            47489,
            47559,
            47560,
            47512,
            47548,
            47419,
            47505
          ],
          [
            48153,
            47998,
            47500,
            50256,
            47699,
            47618,
            47500,
            47607,
            47551,
            47607,
            47615,
            47390,
            47530,
            47441,
            47482,
            47527,
            47555,
            47441,
            47628,
            47442,
            47521,
            47450,
            47533,
            47539,
            47623,
            47557,
            47604,
            47587,
            47548,
            47555,
            47594,
            47565,
            47474,
            47547,
            49282,
            47577,
            47878,
            47480,
            49874,
            47599,
            47489,
            47480,
            47344,
            47326,
            47474,
            47608,
            47485,
            47556,
            47454,
            47514,
            47439,
            47509,
            47445,
            47403,
            47503,
            47538,
            47489,
            47559,
            47560,
            47512,
            47548,
            47419,
            47505
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            234,
            3167,
            17957,
            36272,
            36977,
            19129,
            4523,
            424,
            36,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            196,
            2741,
            16149,
            34832,
            39685,
            25539,
            7864,
            1200,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            1104,
            8131,
            28758,
            42124,
            38875,
            19203,
            4450,
            466,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            176,
            2328,
            13570,
            31220,
            42211,
            38384,
            20174,
            5175,
            526,
            49,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1337067919994297,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016267560022242833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06885920999775408,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47922,
            47262,
            47274,
            47393,
            47151,
            47280,
            47448,
            47240,
            47275,
            47387,
            47126,
            47190,
            47412,
            47361,
            47202,
            47370,
            47408,
            47333,
            49202,
            48823,
            46916,
            47387,
            47192,
            47328,
            47358,
            47211,
            47221,
            47296,
            47204,
            47255,
            47232,
            46899,
            47128,
            47249,
            47306,
            47245,
            47357,
            47263,
            47383,
            49496,
            47129,
            47205,
            47226,
            47096,
            47122,
            47114,
            47232,
            47272,
            47133,
            47350,
            47296,
            47313,
            47144,
            47396,
            47353,
            47260,
            47450,
            47404,
            47637,
            47382,
            47350,
            47335,
            47267
          ],
          [
            47922,
            47262,
            47274,
            47393,
            47151,
            47280,
            47448,
            47240,
            47275,
            47387,
            47126,
            47190,
            47412,
            47361,
            47202,
            47370,
            47408,
            47333,
            49202,
            48823,
            46916,
            47387,
            47192,
            47328,
            47358,
            47211,
            47221,
            47296,
            47204,
            47255,
            47232,
            46899,
            47128,
            47249,
            47306,
            47245,
            47357,
            47263,
            47383,
            49496,
            47129,
            47205,
            47226,
            47096,
            47122,
            47114,
            47232,
            47272,
            47133,
            47350,
            47296,
            47313,
            47144,
            47396,
            47353,
            47260,
            47450,
            47404,
            47637,
            47382,
            47350,
            47335,
            47267
          ],
          [
            47922,
            47262,
            47274,
            47393,
            47151,
            47280,
            47448,
            47240,
            47275,
            47387,
            47126,
            47190,
            47412,
            47361,
            47202,
            47370,
            47408,
            47333,
            49202,
            48823,
            46916,
            47387,
            47192,
            47328,
            47358,
            47211,
            47221,
            47296,
            47204,
            47255,
            47232,
            46899,
            47128,
            47249,
            47306,
            47245,
            47357,
            47263,
            47383,
            49496,
            47129,
            47205,
            47226,
            47096,
            47122,
            47114,
            47232,
            47272,
            47133,
            47350,
            47296,
            47313,
            47144,
            47396,
            47353,
            47260,
            47450,
            47404,
            47637,
            47382,
            47350,
            47335,
            47267
          ],
          [
            47922,
            47262,
            47274,
            47393,
            47151,
            47280,
            47448,
            47240,
            47275,
            47387,
            47126,
            47190,
            47412,
            47361,
            47202,
            47370,
            47408,
            47333,
            49202,
            48823,
            46916,
            47387,
            47192,
            47328,
            47358,
            47211,
            47221,
            47296,
            47204,
            47255,
            47232,
            46899,
            47128,
            47249,
            47306,
            47245,
            47357,
            47263,
            47383,
            49496,
            47129,
            47205,
            47226,
            47096,
            47122,
            47114,
            47232,
            47272,
            47133,
            47350,
            47296,
            47313,
            47144,
            47396,
            47353,
            47260,
            47450,
            47404,
            47637,
            47382,
            47350,
            47335,
            47267
          ],
          [
            47922,
            47262,
            47274,
            47393,
            47151,
            47280,
            47448,
            47240,
            47275,
            47387,
            47126,
            47190,
            47412,
            47361,
            47202,
            47370,
            47408,
            47333,
            49202,
            48823,
            46916,
            47387,
            47192,
            47328,
            47358,
            47211,
            47221,
            47296,
            47204,
            47255,
            47232,
            46899,
            47128,
            47249,
            47306,
            47245,
            47357,
            47263,
            47383,
            49496,
            47129,
            47205,
            47226,
            47096,
            47122,
            47114,
            47232,
            47272,
            47133,
            47350,
            47296,
            47313,
            47144,
            47396,
            47353,
            47260,
            47450,
            47404,
            47637,
            47382,
            47350,
            47335,
            47267
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            39,
            564,
            3168,
            12775,
            25129,
            34388,
            34775,
            25307,
            11840,
            2787,
            356,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            642,
            3522,
            14049,
            27524,
            34419,
            37434,
            29802,
            18533,
            7624,
            1856,
            155,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18
          ],
          [
            1,
            3,
            188,
            1491,
            6329,
            17006,
            32358,
            39138,
            33612,
            18917,
            6272,
            962,
            75,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            150,
            1819,
            9857,
            24288,
            35898,
            42420,
            40533,
            31402,
            17231,
            4768,
            657,
            33,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            356,
            2194,
            7651,
            18552,
            32566,
            38153
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            423,
            3863,
            15489,
            30181,
            37937,
            33550,
            18558,
            6733,
            1232,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            58,
            890,
            8057,
            21188,
            36664,
            41291,
            35487,
            22984,
            9882,
            2184,
            133,
            4,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            86,
            1058,
            6288,
            19585,
            33666,
            38720,
            34297,
            21153,
            9121,
            1643,
            99,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            242,
            2844,
            12082,
            23518,
            33329,
            38504,
            35727,
            26205,
            12029,
            2874,
            233,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            8,
            209,
            1779,
            8457,
            21507,
            33378,
            39106,
            35881,
            24645,
            12629,
            3138,
            484,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            36,
            471,
            3974,
            14241,
            26550,
            35855,
            40866,
            38189,
            27861,
            14858,
            4270,
            681,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            61,
            1021,
            5638,
            16761,
            31977
          ]
        ]
      },
      "call": {
        "duration": 0.26989898800093215,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015388540014100727,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29169726200052537,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703304879993084,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001489083999331342,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3406092500008526,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            89,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035243279999122024,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029737260010733735,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5365577530028531,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            2,
            255,
            0,
            68,
            0,
            255,
            0,
            255,
            255
          ],
          [
            52,
            0,
            5,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            30,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            195,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            16,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            13,
            255,
            69,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            4,
            7,
            0,
            255,
            6,
            255,
            255
          ],
          [
            50,
            0,
            7,
            0,
            5,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            93,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            102,
            0,
            4,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            92,
            255,
            65,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034569469971756916,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002929744998255046,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2963329949998297,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48039,
            47556,
            47671,
            47483,
            47419,
            47422,
            47636,
            47707,
            47879,
            47739,
            47624,
            47489,
            47474,
            47418,
            47643,
            47538,
            49547,
            47690,
            47664,
            47688,
            49772,
            47674,
            47625,
            47524,
            47548,
            47596,
            47765,
            47604,
            47237,
            47489,
            47276,
            47495,
            47309,
            47295,
            47436,
            47534,
            47534,
            47562,
            47811,
            47494,
            47397,
            47498,
            47441,
            47494,
            47780,
            47469,
            47411,
            47450,
            47430,
            47881,
            47754,
            49589,
            47623,
            47728,
            47491,
            47554,
            47849,
            47551,
            47639,
            47535,
            47573,
            47701,
            47832
          ],
          [
            48039,
            47556,
            47671,
            47483,
            47419,
            47422,
            47636,
            47707,
            47879,
            47739,
            47624,
            47489,
            47474,
            47418,
            47643,
            47538,
            49547,
            47690,
            47664,
            47688,
            49772,
            47674,
            47625,
            47524,
            47548,
            47596,
            47765,
            47604,
            47237,
            47489,
            47276,
            47495,
            47309,
            47295,
            47436,
            47534,
            47534,
            47562,
            47811,
            47494,
            47397,
            47498,
            47441,
            47494,
            47780,
            47469,
            47411,
            47450,
            47430,
            47881,
            47754,
            49589,
            47623,
            47728,
            47491,
            47554,
            47849,
            47551,
            47639,
            47535,
            47573,
            47701,
            47832
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            570,
            6609,
            24120,
            40013,
            34542,
            15396,
            3298,
            275,
            9,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            565,
            5768,
            21503,
            38449,
            38265,
            21784,
            5767,
            723,
            35,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            93,
            2058,
            14085,
            32801,
            41270,
            29780,
            9670,
            1685,
            94,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            501,
            5316,
            21645,
            38292,
            41759,
            30705,
            13011,
            2234,
            186,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            30,
            733,
            7270,
            24712,
            40112,
            43664
          ]
        ]
      },
      "call": {
        "duration": 0.1340549779997673,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001658616998611251,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0690513049994479,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48041,
            47214,
            47241,
            47232,
            47498,
            47207,
            47266,
            47018,
            47340,
            47642,
            48937,
            48860,
            47470,
            47272,
            47472,
            46831,
            47245,
            47364,
            47158,
            47327,
            47196,
            47211,
            47210,
            47184,
            47498,
            47351,
            47223,
            47233,
            47311,
            47831,
            47089,
            47133,
            47366,
            47221,
            47111,
            47421,
            47366,
            47202,
            47282,
            47436,
            46931,
            47405,
            47335,
            47463,
            47532,
            47287,
            47278,
            47633,
            47435,
            47367,
            47194,
            47213,
            47192,
            47349,
            47567,
            47326,
            47133,
            47182,
            47050,
            47581,
            47318,
            47378,
            47342
          ],
          [
            48041,
            47214,
            47241,
            47232,
            47498,
            47207,
            47266,
            47018,
            47340,
            47642,
            48937,
            48860,
            47470,
            47272,
            47472,
            46831,
            47245,
            47364,
            47158,
            47327,
            47196,
            47211,
            47210,
            47184,
            47498,
            47351,
            47223,
            47233,
            47311,
            47831,
            47089,
            47133,
            47366,
            47221,
            47111,
            47421,
            47366,
            47202,
            47282,
            47436,
            46931,
            47405,
            47335,
            47463,
            47532,
            47287,
            47278,
            47633,
            47435,
            47367,
            47194,
            47213,
            47192,
            47349,
            47567,
            47326,
            47133,
            47182,
            47050,
            47581,
            47318,
            47378,
            47342
          ],
          [
            48041,
            47214,
            47241,
            47232,
            47498,
            47207,
            47266,
            47018,
            47340,
            47642,
            48937,
            48860,
            47470,
            47272,
            47472,
            46831,
            47245,
            47364,
            47158,
            47327,
            47196,
            47211,
            47210,
            47184,
            47498,
            47351,
            47223,
            47233,
            47311,
            47831,
            47089,
            47133,
            47366,
            47221,
            47111,
            47421,
            47366,
            47202,
            47282,
            47436,
            46931,
            47405,
            47335,
            47463,
            47532,
            47287,
            47278,
            47633,
            47435,
            47367,
            47194,
            47213,
            47192,
            47349,
            47567,
            47326,
            47133,
            47182,
            47050,
            47581,
            47318,
            47378,
            47342
          ],
          [
            48041,
            47214,
            47241,
            47232,
            47498,
            47207,
            47266,
            47018,
            47340,
            47642,
            48937,
            48860,
            47470,
            47272,
            47472,
            46831,
            47245,
            47364,
            47158,
            47327,
            47196,
            47211,
            47210,
            47184,
            47498,
            47351,
            47223,
            47233,
            47311,
            47831,
            47089,
            47133,
            47366,
            47221,
            47111,
            47421,
            47366,
            47202,
            47282,
            47436,
            46931,
            47405,
            47335,
            47463,
            47532,
            47287,
            47278,
            47633,
            47435,
            47367,
            47194,
            47213,
            47192,
            47349,
            47567,
            47326,
            47133,
            47182,
            47050,
            47581,
            47318,
            47378,
            47342
          ],
          [
            48041,
            47214,
            47241,
            47232,
            47498,
            47207,
            47266,
            47018,
            47340,
            47642,
            48937,
            48860,
            47470,
            47272,
            47472,
            46831,
            47245,
            47364,
            47158,
            47327,
            47196,
            47211,
            47210,
            47184,
            47498,
            47351,
            47223,
            47233,
            47311,
            47831,
            47089,
            47133,
            47366,
            47221,
            47111,
            47421,
            47366,
            47202,
            47282,
            47436,
            46931,
            47405,
            47335,
            47463,
            47532,
            47287,
            47278,
            47633,
            47435,
            47367,
            47194,
            47213,
            47192,
            47349,
            47567,
            47326,
            47133,
            47182,
            47050,
            47581,
            47318,
            47378,
            47342
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            93,
            1061,
            6405,
            17986,
            29354,
            33724,
            32914,
            24468,
            14732,
            6534,
            1395,
            144,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            21,
            493,
            3094,
            10743,
            21483,
            32069,
            35733,
            31642,
            20472,
            10423,
            4183,
            794,
            70,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            51,
            706,
            4746,
            15757,
            25767,
            33532,
            38396,
            36778,
            26560,
            13817,
            4643,
            718,
            25,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            163,
            1187,
            5467,
            14860,
            27041,
            35183,
            35364,
            26648,
            13428,
            4334,
            875,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            14387,
            5278,
            888,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            173,
            2342,
            10881,
            23268,
            34686,
            39755,
            32930,
            19411,
            9075,
            1931,
            116,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            360,
            3732,
            13734,
            27643,
            38246,
            36222,
            24701,
            10192,
            2198,
            236,
            1,
            0,
            0,
            0,
            0
          ],
          [
            36,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            55,
            1013,
            6374,
            18904,
            30381,
            38468,
            39396,
            33805,
            24433,
            13047,
            3465,
            347,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            40,
            584,
            3314,
            12698,
            24314,
            34970,
            34447,
            23081,
            10786,
            4299,
            1082,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            75,
            1341,
            5431,
            16950,
            27950,
            36059,
            39115,
            35390,
            24560,
            13403,
            3691,
            506,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            191,
            1500,
            6654,
            16731,
            29268,
            38603,
            40465,
            33201,
            22614,
            12859,
            6256,
            1991,
            160,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2708065680017171,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015092430003278423,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2923102960012329,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.16985362700143,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004868837997491937,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}