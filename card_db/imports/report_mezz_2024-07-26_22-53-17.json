{
  "created": 1722034416.718977,
  "duration": 23.587717294692993,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5058044549987244,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14825773100164952,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013429799982986879,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003853586000332143,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1480388160016446,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001316129000770161,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13244227699760813,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12219644799915841,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001321920000918908,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038273650025075767,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12162307600010536,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001275478000025032,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033701249994919635,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14735326999652898,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012083370020263828,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033799949997046497,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12080105799759622,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012160170008428395,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033837449991551694,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14695864200257347,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011746470008802135,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00337780499830842,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12047644999984186,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012258269998710603,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004432027999428101,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021468480008479673,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011200150001968723,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033666149975033477,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001729448002151912,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011164149982505478,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003333914999529952,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004048499999043997,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034399.0149438,
            "msecs": 14.943838119506836,
            "relativeCreated": 7855.922698974609,
            "thread": 281472844345376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5657
          }
        ]
      },
      "teardown": {
        "duration": 0.0012520480013336055,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00338155499775894,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024406449992966373,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034399.027319,
            "msecs": 27.318954467773438,
            "relativeCreated": 7868.297815322876,
            "thread": 281472844345376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5657
          }
        ]
      },
      "teardown": {
        "duration": 0.0012379769977997057,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002105146999383578,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002702940000745002,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034399.0369148,
            "msecs": 36.914825439453125,
            "relativeCreated": 7877.893686294556,
            "thread": 281472844345376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5657
          }
        ]
      },
      "teardown": {
        "duration": 0.0010648740026226733,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002114266997523373,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034521769994171336,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034399.0464048,
            "msecs": 46.40483856201172,
            "relativeCreated": 7887.383699417114,
            "thread": 281472844345376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5657
          }
        ]
      },
      "teardown": {
        "duration": 0.0011179749999428168,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003363015002832981,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14657283300039126,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011768359981942922,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003359624999575317,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1202429850018234,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011826260015368462,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17948779799917247,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477974000008544,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013080589997116476,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015240489999996498,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1212113470028271,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012789590000465978,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8346384390024468,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            7,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            56,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            14,
            155,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003581540000595851,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002899384002375882,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9016512950001925,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            5,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            205,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            3,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            111,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            20,
            255,
            255,
            255,
            38
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            42,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            103,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            94,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            100,
            0,
            74,
            255
          ],
          [
            255,
            0,
            136,
            0,
            255,
            0,
            155,
            47,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003515717999107437,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028887640000903048,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.31119679900075425,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48571,
            47872,
            47732,
            48220,
            47739,
            50358,
            47766,
            47725,
            47692,
            47707,
            47719,
            47584,
            47689,
            47722,
            47828,
            47704,
            47730,
            47645,
            47594,
            47640,
            47810,
            47530,
            47563,
            47836,
            47732,
            48020,
            47748,
            47830,
            49501,
            47952,
            48134,
            47646,
            50660,
            47727,
            47584,
            47873,
            47680,
            47906,
            47708,
            47655,
            47510,
            47748,
            47679,
            47886,
            47654,
            47905,
            47855,
            47801,
            47756,
            47711,
            47742,
            47733,
            47706,
            47703,
            47674,
            47664,
            47622,
            48145,
            47772,
            49733,
            47756,
            47672,
            47688
          ],
          [
            48571,
            47872,
            47732,
            48220,
            47739,
            50358,
            47766,
            47725,
            47692,
            47707,
            47719,
            47584,
            47689,
            47722,
            47828,
            47704,
            47730,
            47645,
            47594,
            47640,
            47810,
            47530,
            47563,
            47836,
            47732,
            48020,
            47748,
            47830,
            49501,
            47952,
            48134,
            47646,
            50660,
            47727,
            47584,
            47873,
            47680,
            47906,
            47708,
            47655,
            47510,
            47748,
            47679,
            47886,
            47654,
            47905,
            47855,
            47801,
            47756,
            47711,
            47742,
            47733,
            47706,
            47703,
            47674,
            47664,
            47622,
            48145,
            47772,
            49733,
            47756,
            47672,
            47688
          ]
        ],
        "eTX_errcounts": [
          [
            40753,
            27535,
            8473,
            1368,
            101,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            147,
            2689,
            16057,
            34144,
            43497,
            33509,
            15483,
            2210,
            195,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            70,
            950,
            7279,
            25371,
            40751,
            38241,
            20269,
            5690,
            658,
            36,
            12,
            0,
            0
          ],
          [
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            388,
            3741,
            17369,
            35648,
            42166,
            32317,
            14061,
            3420,
            386,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            345,
            4390,
            18648,
            35899,
            42872,
            36365,
            17614,
            3605,
            545,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1349184430000605,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016563669996685348,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06897901100091985,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48167,
            47459,
            47382,
            47620,
            47314,
            47439,
            47710,
            47599,
            47638,
            47477,
            47195,
            47859,
            47504,
            47676,
            47298,
            47334,
            47614,
            47530,
            47411,
            47511,
            47348,
            47538,
            47560,
            47470,
            47720,
            47532,
            47410,
            49299,
            49267,
            47381,
            47052,
            47744,
            47490,
            47302,
            47371,
            47431,
            47328,
            47472,
            47569,
            47741,
            47407,
            47501,
            47662,
            47583,
            47403,
            47551,
            47400,
            47426,
            47295,
            47671,
            47429,
            47477,
            47709,
            47494,
            47467,
            47544,
            47142,
            47687,
            47559,
            47267,
            47841,
            47862,
            47530
          ],
          [
            48167,
            47459,
            47382,
            47620,
            47314,
            47439,
            47710,
            47599,
            47638,
            47477,
            47195,
            47859,
            47504,
            47676,
            47298,
            47334,
            47614,
            47530,
            47411,
            47511,
            47348,
            47538,
            47560,
            47470,
            47720,
            47532,
            47410,
            49299,
            49267,
            47381,
            47052,
            47744,
            47490,
            47302,
            47371,
            47431,
            47328,
            47472,
            47569,
            47741,
            47407,
            47501,
            47662,
            47583,
            47403,
            47551,
            47400,
            47426,
            47295,
            47671,
            47429,
            47477,
            47709,
            47494,
            47467,
            47544,
            47142,
            47687,
            47559,
            47267,
            47841,
            47862,
            47530
          ],
          [
            48167,
            47459,
            47382,
            47620,
            47314,
            47439,
            47710,
            47599,
            47638,
            47477,
            47195,
            47859,
            47504,
            47676,
            47298,
            47334,
            47614,
            47530,
            47411,
            47511,
            47348,
            47538,
            47560,
            47470,
            47720,
            47532,
            47410,
            49299,
            49267,
            47381,
            47052,
            47744,
            47490,
            47302,
            47371,
            47431,
            47328,
            47472,
            47569,
            47741,
            47407,
            47501,
            47662,
            47583,
            47403,
            47551,
            47400,
            47426,
            47295,
            47671,
            47429,
            47477,
            47709,
            47494,
            47467,
            47544,
            47142,
            47687,
            47559,
            47267,
            47841,
            47862,
            47530
          ],
          [
            48167,
            47459,
            47382,
            47620,
            47314,
            47439,
            47710,
            47599,
            47638,
            47477,
            47195,
            47859,
            47504,
            47676,
            47298,
            47334,
            47614,
            47530,
            47411,
            47511,
            47348,
            47538,
            47560,
            47470,
            47720,
            47532,
            47410,
            49299,
            49267,
            47381,
            47052,
            47744,
            47490,
            47302,
            47371,
            47431,
            47328,
            47472,
            47569,
            47741,
            47407,
            47501,
            47662,
            47583,
            47403,
            47551,
            47400,
            47426,
            47295,
            47671,
            47429,
            47477,
            47709,
            47494,
            47467,
            47544,
            47142,
            47687,
            47559,
            47267,
            47841,
            47862,
            47530
          ],
          [
            48167,
            47459,
            47382,
            47620,
            47314,
            47439,
            47710,
            47599,
            47638,
            47477,
            47195,
            47859,
            47504,
            47676,
            47298,
            47334,
            47614,
            47530,
            47411,
            47511,
            47348,
            47538,
            47560,
            47470,
            47720,
            47532,
            47410,
            49299,
            49267,
            47381,
            47052,
            47744,
            47490,
            47302,
            47371,
            47431,
            47328,
            47472,
            47569,
            47741,
            47407,
            47501,
            47662,
            47583,
            47403,
            47551,
            47400,
            47426,
            47295,
            47671,
            47429,
            47477,
            47709,
            47494,
            47467,
            47544,
            47142,
            47687,
            47559,
            47267,
            47841,
            47862,
            47530
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            517,
            3019,
            9729,
            21016,
            32462,
            37437,
            32167,
            20064,
            7903,
            1497,
            153,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            43,
            753,
            3437,
            10685,
            23486,
            32689,
            35439,
            30268,
            23928,
            14870,
            6339,
            1349,
            150,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            65,
            600,
            2941,
            10248,
            21980,
            33289,
            37524,
            34828,
            26758,
            14756,
            5553,
            1142,
            127,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            106,
            1340,
            4702,
            11185,
            21512,
            33073,
            41569,
            40105,
            29211,
            18921,
            6508,
            1147,
            79,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            123,
            1107,
            4955,
            13174,
            23731
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            168,
            1615,
            6524,
            16852,
            29565,
            35945,
            32862,
            23992,
            12084,
            3899,
            680,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            122,
            1200,
            6480,
            16963,
            31557,
            34831,
            31385,
            24750,
            14129,
            3691,
            519,
            38,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            346,
            2372,
            8685,
            18372,
            31584,
            38040,
            35430,
            25682,
            12782,
            3483,
            282,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            66,
            570,
            2623,
            6542,
            15582,
            29393,
            37952,
            36279,
            28239,
            16815,
            6517,
            1442,
            113,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            9,
            170,
            957,
            3655,
            8811,
            19933,
            31804,
            38571,
            37175,
            32030,
            22882,
            10199,
            2385,
            420,
            15,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            177,
            1453,
            4806,
            9907,
            17859,
            30132,
            40807,
            41886,
            35710,
            24577,
            11846,
            4011,
            953,
            130,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            66,
            726,
            3213,
            8535
          ]
        ]
      },
      "call": {
        "duration": 0.2738145240000449,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6bf7ef30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6bf7ef30> = array([22, 14, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6c22a910>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48167, 47459, 47382, 47620, 47314, 47439, ...], [48167, 47459, 47382, 47620, 47314, 47439, ...], [..., 0, ...], [0, 0, 1, 65, 600, 2941, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 9, 170, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6bf7ef30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6bf7ef30> = array([22, 14, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016171860006579664,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2925581929994223,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1694021750008687,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014691329997731373,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3026806599991687,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            5,
            29,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            198,
            55,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003528649001964368,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002899955001339549,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5343522530019982,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            184,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            177,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            97,
            255,
            131,
            255,
            139,
            0,
            0,
            252,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            85,
            1,
            255,
            23,
            255,
            13
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            52,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            3,
            255,
            132,
            255,
            185,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            226,
            255,
            185,
            255,
            255,
            6,
            0,
            148,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            1,
            255,
            108,
            255,
            129
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035219890014559496,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002898904000176117,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956584629973804,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48510,
            47605,
            47476,
            48041,
            49662,
            47753,
            47914,
            47733,
            49930,
            47693,
            47889,
            47803,
            47569,
            47757,
            47968,
            47759,
            47701,
            47750,
            47775,
            47636,
            47732,
            47760,
            47727,
            47722,
            47825,
            47775,
            47743,
            47810,
            47543,
            47710,
            47810,
            47711,
            47640,
            49414,
            47784,
            48089,
            47679,
            47820,
            47735,
            47701,
            47874,
            47665,
            47762,
            47695,
            47713,
            47621,
            47658,
            47798,
            47641,
            47643,
            47847,
            47440,
            47438,
            47656,
            47837,
            47744,
            47769,
            47881,
            47663,
            47711,
            47724,
            47678,
            48086
          ],
          [
            48510,
            47605,
            47476,
            48041,
            49662,
            47753,
            47914,
            47733,
            49930,
            47693,
            47889,
            47803,
            47569,
            47757,
            47968,
            47759,
            47701,
            47750,
            47775,
            47636,
            47732,
            47760,
            47727,
            47722,
            47825,
            47775,
            47743,
            47810,
            47543,
            47710,
            47810,
            47711,
            47640,
            49414,
            47784,
            48089,
            47679,
            47820,
            47735,
            47701,
            47874,
            47665,
            47762,
            47695,
            47713,
            47621,
            47658,
            47798,
            47641,
            47643,
            47847,
            47440,
            47438,
            47656,
            47837,
            47744,
            47769,
            47881,
            47663,
            47711,
            47724,
            47678,
            48086
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            352,
            3754,
            17113,
            36121,
            36823,
            19325,
            4756,
            457,
            53,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            94,
            2844,
            16144,
            35440,
            40761,
            26696,
            8151,
            1043,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            966,
            8452,
            28487,
            41111,
            39340,
            19837,
            5150,
            454,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            151,
            2180,
            13282,
            30897,
            42469,
            39333,
            20636,
            5536,
            681,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1345428050008195,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016196769975067582,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0688368970004376,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47913,
            47582,
            47750,
            47411,
            49312,
            47551,
            47428,
            47367,
            47304,
            47509,
            47570,
            47381,
            47460,
            47408,
            47453,
            47363,
            47532,
            47438,
            47410,
            47323,
            47494,
            47453,
            47778,
            47467,
            47047,
            47300,
            47441,
            47347,
            47312,
            47326,
            47517,
            47177,
            47574,
            47435,
            47429,
            47399,
            47456,
            47572,
            47626,
            48948,
            49741,
            47524,
            47371,
            47416,
            47302,
            47392,
            47471,
            47501,
            47310,
            47140,
            47423,
            47433,
            47502,
            47359,
            47482,
            47547,
            47510,
            47845,
            47361,
            47520,
            47558,
            47457,
            47499
          ],
          [
            47913,
            47582,
            47750,
            47411,
            49312,
            47551,
            47428,
            47367,
            47304,
            47509,
            47570,
            47381,
            47460,
            47408,
            47453,
            47363,
            47532,
            47438,
            47410,
            47323,
            47494,
            47453,
            47778,
            47467,
            47047,
            47300,
            47441,
            47347,
            47312,
            47326,
            47517,
            47177,
            47574,
            47435,
            47429,
            47399,
            47456,
            47572,
            47626,
            48948,
            49741,
            47524,
            47371,
            47416,
            47302,
            47392,
            47471,
            47501,
            47310,
            47140,
            47423,
            47433,
            47502,
            47359,
            47482,
            47547,
            47510,
            47845,
            47361,
            47520,
            47558,
            47457,
            47499
          ],
          [
            47913,
            47582,
            47750,
            47411,
            49312,
            47551,
            47428,
            47367,
            47304,
            47509,
            47570,
            47381,
            47460,
            47408,
            47453,
            47363,
            47532,
            47438,
            47410,
            47323,
            47494,
            47453,
            47778,
            47467,
            47047,
            47300,
            47441,
            47347,
            47312,
            47326,
            47517,
            47177,
            47574,
            47435,
            47429,
            47399,
            47456,
            47572,
            47626,
            48948,
            49741,
            47524,
            47371,
            47416,
            47302,
            47392,
            47471,
            47501,
            47310,
            47140,
            47423,
            47433,
            47502,
            47359,
            47482,
            47547,
            47510,
            47845,
            47361,
            47520,
            47558,
            47457,
            47499
          ],
          [
            47913,
            47582,
            47750,
            47411,
            49312,
            47551,
            47428,
            47367,
            47304,
            47509,
            47570,
            47381,
            47460,
            47408,
            47453,
            47363,
            47532,
            47438,
            47410,
            47323,
            47494,
            47453,
            47778,
            47467,
            47047,
            47300,
            47441,
            47347,
            47312,
            47326,
            47517,
            47177,
            47574,
            47435,
            47429,
            47399,
            47456,
            47572,
            47626,
            48948,
            49741,
            47524,
            47371,
            47416,
            47302,
            47392,
            47471,
            47501,
            47310,
            47140,
            47423,
            47433,
            47502,
            47359,
            47482,
            47547,
            47510,
            47845,
            47361,
            47520,
            47558,
            47457,
            47499
          ],
          [
            47913,
            47582,
            47750,
            47411,
            49312,
            47551,
            47428,
            47367,
            47304,
            47509,
            47570,
            47381,
            47460,
            47408,
            47453,
            47363,
            47532,
            47438,
            47410,
            47323,
            47494,
            47453,
            47778,
            47467,
            47047,
            47300,
            47441,
            47347,
            47312,
            47326,
            47517,
            47177,
            47574,
            47435,
            47429,
            47399,
            47456,
            47572,
            47626,
            48948,
            49741,
            47524,
            47371,
            47416,
            47302,
            47392,
            47471,
            47501,
            47310,
            47140,
            47423,
            47433,
            47502,
            47359,
            47482,
            47547,
            47510,
            47845,
            47361,
            47520,
            47558,
            47457,
            47499
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            276,
            2471,
            11618,
            28285,
            38493,
            37321,
            25580,
            11634,
            2712,
            416,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            301,
            2822,
            14939,
            31998,
            42719,
            41132,
            29785,
            15383,
            4404,
            795,
            84,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            1,
            142,
            1640,
            7876,
            20063,
            37152,
            40342,
            34249,
            21566,
            9595,
            2278,
            202,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            335,
            2270,
            9242,
            22477,
            36618,
            44436,
            41708,
            28048,
            12143,
            2626,
            351,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            39,
            544,
            3086,
            9065,
            20769,
            35302,
            38610
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            1009,
            6971,
            22125,
            34573,
            38467,
            31670,
            15026,
            3334,
            261,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            426,
            5579,
            18068,
            35322,
            41542,
            33684,
            18557,
            6003,
            1005,
            58,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            225,
            1661,
            10196,
            27125,
            39125,
            41763,
            33331,
            17032,
            5390,
            535,
            37,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            200,
            2244,
            9447,
            22282,
            34596,
            41424,
            35167,
            22000,
            9003,
            2143,
            157,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            18,
            297,
            2223,
            11182,
            26447,
            38473,
            39478,
            34038,
            27156,
            16287,
            5464,
            1452,
            100,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            69,
            769,
            3724,
            12180,
            25550,
            36955,
            43337,
            40900,
            29182,
            14659,
            4466,
            577,
            54,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            184,
            1780,
            7230,
            17167,
            30639
          ]
        ]
      },
      "call": {
        "duration": 0.2718610310002987,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015342639999289531,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29143652799757547,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169304191997071,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001498353998613311,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3492119090005872,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            128,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034634270014066715,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029229049978312105,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.535954317998403,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            3,
            255,
            7,
            255,
            2,
            38,
            0,
            255,
            0,
            255,
            255
          ],
          [
            82,
            0,
            23,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            46,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            231,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            2,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            32,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            4,
            0,
            255,
            2,
            255,
            255
          ],
          [
            98,
            0,
            2,
            0,
            7,
            0,
            255,
            251,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            114,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            42,
            0,
            5,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            104,
            255,
            62,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034819080028682947,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028746339994540904,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2963298470021982,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48393,
            51893,
            47619,
            47606,
            47645,
            47363,
            47681,
            47712,
            47762,
            47531,
            47721,
            47470,
            47570,
            47664,
            47525,
            47575,
            47561,
            47479,
            47664,
            47657,
            47541,
            47448,
            47671,
            47457,
            47531,
            47639,
            47808,
            47818,
            49381,
            47695,
            48121,
            47688,
            47725,
            47530,
            47521,
            47609,
            47570,
            47592,
            47420,
            47471,
            47485,
            47610,
            47388,
            47380,
            47545,
            47634,
            47633,
            47722,
            47701,
            47906,
            47872,
            47603,
            47592,
            47646,
            47714,
            47668,
            47619,
            47585,
            47442,
            47948,
            47695,
            48078,
            47501
          ],
          [
            48393,
            51893,
            47619,
            47606,
            47645,
            47363,
            47681,
            47712,
            47762,
            47531,
            47721,
            47470,
            47570,
            47664,
            47525,
            47575,
            47561,
            47479,
            47664,
            47657,
            47541,
            47448,
            47671,
            47457,
            47531,
            47639,
            47808,
            47818,
            49381,
            47695,
            48121,
            47688,
            47725,
            47530,
            47521,
            47609,
            47570,
            47592,
            47420,
            47471,
            47485,
            47610,
            47388,
            47380,
            47545,
            47634,
            47633,
            47722,
            47701,
            47906,
            47872,
            47603,
            47592,
            47646,
            47714,
            47668,
            47619,
            47585,
            47442,
            47948,
            47695,
            48078,
            47501
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            626,
            6805,
            24313,
            39542,
            34504,
            15033,
            3127,
            305,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            512,
            6156,
            22141,
            38299,
            38376,
            20949,
            5110,
            617,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            0,
            0,
            2,
            168,
            2199,
            14111,
            33168,
            41403,
            28903,
            9995,
            1371,
            156,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            581,
            6294,
            22084,
            38232,
            42119,
            30536,
            12534,
            1936,
            360,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            50,
            690,
            7370,
            25730,
            41143,
            43276
          ]
        ]
      },
      "call": {
        "duration": 0.134204457001033,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001634167001611786,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06924835700192489,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48365,
            47347,
            47337,
            47481,
            47373,
            47428,
            47432,
            47711,
            47375,
            47475,
            47336,
            47766,
            49804,
            47320,
            47324,
            47341,
            47203,
            47444,
            47278,
            47377,
            47026,
            47371,
            47449,
            47363,
            47461,
            47422,
            47423,
            47654,
            49112,
            47487,
            47467,
            47370,
            47359,
            47364,
            47537,
            47613,
            47472,
            47492,
            47423,
            47394,
            47438,
            47521,
            47393,
            47417,
            47288,
            48560,
            47689,
            47371,
            47212,
            47355,
            47370,
            47449,
            47562,
            47517,
            47395,
            47530,
            47443,
            47432,
            47438,
            47441,
            47578,
            47514,
            47730
          ],
          [
            48365,
            47347,
            47337,
            47481,
            47373,
            47428,
            47432,
            47711,
            47375,
            47475,
            47336,
            47766,
            49804,
            47320,
            47324,
            47341,
            47203,
            47444,
            47278,
            47377,
            47026,
            47371,
            47449,
            47363,
            47461,
            47422,
            47423,
            47654,
            49112,
            47487,
            47467,
            47370,
            47359,
            47364,
            47537,
            47613,
            47472,
            47492,
            47423,
            47394,
            47438,
            47521,
            47393,
            47417,
            47288,
            48560,
            47689,
            47371,
            47212,
            47355,
            47370,
            47449,
            47562,
            47517,
            47395,
            47530,
            47443,
            47432,
            47438,
            47441,
            47578,
            47514,
            47730
          ],
          [
            48365,
            47347,
            47337,
            47481,
            47373,
            47428,
            47432,
            47711,
            47375,
            47475,
            47336,
            47766,
            49804,
            47320,
            47324,
            47341,
            47203,
            47444,
            47278,
            47377,
            47026,
            47371,
            47449,
            47363,
            47461,
            47422,
            47423,
            47654,
            49112,
            47487,
            47467,
            47370,
            47359,
            47364,
            47537,
            47613,
            47472,
            47492,
            47423,
            47394,
            47438,
            47521,
            47393,
            47417,
            47288,
            48560,
            47689,
            47371,
            47212,
            47355,
            47370,
            47449,
            47562,
            47517,
            47395,
            47530,
            47443,
            47432,
            47438,
            47441,
            47578,
            47514,
            47730
          ],
          [
            48365,
            47347,
            47337,
            47481,
            47373,
            47428,
            47432,
            47711,
            47375,
            47475,
            47336,
            47766,
            49804,
            47320,
            47324,
            47341,
            47203,
            47444,
            47278,
            47377,
            47026,
            47371,
            47449,
            47363,
            47461,
            47422,
            47423,
            47654,
            49112,
            47487,
            47467,
            47370,
            47359,
            47364,
            47537,
            47613,
            47472,
            47492,
            47423,
            47394,
            47438,
            47521,
            47393,
            47417,
            47288,
            48560,
            47689,
            47371,
            47212,
            47355,
            47370,
            47449,
            47562,
            47517,
            47395,
            47530,
            47443,
            47432,
            47438,
            47441,
            47578,
            47514,
            47730
          ],
          [
            48365,
            47347,
            47337,
            47481,
            47373,
            47428,
            47432,
            47711,
            47375,
            47475,
            47336,
            47766,
            49804,
            47320,
            47324,
            47341,
            47203,
            47444,
            47278,
            47377,
            47026,
            47371,
            47449,
            47363,
            47461,
            47422,
            47423,
            47654,
            49112,
            47487,
            47467,
            47370,
            47359,
            47364,
            47537,
            47613,
            47472,
            47492,
            47423,
            47394,
            47438,
            47521,
            47393,
            47417,
            47288,
            48560,
            47689,
            47371,
            47212,
            47355,
            47370,
            47449,
            47562,
            47517,
            47395,
            47530,
            47443,
            47432,
            47438,
            47441,
            47578,
            47514,
            47730
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            52,
            1026,
            6269,
            19238,
            33743,
            39793,
            35591,
            24097,
            12035,
            3347,
            540,
            53,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            275,
            1902,
            9803,
            24381,
            37383,
            41319,
            36048,
            21284,
            7949,
            1924,
            261,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            193,
            1374,
            4988,
            12963,
            27256,
            37502,
            43420,
            38332,
            22742,
            8707,
            1931,
            200,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            398,
            2428,
            6669,
            15474,
            30144,
            39963,
            37272,
            27114,
            13542,
            4188,
            751,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            55
          ],
          [
            11289,
            3082,
            282,
            29,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            130,
            1624,
            9204,
            20355,
            32988,
            38873,
            30884,
            15540,
            5412,
            857,
            48,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            84,
            948,
            5770,
            15985,
            28392,
            36171,
            33339,
            21830,
            8689,
            1626,
            141,
            2,
            0,
            0,
            0,
            0
          ],
          [
            55,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            126,
            1152,
            6525,
            16943,
            27734,
            38824,
            40547,
            31959,
            20449,
            9784,
            3012,
            357,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            122,
            933,
            4665,
            15163,
            27431,
            35063,
            32449,
            22618,
            11319,
            3720,
            712,
            48,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            156,
            1566,
            6222,
            16056,
            27030,
            36823,
            40835,
            37618,
            25206,
            14078,
            3952,
            582,
            28,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            520,
            2750,
            8057,
            17971,
            29603,
            37458,
            36060,
            31393,
            22742,
            13078,
            5240,
            1221,
            72,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2719476719976228,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015165040022111498,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918990189973556,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170321724999667,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045741, 10011435), (411113, 411113), (40048890, 10012223))\nassert ((40045741 > 0 and 10011435 == 0\n  +10011435\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff6c22a280>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff6c079100>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff6c330490>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045741, 10011435), (411113, 411113), (40048890, 10012223))\nE       assert ((40045741 > 0 and 10011435 == 0\nE         +10011435\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004953350999130635,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}