{
  "created": 1722034054.4331028,
  "duration": 23.243740797042847,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5047127910002018,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14820441899792058,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012918590000481345,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003800664999289438,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14777577000131714,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012693890021182597,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13252705999911996,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12218339800165268,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012539080016722437,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037891739993938245,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12150721399666509,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001243258000613423,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033535049988131505,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14723221799795283,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011852060015371535,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033514050010126084,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12043726900083129,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011521460000949446,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033541049997438677,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1468916800004081,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011608460008574184,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033501449979667086,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12038302899964037,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011569159978535026,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004423389000294264,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002074005999020301,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011374759997124784,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033430040020903107,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017268080009671394,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001078313998732483,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033246139973925892,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004017120001662988,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034037.016354,
            "msecs": 16.354084014892578,
            "relativeCreated": 7798.2823848724365,
            "thread": 281473889738784,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5486
          }
        ]
      },
      "teardown": {
        "duration": 0.0011984370030404534,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003366705001099035,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002354092001041863,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034037.0286021,
            "msecs": 28.602123260498047,
            "relativeCreated": 7810.530424118042,
            "thread": 281473889738784,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5486
          }
        ]
      },
      "teardown": {
        "duration": 0.001183017000585096,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002096596002957085,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027182109988643788,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034037.0380704,
            "msecs": 38.0704402923584,
            "relativeCreated": 7819.998741149902,
            "thread": 281473889738784,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5486
          }
        ]
      },
      "teardown": {
        "duration": 0.0010520630021346733,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002060655999230221,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034105060003639665,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034037.0474982,
            "msecs": 47.498226165771484,
            "relativeCreated": 7829.426527023315,
            "thread": 281473889738784,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5486
          }
        ]
      },
      "teardown": {
        "duration": 0.0010920550012087915,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033379350024915766,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14676186699944083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012149069989391137,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003349394999531796,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12015523299851338,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011877569995704107,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17890266500035068,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1475866760010831,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012710090013570152,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0151285280007869,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12113409499943373,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012594580002769362,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8373749499987753,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            14,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            93,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            9,
            107,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.003589159998227842,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028740939997078385,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9071228169996175,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            12,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            11,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            15
          ],
          [
            228,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            35,
            255,
            255,
            255,
            6
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            62,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            156,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            0,
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            110,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            233,
            255,
            255,
            255,
            255,
            0,
            0,
            119,
            0,
            95,
            255
          ],
          [
            255,
            0,
            189,
            0,
            255,
            0,
            136,
            37,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003479807997791795,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002844722999725491,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30254778699963936,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48100,
            47749,
            47412,
            47382,
            47401,
            47648,
            47470,
            47455,
            47517,
            47698,
            47382,
            47412,
            47494,
            47706,
            47364,
            47486,
            47445,
            47609,
            47386,
            47336,
            47398,
            49098,
            47491,
            47784,
            47348,
            48216,
            47340,
            47496,
            47436,
            47222,
            47174,
            47234,
            47214,
            47737,
            47487,
            47392,
            47423,
            47588,
            47471,
            47241,
            47258,
            47514,
            47383,
            47340,
            47565,
            47731,
            47447,
            47440,
            47439,
            47688,
            47404,
            47388,
            47436,
            47671,
            47369,
            47518,
            49208,
            47548,
            47754,
            47483,
            49511,
            47647,
            47475
          ],
          [
            48100,
            47749,
            47412,
            47382,
            47401,
            47648,
            47470,
            47455,
            47517,
            47698,
            47382,
            47412,
            47494,
            47706,
            47364,
            47486,
            47445,
            47609,
            47386,
            47336,
            47398,
            49098,
            47491,
            47784,
            47348,
            48216,
            47340,
            47496,
            47436,
            47222,
            47174,
            47234,
            47214,
            47737,
            47487,
            47392,
            47423,
            47588,
            47471,
            47241,
            47258,
            47514,
            47383,
            47340,
            47565,
            47731,
            47447,
            47440,
            47439,
            47688,
            47404,
            47388,
            47436,
            47671,
            47369,
            47518,
            49208,
            47548,
            47754,
            47483,
            49511,
            47647,
            47475
          ]
        ],
        "eTX_errcounts": [
          [
            40238,
            26324,
            7913,
            1318,
            68,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            185,
            3337,
            16677,
            34663,
            42785,
            31150,
            14081,
            1884,
            227,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            917,
            8113,
            26618,
            40958,
            37830,
            20820,
            5212,
            816,
            9,
            0,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            334,
            4091,
            17878,
            37364,
            41866,
            31899,
            12911,
            2909,
            276,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            492,
            4542,
            19191,
            36266,
            42978,
            35291,
            16849,
            3359,
            333,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13378894699781085,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016040160007833038,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0688992089999374,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48260,
            47469,
            47326,
            47277,
            47247,
            47399,
            47471,
            47155,
            47232,
            47338,
            47137,
            47293,
            47159,
            47230,
            47157,
            46877,
            47108,
            47377,
            47119,
            47292,
            47261,
            47188,
            47171,
            46954,
            48583,
            49101,
            47246,
            47181,
            47174,
            47180,
            47350,
            46912,
            47071,
            47183,
            47275,
            47256,
            47046,
            47222,
            47116,
            47314,
            46781,
            47387,
            47130,
            47329,
            47101,
            47666,
            49382,
            47159,
            47034,
            47161,
            47121,
            47220,
            47160,
            47097,
            47098,
            47303,
            47323,
            47161,
            47136,
            47340,
            47399,
            47325,
            47180
          ],
          [
            48260,
            47469,
            47326,
            47277,
            47247,
            47399,
            47471,
            47155,
            47232,
            47338,
            47137,
            47293,
            47159,
            47230,
            47157,
            46877,
            47108,
            47377,
            47119,
            47292,
            47261,
            47188,
            47171,
            46954,
            48583,
            49101,
            47246,
            47181,
            47174,
            47180,
            47350,
            46912,
            47071,
            47183,
            47275,
            47256,
            47046,
            47222,
            47116,
            47314,
            46781,
            47387,
            47130,
            47329,
            47101,
            47666,
            49382,
            47159,
            47034,
            47161,
            47121,
            47220,
            47160,
            47097,
            47098,
            47303,
            47323,
            47161,
            47136,
            47340,
            47399,
            47325,
            47180
          ],
          [
            48260,
            47469,
            47326,
            47277,
            47247,
            47399,
            47471,
            47155,
            47232,
            47338,
            47137,
            47293,
            47159,
            47230,
            47157,
            46877,
            47108,
            47377,
            47119,
            47292,
            47261,
            47188,
            47171,
            46954,
            48583,
            49101,
            47246,
            47181,
            47174,
            47180,
            47350,
            46912,
            47071,
            47183,
            47275,
            47256,
            47046,
            47222,
            47116,
            47314,
            46781,
            47387,
            47130,
            47329,
            47101,
            47666,
            49382,
            47159,
            47034,
            47161,
            47121,
            47220,
            47160,
            47097,
            47098,
            47303,
            47323,
            47161,
            47136,
            47340,
            47399,
            47325,
            47180
          ],
          [
            48260,
            47469,
            47326,
            47277,
            47247,
            47399,
            47471,
            47155,
            47232,
            47338,
            47137,
            47293,
            47159,
            47230,
            47157,
            46877,
            47108,
            47377,
            47119,
            47292,
            47261,
            47188,
            47171,
            46954,
            48583,
            49101,
            47246,
            47181,
            47174,
            47180,
            47350,
            46912,
            47071,
            47183,
            47275,
            47256,
            47046,
            47222,
            47116,
            47314,
            46781,
            47387,
            47130,
            47329,
            47101,
            47666,
            49382,
            47159,
            47034,
            47161,
            47121,
            47220,
            47160,
            47097,
            47098,
            47303,
            47323,
            47161,
            47136,
            47340,
            47399,
            47325,
            47180
          ],
          [
            48260,
            47469,
            47326,
            47277,
            47247,
            47399,
            47471,
            47155,
            47232,
            47338,
            47137,
            47293,
            47159,
            47230,
            47157,
            46877,
            47108,
            47377,
            47119,
            47292,
            47261,
            47188,
            47171,
            46954,
            48583,
            49101,
            47246,
            47181,
            47174,
            47180,
            47350,
            46912,
            47071,
            47183,
            47275,
            47256,
            47046,
            47222,
            47116,
            47314,
            46781,
            47387,
            47130,
            47329,
            47101,
            47666,
            49382,
            47159,
            47034,
            47161,
            47121,
            47220,
            47160,
            47097,
            47098,
            47303,
            47323,
            47161,
            47136,
            47340,
            47399,
            47325,
            47180
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            546,
            2846,
            10058,
            22589,
            33409,
            36164,
            31219,
            20778,
            9004,
            2329,
            442,
            41,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            48,
            899,
            4721,
            12678,
            24064,
            32463,
            35546,
            31175,
            22951,
            12470,
            4637,
            957,
            125,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            10,
            186,
            1346,
            4082,
            10356,
            22259,
            36302,
            39253,
            34919,
            25444,
            15706,
            8688,
            3186,
            555,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            209,
            1535,
            5627,
            15208,
            27464,
            32206,
            34776,
            35963,
            27802,
            16380,
            6507,
            1582,
            141,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            79,
            720,
            2501,
            5905,
            13499,
            27046
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            117,
            1087,
            5784,
            16705,
            31105,
            35659,
            31817,
            23048,
            12419,
            5093,
            1109,
            57,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            205,
            1377,
            6588,
            15668,
            31060,
            35548,
            32738,
            23205,
            11782,
            3460,
            440,
            30,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            44,
            358,
            2424,
            8796,
            19761,
            33575,
            37976,
            34203,
            25783,
            15874,
            6705,
            1524,
            198,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            43,
            729,
            3194,
            8186,
            16893,
            27742,
            36255,
            34462,
            26972,
            15652,
            6781,
            1678,
            135,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            13,
            226,
            1372,
            3698,
            7967,
            18697,
            33661,
            39436,
            36564,
            30407,
            22408,
            13825,
            7882,
            2721,
            375,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            114,
            1261,
            4969,
            13055,
            25225,
            32982,
            35891,
            37535,
            32496,
            24180,
            14804,
            7231,
            1704,
            154,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            138,
            1002,
            3392,
            8288
          ]
        ]
      },
      "call": {
        "duration": 0.27107687299940153,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffaa7469f0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffaa7469f0> = array([21, 12, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffaa7215e0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48260, 47469, 47326, 47277, 47247, 47399, ...], [48260, 47469, 47326, 47277, 47247, 47399, ...], [... ...], [0, 1, 10, 186, 1346, 4082, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 13, 226, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffaa7469f0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffaa7469f0> = array([21, 12, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016305669996654615,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2924027000008209,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1694454349999432,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014505630024359562,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.293313461002981,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            255,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            193,
            52,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            30,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003486588000669144,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002891885000281036,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5325769029986986,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            8,
            255,
            252,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            70,
            255,
            106,
            255,
            106,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            245,
            0,
            142,
            1,
            255,
            35,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            48,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            3,
            255,
            213,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            235,
            255,
            205,
            255,
            255,
            24,
            0,
            240,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            137,
            255,
            123
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003465887002676027,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028580440011864994,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.295497928000259,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47720,
            47133,
            47173,
            47193,
            47187,
            47234,
            47332,
            47220,
            47174,
            47598,
            47501,
            47480,
            47435,
            47453,
            47444,
            47362,
            47468,
            47379,
            47401,
            47080,
            47182,
            47396,
            47446,
            47547,
            47451,
            47464,
            47873,
            47472,
            47530,
            47386,
            47689,
            47367,
            47419,
            47430,
            47546,
            47489,
            47357,
            47380,
            47294,
            47377,
            47515,
            47447,
            47301,
            47433,
            47384,
            47542,
            47560,
            47606,
            47468,
            47419,
            47468,
            47449,
            47436,
            47467,
            47434,
            47370,
            47509,
            47319,
            47449,
            47465,
            47504,
            48784,
            47418
          ],
          [
            47720,
            47133,
            47173,
            47193,
            47187,
            47234,
            47332,
            47220,
            47174,
            47598,
            47501,
            47480,
            47435,
            47453,
            47444,
            47362,
            47468,
            47379,
            47401,
            47080,
            47182,
            47396,
            47446,
            47547,
            47451,
            47464,
            47873,
            47472,
            47530,
            47386,
            47689,
            47367,
            47419,
            47430,
            47546,
            47489,
            47357,
            47380,
            47294,
            47377,
            47515,
            47447,
            47301,
            47433,
            47384,
            47542,
            47560,
            47606,
            47468,
            47419,
            47468,
            47449,
            47436,
            47467,
            47434,
            47370,
            47509,
            47319,
            47449,
            47465,
            47504,
            48784,
            47418
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            214,
            3436,
            16927,
            36063,
            36998,
            19248,
            4765,
            411,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            181,
            2732,
            16099,
            34782,
            40022,
            25728,
            8098,
            1096,
            125,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            718,
            7885,
            28126,
            41668,
            39153,
            19287,
            4775,
            548,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            144,
            2241,
            13626,
            30983,
            42771,
            38828,
            20923,
            5565,
            645,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13369768600023235,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015803150017745793,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06853704000241123,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48109,
            46836,
            47279,
            47301,
            47192,
            47203,
            47242,
            47146,
            47090,
            46844,
            47297,
            47222,
            47361,
            47234,
            47223,
            47199,
            47170,
            47241,
            48608,
            48947,
            47211,
            47167,
            47203,
            47143,
            47144,
            47274,
            47346,
            47228,
            47179,
            47184,
            47478,
            46927,
            46913,
            47306,
            47160,
            47328,
            47320,
            47093,
            47201,
            47564,
            49489,
            47221,
            47216,
            47218,
            47175,
            47213,
            47206,
            47125,
            47183,
            47158,
            46977,
            47188,
            47292,
            47196,
            47221,
            47435,
            47538,
            47386,
            47159,
            46953,
            47502,
            49346,
            47065
          ],
          [
            48109,
            46836,
            47279,
            47301,
            47192,
            47203,
            47242,
            47146,
            47090,
            46844,
            47297,
            47222,
            47361,
            47234,
            47223,
            47199,
            47170,
            47241,
            48608,
            48947,
            47211,
            47167,
            47203,
            47143,
            47144,
            47274,
            47346,
            47228,
            47179,
            47184,
            47478,
            46927,
            46913,
            47306,
            47160,
            47328,
            47320,
            47093,
            47201,
            47564,
            49489,
            47221,
            47216,
            47218,
            47175,
            47213,
            47206,
            47125,
            47183,
            47158,
            46977,
            47188,
            47292,
            47196,
            47221,
            47435,
            47538,
            47386,
            47159,
            46953,
            47502,
            49346,
            47065
          ],
          [
            48109,
            46836,
            47279,
            47301,
            47192,
            47203,
            47242,
            47146,
            47090,
            46844,
            47297,
            47222,
            47361,
            47234,
            47223,
            47199,
            47170,
            47241,
            48608,
            48947,
            47211,
            47167,
            47203,
            47143,
            47144,
            47274,
            47346,
            47228,
            47179,
            47184,
            47478,
            46927,
            46913,
            47306,
            47160,
            47328,
            47320,
            47093,
            47201,
            47564,
            49489,
            47221,
            47216,
            47218,
            47175,
            47213,
            47206,
            47125,
            47183,
            47158,
            46977,
            47188,
            47292,
            47196,
            47221,
            47435,
            47538,
            47386,
            47159,
            46953,
            47502,
            49346,
            47065
          ],
          [
            48109,
            46836,
            47279,
            47301,
            47192,
            47203,
            47242,
            47146,
            47090,
            46844,
            47297,
            47222,
            47361,
            47234,
            47223,
            47199,
            47170,
            47241,
            48608,
            48947,
            47211,
            47167,
            47203,
            47143,
            47144,
            47274,
            47346,
            47228,
            47179,
            47184,
            47478,
            46927,
            46913,
            47306,
            47160,
            47328,
            47320,
            47093,
            47201,
            47564,
            49489,
            47221,
            47216,
            47218,
            47175,
            47213,
            47206,
            47125,
            47183,
            47158,
            46977,
            47188,
            47292,
            47196,
            47221,
            47435,
            47538,
            47386,
            47159,
            46953,
            47502,
            49346,
            47065
          ],
          [
            48109,
            46836,
            47279,
            47301,
            47192,
            47203,
            47242,
            47146,
            47090,
            46844,
            47297,
            47222,
            47361,
            47234,
            47223,
            47199,
            47170,
            47241,
            48608,
            48947,
            47211,
            47167,
            47203,
            47143,
            47144,
            47274,
            47346,
            47228,
            47179,
            47184,
            47478,
            46927,
            46913,
            47306,
            47160,
            47328,
            47320,
            47093,
            47201,
            47564,
            49489,
            47221,
            47216,
            47218,
            47175,
            47213,
            47206,
            47125,
            47183,
            47158,
            46977,
            47188,
            47292,
            47196,
            47221,
            47435,
            47538,
            47386,
            47159,
            46953,
            47502,
            49346,
            47065
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            218,
            2597,
            12205,
            25631,
            34634,
            33623,
            22856,
            11185,
            3004,
            401,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            648,
            4558,
            14365,
            26092,
            36902,
            39129,
            31701,
            17699,
            4838,
            746,
            16,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            1,
            11,
            162,
            1487,
            6060,
            18240,
            32508,
            39025,
            33523,
            18769,
            6795,
            1017,
            45,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            167,
            2158,
            10329,
            23896,
            35980,
            42467,
            40698,
            31568,
            16419,
            5150,
            738,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            347,
            2102,
            7336,
            18494,
            33311,
            37658
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            16,
            479,
            3723,
            15131,
            30271,
            38091,
            33503,
            18677,
            7201,
            1156,
            53,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50,
            741,
            6886,
            21382,
            37382,
            41745,
            35753,
            22528,
            9889,
            1768,
            134,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            125,
            1093,
            5954,
            19884,
            33655,
            38726,
            34196,
            20809,
            8543,
            1663,
            180,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            5,
            179,
            2466,
            12047,
            24413,
            33183,
            38507,
            35524,
            26266,
            12319,
            3148,
            266,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            136,
            2091,
            8180,
            20850,
            32996,
            39101,
            36027,
            25004,
            12223,
            2849,
            512,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            503,
            3575,
            14111,
            26594,
            35934,
            41142,
            37845,
            28175,
            13364,
            4405,
            541,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            69,
            769,
            5370,
            17024,
            31312
          ]
        ]
      },
      "call": {
        "duration": 0.26934223400166957,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015083739999681711,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29125184399890713,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168973405001452,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014431220006372314,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3638867369991203,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            96,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00347632800185238,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002866113998607034,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5337439590002759,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            4,
            255,
            3,
            63,
            0,
            255,
            0,
            255,
            255
          ],
          [
            45,
            0,
            16,
            0,
            4,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            56,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            12,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            1,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            47,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            4,
            0,
            255,
            4,
            255,
            255
          ],
          [
            52,
            0,
            3,
            0,
            2,
            0,
            255,
            238,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            92,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            84,
            0,
            14,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            125,
            255,
            74,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003457816997979535,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028581639999174513,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29593569899952854,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48027,
            47484,
            47418,
            47321,
            47412,
            47297,
            47293,
            47395,
            47272,
            47407,
            47311,
            47469,
            47486,
            47390,
            47508,
            47520,
            47560,
            47566,
            47483,
            47496,
            47480,
            47635,
            47595,
            47496,
            47474,
            47518,
            46990,
            47242,
            47438,
            47510,
            47450,
            48038,
            47494,
            47863,
            47524,
            49755,
            47078,
            47566,
            47380,
            47401,
            47551,
            47638,
            47565,
            47393,
            47472,
            47391,
            47617,
            47511,
            47539,
            47395,
            47688,
            47442,
            47545,
            47366,
            47501,
            47404,
            47391,
            47571,
            47662,
            47314,
            47484,
            47450,
            47413
          ],
          [
            48027,
            47484,
            47418,
            47321,
            47412,
            47297,
            47293,
            47395,
            47272,
            47407,
            47311,
            47469,
            47486,
            47390,
            47508,
            47520,
            47560,
            47566,
            47483,
            47496,
            47480,
            47635,
            47595,
            47496,
            47474,
            47518,
            46990,
            47242,
            47438,
            47510,
            47450,
            48038,
            47494,
            47863,
            47524,
            49755,
            47078,
            47566,
            47380,
            47401,
            47551,
            47638,
            47565,
            47393,
            47472,
            47391,
            47617,
            47511,
            47539,
            47395,
            47688,
            47442,
            47545,
            47366,
            47501,
            47404,
            47391,
            47571,
            47662,
            47314,
            47484,
            47450,
            47413
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            683,
            7398,
            25091,
            40187,
            33888,
            15370,
            3124,
            228,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            726,
            7044,
            22944,
            38444,
            38653,
            21805,
            5427,
            651,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            0,
            0,
            3,
            123,
            2256,
            14222,
            32937,
            41159,
            29540,
            9765,
            1949,
            101,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            672,
            6333,
            22209,
            38394,
            43960,
            30299,
            12653,
            2005,
            219,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            861,
            8188,
            26393,
            40533,
            43671
          ]
        ]
      },
      "call": {
        "duration": 0.13374184699932812,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015865559980738908,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0690259020011581,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48289,
            47345,
            47008,
            47422,
            47246,
            47438,
            47204,
            47542,
            50035,
            47262,
            47122,
            60818,
            47330,
            47169,
            47464,
            47160,
            47136,
            46880,
            47034,
            47205,
            46994,
            47128,
            47255,
            47327,
            47258,
            47329,
            47137,
            47723,
            49624,
            47306,
            47053,
            47210,
            47116,
            47338,
            47292,
            47078,
            47046,
            46995,
            47314,
            47407,
            47143,
            47224,
            47058,
            47271,
            47234,
            47156,
            47162,
            47730,
            49088,
            47204,
            47315,
            47126,
            47100,
            47254,
            47230,
            47103,
            47142,
            47090,
            47275,
            47172,
            47224,
            47240,
            47383
          ],
          [
            48289,
            47345,
            47008,
            47422,
            47246,
            47438,
            47204,
            47542,
            50035,
            47262,
            47122,
            60818,
            47330,
            47169,
            47464,
            47160,
            47136,
            46880,
            47034,
            47205,
            46994,
            47128,
            47255,
            47327,
            47258,
            47329,
            47137,
            47723,
            49624,
            47306,
            47053,
            47210,
            47116,
            47338,
            47292,
            47078,
            47046,
            46995,
            47314,
            47407,
            47143,
            47224,
            47058,
            47271,
            47234,
            47156,
            47162,
            47730,
            49088,
            47204,
            47315,
            47126,
            47100,
            47254,
            47230,
            47103,
            47142,
            47090,
            47275,
            47172,
            47224,
            47240,
            47383
          ],
          [
            48289,
            47345,
            47008,
            47422,
            47246,
            47438,
            47204,
            47542,
            50035,
            47262,
            47122,
            60818,
            47330,
            47169,
            47464,
            47160,
            47136,
            46880,
            47034,
            47205,
            46994,
            47128,
            47255,
            47327,
            47258,
            47329,
            47137,
            47723,
            49624,
            47306,
            47053,
            47210,
            47116,
            47338,
            47292,
            47078,
            47046,
            46995,
            47314,
            47407,
            47143,
            47224,
            47058,
            47271,
            47234,
            47156,
            47162,
            47730,
            49088,
            47204,
            47315,
            47126,
            47100,
            47254,
            47230,
            47103,
            47142,
            47090,
            47275,
            47172,
            47224,
            47240,
            47383
          ],
          [
            48289,
            47345,
            47008,
            47422,
            47246,
            47438,
            47204,
            47542,
            50035,
            47262,
            47122,
            60818,
            47330,
            47169,
            47464,
            47160,
            47136,
            46880,
            47034,
            47205,
            46994,
            47128,
            47255,
            47327,
            47258,
            47329,
            47137,
            47723,
            49624,
            47306,
            47053,
            47210,
            47116,
            47338,
            47292,
            47078,
            47046,
            46995,
            47314,
            47407,
            47143,
            47224,
            47058,
            47271,
            47234,
            47156,
            47162,
            47730,
            49088,
            47204,
            47315,
            47126,
            47100,
            47254,
            47230,
            47103,
            47142,
            47090,
            47275,
            47172,
            47224,
            47240,
            47383
          ],
          [
            48289,
            47345,
            47008,
            47422,
            47246,
            47438,
            47204,
            47542,
            50035,
            47262,
            47122,
            60818,
            47330,
            47169,
            47464,
            47160,
            47136,
            46880,
            47034,
            47205,
            46994,
            47128,
            47255,
            47327,
            47258,
            47329,
            47137,
            47723,
            49624,
            47306,
            47053,
            47210,
            47116,
            47338,
            47292,
            47078,
            47046,
            46995,
            47314,
            47407,
            47143,
            47224,
            47058,
            47271,
            47234,
            47156,
            47162,
            47730,
            49088,
            47204,
            47315,
            47126,
            47100,
            47254,
            47230,
            47103,
            47142,
            47090,
            47275,
            47172,
            47224,
            47240,
            47383
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            195,
            1937,
            8189,
            18260,
            27579,
            35481,
            35626,
            27497,
            13987,
            3165,
            315,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            322,
            2588,
            10935,
            23043,
            35063,
            39735,
            32504,
            19700,
            7759,
            2379,
            379,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            74,
            784,
            5469,
            21467,
            27286,
            35098,
            38922,
            36416,
            26487,
            13334,
            4940,
            862,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            191,
            1493,
            6042,
            15811,
            27878,
            34685,
            33845,
            25566,
            12918,
            4056,
            818,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            13724,
            5553,
            1077,
            36,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            175,
            2167,
            10937,
            23123,
            34966,
            39672,
            32511,
            19501,
            8231,
            1662,
            147,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            367,
            4303,
            14738,
            28556,
            38001,
            34952,
            22668,
            9196,
            1900,
            213,
            8,
            0,
            0,
            0,
            0
          ],
          [
            108,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            86,
            1101,
            7261,
            19105,
            31032,
            38806,
            39645,
            33930,
            23752,
            11961,
            3508,
            341,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            44,
            572,
            3615,
            13366,
            26261,
            35618,
            33628,
            21945,
            10727,
            3985,
            819,
            50,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            111,
            1816,
            5882,
            18635,
            29047,
            36777,
            39057,
            34912,
            23679,
            13210,
            3126,
            347,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            239,
            1437,
            6860,
            17261,
            30008,
            38989,
            39996,
            32593,
            21905,
            12236,
            6069,
            1458,
            101,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2696758120000595,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014762719983991701,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917587359988829,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168869752000319,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004758376002428122,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}