{
  "created": 1722032108.5107348,
  "duration": 23.723814487457275,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5087512450008944,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14852072999929078,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013211690020398237,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038153650020831265,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14846540899816318,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012524679987109266,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13354523800080642,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12181542699909187,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012996890000067651,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037940639995213132,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117320199831738,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012644679991353769,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003337124002428027,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14673812100227224,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001188357000501128,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003354164000484161,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1199414650000108,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001179205999505939,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351074999955017,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464343640000152,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012041369991493411,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033519749995321035,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12021831099991687,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011999369999102782,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004386217999126529,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021139370001037605,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013942810001026373,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003380024998477893,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017194890024256893,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011146750002808403,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032797630010463763,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004019998999865493,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032090.55164,
            "msecs": 551.6400337219238,
            "relativeCreated": 7736.119031906128,
            "thread": 281473024053280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4551
          }
        ]
      },
      "teardown": {
        "duration": 0.0012086060014553368,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033221240009879693,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023600329986948054,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032090.563875,
            "msecs": 563.8749599456787,
            "relativeCreated": 7748.353958129883,
            "thread": 281473024053280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4551
          }
        ]
      },
      "teardown": {
        "duration": 0.001176836001832271,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021381179976742715,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027162299993506167,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032090.5733902,
            "msecs": 573.3902454376221,
            "relativeCreated": 7757.869243621826,
            "thread": 281473024053280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4551
          }
        ]
      },
      "teardown": {
        "duration": 0.0010392830008640885,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020670459998655133,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034113750007236376,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032090.582808,
            "msecs": 582.8080177307129,
            "relativeCreated": 7767.287015914917,
            "thread": 281473024053280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4551
          }
        ]
      },
      "teardown": {
        "duration": 0.0011211849996470846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033497540025564376,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14694461500039324,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011821159969258588,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003353173997311387,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12054132800039952,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001189616999909049,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17718717700336128,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14804501000253367,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012334169987298083,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01521342799969716,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12145703900023364,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012777580013789702,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8493813759996556,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            4,
            14,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            74,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            9,
            99,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035434689998510294,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002872863999073161,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.906753049002873,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            9,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            246,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            184,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            26,
            255,
            255,
            255,
            10
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            44,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            74,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            184,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            172,
            255,
            255,
            255,
            255,
            0,
            0,
            128,
            1,
            101,
            255
          ],
          [
            255,
            0,
            118,
            0,
            255,
            0,
            255,
            33,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034611470000527333,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028743629991367925,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3029020610010775,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48336,
            47500,
            49337,
            47268,
            47823,
            47550,
            47637,
            47395,
            47495,
            47631,
            47535,
            47624,
            47640,
            47531,
            47538,
            47603,
            47468,
            47589,
            47272,
            47355,
            47502,
            47507,
            47527,
            47539,
            47496,
            47447,
            47427,
            47517,
            47384,
            47393,
            47749,
            47941,
            47501,
            49756,
            47760,
            47427,
            47549,
            47429,
            47465,
            47205,
            47220,
            47402,
            47492,
            47127,
            47150,
            47604,
            47592,
            47298,
            47521,
            47240,
            47152,
            48199,
            48031,
            47483,
            47477,
            47482,
            47496,
            47464,
            47496,
            47584,
            47586,
            47486,
            47447
          ],
          [
            48336,
            47500,
            49337,
            47268,
            47823,
            47550,
            47637,
            47395,
            47495,
            47631,
            47535,
            47624,
            47640,
            47531,
            47538,
            47603,
            47468,
            47589,
            47272,
            47355,
            47502,
            47507,
            47527,
            47539,
            47496,
            47447,
            47427,
            47517,
            47384,
            47393,
            47749,
            47941,
            47501,
            49756,
            47760,
            47427,
            47549,
            47429,
            47465,
            47205,
            47220,
            47402,
            47492,
            47127,
            47150,
            47604,
            47592,
            47298,
            47521,
            47240,
            47152,
            48199,
            48031,
            47483,
            47477,
            47482,
            47496,
            47464,
            47496,
            47584,
            47586,
            47486,
            47447
          ]
        ],
        "eTX_errcounts": [
          [
            40304,
            26254,
            8021,
            1482,
            79,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            258,
            3354,
            16384,
            34614,
            42369,
            30403,
            13760,
            1939,
            164,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            30,
            1027,
            8482,
            25873,
            40781,
            36735,
            18590,
            4806,
            643,
            32,
            0,
            0,
            0
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            347,
            4217,
            18058,
            36266,
            42505,
            31111,
            12990,
            3153,
            297,
            22,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            427,
            4728,
            19444,
            36884,
            42582,
            34491,
            17342,
            3248,
            340,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1351723830011906,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016167659996426664,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907833500008564,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48081,
            49012,
            47309,
            47364,
            47372,
            47398,
            47418,
            47426,
            47348,
            47295,
            47238,
            47153,
            47259,
            47313,
            47230,
            47345,
            47293,
            47418,
            47275,
            47458,
            47007,
            47235,
            47247,
            47321,
            47334,
            47357,
            47416,
            47319,
            47215,
            47067,
            47390,
            47049,
            47361,
            48703,
            47733,
            47534,
            47273,
            47277,
            47304,
            47410,
            47145,
            47401,
            47387,
            47306,
            47306,
            47091,
            47468,
            47380,
            47510,
            49038,
            47395,
            47342,
            47124,
            47335,
            47451,
            47413,
            47378,
            47267,
            47299,
            47432,
            47219,
            47356,
            47250
          ],
          [
            48081,
            49012,
            47309,
            47364,
            47372,
            47398,
            47418,
            47426,
            47348,
            47295,
            47238,
            47153,
            47259,
            47313,
            47230,
            47345,
            47293,
            47418,
            47275,
            47458,
            47007,
            47235,
            47247,
            47321,
            47334,
            47357,
            47416,
            47319,
            47215,
            47067,
            47390,
            47049,
            47361,
            48703,
            47733,
            47534,
            47273,
            47277,
            47304,
            47410,
            47145,
            47401,
            47387,
            47306,
            47306,
            47091,
            47468,
            47380,
            47510,
            49038,
            47395,
            47342,
            47124,
            47335,
            47451,
            47413,
            47378,
            47267,
            47299,
            47432,
            47219,
            47356,
            47250
          ],
          [
            48081,
            49012,
            47309,
            47364,
            47372,
            47398,
            47418,
            47426,
            47348,
            47295,
            47238,
            47153,
            47259,
            47313,
            47230,
            47345,
            47293,
            47418,
            47275,
            47458,
            47007,
            47235,
            47247,
            47321,
            47334,
            47357,
            47416,
            47319,
            47215,
            47067,
            47390,
            47049,
            47361,
            48703,
            47733,
            47534,
            47273,
            47277,
            47304,
            47410,
            47145,
            47401,
            47387,
            47306,
            47306,
            47091,
            47468,
            47380,
            47510,
            49038,
            47395,
            47342,
            47124,
            47335,
            47451,
            47413,
            47378,
            47267,
            47299,
            47432,
            47219,
            47356,
            47250
          ],
          [
            48081,
            49012,
            47309,
            47364,
            47372,
            47398,
            47418,
            47426,
            47348,
            47295,
            47238,
            47153,
            47259,
            47313,
            47230,
            47345,
            47293,
            47418,
            47275,
            47458,
            47007,
            47235,
            47247,
            47321,
            47334,
            47357,
            47416,
            47319,
            47215,
            47067,
            47390,
            47049,
            47361,
            48703,
            47733,
            47534,
            47273,
            47277,
            47304,
            47410,
            47145,
            47401,
            47387,
            47306,
            47306,
            47091,
            47468,
            47380,
            47510,
            49038,
            47395,
            47342,
            47124,
            47335,
            47451,
            47413,
            47378,
            47267,
            47299,
            47432,
            47219,
            47356,
            47250
          ],
          [
            48081,
            49012,
            47309,
            47364,
            47372,
            47398,
            47418,
            47426,
            47348,
            47295,
            47238,
            47153,
            47259,
            47313,
            47230,
            47345,
            47293,
            47418,
            47275,
            47458,
            47007,
            47235,
            47247,
            47321,
            47334,
            47357,
            47416,
            47319,
            47215,
            47067,
            47390,
            47049,
            47361,
            48703,
            47733,
            47534,
            47273,
            47277,
            47304,
            47410,
            47145,
            47401,
            47387,
            47306,
            47306,
            47091,
            47468,
            47380,
            47510,
            49038,
            47395,
            47342,
            47124,
            47335,
            47451,
            47413,
            47378,
            47267,
            47299,
            47432,
            47219,
            47356,
            47250
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            41,
            567,
            3696,
            11781,
            22454,
            28583,
            29901,
            26004,
            18692,
            9796,
            2409,
            265,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            74,
            958,
            4501,
            12078,
            23133,
            30115,
            32811,
            27660,
            22406,
            15190,
            7224,
            2052,
            464,
            31,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            157,
            1821,
            9603,
            22470,
            33298,
            38369,
            34401,
            23265,
            12360,
            4379,
            884,
            138,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            179,
            3030,
            12513,
            25310,
            35125,
            39934,
            36567,
            25964,
            17951,
            8592,
            2098,
            293,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            45,
            637,
            4502,
            13659,
            25295
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            78,
            1290,
            7294,
            19773,
            31342,
            33510,
            30454,
            21581,
            10845,
            3026,
            492,
            38,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            71,
            1406,
            10183,
            21031,
            33202,
            35014,
            31398,
            25153,
            16247,
            6858,
            1243,
            121,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            78,
            1648,
            9433,
            21624,
            31366,
            34706,
            32015,
            23263,
            13182,
            5404,
            1044,
            87,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            157,
            2075,
            9632,
            21908,
            30708,
            34227,
            31352,
            24698,
            17014,
            8125,
            3052,
            373,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            1,
            24,
            260,
            2828,
            10897,
            22214,
            31464,
            39417,
            39476,
            29527,
            20541,
            11404,
            3377,
            512,
            61,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            489,
            3778,
            12493,
            24258,
            34030,
            40268,
            36701,
            27559,
            19611,
            11674,
            4875,
            1891,
            580,
            61,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            119,
            1387,
            7708
          ]
        ]
      },
      "call": {
        "duration": 0.2742078030023549,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff76dc9a50>()\n +    where <built-in method all of numpy.ndarray object at 0xffff76dc9a50> = array([13, 12, 14, 13, 11]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff76e23040>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48081, 49012, 47309, 47364, 47372, 47398, ...], [48081, 49012, 47309, 47364, 47372, 47398, ...], [... 0, 0, ...], [0, 0, 0, 8, 157, 1821, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 1, 24, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff76dc9a50>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff76dc9a50> = array([13, 12, 14, 13, 11]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016268159997707698,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2928959089986165,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1709555220004404,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014242209981603082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.468287767002039,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            253,
            62,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003534407998813549,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002894164001190802,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5352670639986172,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            176,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            128,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            86,
            255,
            158,
            255,
            165,
            0,
            0,
            204,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            251,
            0,
            61,
            3,
            255,
            21,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            77,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            7,
            255,
            155,
            255,
            207,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            161,
            255,
            255,
            2,
            0,
            83,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            66,
            255,
            169
          ],
          [
            0,
            0,
            1,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          3,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.003464927001914475,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028908040003443602,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959020359994611,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48091,
            47564,
            47655,
            47693,
            47780,
            47775,
            47564,
            47639,
            47630,
            47563,
            47491,
            47549,
            49259,
            47616,
            47478,
            47553,
            47672,
            47581,
            47328,
            47670,
            47348,
            47546,
            47544,
            47455,
            47430,
            47546,
            47414,
            47663,
            47524,
            47594,
            47438,
            47486,
            47299,
            47319,
            47608,
            47653,
            47388,
            47793,
            47503,
            47944,
            47540,
            47831,
            47398,
            47567,
            47663,
            47584,
            47597,
            47632,
            47604,
            47499,
            47671,
            47641,
            47525,
            47519,
            47513,
            47564,
            47431,
            47551,
            47462,
            47508,
            47539,
            47467,
            47546
          ],
          [
            48091,
            47564,
            47655,
            47693,
            47780,
            47775,
            47564,
            47639,
            47630,
            47563,
            47491,
            47549,
            49259,
            47616,
            47478,
            47553,
            47672,
            47581,
            47328,
            47670,
            47348,
            47546,
            47544,
            47455,
            47430,
            47546,
            47414,
            47663,
            47524,
            47594,
            47438,
            47486,
            47299,
            47319,
            47608,
            47653,
            47388,
            47793,
            47503,
            47944,
            47540,
            47831,
            47398,
            47567,
            47663,
            47584,
            47597,
            47632,
            47604,
            47499,
            47671,
            47641,
            47525,
            47519,
            47513,
            47564,
            47431,
            47551,
            47462,
            47508,
            47539,
            47467,
            47546
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            206,
            4066,
            18249,
            36878,
            36026,
            17845,
            4103,
            321,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            177,
            3301,
            16586,
            36252,
            40038,
            24381,
            8134,
            932,
            84,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            1010,
            8647,
            29379,
            42191,
            38887,
            18261,
            4366,
            410,
            4,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            243,
            2719,
            14084,
            32164,
            42686,
            38789,
            20397,
            5500,
            545,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13480619600159116,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015948660002322868,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06764706300236867,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47982,
            47326,
            47554,
            47310,
            47405,
            47486,
            47388,
            47487,
            47504,
            47351,
            47539,
            49201,
            49177,
            47321,
            47434,
            47047,
            47340,
            47400,
            47447,
            47257,
            47425,
            47388,
            47469,
            47410,
            47334,
            47381,
            47722,
            49174,
            49294,
            47371,
            47049,
            47334,
            47589,
            47304,
            47452,
            47342,
            47508,
            47333,
            47380,
            47300,
            47169,
            47472,
            47335,
            49094,
            49565,
            47273,
            47241,
            47363,
            47364,
            47248,
            47553,
            47335,
            47364,
            47405,
            47312,
            47325,
            47433,
            47348,
            47467,
            47446,
            47626,
            47204,
            47551
          ],
          [
            47982,
            47326,
            47554,
            47310,
            47405,
            47486,
            47388,
            47487,
            47504,
            47351,
            47539,
            49201,
            49177,
            47321,
            47434,
            47047,
            47340,
            47400,
            47447,
            47257,
            47425,
            47388,
            47469,
            47410,
            47334,
            47381,
            47722,
            49174,
            49294,
            47371,
            47049,
            47334,
            47589,
            47304,
            47452,
            47342,
            47508,
            47333,
            47380,
            47300,
            47169,
            47472,
            47335,
            49094,
            49565,
            47273,
            47241,
            47363,
            47364,
            47248,
            47553,
            47335,
            47364,
            47405,
            47312,
            47325,
            47433,
            47348,
            47467,
            47446,
            47626,
            47204,
            47551
          ],
          [
            47982,
            47326,
            47554,
            47310,
            47405,
            47486,
            47388,
            47487,
            47504,
            47351,
            47539,
            49201,
            49177,
            47321,
            47434,
            47047,
            47340,
            47400,
            47447,
            47257,
            47425,
            47388,
            47469,
            47410,
            47334,
            47381,
            47722,
            49174,
            49294,
            47371,
            47049,
            47334,
            47589,
            47304,
            47452,
            47342,
            47508,
            47333,
            47380,
            47300,
            47169,
            47472,
            47335,
            49094,
            49565,
            47273,
            47241,
            47363,
            47364,
            47248,
            47553,
            47335,
            47364,
            47405,
            47312,
            47325,
            47433,
            47348,
            47467,
            47446,
            47626,
            47204,
            47551
          ],
          [
            47982,
            47326,
            47554,
            47310,
            47405,
            47486,
            47388,
            47487,
            47504,
            47351,
            47539,
            49201,
            49177,
            47321,
            47434,
            47047,
            47340,
            47400,
            47447,
            47257,
            47425,
            47388,
            47469,
            47410,
            47334,
            47381,
            47722,
            49174,
            49294,
            47371,
            47049,
            47334,
            47589,
            47304,
            47452,
            47342,
            47508,
            47333,
            47380,
            47300,
            47169,
            47472,
            47335,
            49094,
            49565,
            47273,
            47241,
            47363,
            47364,
            47248,
            47553,
            47335,
            47364,
            47405,
            47312,
            47325,
            47433,
            47348,
            47467,
            47446,
            47626,
            47204,
            47551
          ],
          [
            47982,
            47326,
            47554,
            47310,
            47405,
            47486,
            47388,
            47487,
            47504,
            47351,
            47539,
            49201,
            49177,
            47321,
            47434,
            47047,
            47340,
            47400,
            47447,
            47257,
            47425,
            47388,
            47469,
            47410,
            47334,
            47381,
            47722,
            49174,
            49294,
            47371,
            47049,
            47334,
            47589,
            47304,
            47452,
            47342,
            47508,
            47333,
            47380,
            47300,
            47169,
            47472,
            47335,
            49094,
            49565,
            47273,
            47241,
            47363,
            47364,
            47248,
            47553,
            47335,
            47364,
            47405,
            47312,
            47325,
            47433,
            47348,
            47467,
            47446,
            47626,
            47204,
            47551
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            248,
            2493,
            12172,
            27486,
            37095,
            36070,
            21333,
            7946,
            1259,
            87,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            447,
            3234,
            13977,
            29517,
            37861,
            38240,
            28528,
            17665,
            4989,
            734,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            51,
            707,
            4837,
            14928,
            30178,
            39377,
            35173,
            17888,
            4990,
            652,
            25,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            200,
            1672,
            7498,
            19921,
            34560,
            43680,
            40518,
            26950,
            11960,
            2560,
            173,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            93,
            1661,
            8129,
            21065,
            36385,
            41914
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            58,
            935,
            5457,
            14781,
            28492,
            38039,
            30732,
            14797,
            3581,
            323,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            668,
            5333,
            18316,
            38364,
            41286,
            33806,
            17635,
            5759,
            691,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            108,
            1345,
            6809,
            16988,
            31934,
            38706,
            32214,
            16445,
            4375,
            481,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            262,
            1785,
            7099,
            19230,
            34390,
            42345,
            36784,
            22696,
            7441,
            1185,
            89,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            184,
            2197,
            9145,
            19912,
            32614,
            41493,
            38390,
            26151,
            9896,
            1551,
            149,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            82,
            898,
            3702,
            10761,
            23876,
            36032,
            43158,
            37898,
            25102,
            9566,
            2459,
            370,
            19,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            180,
            1901,
            9969,
            21172,
            34649
          ]
        ]
      },
      "call": {
        "duration": 0.272772091000661,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015046830012579449,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2927841560012894,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170209945001261,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001448282000637846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.4258614539976406,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            103,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035219279998273123,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002884744000766659,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5368184890030534,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            5,
            255,
            17,
            255,
            5,
            23,
            0,
            255,
            1,
            255,
            255
          ],
          [
            78,
            0,
            14,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            52,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            25,
            0,
            1,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            35,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            4,
            0,
            255,
            5,
            255,
            255
          ],
          [
            61,
            0,
            3,
            0,
            6,
            0,
            255,
            171,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            111,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            72,
            0,
            4,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            90,
            255,
            24,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034732980020635296,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028877139993710443,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2964727979997406,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48211,
            47545,
            47536,
            47401,
            47527,
            47486,
            47481,
            47626,
            47536,
            47425,
            47429,
            47583,
            47490,
            49418,
            47297,
            47667,
            47582,
            49946,
            47405,
            47574,
            47526,
            47587,
            47570,
            47350,
            47412,
            47455,
            47520,
            47429,
            47445,
            47415,
            47530,
            47503,
            47629,
            47431,
            47600,
            47580,
            47520,
            47491,
            47516,
            47376,
            47613,
            47341,
            47372,
            47609,
            49259,
            47440,
            47817,
            47591,
            49746,
            47587,
            47592,
            47430,
            47499,
            47449,
            47440,
            47463,
            47479,
            47396,
            47396,
            47535,
            47441,
            47478,
            47378
          ],
          [
            48211,
            47545,
            47536,
            47401,
            47527,
            47486,
            47481,
            47626,
            47536,
            47425,
            47429,
            47583,
            47490,
            49418,
            47297,
            47667,
            47582,
            49946,
            47405,
            47574,
            47526,
            47587,
            47570,
            47350,
            47412,
            47455,
            47520,
            47429,
            47445,
            47415,
            47530,
            47503,
            47629,
            47431,
            47600,
            47580,
            47520,
            47491,
            47516,
            47376,
            47613,
            47341,
            47372,
            47609,
            49259,
            47440,
            47817,
            47591,
            49746,
            47587,
            47592,
            47430,
            47499,
            47449,
            47440,
            47463,
            47479,
            47396,
            47396,
            47535,
            47441,
            47478,
            47378
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            568,
            6952,
            25049,
            39541,
            35499,
            15055,
            2768,
            220,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            755,
            6690,
            22662,
            38529,
            37723,
            19842,
            5078,
            667,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            1,
            185,
            2232,
            14342,
            33466,
            41196,
            29230,
            9523,
            1615,
            129,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            701,
            5968,
            21997,
            38648,
            41530,
            29855,
            12011,
            2254,
            195,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            815,
            8205,
            25943,
            40842,
            43386
          ]
        ]
      },
      "call": {
        "duration": 0.13421755300078075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015993050001270603,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06822610599920154,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47996,
            47276,
            47055,
            49145,
            49103,
            47326,
            46894,
            47496,
            47280,
            47302,
            47268,
            47228,
            47257,
            47306,
            47240,
            47406,
            47407,
            47368,
            47173,
            47271,
            47399,
            47617,
            47389,
            47235,
            47343,
            47279,
            47217,
            47245,
            47210,
            47387,
            47316,
            46997,
            47401,
            47293,
            47401,
            47421,
            47455,
            47449,
            47264,
            47812,
            47380,
            47063,
            47323,
            47244,
            47337,
            47212,
            47314,
            47330,
            47176,
            47158,
            47309,
            47261,
            47324,
            47254,
            47395,
            47397,
            51371,
            49086,
            47248,
            47300,
            47262,
            47455,
            47279
          ],
          [
            47996,
            47276,
            47055,
            49145,
            49103,
            47326,
            46894,
            47496,
            47280,
            47302,
            47268,
            47228,
            47257,
            47306,
            47240,
            47406,
            47407,
            47368,
            47173,
            47271,
            47399,
            47617,
            47389,
            47235,
            47343,
            47279,
            47217,
            47245,
            47210,
            47387,
            47316,
            46997,
            47401,
            47293,
            47401,
            47421,
            47455,
            47449,
            47264,
            47812,
            47380,
            47063,
            47323,
            47244,
            47337,
            47212,
            47314,
            47330,
            47176,
            47158,
            47309,
            47261,
            47324,
            47254,
            47395,
            47397,
            51371,
            49086,
            47248,
            47300,
            47262,
            47455,
            47279
          ],
          [
            47996,
            47276,
            47055,
            49145,
            49103,
            47326,
            46894,
            47496,
            47280,
            47302,
            47268,
            47228,
            47257,
            47306,
            47240,
            47406,
            47407,
            47368,
            47173,
            47271,
            47399,
            47617,
            47389,
            47235,
            47343,
            47279,
            47217,
            47245,
            47210,
            47387,
            47316,
            46997,
            47401,
            47293,
            47401,
            47421,
            47455,
            47449,
            47264,
            47812,
            47380,
            47063,
            47323,
            47244,
            47337,
            47212,
            47314,
            47330,
            47176,
            47158,
            47309,
            47261,
            47324,
            47254,
            47395,
            47397,
            51371,
            49086,
            47248,
            47300,
            47262,
            47455,
            47279
          ],
          [
            47996,
            47276,
            47055,
            49145,
            49103,
            47326,
            46894,
            47496,
            47280,
            47302,
            47268,
            47228,
            47257,
            47306,
            47240,
            47406,
            47407,
            47368,
            47173,
            47271,
            47399,
            47617,
            47389,
            47235,
            47343,
            47279,
            47217,
            47245,
            47210,
            47387,
            47316,
            46997,
            47401,
            47293,
            47401,
            47421,
            47455,
            47449,
            47264,
            47812,
            47380,
            47063,
            47323,
            47244,
            47337,
            47212,
            47314,
            47330,
            47176,
            47158,
            47309,
            47261,
            47324,
            47254,
            47395,
            47397,
            51371,
            49086,
            47248,
            47300,
            47262,
            47455,
            47279
          ],
          [
            47996,
            47276,
            47055,
            49145,
            49103,
            47326,
            46894,
            47496,
            47280,
            47302,
            47268,
            47228,
            47257,
            47306,
            47240,
            47406,
            47407,
            47368,
            47173,
            47271,
            47399,
            47617,
            47389,
            47235,
            47343,
            47279,
            47217,
            47245,
            47210,
            47387,
            47316,
            46997,
            47401,
            47293,
            47401,
            47421,
            47455,
            47449,
            47264,
            47812,
            47380,
            47063,
            47323,
            47244,
            47337,
            47212,
            47314,
            47330,
            47176,
            47158,
            47309,
            47261,
            47324,
            47254,
            47395,
            47397,
            51371,
            49086,
            47248,
            47300,
            47262,
            47455,
            47279
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            78,
            886,
            5932,
            18032,
            30038,
            36174,
            32970,
            24276,
            14175,
            4050,
            377,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            169,
            1866,
            8191,
            21941,
            36311,
            40266,
            33117,
            18877,
            5829,
            1096,
            44,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            165,
            1266,
            4582,
            11118,
            22418,
            34940,
            41335,
            36116,
            21673,
            7204,
            1521,
            210,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            85,
            1028,
            5727,
            15766,
            29648,
            40265,
            39045,
            28853,
            11727,
            2324,
            190,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21
          ],
          [
            11345,
            2846,
            224,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            194,
            1609,
            8013,
            19345,
            32684,
            38546,
            29825,
            15199,
            4670,
            505,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            125,
            1625,
            8862,
            18687,
            29512,
            38535,
            34058,
            21066,
            7340,
            1140,
            66,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            99,
            1047,
            5031,
            13051,
            26753,
            40094,
            42491,
            34035,
            21384,
            7602,
            1576,
            137,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            84,
            980,
            6464,
            17392,
            27808,
            38238,
            35217,
            22180,
            8441,
            1533,
            161,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            256,
            2155,
            6647,
            15649,
            25914,
            36397,
            40752,
            34969,
            20624,
            9458,
            2180,
            353,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            320,
            3024,
            11022,
            20095,
            32165,
            40776,
            42757,
            37118,
            23596,
            8857,
            1750,
            244,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27139068099859287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015060029982123524,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2931274239999766,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.171518693998223,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045789, 10011448), (411144, 411144), (40048041, 10012010))\nassert ((40045789 > 0 and 10011448 == 0\n  +10011448\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff76e23370>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff76bed5e0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff7b75a460>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045789, 10011448), (411144, 411144), (40048041, 10012010))\nE       assert ((40045789 > 0 and 10011448 == 0\nE         +10011448\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004951669998263242,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}