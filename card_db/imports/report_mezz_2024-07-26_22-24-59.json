{
  "created": 1722032719.227286,
  "duration": 23.21894121170044,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.507371312000032,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1486790460003249,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013265699999465141,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038252049998845905,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14858289399853675,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012789580032404047,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1320519860018976,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12196435200166889,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012478169992391486,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037952650018269196,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12129614699733793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012691180018009618,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033529950014781207,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14703020899833064,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012066870003764052,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033463639992987737,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12024834399926476,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001162466000096174,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033622049995756242,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14684381599727203,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012061759989592247,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003344143999129301,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12043860799894901,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011787270013883244,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00435975700020208,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00211132700133021,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011458150001999456,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033162129984702915,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017249779994017445,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010805940000864211,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003256662999774562,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004064220000145724,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032701.7877393,
            "msecs": 787.7392768859863,
            "relativeCreated": 7755.5882930755615,
            "thread": 281473884680224,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4848
          }
        ]
      },
      "teardown": {
        "duration": 0.0011985269993601833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033057729997381102,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023804930024198256,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032701.7999997,
            "msecs": 799.9997138977051,
            "relativeCreated": 7767.84873008728,
            "thread": 281473884680224,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4848
          }
        ]
      },
      "teardown": {
        "duration": 0.0011531359996297397,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020614659988495987,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002732159999141004,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032701.809403,
            "msecs": 809.4029426574707,
            "relativeCreated": 7777.251958847046,
            "thread": 281473884680224,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4848
          }
        ]
      },
      "teardown": {
        "duration": 0.0010261429997626692,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002044905999355251,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034227760006615426,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032701.8187954,
            "msecs": 818.7954425811768,
            "relativeCreated": 7786.644458770752,
            "thread": 281473884680224,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4848
          }
        ]
      },
      "teardown": {
        "duration": 0.0011076549999415874,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003310394000436645,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14695097799994983,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00117806599882897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033283039992966224,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12071323399868561,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001197056997625623,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17988936999972793,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14821280599790043,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001239867000549566,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015126786998735042,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12164091500017093,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001236058000358753,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8447489399986807,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            3,
            13,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            65,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            16,
            111,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035640189998957794,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028603540013136808,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9003162090011756,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            20,
            0,
            1,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            212,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            208,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            38,
            255,
            255,
            255,
            16
          ],
          [
            14,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            58,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            150,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            138,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            156,
            0,
            114,
            255
          ],
          [
            255,
            0,
            149,
            0,
            255,
            0,
            253,
            90,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003535369000019273,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028648240004258696,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3028418839967344,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48422,
            47604,
            47569,
            47530,
            48053,
            47485,
            49423,
            47521,
            47605,
            47562,
            47658,
            47434,
            47440,
            47466,
            47563,
            47487,
            47615,
            47669,
            47405,
            47545,
            47787,
            47509,
            47839,
            47732,
            47639,
            47653,
            47524,
            47514,
            47741,
            47547,
            47399,
            49203,
            47576,
            47835,
            47741,
            50027,
            47708,
            47464,
            47655,
            47225,
            47453,
            47524,
            47550,
            47503,
            47513,
            47450,
            47685,
            47457,
            47631,
            47428,
            47566,
            47159,
            47508,
            47460,
            47420,
            47531,
            47479,
            47512,
            47763,
            47578,
            49368,
            47571,
            47804
          ],
          [
            48422,
            47604,
            47569,
            47530,
            48053,
            47485,
            49423,
            47521,
            47605,
            47562,
            47658,
            47434,
            47440,
            47466,
            47563,
            47487,
            47615,
            47669,
            47405,
            47545,
            47787,
            47509,
            47839,
            47732,
            47639,
            47653,
            47524,
            47514,
            47741,
            47547,
            47399,
            49203,
            47576,
            47835,
            47741,
            50027,
            47708,
            47464,
            47655,
            47225,
            47453,
            47524,
            47550,
            47503,
            47513,
            47450,
            47685,
            47457,
            47631,
            47428,
            47566,
            47159,
            47508,
            47460,
            47420,
            47531,
            47479,
            47512,
            47763,
            47578,
            49368,
            47571,
            47804
          ]
        ],
        "eTX_errcounts": [
          [
            41161,
            26779,
            9029,
            1377,
            48,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            274,
            3399,
            16057,
            34170,
            42660,
            31659,
            14303,
            2167,
            109,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            805,
            7365,
            25843,
            40304,
            37746,
            18959,
            5520,
            551,
            31,
            1,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            316,
            3735,
            17793,
            35870,
            42393,
            32231,
            13919,
            3203,
            315,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            475,
            3937,
            18976,
            36230,
            42836,
            35401,
            17008,
            3379,
            311,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13452149200020358,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015994850000424776,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06927217100019334,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48219,
            47653,
            47648,
            48063,
            47438,
            47493,
            47421,
            47548,
            47467,
            47492,
            47416,
            47480,
            47502,
            47696,
            47355,
            47555,
            47587,
            47520,
            47595,
            47704,
            47438,
            47765,
            47464,
            47529,
            47355,
            47599,
            47441,
            47405,
            47658,
            47516,
            47568,
            47483,
            47131,
            47784,
            47592,
            48098,
            47651,
            47439,
            47346,
            47728,
            47535,
            47516,
            47409,
            47223,
            47477,
            47633,
            47529,
            47723,
            47573,
            47730,
            47105,
            47986,
            47938,
            47356,
            47403,
            47608,
            47437,
            47736,
            47392,
            47467,
            47599,
            47582,
            47543
          ],
          [
            48219,
            47653,
            47648,
            48063,
            47438,
            47493,
            47421,
            47548,
            47467,
            47492,
            47416,
            47480,
            47502,
            47696,
            47355,
            47555,
            47587,
            47520,
            47595,
            47704,
            47438,
            47765,
            47464,
            47529,
            47355,
            47599,
            47441,
            47405,
            47658,
            47516,
            47568,
            47483,
            47131,
            47784,
            47592,
            48098,
            47651,
            47439,
            47346,
            47728,
            47535,
            47516,
            47409,
            47223,
            47477,
            47633,
            47529,
            47723,
            47573,
            47730,
            47105,
            47986,
            47938,
            47356,
            47403,
            47608,
            47437,
            47736,
            47392,
            47467,
            47599,
            47582,
            47543
          ],
          [
            48219,
            47653,
            47648,
            48063,
            47438,
            47493,
            47421,
            47548,
            47467,
            47492,
            47416,
            47480,
            47502,
            47696,
            47355,
            47555,
            47587,
            47520,
            47595,
            47704,
            47438,
            47765,
            47464,
            47529,
            47355,
            47599,
            47441,
            47405,
            47658,
            47516,
            47568,
            47483,
            47131,
            47784,
            47592,
            48098,
            47651,
            47439,
            47346,
            47728,
            47535,
            47516,
            47409,
            47223,
            47477,
            47633,
            47529,
            47723,
            47573,
            47730,
            47105,
            47986,
            47938,
            47356,
            47403,
            47608,
            47437,
            47736,
            47392,
            47467,
            47599,
            47582,
            47543
          ],
          [
            48219,
            47653,
            47648,
            48063,
            47438,
            47493,
            47421,
            47548,
            47467,
            47492,
            47416,
            47480,
            47502,
            47696,
            47355,
            47555,
            47587,
            47520,
            47595,
            47704,
            47438,
            47765,
            47464,
            47529,
            47355,
            47599,
            47441,
            47405,
            47658,
            47516,
            47568,
            47483,
            47131,
            47784,
            47592,
            48098,
            47651,
            47439,
            47346,
            47728,
            47535,
            47516,
            47409,
            47223,
            47477,
            47633,
            47529,
            47723,
            47573,
            47730,
            47105,
            47986,
            47938,
            47356,
            47403,
            47608,
            47437,
            47736,
            47392,
            47467,
            47599,
            47582,
            47543
          ],
          [
            48219,
            47653,
            47648,
            48063,
            47438,
            47493,
            47421,
            47548,
            47467,
            47492,
            47416,
            47480,
            47502,
            47696,
            47355,
            47555,
            47587,
            47520,
            47595,
            47704,
            47438,
            47765,
            47464,
            47529,
            47355,
            47599,
            47441,
            47405,
            47658,
            47516,
            47568,
            47483,
            47131,
            47784,
            47592,
            48098,
            47651,
            47439,
            47346,
            47728,
            47535,
            47516,
            47409,
            47223,
            47477,
            47633,
            47529,
            47723,
            47573,
            47730,
            47105,
            47986,
            47938,
            47356,
            47403,
            47608,
            47437,
            47736,
            47392,
            47467,
            47599,
            47582,
            47543
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            574,
            2909,
            9432,
            22260,
            33399,
            36481,
            31828,
            21076,
            9176,
            2466,
            482,
            51,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            50,
            738,
            4377,
            12205,
            23189,
            31904,
            35491,
            31430,
            23412,
            12662,
            4729,
            1128,
            122,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            25,
            190,
            1346,
            4181,
            10042,
            21677,
            35999,
            39448,
            35062,
            25586,
            15976,
            9171,
            3326,
            676,
            76,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            139,
            1321,
            5660,
            15335,
            27336,
            32542,
            34882,
            35873,
            28151,
            16905,
            7090,
            1879,
            179,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            47,
            510,
            2236,
            5862,
            13516,
            27013
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            138,
            1115,
            5453,
            16497,
            31733,
            35436,
            32703,
            23409,
            12499,
            5009,
            1142,
            85,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            123,
            1306,
            6637,
            15110,
            28654,
            36338,
            33885,
            24379,
            12879,
            3207,
            542,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            363,
            2210,
            8301,
            19643,
            34397,
            38126,
            34610,
            26857,
            15940,
            7380,
            1570,
            165,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            36,
            635,
            3026,
            7915,
            16097,
            27782,
            36408,
            34549,
            26386,
            16275,
            7616,
            1903,
            269,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            18,
            249,
            1277,
            3545,
            7993,
            18041,
            33180,
            39328,
            36887,
            31182,
            22655,
            14070,
            7829,
            2833,
            424,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            136,
            1169,
            4762,
            12573,
            24869,
            32724,
            35751,
            37777,
            33554,
            24916,
            15568,
            7131,
            1953,
            203,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            102,
            887,
            3165,
            8369
          ]
        ]
      },
      "call": {
        "duration": 0.2744246829970507,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffaa2a6630>()\n +    where <built-in method all of numpy.ndarray object at 0xffffaa2a6630> = array([22, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffaa280550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48219, 47653, 47648, 48063, 47438, 47493, ...], [48219, 47653, 47648, 48063, 47438, 47493, ...], [... ...], [0, 0, 25, 190, 1346, 4181, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 18, 249, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffaa2a6630>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffaa2a6630> = array([22, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016091460020106751,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29320962999918265,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1713005609999527,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014622330018028151,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3036132870001893,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            23,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            30,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            198,
            67,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003498917998513207,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002852912999514956,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5405903609971574,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            223,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            5,
            255,
            243,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            92,
            255,
            138,
            255,
            142,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            111,
            5,
            255,
            43,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            70,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            14,
            255,
            201,
            255,
            227,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            226,
            255,
            202,
            255,
            255,
            12,
            0,
            162,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            141,
            255,
            99
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034814279970305506,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002885974001401337,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959487509979226,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47959,
            47565,
            47505,
            47505,
            47439,
            47544,
            47431,
            47475,
            47407,
            47576,
            47573,
            47984,
            47706,
            48982,
            47255,
            47582,
            47359,
            47516,
            47572,
            47326,
            47496,
            47445,
            47634,
            47432,
            47686,
            47321,
            47480,
            47445,
            47497,
            47501,
            47504,
            47542,
            47658,
            47388,
            47485,
            47465,
            47311,
            47397,
            47515,
            47374,
            47441,
            47553,
            47381,
            47459,
            47681,
            47389,
            47823,
            47451,
            47583,
            47455,
            47369,
            47564,
            47474,
            47381,
            47395,
            47329,
            47377,
            47404,
            47476,
            47380,
            47432,
            47479,
            47381
          ],
          [
            47959,
            47565,
            47505,
            47505,
            47439,
            47544,
            47431,
            47475,
            47407,
            47576,
            47573,
            47984,
            47706,
            48982,
            47255,
            47582,
            47359,
            47516,
            47572,
            47326,
            47496,
            47445,
            47634,
            47432,
            47686,
            47321,
            47480,
            47445,
            47497,
            47501,
            47504,
            47542,
            47658,
            47388,
            47485,
            47465,
            47311,
            47397,
            47515,
            47374,
            47441,
            47553,
            47381,
            47459,
            47681,
            47389,
            47823,
            47451,
            47583,
            47455,
            47369,
            47564,
            47474,
            47381,
            47395,
            47329,
            47377,
            47404,
            47476,
            47380,
            47432,
            47479,
            47381
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            243,
            3339,
            18054,
            36310,
            36393,
            19406,
            4755,
            463,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            184,
            2518,
            15831,
            34823,
            40225,
            26224,
            8615,
            967,
            88,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            959,
            8560,
            29002,
            41939,
            38905,
            19040,
            4817,
            456,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            166,
            2322,
            13577,
            30796,
            42808,
            38801,
            20377,
            5598,
            595,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.133878366999852,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001595735000591958,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06878855900140479,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48481,
            47568,
            47473,
            47333,
            47409,
            47442,
            47167,
            47432,
            47464,
            47425,
            47597,
            47336,
            47451,
            47521,
            47683,
            47506,
            47466,
            47566,
            49407,
            47797,
            47618,
            47480,
            47392,
            47440,
            47472,
            47291,
            47439,
            47275,
            47553,
            47482,
            47455,
            47351,
            47435,
            47368,
            47445,
            47377,
            47792,
            47541,
            47666,
            47356,
            47454,
            47363,
            47426,
            47426,
            47434,
            47514,
            47363,
            47612,
            47617,
            47658,
            47475,
            47539,
            47770,
            47786,
            47827,
            47126,
            47522,
            47300,
            47388,
            47411,
            47570,
            47391,
            47637
          ],
          [
            48481,
            47568,
            47473,
            47333,
            47409,
            47442,
            47167,
            47432,
            47464,
            47425,
            47597,
            47336,
            47451,
            47521,
            47683,
            47506,
            47466,
            47566,
            49407,
            47797,
            47618,
            47480,
            47392,
            47440,
            47472,
            47291,
            47439,
            47275,
            47553,
            47482,
            47455,
            47351,
            47435,
            47368,
            47445,
            47377,
            47792,
            47541,
            47666,
            47356,
            47454,
            47363,
            47426,
            47426,
            47434,
            47514,
            47363,
            47612,
            47617,
            47658,
            47475,
            47539,
            47770,
            47786,
            47827,
            47126,
            47522,
            47300,
            47388,
            47411,
            47570,
            47391,
            47637
          ],
          [
            48481,
            47568,
            47473,
            47333,
            47409,
            47442,
            47167,
            47432,
            47464,
            47425,
            47597,
            47336,
            47451,
            47521,
            47683,
            47506,
            47466,
            47566,
            49407,
            47797,
            47618,
            47480,
            47392,
            47440,
            47472,
            47291,
            47439,
            47275,
            47553,
            47482,
            47455,
            47351,
            47435,
            47368,
            47445,
            47377,
            47792,
            47541,
            47666,
            47356,
            47454,
            47363,
            47426,
            47426,
            47434,
            47514,
            47363,
            47612,
            47617,
            47658,
            47475,
            47539,
            47770,
            47786,
            47827,
            47126,
            47522,
            47300,
            47388,
            47411,
            47570,
            47391,
            47637
          ],
          [
            48481,
            47568,
            47473,
            47333,
            47409,
            47442,
            47167,
            47432,
            47464,
            47425,
            47597,
            47336,
            47451,
            47521,
            47683,
            47506,
            47466,
            47566,
            49407,
            47797,
            47618,
            47480,
            47392,
            47440,
            47472,
            47291,
            47439,
            47275,
            47553,
            47482,
            47455,
            47351,
            47435,
            47368,
            47445,
            47377,
            47792,
            47541,
            47666,
            47356,
            47454,
            47363,
            47426,
            47426,
            47434,
            47514,
            47363,
            47612,
            47617,
            47658,
            47475,
            47539,
            47770,
            47786,
            47827,
            47126,
            47522,
            47300,
            47388,
            47411,
            47570,
            47391,
            47637
          ],
          [
            48481,
            47568,
            47473,
            47333,
            47409,
            47442,
            47167,
            47432,
            47464,
            47425,
            47597,
            47336,
            47451,
            47521,
            47683,
            47506,
            47466,
            47566,
            49407,
            47797,
            47618,
            47480,
            47392,
            47440,
            47472,
            47291,
            47439,
            47275,
            47553,
            47482,
            47455,
            47351,
            47435,
            47368,
            47445,
            47377,
            47792,
            47541,
            47666,
            47356,
            47454,
            47363,
            47426,
            47426,
            47434,
            47514,
            47363,
            47612,
            47617,
            47658,
            47475,
            47539,
            47770,
            47786,
            47827,
            47126,
            47522,
            47300,
            47388,
            47411,
            47570,
            47391,
            47637
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            287,
            2446,
            13279,
            26182,
            34670,
            33811,
            23340,
            11139,
            2915,
            452,
            23,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            69,
            837,
            4795,
            15169,
            26128,
            35875,
            39046,
            30968,
            18122,
            4446,
            569,
            21,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            175,
            1550,
            6590,
            18618,
            33072,
            38937,
            33695,
            18273,
            6619,
            869,
            54,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            158,
            1947,
            10586,
            24878,
            36570,
            42526,
            40194,
            30607,
            16166,
            4817,
            592,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            380,
            2230,
            7807,
            18812,
            32212,
            37848
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            551,
            3780,
            16079,
            30963,
            38190,
            32255,
            18130,
            6682,
            1164,
            38,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            80,
            892,
            7898,
            21443,
            37876,
            42160,
            35616,
            23279,
            9423,
            2020,
            172,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            84,
            1190,
            6699,
            20135,
            34311,
            38731,
            33626,
            20575,
            8729,
            1539,
            126,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            240,
            2904,
            12208,
            24395,
            34070,
            38789,
            35669,
            25764,
            12611,
            3192,
            349,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            6,
            165,
            2009,
            8865,
            21654,
            33509,
            39704,
            36287,
            24189,
            11871,
            2776,
            483,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53,
            599,
            4100,
            14848,
            26993,
            36021,
            41529,
            38203,
            27673,
            13179,
            4058,
            408,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            87,
            944,
            5450,
            16400,
            32207
          ]
        ]
      },
      "call": {
        "duration": 0.27173176200085436,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014775929994357284,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29164041499825544,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1709527029997844,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014252420005504973,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3369293880023179,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            112,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          3,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003492467996693449,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002907815000071423,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5414288489992032,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            3,
            255,
            0,
            72,
            0,
            255,
            0,
            255,
            255
          ],
          [
            82,
            0,
            7,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            31,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            189,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            9,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            12,
            255,
            59,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            9,
            0,
            255,
            6,
            255,
            255
          ],
          [
            63,
            0,
            7,
            0,
            15,
            0,
            255,
            255,
            255,
            255,
            255,
            1
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            71,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            81,
            0,
            7,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            147,
            255,
            62,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034727570018731058,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028498529973148834,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29636197999934666,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48428,
            47591,
            47540,
            47862,
            47564,
            47656,
            47434,
            47481,
            47545,
            47321,
            47496,
            47301,
            47511,
            47553,
            47600,
            47564,
            47582,
            47517,
            47412,
            47390,
            47564,
            47408,
            47405,
            47561,
            47386,
            47112,
            47201,
            47687,
            47550,
            47398,
            47679,
            47621,
            58929,
            47691,
            49967,
            47648,
            47071,
            47375,
            47439,
            47683,
            47720,
            47644,
            47523,
            47579,
            47375,
            47527,
            47335,
            47638,
            47485,
            47545,
            47416,
            47488,
            47591,
            47656,
            47434,
            47601,
            47455,
            47490,
            47417,
            49388,
            47432,
            47946,
            47383
          ],
          [
            48428,
            47591,
            47540,
            47862,
            47564,
            47656,
            47434,
            47481,
            47545,
            47321,
            47496,
            47301,
            47511,
            47553,
            47600,
            47564,
            47582,
            47517,
            47412,
            47390,
            47564,
            47408,
            47405,
            47561,
            47386,
            47112,
            47201,
            47687,
            47550,
            47398,
            47679,
            47621,
            58929,
            47691,
            49967,
            47648,
            47071,
            47375,
            47439,
            47683,
            47720,
            47644,
            47523,
            47579,
            47375,
            47527,
            47335,
            47638,
            47485,
            47545,
            47416,
            47488,
            47591,
            47656,
            47434,
            47601,
            47455,
            47490,
            47417,
            49388,
            47432,
            47946,
            47383
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            583,
            7046,
            25178,
            39602,
            34568,
            15238,
            3234,
            281,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            619,
            6280,
            22008,
            37769,
            38336,
            21162,
            5693,
            619,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            3,
            204,
            2082,
            14267,
            32730,
            41282,
            28457,
            9735,
            1521,
            103,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            621,
            7274,
            21423,
            40234,
            41649,
            30598,
            12741,
            2030,
            201,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            843,
            8149,
            25103,
            40902,
            43828
          ]
        ]
      },
      "call": {
        "duration": 0.13448840099954396,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001602366002771305,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06910383699869271,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47991,
            47608,
            47423,
            47325,
            47531,
            47327,
            47363,
            47570,
            47542,
            47549,
            47388,
            47599,
            47466,
            47990,
            47503,
            47195,
            47849,
            47128,
            46923,
            47356,
            47653,
            47516,
            47419,
            47395,
            47628,
            47451,
            47463,
            47419,
            47527,
            47352,
            47886,
            47487,
            47357,
            47358,
            47495,
            47368,
            47117,
            47445,
            47253,
            47411,
            47387,
            47603,
            47185,
            47665,
            47644,
            47613,
            47664,
            47855,
            47432,
            47250,
            47365,
            47528,
            47477,
            47297,
            47570,
            47287,
            47523,
            47271,
            47363,
            47272,
            47397,
            47590,
            47543
          ],
          [
            47991,
            47608,
            47423,
            47325,
            47531,
            47327,
            47363,
            47570,
            47542,
            47549,
            47388,
            47599,
            47466,
            47990,
            47503,
            47195,
            47849,
            47128,
            46923,
            47356,
            47653,
            47516,
            47419,
            47395,
            47628,
            47451,
            47463,
            47419,
            47527,
            47352,
            47886,
            47487,
            47357,
            47358,
            47495,
            47368,
            47117,
            47445,
            47253,
            47411,
            47387,
            47603,
            47185,
            47665,
            47644,
            47613,
            47664,
            47855,
            47432,
            47250,
            47365,
            47528,
            47477,
            47297,
            47570,
            47287,
            47523,
            47271,
            47363,
            47272,
            47397,
            47590,
            47543
          ],
          [
            47991,
            47608,
            47423,
            47325,
            47531,
            47327,
            47363,
            47570,
            47542,
            47549,
            47388,
            47599,
            47466,
            47990,
            47503,
            47195,
            47849,
            47128,
            46923,
            47356,
            47653,
            47516,
            47419,
            47395,
            47628,
            47451,
            47463,
            47419,
            47527,
            47352,
            47886,
            47487,
            47357,
            47358,
            47495,
            47368,
            47117,
            47445,
            47253,
            47411,
            47387,
            47603,
            47185,
            47665,
            47644,
            47613,
            47664,
            47855,
            47432,
            47250,
            47365,
            47528,
            47477,
            47297,
            47570,
            47287,
            47523,
            47271,
            47363,
            47272,
            47397,
            47590,
            47543
          ],
          [
            47991,
            47608,
            47423,
            47325,
            47531,
            47327,
            47363,
            47570,
            47542,
            47549,
            47388,
            47599,
            47466,
            47990,
            47503,
            47195,
            47849,
            47128,
            46923,
            47356,
            47653,
            47516,
            47419,
            47395,
            47628,
            47451,
            47463,
            47419,
            47527,
            47352,
            47886,
            47487,
            47357,
            47358,
            47495,
            47368,
            47117,
            47445,
            47253,
            47411,
            47387,
            47603,
            47185,
            47665,
            47644,
            47613,
            47664,
            47855,
            47432,
            47250,
            47365,
            47528,
            47477,
            47297,
            47570,
            47287,
            47523,
            47271,
            47363,
            47272,
            47397,
            47590,
            47543
          ],
          [
            47991,
            47608,
            47423,
            47325,
            47531,
            47327,
            47363,
            47570,
            47542,
            47549,
            47388,
            47599,
            47466,
            47990,
            47503,
            47195,
            47849,
            47128,
            46923,
            47356,
            47653,
            47516,
            47419,
            47395,
            47628,
            47451,
            47463,
            47419,
            47527,
            47352,
            47886,
            47487,
            47357,
            47358,
            47495,
            47368,
            47117,
            47445,
            47253,
            47411,
            47387,
            47603,
            47185,
            47665,
            47644,
            47613,
            47664,
            47855,
            47432,
            47250,
            47365,
            47528,
            47477,
            47297,
            47570,
            47287,
            47523,
            47271,
            47363,
            47272,
            47397,
            47590,
            47543
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            214,
            1793,
            8295,
            17964,
            28207,
            35860,
            35643,
            27309,
            13176,
            3014,
            384,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            276,
            2411,
            10392,
            22571,
            34472,
            38216,
            33253,
            20238,
            8153,
            2378,
            307,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            687,
            5057,
            15760,
            26772,
            34967,
            38740,
            36570,
            26440,
            13212,
            4981,
            818,
            33,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            157,
            1328,
            5813,
            15727,
            28168,
            35672,
            34435,
            26477,
            13374,
            4070,
            832,
            112,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            13706,
            5388,
            994,
            37,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            229,
            2349,
            11075,
            23887,
            35407,
            39774,
            32599,
            18904,
            7932,
            1619,
            158,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            334,
            3819,
            14411,
            28572,
            38475,
            35180,
            22983,
            9356,
            2073,
            259,
            1,
            0,
            0,
            0,
            0
          ],
          [
            46,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            83,
            1087,
            7155,
            19434,
            31287,
            38729,
            39604,
            33422,
            24103,
            12254,
            3410,
            461,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            71,
            532,
            3318,
            13239,
            25164,
            35339,
            33792,
            22994,
            10996,
            3925,
            852,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            109,
            1208,
            5564,
            17390,
            28647,
            36512,
            39947,
            34866,
            23989,
            12867,
            3239,
            496,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            196,
            1540,
            6678,
            17542,
            29813,
            39093,
            40603,
            33381,
            23102,
            12960,
            5634,
            1598,
            133,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27181558400116046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014759730001969729,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29204929399929824,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170129394999094,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004780425999342697,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}