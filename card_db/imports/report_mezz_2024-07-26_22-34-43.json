{
  "created": 1722033303.2760453,
  "duration": 23.494505167007446,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5097560949980107,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14856159400005708,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001359481000690721,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003784194002946606,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14858613400065224,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012781180012098048,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13238190300035058,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1219642619980732,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012721179991785903,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037717740015068557,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12129863800146268,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012807880011678208,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033340940026391763,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14689865599939367,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011686160032695625,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033379039996361826,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12016446200141218,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011523849971126765,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033391639990441035,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14686514500135672,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011630059998424258,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033331339982396457,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1204071969987126,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011549660011951346,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004398878001666162,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020722660010505933,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010918739972112235,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032872629999474157,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017035579985531513,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001106904001062503,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003284053000243148,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040301100016222335,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033285.5657785,
            "msecs": 565.7784938812256,
            "relativeCreated": 7757.63726234436,
            "thread": 281473771225120,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5128
          }
        ]
      },
      "teardown": {
        "duration": 0.0012349469980108552,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003338264003104996,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002389943001617212,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033285.5779932,
            "msecs": 577.9931545257568,
            "relativeCreated": 7769.851922988892,
            "thread": 281473771225120,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5128
          }
        ]
      },
      "teardown": {
        "duration": 0.0011412559979362413,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020400459980010055,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026975100008712616,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033285.587426,
            "msecs": 587.425947189331,
            "relativeCreated": 7779.284715652466,
            "thread": 281473771225120,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5128
          }
        ]
      },
      "teardown": {
        "duration": 0.0010722240003815386,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002065066000795923,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034144659985031467,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033285.596771,
            "msecs": 596.7710018157959,
            "relativeCreated": 7788.629770278931,
            "thread": 281473771225120,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5128
          }
        ]
      },
      "teardown": {
        "duration": 0.0010592329999781214,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032822230023157317,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14720217300055083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001175696001155302,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033153730000776704,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12083878699922934,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011585949978325516,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17990785000074538,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14836934900085907,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001274067999474937,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015129906998481601,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12153306199979852,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012543279990495648,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8521690650013625,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            20,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            65,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            14,
            135,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.003608990999055095,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028867539986094926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9046926770024584,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            0,
            1,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            215,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            143,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            29,
            255,
            255,
            255,
            10
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            58,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            73,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            109,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            221,
            255,
            255,
            255,
            255,
            0,
            0,
            133,
            0,
            90,
            255
          ],
          [
            255,
            0,
            177,
            0,
            255,
            0,
            170,
            28,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034551470016594976,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028584930005308706,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3033761360020435,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48545,
            47600,
            47550,
            47584,
            47646,
            47503,
            47547,
            47173,
            47201,
            47423,
            47486,
            47324,
            47450,
            47320,
            47403,
            47475,
            47435,
            47323,
            47404,
            47512,
            47606,
            47405,
            47593,
            47531,
            47533,
            47529,
            49650,
            47540,
            47913,
            47440,
            49495,
            47501,
            47404,
            47440,
            47336,
            47456,
            47435,
            47378,
            47482,
            47381,
            47499,
            47465,
            47396,
            47577,
            47532,
            47464,
            47708,
            47526,
            47587,
            47451,
            47435,
            47439,
            47473,
            47325,
            47364,
            47430,
            47362,
            47406,
            47018,
            47095,
            47690,
            49144,
            47653
          ],
          [
            48545,
            47600,
            47550,
            47584,
            47646,
            47503,
            47547,
            47173,
            47201,
            47423,
            47486,
            47324,
            47450,
            47320,
            47403,
            47475,
            47435,
            47323,
            47404,
            47512,
            47606,
            47405,
            47593,
            47531,
            47533,
            47529,
            49650,
            47540,
            47913,
            47440,
            49495,
            47501,
            47404,
            47440,
            47336,
            47456,
            47435,
            47378,
            47482,
            47381,
            47499,
            47465,
            47396,
            47577,
            47532,
            47464,
            47708,
            47526,
            47587,
            47451,
            47435,
            47439,
            47473,
            47325,
            47364,
            47430,
            47362,
            47406,
            47018,
            47095,
            47690,
            49144,
            47653
          ]
        ],
        "eTX_errcounts": [
          [
            40547,
            25605,
            7303,
            1191,
            82,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            364,
            3483,
            16540,
            36737,
            42532,
            30730,
            13604,
            2008,
            154,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            68,
            1072,
            8186,
            27180,
            40820,
            36682,
            18397,
            4977,
            459,
            18,
            0,
            0,
            0
          ],
          [
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            344,
            4658,
            18834,
            36720,
            42206,
            31083,
            12908,
            2752,
            332,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            462,
            4642,
            20404,
            37315,
            43127,
            34527,
            15643,
            3255,
            305,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1338691260025371,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016174550000869203,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06930439099960495,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48098,
            47280,
            47315,
            47148,
            47401,
            47269,
            47175,
            47467,
            47318,
            47331,
            47475,
            47218,
            48960,
            49233,
            47136,
            47268,
            47330,
            47212,
            47285,
            47362,
            47163,
            47361,
            47300,
            47197,
            47292,
            47323,
            47277,
            47415,
            47038,
            47474,
            47422,
            47490,
            47328,
            47391,
            47161,
            47361,
            47383,
            47281,
            47302,
            47386,
            47157,
            47271,
            47340,
            47294,
            47350,
            47348,
            47313,
            47326,
            47244,
            47846,
            49551,
            47277,
            46925,
            47434,
            47429,
            47373,
            47251,
            47407,
            47270,
            47288,
            47080,
            47432,
            47493
          ],
          [
            48098,
            47280,
            47315,
            47148,
            47401,
            47269,
            47175,
            47467,
            47318,
            47331,
            47475,
            47218,
            48960,
            49233,
            47136,
            47268,
            47330,
            47212,
            47285,
            47362,
            47163,
            47361,
            47300,
            47197,
            47292,
            47323,
            47277,
            47415,
            47038,
            47474,
            47422,
            47490,
            47328,
            47391,
            47161,
            47361,
            47383,
            47281,
            47302,
            47386,
            47157,
            47271,
            47340,
            47294,
            47350,
            47348,
            47313,
            47326,
            47244,
            47846,
            49551,
            47277,
            46925,
            47434,
            47429,
            47373,
            47251,
            47407,
            47270,
            47288,
            47080,
            47432,
            47493
          ],
          [
            48098,
            47280,
            47315,
            47148,
            47401,
            47269,
            47175,
            47467,
            47318,
            47331,
            47475,
            47218,
            48960,
            49233,
            47136,
            47268,
            47330,
            47212,
            47285,
            47362,
            47163,
            47361,
            47300,
            47197,
            47292,
            47323,
            47277,
            47415,
            47038,
            47474,
            47422,
            47490,
            47328,
            47391,
            47161,
            47361,
            47383,
            47281,
            47302,
            47386,
            47157,
            47271,
            47340,
            47294,
            47350,
            47348,
            47313,
            47326,
            47244,
            47846,
            49551,
            47277,
            46925,
            47434,
            47429,
            47373,
            47251,
            47407,
            47270,
            47288,
            47080,
            47432,
            47493
          ],
          [
            48098,
            47280,
            47315,
            47148,
            47401,
            47269,
            47175,
            47467,
            47318,
            47331,
            47475,
            47218,
            48960,
            49233,
            47136,
            47268,
            47330,
            47212,
            47285,
            47362,
            47163,
            47361,
            47300,
            47197,
            47292,
            47323,
            47277,
            47415,
            47038,
            47474,
            47422,
            47490,
            47328,
            47391,
            47161,
            47361,
            47383,
            47281,
            47302,
            47386,
            47157,
            47271,
            47340,
            47294,
            47350,
            47348,
            47313,
            47326,
            47244,
            47846,
            49551,
            47277,
            46925,
            47434,
            47429,
            47373,
            47251,
            47407,
            47270,
            47288,
            47080,
            47432,
            47493
          ],
          [
            48098,
            47280,
            47315,
            47148,
            47401,
            47269,
            47175,
            47467,
            47318,
            47331,
            47475,
            47218,
            48960,
            49233,
            47136,
            47268,
            47330,
            47212,
            47285,
            47362,
            47163,
            47361,
            47300,
            47197,
            47292,
            47323,
            47277,
            47415,
            47038,
            47474,
            47422,
            47490,
            47328,
            47391,
            47161,
            47361,
            47383,
            47281,
            47302,
            47386,
            47157,
            47271,
            47340,
            47294,
            47350,
            47348,
            47313,
            47326,
            47244,
            47846,
            49551,
            47277,
            46925,
            47434,
            47429,
            47373,
            47251,
            47407,
            47270,
            47288,
            47080,
            47432,
            47493
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            515,
            2935,
            9973,
            20919,
            32442,
            36855,
            31802,
            19953,
            7433,
            1368,
            96,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            48,
            761,
            3874,
            11143,
            23981,
            33042,
            35120,
            29866,
            23471,
            15031,
            6607,
            1105,
            110,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            56,
            546,
            3140,
            9881,
            21518,
            33352,
            37110,
            34583,
            25659,
            15048,
            5881,
            1269,
            110,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            88,
            1080,
            4678,
            11126,
            21467,
            33271,
            41459,
            40127,
            28694,
            18066,
            6327,
            974,
            59,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            180,
            1262,
            5247,
            13278,
            23894
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            174,
            1647,
            6900,
            16773,
            30485,
            35765,
            33166,
            23436,
            12063,
            3668,
            578,
            25,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            165,
            1341,
            6785,
            17137,
            31754,
            34475,
            31178,
            24701,
            14329,
            3659,
            424,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            331,
            2545,
            8900,
            19037,
            31163,
            38301,
            35014,
            25182,
            12707,
            3386,
            349,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            69,
            717,
            2738,
            6847,
            16686,
            30536,
            38396,
            35831,
            28151,
            17124,
            5900,
            1326,
            85,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            6,
            174,
            961,
            3726,
            9306,
            19809,
            32120,
            38468,
            38479,
            32975,
            22749,
            9999,
            2525,
            369,
            44,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            166,
            1499,
            4924,
            10171,
            18371,
            30206,
            40560,
            41172,
            34742,
            23820,
            10795,
            3600,
            778,
            83,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            72,
            760,
            3166,
            8805
          ]
        ]
      },
      "call": {
        "duration": 0.2725146590018994,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa3636e10>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa3636e10> = array([22, 13, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa361d3d0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48098, 47280, 47315, 47148, 47401, 47269, ...], [48098, 47280, 47315, 47148, 47401, 47269, ...], [..., 0, ...], [0, 0, 0, 56, 546, 3140, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 1, 6, 174, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa3636e10>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa3636e10> = array([22, 13, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016150259980349801,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2932109199973638,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1704908730025636,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001472192001529038,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3130480169966177,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            6,
            29,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            25,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            234,
            85,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035398379986872897,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028786240000044927,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5358082250022562,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            4,
            255,
            214,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            98,
            255,
            145,
            255,
            141,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            88,
            0,
            255,
            14,
            255,
            12
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            83,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            5,
            255,
            129,
            255,
            232,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            230,
            255,
            138,
            255,
            255,
            9,
            0,
            215,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            108,
            255,
            123
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034615669974300545,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002856424001947744,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29600767199735856,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48243,
            47586,
            47328,
            47445,
            47562,
            47543,
            47619,
            49334,
            47571,
            47835,
            47355,
            49958,
            47499,
            47596,
            47577,
            47483,
            47537,
            47487,
            47554,
            47570,
            47473,
            47472,
            47464,
            47411,
            47477,
            47376,
            47545,
            47405,
            47429,
            47444,
            47540,
            47266,
            47090,
            47589,
            47473,
            47551,
            47523,
            47529,
            47441,
            47579,
            49289,
            47502,
            47663,
            47545,
            49805,
            47468,
            47434,
            47513,
            47478,
            47516,
            47513,
            47396,
            47385,
            47378,
            47308,
            47486,
            47407,
            47444,
            47493,
            47577,
            47543,
            47661,
            47550
          ],
          [
            48243,
            47586,
            47328,
            47445,
            47562,
            47543,
            47619,
            49334,
            47571,
            47835,
            47355,
            49958,
            47499,
            47596,
            47577,
            47483,
            47537,
            47487,
            47554,
            47570,
            47473,
            47472,
            47464,
            47411,
            47477,
            47376,
            47545,
            47405,
            47429,
            47444,
            47540,
            47266,
            47090,
            47589,
            47473,
            47551,
            47523,
            47529,
            47441,
            47579,
            49289,
            47502,
            47663,
            47545,
            49805,
            47468,
            47434,
            47513,
            47478,
            47516,
            47513,
            47396,
            47385,
            47378,
            47308,
            47486,
            47407,
            47444,
            47493,
            47577,
            47543,
            47661,
            47550
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            217,
            3938,
            18386,
            36601,
            36174,
            17935,
            4323,
            306,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            207,
            2923,
            16947,
            34947,
            39835,
            24910,
            8038,
            844,
            59,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            818,
            8385,
            29527,
            41761,
            38955,
            18080,
            4425,
            264,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            210,
            3004,
            14476,
            32213,
            42695,
            40352,
            19848,
            4923,
            569,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1338030949991662,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016044050025811885,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06877637999787112,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48100,
            47500,
            47575,
            47255,
            47154,
            47403,
            47528,
            47237,
            47285,
            47230,
            47127,
            47220,
            47224,
            47398,
            47368,
            46928,
            47286,
            47237,
            47440,
            47236,
            49094,
            47491,
            47417,
            47304,
            47275,
            47233,
            47472,
            47164,
            47394,
            47129,
            47465,
            46934,
            47193,
            47185,
            47370,
            47342,
            47317,
            47254,
            47425,
            47355,
            46951,
            49220,
            47322,
            47129,
            47414,
            47202,
            47141,
            47167,
            47252,
            47159,
            47552,
            47212,
            47376,
            47234,
            47314,
            47234,
            47227,
            47144,
            47432,
            47216,
            47559,
            47295,
            47337
          ],
          [
            48100,
            47500,
            47575,
            47255,
            47154,
            47403,
            47528,
            47237,
            47285,
            47230,
            47127,
            47220,
            47224,
            47398,
            47368,
            46928,
            47286,
            47237,
            47440,
            47236,
            49094,
            47491,
            47417,
            47304,
            47275,
            47233,
            47472,
            47164,
            47394,
            47129,
            47465,
            46934,
            47193,
            47185,
            47370,
            47342,
            47317,
            47254,
            47425,
            47355,
            46951,
            49220,
            47322,
            47129,
            47414,
            47202,
            47141,
            47167,
            47252,
            47159,
            47552,
            47212,
            47376,
            47234,
            47314,
            47234,
            47227,
            47144,
            47432,
            47216,
            47559,
            47295,
            47337
          ],
          [
            48100,
            47500,
            47575,
            47255,
            47154,
            47403,
            47528,
            47237,
            47285,
            47230,
            47127,
            47220,
            47224,
            47398,
            47368,
            46928,
            47286,
            47237,
            47440,
            47236,
            49094,
            47491,
            47417,
            47304,
            47275,
            47233,
            47472,
            47164,
            47394,
            47129,
            47465,
            46934,
            47193,
            47185,
            47370,
            47342,
            47317,
            47254,
            47425,
            47355,
            46951,
            49220,
            47322,
            47129,
            47414,
            47202,
            47141,
            47167,
            47252,
            47159,
            47552,
            47212,
            47376,
            47234,
            47314,
            47234,
            47227,
            47144,
            47432,
            47216,
            47559,
            47295,
            47337
          ],
          [
            48100,
            47500,
            47575,
            47255,
            47154,
            47403,
            47528,
            47237,
            47285,
            47230,
            47127,
            47220,
            47224,
            47398,
            47368,
            46928,
            47286,
            47237,
            47440,
            47236,
            49094,
            47491,
            47417,
            47304,
            47275,
            47233,
            47472,
            47164,
            47394,
            47129,
            47465,
            46934,
            47193,
            47185,
            47370,
            47342,
            47317,
            47254,
            47425,
            47355,
            46951,
            49220,
            47322,
            47129,
            47414,
            47202,
            47141,
            47167,
            47252,
            47159,
            47552,
            47212,
            47376,
            47234,
            47314,
            47234,
            47227,
            47144,
            47432,
            47216,
            47559,
            47295,
            47337
          ],
          [
            48100,
            47500,
            47575,
            47255,
            47154,
            47403,
            47528,
            47237,
            47285,
            47230,
            47127,
            47220,
            47224,
            47398,
            47368,
            46928,
            47286,
            47237,
            47440,
            47236,
            49094,
            47491,
            47417,
            47304,
            47275,
            47233,
            47472,
            47164,
            47394,
            47129,
            47465,
            46934,
            47193,
            47185,
            47370,
            47342,
            47317,
            47254,
            47425,
            47355,
            46951,
            49220,
            47322,
            47129,
            47414,
            47202,
            47141,
            47167,
            47252,
            47159,
            47552,
            47212,
            47376,
            47234,
            47314,
            47234,
            47227,
            47144,
            47432,
            47216,
            47559,
            47295,
            47337
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            220,
            2128,
            11735,
            27866,
            38254,
            36962,
            25577,
            11534,
            2703,
            227,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            384,
            2951,
            14096,
            31296,
            40309,
            42460,
            29808,
            15290,
            4176,
            794,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            3,
            156,
            1658,
            7463,
            21382,
            37472,
            40475,
            34004,
            21351,
            9169,
            2483,
            191,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            312,
            1904,
            8716,
            22055,
            36546,
            44012,
            41717,
            27855,
            12820,
            2796,
            199,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            32,
            527,
            2994,
            8443,
            21697,
            35543,
            37996
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            1157,
            6351,
            21796,
            34174,
            38996,
            31647,
            15584,
            3230,
            244,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            456,
            5233,
            17236,
            35288,
            41049,
            33761,
            17961,
            6184,
            854,
            67,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            164,
            1763,
            10294,
            26084,
            39204,
            41586,
            33587,
            17504,
            4648,
            564,
            34,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            222,
            2067,
            9122,
            20935,
            35477,
            41506,
            35292,
            21446,
            8737,
            1911,
            205,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            14,
            276,
            2488,
            11682,
            26497,
            38447,
            39236,
            33822,
            26942,
            16219,
            5855,
            1362,
            73,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            51,
            759,
            3702,
            12348,
            24607,
            36989,
            43175,
            40707,
            29601,
            13883,
            4052,
            616,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            236,
            1591,
            7763,
            17532,
            31100
          ]
        ]
      },
      "call": {
        "duration": 0.2699319019993709,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001498233999882359,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917084569999133,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1710167240016744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014393420024134684,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3362719239994476,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            143,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035343480012670625,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028843840009358246,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5364403989988205,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            7,
            255,
            1,
            40,
            0,
            255,
            0,
            255,
            255
          ],
          [
            57,
            0,
            14,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            43,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            218,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            1,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            8,
            255,
            27,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            6,
            0,
            255,
            3,
            255,
            255
          ],
          [
            69,
            0,
            11,
            0,
            24,
            0,
            255,
            229,
            255,
            255,
            255,
            1
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            136,
            255,
            2,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            96,
            0,
            4,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            120,
            255,
            41,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034748269972624257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028520440027932636,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2963473999989219,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48266,
            47569,
            47645,
            47512,
            47678,
            47538,
            47650,
            47172,
            47276,
            47443,
            47520,
            47497,
            47587,
            47491,
            47401,
            47410,
            47615,
            47456,
            47421,
            47499,
            47492,
            47563,
            47450,
            47595,
            47825,
            47430,
            47752,
            47484,
            50233,
            47459,
            47588,
            47505,
            47536,
            47566,
            47379,
            47464,
            47519,
            47556,
            47480,
            47455,
            47384,
            47461,
            47332,
            47471,
            47320,
            47376,
            47603,
            47629,
            47443,
            47440,
            47367,
            47513,
            47445,
            47452,
            47447,
            47424,
            47607,
            47502,
            47122,
            51797,
            47458,
            47755,
            47494
          ],
          [
            48266,
            47569,
            47645,
            47512,
            47678,
            47538,
            47650,
            47172,
            47276,
            47443,
            47520,
            47497,
            47587,
            47491,
            47401,
            47410,
            47615,
            47456,
            47421,
            47499,
            47492,
            47563,
            47450,
            47595,
            47825,
            47430,
            47752,
            47484,
            50233,
            47459,
            47588,
            47505,
            47536,
            47566,
            47379,
            47464,
            47519,
            47556,
            47480,
            47455,
            47384,
            47461,
            47332,
            47471,
            47320,
            47376,
            47603,
            47629,
            47443,
            47440,
            47367,
            47513,
            47445,
            47452,
            47447,
            47424,
            47607,
            47502,
            47122,
            51797,
            47458,
            47755,
            47494
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            867,
            7661,
            25833,
            40788,
            33364,
            14178,
            2887,
            193,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            830,
            6876,
            23397,
            38860,
            37415,
            20508,
            4552,
            533,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            185,
            1979,
            14270,
            33262,
            41358,
            28749,
            9129,
            1571,
            68,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            677,
            6048,
            22862,
            39068,
            41322,
            29585,
            12043,
            2073,
            213,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            44,
            1002,
            8867,
            26377,
            41109,
            43955
          ]
        ]
      },
      "call": {
        "duration": 0.1336261510004988,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001583916000527097,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689609439978085,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47977,
            47418,
            47183,
            47031,
            47255,
            47253,
            47345,
            47189,
            47355,
            47314,
            47434,
            47341,
            47372,
            47521,
            47326,
            47776,
            47415,
            47228,
            47425,
            47295,
            47084,
            47236,
            47139,
            47377,
            47345,
            47126,
            47242,
            47244,
            47238,
            47175,
            47279,
            47134,
            47384,
            47747,
            47371,
            47496,
            47310,
            47170,
            47398,
            47215,
            47130,
            47346,
            47300,
            47367,
            47310,
            47420,
            47300,
            47311,
            47351,
            47339,
            47437,
            47391,
            47041,
            47481,
            47313,
            47268,
            47200,
            47292,
            47377,
            47378,
            47137,
            47432,
            47241
          ],
          [
            47977,
            47418,
            47183,
            47031,
            47255,
            47253,
            47345,
            47189,
            47355,
            47314,
            47434,
            47341,
            47372,
            47521,
            47326,
            47776,
            47415,
            47228,
            47425,
            47295,
            47084,
            47236,
            47139,
            47377,
            47345,
            47126,
            47242,
            47244,
            47238,
            47175,
            47279,
            47134,
            47384,
            47747,
            47371,
            47496,
            47310,
            47170,
            47398,
            47215,
            47130,
            47346,
            47300,
            47367,
            47310,
            47420,
            47300,
            47311,
            47351,
            47339,
            47437,
            47391,
            47041,
            47481,
            47313,
            47268,
            47200,
            47292,
            47377,
            47378,
            47137,
            47432,
            47241
          ],
          [
            47977,
            47418,
            47183,
            47031,
            47255,
            47253,
            47345,
            47189,
            47355,
            47314,
            47434,
            47341,
            47372,
            47521,
            47326,
            47776,
            47415,
            47228,
            47425,
            47295,
            47084,
            47236,
            47139,
            47377,
            47345,
            47126,
            47242,
            47244,
            47238,
            47175,
            47279,
            47134,
            47384,
            47747,
            47371,
            47496,
            47310,
            47170,
            47398,
            47215,
            47130,
            47346,
            47300,
            47367,
            47310,
            47420,
            47300,
            47311,
            47351,
            47339,
            47437,
            47391,
            47041,
            47481,
            47313,
            47268,
            47200,
            47292,
            47377,
            47378,
            47137,
            47432,
            47241
          ],
          [
            47977,
            47418,
            47183,
            47031,
            47255,
            47253,
            47345,
            47189,
            47355,
            47314,
            47434,
            47341,
            47372,
            47521,
            47326,
            47776,
            47415,
            47228,
            47425,
            47295,
            47084,
            47236,
            47139,
            47377,
            47345,
            47126,
            47242,
            47244,
            47238,
            47175,
            47279,
            47134,
            47384,
            47747,
            47371,
            47496,
            47310,
            47170,
            47398,
            47215,
            47130,
            47346,
            47300,
            47367,
            47310,
            47420,
            47300,
            47311,
            47351,
            47339,
            47437,
            47391,
            47041,
            47481,
            47313,
            47268,
            47200,
            47292,
            47377,
            47378,
            47137,
            47432,
            47241
          ],
          [
            47977,
            47418,
            47183,
            47031,
            47255,
            47253,
            47345,
            47189,
            47355,
            47314,
            47434,
            47341,
            47372,
            47521,
            47326,
            47776,
            47415,
            47228,
            47425,
            47295,
            47084,
            47236,
            47139,
            47377,
            47345,
            47126,
            47242,
            47244,
            47238,
            47175,
            47279,
            47134,
            47384,
            47747,
            47371,
            47496,
            47310,
            47170,
            47398,
            47215,
            47130,
            47346,
            47300,
            47367,
            47310,
            47420,
            47300,
            47311,
            47351,
            47339,
            47437,
            47391,
            47041,
            47481,
            47313,
            47268,
            47200,
            47292,
            47377,
            47378,
            47137,
            47432,
            47241
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            72,
            853,
            6143,
            19546,
            33636,
            39583,
            35531,
            23633,
            11732,
            3175,
            474,
            51,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            181,
            2005,
            10141,
            23554,
            37142,
            41693,
            36091,
            21930,
            7578,
            1726,
            207,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            207,
            1454,
            4993,
            12553,
            26145,
            37120,
            43292,
            39023,
            22284,
            8370,
            1665,
            211,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            37,
            517,
            2701,
            6874,
            15403,
            30130,
            39771,
            37031,
            26949,
            13243,
            3822,
            773,
            72,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            62
          ],
          [
            10939,
            3125,
            300,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            134,
            1531,
            9105,
            20630,
            33366,
            38618,
            29286,
            14722,
            5165,
            802,
            69,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            68,
            905,
            5661,
            15592,
            28445,
            35899,
            32490,
            21446,
            7891,
            1300,
            144,
            6,
            1,
            0,
            0,
            0
          ],
          [
            78,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            77,
            1043,
            6430,
            16678,
            27387,
            39187,
            40259,
            31697,
            20017,
            9138,
            2696,
            330,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            120,
            992,
            4513,
            15062,
            27870,
            35048,
            32800,
            22528,
            10991,
            3299,
            593,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            174,
            1574,
            6064,
            15648,
            27624,
            37347,
            41471,
            37472,
            24976,
            13982,
            4098,
            499,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            64,
            605,
            2746,
            8399,
            17960,
            30106,
            37694,
            36209,
            30626,
            22733,
            13108,
            4870,
            1200,
            93,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.272580120999919,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa347b390>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa347b390> = array([14, 12, 14, 13, 10]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa361d3d0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47977, 47418, 47183, 47031, 47255, 47253, ...], [47977, 47418, 47183, 47031, 47255, 47253, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [10939, 3125, 300, 12, 0, 0, ...], [78, 1, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa347b390>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa347b390> = array([14, 12, 14, 13, 10]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0015914149989839643,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29232011000203784,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170464022001397,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0048684789981052745,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}