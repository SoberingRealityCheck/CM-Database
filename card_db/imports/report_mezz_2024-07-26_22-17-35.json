{
  "created": 1722032275.1953244,
  "duration": 23.546963691711426,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5062000789985177,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14853492100155563,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013136089983163401,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038301550011965446,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14831849599795532,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012798889983969275,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13343576499755727,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1218079870013753,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013032889983151108,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003810384001553757,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12107162100073765,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012626380012079608,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003350625000166474,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14667415900112246,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001199066999106435,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003363165000337176,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12018342000010307,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001175125998997828,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003358965001098113,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464967060019262,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012389370021992363,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033705140012898482,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12028944300254807,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011780059976445045,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00441105800200603,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002107276999595342,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001160785999672953,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003344025000842521,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017461280003772117,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00108266399911372,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003307842998765409,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004038508999656187,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032257.4519372,
            "msecs": 451.937198638916,
            "relativeCreated": 7773.282051086426,
            "thread": 281473375551520,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4632
          }
        ]
      },
      "teardown": {
        "duration": 0.0011906660001841374,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033481950013083406,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023943529995449353,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032257.4642336,
            "msecs": 464.2336368560791,
            "relativeCreated": 7785.578489303589,
            "thread": 281473375551520,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4632
          }
        ]
      },
      "teardown": {
        "duration": 0.001167385998996906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020830959983868524,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027229209990764502,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032257.4737093,
            "msecs": 473.7093448638916,
            "relativeCreated": 7795.054197311401,
            "thread": 281473375551520,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4632
          }
        ]
      },
      "teardown": {
        "duration": 0.0010406340006738901,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002095037001708988,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034240069981024135,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032257.4832153,
            "msecs": 483.21533203125,
            "relativeCreated": 7804.56018447876,
            "thread": 281473375551520,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4632
          }
        ]
      },
      "teardown": {
        "duration": 0.0010934950005321298,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003354885000590002,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467214399999648,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011933659989153966,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033558739996806253,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12042213500171783,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001205516997288214,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.18009709200123325,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774182299879612,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001253937000001315,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01522167800067109,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12135254600070766,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012446079999790527,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8499635980006133,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            62,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            14,
            122,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035526490028132685,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029031049998593517,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9134347979997983,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            12,
            0,
            1,
            0,
            0
          ],
          [
            0,
            16,
            0,
            2,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            11,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            222,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            31,
            255,
            255,
            255,
            17
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            75,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            172,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            137,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            149,
            0,
            113,
            255
          ],
          [
            255,
            0,
            172,
            0,
            255,
            0,
            173,
            52,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034858079998230096,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002884564000851242,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3032640490018821,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48168,
            47621,
            47590,
            47240,
            47283,
            47668,
            47690,
            47491,
            47459,
            47459,
            47608,
            47527,
            47450,
            47429,
            47716,
            47500,
            47428,
            47383,
            47506,
            47469,
            47551,
            47449,
            47646,
            47469,
            47464,
            47491,
            47805,
            47400,
            49304,
            47549,
            47667,
            47297,
            47306,
            47364,
            47552,
            47590,
            47464,
            47546,
            47596,
            47474,
            47506,
            47611,
            47555,
            47546,
            47371,
            47570,
            47606,
            47464,
            47418,
            47655,
            47608,
            47556,
            47584,
            47521,
            47375,
            51687,
            47439,
            47794,
            47574,
            49804,
            47609,
            47527,
            47696
          ],
          [
            48168,
            47621,
            47590,
            47240,
            47283,
            47668,
            47690,
            47491,
            47459,
            47459,
            47608,
            47527,
            47450,
            47429,
            47716,
            47500,
            47428,
            47383,
            47506,
            47469,
            47551,
            47449,
            47646,
            47469,
            47464,
            47491,
            47805,
            47400,
            49304,
            47549,
            47667,
            47297,
            47306,
            47364,
            47552,
            47590,
            47464,
            47546,
            47596,
            47474,
            47506,
            47611,
            47555,
            47546,
            47371,
            47570,
            47606,
            47464,
            47418,
            47655,
            47608,
            47556,
            47584,
            47521,
            47375,
            51687,
            47439,
            47794,
            47574,
            49804,
            47609,
            47527,
            47696
          ]
        ],
        "eTX_errcounts": [
          [
            40727,
            26877,
            8090,
            1377,
            103,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            250,
            3333,
            16010,
            35077,
            42779,
            32647,
            14274,
            2131,
            107,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            62,
            924,
            7501,
            25361,
            39958,
            41129,
            19246,
            5218,
            605,
            34,
            0,
            0,
            0
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            308,
            3929,
            17681,
            36188,
            42185,
            31544,
            13161,
            3050,
            308,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            514,
            4467,
            19001,
            36630,
            43236,
            35800,
            16854,
            3301,
            349,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13436152600115747,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016287960024783388,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06923442800325574,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47955,
            46958,
            47346,
            47364,
            47249,
            47429,
            47657,
            47464,
            47373,
            47275,
            49165,
            49251,
            47304,
            47380,
            47409,
            47225,
            47317,
            47264,
            47162,
            47184,
            47348,
            47343,
            47190,
            47344,
            47419,
            47111,
            47034,
            47383,
            49245,
            49202,
            47287,
            47349,
            47398,
            47235,
            47489,
            47265,
            47231,
            47418,
            47428,
            47342,
            47317,
            47290,
            47479,
            47233,
            47405,
            47451,
            47624,
            47420,
            47207,
            47389,
            47008,
            47321,
            47228,
            47209,
            47216,
            47331,
            47306,
            47428,
            47334,
            47310,
            47516,
            47208,
            47362
          ],
          [
            47955,
            46958,
            47346,
            47364,
            47249,
            47429,
            47657,
            47464,
            47373,
            47275,
            49165,
            49251,
            47304,
            47380,
            47409,
            47225,
            47317,
            47264,
            47162,
            47184,
            47348,
            47343,
            47190,
            47344,
            47419,
            47111,
            47034,
            47383,
            49245,
            49202,
            47287,
            47349,
            47398,
            47235,
            47489,
            47265,
            47231,
            47418,
            47428,
            47342,
            47317,
            47290,
            47479,
            47233,
            47405,
            47451,
            47624,
            47420,
            47207,
            47389,
            47008,
            47321,
            47228,
            47209,
            47216,
            47331,
            47306,
            47428,
            47334,
            47310,
            47516,
            47208,
            47362
          ],
          [
            47955,
            46958,
            47346,
            47364,
            47249,
            47429,
            47657,
            47464,
            47373,
            47275,
            49165,
            49251,
            47304,
            47380,
            47409,
            47225,
            47317,
            47264,
            47162,
            47184,
            47348,
            47343,
            47190,
            47344,
            47419,
            47111,
            47034,
            47383,
            49245,
            49202,
            47287,
            47349,
            47398,
            47235,
            47489,
            47265,
            47231,
            47418,
            47428,
            47342,
            47317,
            47290,
            47479,
            47233,
            47405,
            47451,
            47624,
            47420,
            47207,
            47389,
            47008,
            47321,
            47228,
            47209,
            47216,
            47331,
            47306,
            47428,
            47334,
            47310,
            47516,
            47208,
            47362
          ],
          [
            47955,
            46958,
            47346,
            47364,
            47249,
            47429,
            47657,
            47464,
            47373,
            47275,
            49165,
            49251,
            47304,
            47380,
            47409,
            47225,
            47317,
            47264,
            47162,
            47184,
            47348,
            47343,
            47190,
            47344,
            47419,
            47111,
            47034,
            47383,
            49245,
            49202,
            47287,
            47349,
            47398,
            47235,
            47489,
            47265,
            47231,
            47418,
            47428,
            47342,
            47317,
            47290,
            47479,
            47233,
            47405,
            47451,
            47624,
            47420,
            47207,
            47389,
            47008,
            47321,
            47228,
            47209,
            47216,
            47331,
            47306,
            47428,
            47334,
            47310,
            47516,
            47208,
            47362
          ],
          [
            47955,
            46958,
            47346,
            47364,
            47249,
            47429,
            47657,
            47464,
            47373,
            47275,
            49165,
            49251,
            47304,
            47380,
            47409,
            47225,
            47317,
            47264,
            47162,
            47184,
            47348,
            47343,
            47190,
            47344,
            47419,
            47111,
            47034,
            47383,
            49245,
            49202,
            47287,
            47349,
            47398,
            47235,
            47489,
            47265,
            47231,
            47418,
            47428,
            47342,
            47317,
            47290,
            47479,
            47233,
            47405,
            47451,
            47624,
            47420,
            47207,
            47389,
            47008,
            47321,
            47228,
            47209,
            47216,
            47331,
            47306,
            47428,
            47334,
            47310,
            47516,
            47208,
            47362
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            539,
            3092,
            9885,
            22922,
            33446,
            36249,
            31438,
            20471,
            9117,
            2389,
            418,
            66,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            43,
            861,
            4532,
            12524,
            24014,
            32544,
            35492,
            31296,
            23077,
            12609,
            4357,
            888,
            152,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            132,
            1183,
            4145,
            10126,
            21652,
            35805,
            39573,
            36643,
            26984,
            15793,
            8553,
            3144,
            669,
            62,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            165,
            1439,
            5751,
            15099,
            27492,
            32516,
            34911,
            35854,
            27794,
            16488,
            6538,
            1579,
            128,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            70,
            556,
            2360,
            6061,
            13879,
            27444
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            163,
            1033,
            5469,
            16751,
            31078,
            35319,
            32422,
            22863,
            12731,
            4881,
            1083,
            86,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            4,
            132,
            1377,
            6424,
            15217,
            28582,
            35798,
            32946,
            23385,
            11604,
            3530,
            478,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            45,
            445,
            2345,
            8315,
            20035,
            34306,
            37814,
            34287,
            26161,
            15935,
            7044,
            1543,
            198,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            51,
            744,
            3356,
            8528,
            16984,
            27704,
            36375,
            34114,
            26345,
            15600,
            6680,
            1682,
            164,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            11,
            198,
            1233,
            3489,
            7677,
            17908,
            34871,
            41186,
            36622,
            30846,
            22745,
            13840,
            7636,
            2789,
            475,
            56,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            125,
            1231,
            5060,
            12203,
            25030,
            33080,
            36002,
            37535,
            32918,
            23842,
            14896,
            7319,
            1810,
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            116,
            930,
            3361,
            8555
          ]
        ]
      },
      "call": {
        "duration": 0.27297987599740736,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8bd5cf90>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8bd5cf90> = array([22, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8bd6d3d0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47955, 46958, 47346, 47364, 47249, 47429, ...], [47955, 46958, 47346, 47364, 47249, 47429, ...], [..., ...], [0, 0, 4, 132, 1183, 4145, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 11, 198, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8bd5cf90>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8bd5cf90> = array([22, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001604466000571847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29339457899914123,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1710451030012337,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014337909997266252,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3093598660016141,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            46,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            239,
            101,
            7,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003521327998896595,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002891613999963738,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5357832859990594,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            11,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            75,
            255,
            112,
            255,
            115,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            227,
            0,
            191,
            6,
            255,
            69,
            255,
            17
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            63,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            4,
            255,
            229,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            166,
            255,
            149,
            255,
            255,
            6,
            0,
            118,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            4,
            255,
            133,
            255,
            99
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003444046000367962,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028746330026478972,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2962701440010278,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48060,
            47582,
            47497,
            47711,
            47480,
            47641,
            47678,
            47656,
            47488,
            47380,
            47464,
            47611,
            47529,
            47738,
            49357,
            47655,
            47913,
            47698,
            47671,
            47572,
            47484,
            47468,
            47389,
            47598,
            47481,
            47472,
            47666,
            47748,
            47224,
            47069,
            47440,
            47416,
            47356,
            47563,
            47521,
            47644,
            47526,
            47587,
            47491,
            47493,
            47412,
            47516,
            47633,
            49551,
            47490,
            47846,
            47574,
            50165,
            47482,
            47471,
            47423,
            47526,
            47462,
            47398,
            47468,
            47545,
            47618,
            47488,
            47633,
            47471,
            47444,
            47726,
            47536
          ],
          [
            48060,
            47582,
            47497,
            47711,
            47480,
            47641,
            47678,
            47656,
            47488,
            47380,
            47464,
            47611,
            47529,
            47738,
            49357,
            47655,
            47913,
            47698,
            47671,
            47572,
            47484,
            47468,
            47389,
            47598,
            47481,
            47472,
            47666,
            47748,
            47224,
            47069,
            47440,
            47416,
            47356,
            47563,
            47521,
            47644,
            47526,
            47587,
            47491,
            47493,
            47412,
            47516,
            47633,
            49551,
            47490,
            47846,
            47574,
            50165,
            47482,
            47471,
            47423,
            47526,
            47462,
            47398,
            47468,
            47545,
            47618,
            47488,
            47633,
            47471,
            47444,
            47726,
            47536
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            337,
            3571,
            17566,
            36453,
            36804,
            18704,
            4474,
            324,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            174,
            2873,
            16492,
            37084,
            40490,
            25973,
            9211,
            810,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            920,
            8569,
            29216,
            42369,
            38888,
            18902,
            4418,
            353,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            186,
            2579,
            13774,
            31158,
            44421,
            38977,
            20611,
            5393,
            636,
            25,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13439554700016743,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016328160018019844,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06898242299939739,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48138,
            47590,
            47297,
            47239,
            47375,
            47299,
            47259,
            47377,
            49082,
            48605,
            47366,
            47182,
            47117,
            46976,
            47144,
            47236,
            47310,
            47199,
            47179,
            47266,
            47347,
            47117,
            47440,
            47235,
            47152,
            47384,
            47669,
            47156,
            47425,
            47128,
            47195,
            47232,
            47131,
            47175,
            47345,
            47237,
            47325,
            47321,
            46978,
            47223,
            47365,
            47194,
            47238,
            47704,
            47481,
            47042,
            47185,
            47340,
            47141,
            47181,
            47193,
            47186,
            47203,
            47233,
            47119,
            47469,
            47396,
            47191,
            47362,
            47347,
            47171,
            47600,
            46928
          ],
          [
            48138,
            47590,
            47297,
            47239,
            47375,
            47299,
            47259,
            47377,
            49082,
            48605,
            47366,
            47182,
            47117,
            46976,
            47144,
            47236,
            47310,
            47199,
            47179,
            47266,
            47347,
            47117,
            47440,
            47235,
            47152,
            47384,
            47669,
            47156,
            47425,
            47128,
            47195,
            47232,
            47131,
            47175,
            47345,
            47237,
            47325,
            47321,
            46978,
            47223,
            47365,
            47194,
            47238,
            47704,
            47481,
            47042,
            47185,
            47340,
            47141,
            47181,
            47193,
            47186,
            47203,
            47233,
            47119,
            47469,
            47396,
            47191,
            47362,
            47347,
            47171,
            47600,
            46928
          ],
          [
            48138,
            47590,
            47297,
            47239,
            47375,
            47299,
            47259,
            47377,
            49082,
            48605,
            47366,
            47182,
            47117,
            46976,
            47144,
            47236,
            47310,
            47199,
            47179,
            47266,
            47347,
            47117,
            47440,
            47235,
            47152,
            47384,
            47669,
            47156,
            47425,
            47128,
            47195,
            47232,
            47131,
            47175,
            47345,
            47237,
            47325,
            47321,
            46978,
            47223,
            47365,
            47194,
            47238,
            47704,
            47481,
            47042,
            47185,
            47340,
            47141,
            47181,
            47193,
            47186,
            47203,
            47233,
            47119,
            47469,
            47396,
            47191,
            47362,
            47347,
            47171,
            47600,
            46928
          ],
          [
            48138,
            47590,
            47297,
            47239,
            47375,
            47299,
            47259,
            47377,
            49082,
            48605,
            47366,
            47182,
            47117,
            46976,
            47144,
            47236,
            47310,
            47199,
            47179,
            47266,
            47347,
            47117,
            47440,
            47235,
            47152,
            47384,
            47669,
            47156,
            47425,
            47128,
            47195,
            47232,
            47131,
            47175,
            47345,
            47237,
            47325,
            47321,
            46978,
            47223,
            47365,
            47194,
            47238,
            47704,
            47481,
            47042,
            47185,
            47340,
            47141,
            47181,
            47193,
            47186,
            47203,
            47233,
            47119,
            47469,
            47396,
            47191,
            47362,
            47347,
            47171,
            47600,
            46928
          ],
          [
            48138,
            47590,
            47297,
            47239,
            47375,
            47299,
            47259,
            47377,
            49082,
            48605,
            47366,
            47182,
            47117,
            46976,
            47144,
            47236,
            47310,
            47199,
            47179,
            47266,
            47347,
            47117,
            47440,
            47235,
            47152,
            47384,
            47669,
            47156,
            47425,
            47128,
            47195,
            47232,
            47131,
            47175,
            47345,
            47237,
            47325,
            47321,
            46978,
            47223,
            47365,
            47194,
            47238,
            47704,
            47481,
            47042,
            47185,
            47340,
            47141,
            47181,
            47193,
            47186,
            47203,
            47233,
            47119,
            47469,
            47396,
            47191,
            47362,
            47347,
            47171,
            47600,
            46928
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            289,
            2910,
            13138,
            26215,
            34608,
            33528,
            22517,
            10590,
            3017,
            394,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            35,
            720,
            4637,
            15062,
            26131,
            36306,
            38531,
            31271,
            17831,
            4720,
            628,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            8,
            219,
            1417,
            6526,
            18294,
            33162,
            38900,
            34813,
            19455,
            6755,
            992,
            91,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            166,
            1836,
            10749,
            23943,
            36020,
            42482,
            40552,
            31151,
            16514,
            4566,
            635,
            32,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            413,
            2305,
            7938,
            18955,
            32398,
            36925
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            567,
            4032,
            16180,
            30308,
            36642,
            31831,
            17572,
            6244,
            1106,
            60,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            81,
            1038,
            7553,
            21710,
            37278,
            41595,
            35414,
            22259,
            9466,
            1910,
            155,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            134,
            1145,
            6825,
            20158,
            33996,
            38371,
            33823,
            20163,
            8066,
            1363,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            305,
            2807,
            12103,
            24732,
            33492,
            38477,
            35901,
            26086,
            12398,
            3317,
            213,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            3,
            199,
            1989,
            9051,
            21375,
            34550,
            40627,
            35690,
            24068,
            11572,
            2545,
            414,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            648,
            3791,
            14300,
            26709,
            36062,
            40871,
            37829,
            27284,
            13319,
            3504,
            562,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            84,
            980,
            5863,
            16846,
            31505
          ]
        ]
      },
      "call": {
        "duration": 0.27167142699909164,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015085539998835884,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918764860005467,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1706279440004437,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001468802998715546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.351283906999015,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            105,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035295779998705257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028740929992636666,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.538013385998056,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            6,
            255,
            1,
            83,
            0,
            255,
            0,
            255,
            255
          ],
          [
            56,
            0,
            8,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            25,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            207,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            0,
            1,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            11,
            255,
            57,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            2,
            255
          ],
          [
            255,
            2,
            255,
            8,
            255,
            9,
            9,
            0,
            255,
            6,
            255,
            255
          ],
          [
            55,
            0,
            5,
            0,
            5,
            0,
            255,
            255,
            255,
            255,
            255,
            1
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            109,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            94,
            0,
            6,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            116,
            255,
            80,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003459737003140617,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028902339981868863,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29685899700052687,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48093,
            47586,
            47478,
            47507,
            47445,
            47358,
            49124,
            47594,
            47988,
            47576,
            49418,
            47594,
            47614,
            47701,
            47483,
            47811,
            47516,
            47517,
            47529,
            47464,
            47510,
            47548,
            47399,
            47576,
            47452,
            47502,
            47420,
            47559,
            47447,
            47403,
            47489,
            47642,
            47444,
            47537,
            47620,
            47599,
            47573,
            47858,
            47591,
            49943,
            47705,
            47321,
            47460,
            47556,
            47468,
            47067,
            47048,
            47458,
            47543,
            47537,
            47492,
            47517,
            47597,
            47508,
            47569,
            47629,
            47491,
            47403,
            47433,
            47434,
            47458,
            47537,
            47456
          ],
          [
            48093,
            47586,
            47478,
            47507,
            47445,
            47358,
            49124,
            47594,
            47988,
            47576,
            49418,
            47594,
            47614,
            47701,
            47483,
            47811,
            47516,
            47517,
            47529,
            47464,
            47510,
            47548,
            47399,
            47576,
            47452,
            47502,
            47420,
            47559,
            47447,
            47403,
            47489,
            47642,
            47444,
            47537,
            47620,
            47599,
            47573,
            47858,
            47591,
            49943,
            47705,
            47321,
            47460,
            47556,
            47468,
            47067,
            47048,
            47458,
            47543,
            47537,
            47492,
            47517,
            47597,
            47508,
            47569,
            47629,
            47491,
            47403,
            47433,
            47434,
            47458,
            47537,
            47456
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            634,
            7332,
            24502,
            39282,
            34707,
            15386,
            3210,
            159,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            652,
            7270,
            22989,
            41245,
            38878,
            21759,
            4965,
            461,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28
          ],
          [
            0,
            0,
            0,
            0,
            89,
            1985,
            14404,
            32130,
            41450,
            29678,
            10385,
            1769,
            136,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            520,
            5730,
            22461,
            39316,
            41658,
            30150,
            13024,
            2027,
            250,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            31,
            710,
            7664,
            25259,
            40745,
            43718
          ]
        ]
      },
      "call": {
        "duration": 0.1344596580020152,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016018549977161456,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06923613900289638,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47739,
            47283,
            47307,
            47313,
            47239,
            47521,
            47388,
            47162,
            47078,
            47286,
            47097,
            47002,
            47332,
            47237,
            47414,
            47357,
            47263,
            47278,
            47143,
            47245,
            47348,
            47380,
            52503,
            49138,
            47328,
            47438,
            47250,
            47174,
            47198,
            47186,
            46995,
            47220,
            47271,
            47265,
            47132,
            47215,
            47141,
            47173,
            47345,
            47268,
            47568,
            47076,
            47128,
            47107,
            47242,
            47166,
            47038,
            47187,
            47291,
            47279,
            47192,
            47102,
            47337,
            47264,
            47414,
            47258,
            47237,
            47497,
            47517,
            47248,
            47045,
            47196,
            47295
          ],
          [
            47739,
            47283,
            47307,
            47313,
            47239,
            47521,
            47388,
            47162,
            47078,
            47286,
            47097,
            47002,
            47332,
            47237,
            47414,
            47357,
            47263,
            47278,
            47143,
            47245,
            47348,
            47380,
            52503,
            49138,
            47328,
            47438,
            47250,
            47174,
            47198,
            47186,
            46995,
            47220,
            47271,
            47265,
            47132,
            47215,
            47141,
            47173,
            47345,
            47268,
            47568,
            47076,
            47128,
            47107,
            47242,
            47166,
            47038,
            47187,
            47291,
            47279,
            47192,
            47102,
            47337,
            47264,
            47414,
            47258,
            47237,
            47497,
            47517,
            47248,
            47045,
            47196,
            47295
          ],
          [
            47739,
            47283,
            47307,
            47313,
            47239,
            47521,
            47388,
            47162,
            47078,
            47286,
            47097,
            47002,
            47332,
            47237,
            47414,
            47357,
            47263,
            47278,
            47143,
            47245,
            47348,
            47380,
            52503,
            49138,
            47328,
            47438,
            47250,
            47174,
            47198,
            47186,
            46995,
            47220,
            47271,
            47265,
            47132,
            47215,
            47141,
            47173,
            47345,
            47268,
            47568,
            47076,
            47128,
            47107,
            47242,
            47166,
            47038,
            47187,
            47291,
            47279,
            47192,
            47102,
            47337,
            47264,
            47414,
            47258,
            47237,
            47497,
            47517,
            47248,
            47045,
            47196,
            47295
          ],
          [
            47739,
            47283,
            47307,
            47313,
            47239,
            47521,
            47388,
            47162,
            47078,
            47286,
            47097,
            47002,
            47332,
            47237,
            47414,
            47357,
            47263,
            47278,
            47143,
            47245,
            47348,
            47380,
            52503,
            49138,
            47328,
            47438,
            47250,
            47174,
            47198,
            47186,
            46995,
            47220,
            47271,
            47265,
            47132,
            47215,
            47141,
            47173,
            47345,
            47268,
            47568,
            47076,
            47128,
            47107,
            47242,
            47166,
            47038,
            47187,
            47291,
            47279,
            47192,
            47102,
            47337,
            47264,
            47414,
            47258,
            47237,
            47497,
            47517,
            47248,
            47045,
            47196,
            47295
          ],
          [
            47739,
            47283,
            47307,
            47313,
            47239,
            47521,
            47388,
            47162,
            47078,
            47286,
            47097,
            47002,
            47332,
            47237,
            47414,
            47357,
            47263,
            47278,
            47143,
            47245,
            47348,
            47380,
            52503,
            49138,
            47328,
            47438,
            47250,
            47174,
            47198,
            47186,
            46995,
            47220,
            47271,
            47265,
            47132,
            47215,
            47141,
            47173,
            47345,
            47268,
            47568,
            47076,
            47128,
            47107,
            47242,
            47166,
            47038,
            47187,
            47291,
            47279,
            47192,
            47102,
            47337,
            47264,
            47414,
            47258,
            47237,
            47497,
            47517,
            47248,
            47045,
            47196,
            47295
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            209,
            1995,
            8427,
            17904,
            27549,
            35497,
            36052,
            30748,
            14348,
            3283,
            344,
            13,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            306,
            2436,
            10277,
            22680,
            34136,
            38171,
            33053,
            20187,
            7745,
            2491,
            352,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            47,
            650,
            4680,
            15680,
            27025,
            34733,
            38779,
            36990,
            26214,
            13523,
            5256,
            805,
            72,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            160,
            1389,
            5406,
            15608,
            27800,
            35258,
            34574,
            25558,
            13019,
            4330,
            759,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            14158,
            5723,
            1060,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            204,
            2030,
            11903,
            24305,
            34807,
            39983,
            32594,
            19457,
            8226,
            1789,
            103,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            406,
            3930,
            14209,
            28531,
            38340,
            35271,
            23239,
            9594,
            2449,
            233,
            12,
            1,
            0,
            0,
            0
          ],
          [
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            77,
            1118,
            6918,
            19110,
            30833,
            38664,
            43712,
            35019,
            24159,
            12254,
            3427,
            400,
            20,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            485,
            3287,
            13113,
            25064,
            35286,
            33921,
            21892,
            10714,
            4103,
            878,
            57,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            59,
            1263,
            6029,
            17750,
            28344,
            36730,
            39298,
            35216,
            24264,
            13238,
            3425,
            517,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            157,
            1501,
            6607,
            17552,
            30036,
            39174,
            40371,
            33266,
            22132,
            12442,
            5602,
            1603,
            134,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27167184700010694,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015046830012579449,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2922946049984603,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.171911222001654,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045559, 10011390), (411392, 411392), (40048517, 10012129))\nassert ((40045559 > 0 and 10011390 == 0\n  +10011390\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff8bd6d6d0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff8bb25a60>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff8bdce1f0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045559, 10011390), (411392, 411392), (40048517, 10012129))\nE       assert ((40045559 > 0 and 10011390 == 0\nE         +10011390\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004942609997669933,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}