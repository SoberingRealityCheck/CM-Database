{
  "created": 1722032024.9938238,
  "duration": 23.479836463928223,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5116167879968998,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14832836700225016,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013159190020815004,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038164749967108946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14794000800247886,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012559770002553705,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13388628500251798,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12183030700180097,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001267977997486014,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037931340011709835,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12109553100162884,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012874479980382603,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033605540011194535,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14634604200182366,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011694860004354268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033488850021967664,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11979383200014126,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001148965002357727,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033539539981575217,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14629753100234666,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011650460000964813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033520040014991537,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11982812300266232,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011744969997380394,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004463679000764387,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002078986002743477,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011222650027775671,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033466640015831217,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017293279997829814,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010778940013551619,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003299142998002935,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004021708999061957,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032007.2725966,
            "msecs": 272.5965976715088,
            "relativeCreated": 7734.035968780518,
            "thread": 281473545465888,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4514
          }
        ]
      },
      "teardown": {
        "duration": 0.0011796860017057043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003368355002749013,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002358052002819022,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032007.2848413,
            "msecs": 284.84129905700684,
            "relativeCreated": 7746.280670166016,
            "thread": 281473545465888,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4514
          }
        ]
      },
      "teardown": {
        "duration": 0.0011578750018088613,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020864859980065376,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027206699996895622,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032007.2942398,
            "msecs": 294.23975944519043,
            "relativeCreated": 7755.679130554199,
            "thread": 281473545465888,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4514
          }
        ]
      },
      "teardown": {
        "duration": 0.0010209829997620545,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020480549974308815,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034226560019305907,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032007.3036218,
            "msecs": 303.621768951416,
            "relativeCreated": 7765.061140060425,
            "thread": 281473545465888,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4514
          }
        ]
      },
      "teardown": {
        "duration": 0.0010725239990279078,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003337123998790048,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14621250900017912,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011801360014942475,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033457939971412998,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12001346699980786,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011901559992111288,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17969220300074085,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14743680599713116,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012754189992847387,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015172326999163488,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12091444699763088,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001255917999515077,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8316429119986424,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            17,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            80,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            9,
            118,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035362989983696025,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028514740006357897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.893723820001469,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            8,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            44,
            255,
            255,
            255,
            2
          ],
          [
            12,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            26,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            63,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            179,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            172,
            255,
            255,
            255,
            255,
            0,
            0,
            227,
            0,
            165,
            255
          ],
          [
            255,
            0,
            168,
            0,
            255,
            0,
            255,
            83,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034178560017608106,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028723539981001522,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30245514099806314,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48359,
            47505,
            47534,
            47372,
            47555,
            47723,
            47796,
            47741,
            47578,
            49205,
            47463,
            47769,
            47551,
            47435,
            47439,
            47548,
            47335,
            47505,
            47504,
            47353,
            47525,
            47330,
            47512,
            47372,
            47447,
            47405,
            47588,
            47642,
            47580,
            47471,
            47570,
            47621,
            47479,
            47450,
            47478,
            47583,
            47504,
            47537,
            47392,
            47230,
            47308,
            47436,
            47497,
            47557,
            47491,
            47533,
            47982,
            47760,
            47481,
            47430,
            47499,
            47363,
            47426,
            47412,
            47313,
            47477,
            47488,
            47628,
            47356,
            47461,
            47449,
            47442,
            47408
          ],
          [
            48359,
            47505,
            47534,
            47372,
            47555,
            47723,
            47796,
            47741,
            47578,
            49205,
            47463,
            47769,
            47551,
            47435,
            47439,
            47548,
            47335,
            47505,
            47504,
            47353,
            47525,
            47330,
            47512,
            47372,
            47447,
            47405,
            47588,
            47642,
            47580,
            47471,
            47570,
            47621,
            47479,
            47450,
            47478,
            47583,
            47504,
            47537,
            47392,
            47230,
            47308,
            47436,
            47497,
            47557,
            47491,
            47533,
            47982,
            47760,
            47481,
            47430,
            47499,
            47363,
            47426,
            47412,
            47313,
            47477,
            47488,
            47628,
            47356,
            47461,
            47449,
            47442,
            47408
          ]
        ],
        "eTX_errcounts": [
          [
            40355,
            26331,
            8144,
            1220,
            102,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            174,
            2954,
            15941,
            34634,
            42580,
            30869,
            14050,
            1998,
            136,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            993,
            8032,
            25390,
            40188,
            37245,
            19825,
            5380,
            579,
            12,
            1,
            0,
            0
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            249,
            3804,
            17621,
            36157,
            42571,
            31864,
            13324,
            3250,
            295,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            410,
            4369,
            19446,
            36605,
            42858,
            35076,
            17554,
            3375,
            377,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1337715029985702,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016036850029195193,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06890511100209551,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48394,
            47957,
            47603,
            47447,
            47264,
            47491,
            47340,
            47398,
            47299,
            47303,
            47207,
            47270,
            47320,
            47467,
            47352,
            47393,
            47388,
            47516,
            47394,
            47494,
            47358,
            47314,
            47265,
            47404,
            47326,
            47358,
            47217,
            47258,
            47249,
            47315,
            47251,
            47012,
            47630,
            47375,
            47445,
            47475,
            47827,
            47722,
            47342,
            47372,
            47250,
            47394,
            47245,
            47104,
            47331,
            47279,
            47426,
            47305,
            47274,
            47459,
            47444,
            47338,
            47440,
            47417,
            47363,
            47510,
            47208,
            47380,
            47413,
            47352,
            47230,
            47349,
            47362
          ],
          [
            48394,
            47957,
            47603,
            47447,
            47264,
            47491,
            47340,
            47398,
            47299,
            47303,
            47207,
            47270,
            47320,
            47467,
            47352,
            47393,
            47388,
            47516,
            47394,
            47494,
            47358,
            47314,
            47265,
            47404,
            47326,
            47358,
            47217,
            47258,
            47249,
            47315,
            47251,
            47012,
            47630,
            47375,
            47445,
            47475,
            47827,
            47722,
            47342,
            47372,
            47250,
            47394,
            47245,
            47104,
            47331,
            47279,
            47426,
            47305,
            47274,
            47459,
            47444,
            47338,
            47440,
            47417,
            47363,
            47510,
            47208,
            47380,
            47413,
            47352,
            47230,
            47349,
            47362
          ],
          [
            48394,
            47957,
            47603,
            47447,
            47264,
            47491,
            47340,
            47398,
            47299,
            47303,
            47207,
            47270,
            47320,
            47467,
            47352,
            47393,
            47388,
            47516,
            47394,
            47494,
            47358,
            47314,
            47265,
            47404,
            47326,
            47358,
            47217,
            47258,
            47249,
            47315,
            47251,
            47012,
            47630,
            47375,
            47445,
            47475,
            47827,
            47722,
            47342,
            47372,
            47250,
            47394,
            47245,
            47104,
            47331,
            47279,
            47426,
            47305,
            47274,
            47459,
            47444,
            47338,
            47440,
            47417,
            47363,
            47510,
            47208,
            47380,
            47413,
            47352,
            47230,
            47349,
            47362
          ],
          [
            48394,
            47957,
            47603,
            47447,
            47264,
            47491,
            47340,
            47398,
            47299,
            47303,
            47207,
            47270,
            47320,
            47467,
            47352,
            47393,
            47388,
            47516,
            47394,
            47494,
            47358,
            47314,
            47265,
            47404,
            47326,
            47358,
            47217,
            47258,
            47249,
            47315,
            47251,
            47012,
            47630,
            47375,
            47445,
            47475,
            47827,
            47722,
            47342,
            47372,
            47250,
            47394,
            47245,
            47104,
            47331,
            47279,
            47426,
            47305,
            47274,
            47459,
            47444,
            47338,
            47440,
            47417,
            47363,
            47510,
            47208,
            47380,
            47413,
            47352,
            47230,
            47349,
            47362
          ],
          [
            48394,
            47957,
            47603,
            47447,
            47264,
            47491,
            47340,
            47398,
            47299,
            47303,
            47207,
            47270,
            47320,
            47467,
            47352,
            47393,
            47388,
            47516,
            47394,
            47494,
            47358,
            47314,
            47265,
            47404,
            47326,
            47358,
            47217,
            47258,
            47249,
            47315,
            47251,
            47012,
            47630,
            47375,
            47445,
            47475,
            47827,
            47722,
            47342,
            47372,
            47250,
            47394,
            47245,
            47104,
            47331,
            47279,
            47426,
            47305,
            47274,
            47459,
            47444,
            47338,
            47440,
            47417,
            47363,
            47510,
            47208,
            47380,
            47413,
            47352,
            47230,
            47349,
            47362
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            107,
            1221,
            5388,
            13463,
            23992,
            31176,
            31926,
            28750,
            22732,
            12951,
            3593,
            373,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            61,
            694,
            4180,
            13077,
            25870,
            32026,
            32169,
            27465,
            22685,
            16583,
            10240,
            3691,
            602,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            132,
            776,
            3284,
            10490,
            20508,
            30839,
            37440,
            34847,
            25654,
            14873,
            5404,
            1119,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            490,
            3626,
            13008,
            23729,
            33332,
            38407,
            38278,
            31869,
            21031,
            10686,
            3640,
            584,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            15,
            185,
            1389,
            6116,
            15361,
            26360
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            77,
            958,
            5797,
            16528,
            27620,
            31482,
            32176,
            25309,
            15536,
            5891,
            1131,
            69,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            169,
            1797,
            8135,
            16884,
            27728,
            33429,
            30712,
            24800,
            16691,
            8960,
            2884,
            375,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            273,
            2058,
            9002,
            19226,
            30016,
            35129,
            35040,
            28547,
            19402,
            9305,
            2214,
            164,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            489,
            3229,
            10067,
            20465,
            28588,
            34269,
            31198,
            27128,
            20320,
            11614,
            4814,
            957,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            66,
            702,
            3639,
            10639,
            20503,
            29697,
            37811,
            39079,
            31417,
            21619,
            11114,
            3998,
            814,
            61,
            1,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            79,
            979,
            4244,
            11757,
            22954,
            33505,
            39072,
            39283,
            33716,
            27148,
            18539,
            8240,
            1560,
            136,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            362,
            2016,
            7830
          ]
        ]
      },
      "call": {
        "duration": 0.2731184789990948,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff95f1b990>()\n +    where <built-in method all of numpy.ndarray object at 0xffff95f1b990> = array([21, 14, 18, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff95f64100>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48394, 47957, 47603, 47447, 47264, 47491, ...], [48394, 47957, 47603, 47447, 47264, 47491, ...], [..., 0, ...], [0, 0, 3, 132, 776, 3284, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 66, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff95f1b990>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff95f1b990> = array([21, 14, 18, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016059359986684285,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29252077999990433,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1692151829993236,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014208020002115518,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2925247819985088,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            22,
            50,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            78,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034751270031847525,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002872084001865005,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.538535816998774,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            160,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            198,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            92,
            255,
            143,
            255,
            149,
            0,
            0,
            124,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            221,
            0,
            56,
            1,
            255,
            27,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            106,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            11,
            255,
            158,
            255,
            192,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            231,
            255,
            135,
            255,
            255,
            1,
            0,
            95,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            46,
            255,
            145
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003449536998232361,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028532430005725473,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29567907100135926,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48315,
            47637,
            47656,
            49391,
            47516,
            47871,
            47593,
            49674,
            47545,
            47366,
            47467,
            47471,
            47632,
            47466,
            47737,
            47476,
            47481,
            47414,
            47771,
            47513,
            47511,
            47515,
            47643,
            47140,
            47238,
            47407,
            47633,
            47637,
            47391,
            47537,
            47600,
            47470,
            47437,
            47536,
            47952,
            47539,
            47790,
            47482,
            47677,
            47525,
            47397,
            47457,
            47704,
            47616,
            47367,
            47600,
            47582,
            47413,
            47345,
            47390,
            47648,
            47420,
            47484,
            47463,
            47581,
            47461,
            47492,
            47583,
            47880,
            47583,
            47490,
            47663,
            47692
          ],
          [
            48315,
            47637,
            47656,
            49391,
            47516,
            47871,
            47593,
            49674,
            47545,
            47366,
            47467,
            47471,
            47632,
            47466,
            47737,
            47476,
            47481,
            47414,
            47771,
            47513,
            47511,
            47515,
            47643,
            47140,
            47238,
            47407,
            47633,
            47637,
            47391,
            47537,
            47600,
            47470,
            47437,
            47536,
            47952,
            47539,
            47790,
            47482,
            47677,
            47525,
            47397,
            47457,
            47704,
            47616,
            47367,
            47600,
            47582,
            47413,
            47345,
            47390,
            47648,
            47420,
            47484,
            47463,
            47581,
            47461,
            47492,
            47583,
            47880,
            47583,
            47490,
            47663,
            47692
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            240,
            3237,
            17602,
            36347,
            36637,
            19515,
            4402,
            464,
            34,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            142,
            2164,
            16097,
            34785,
            40408,
            26581,
            8479,
            1201,
            114,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            1066,
            8261,
            28935,
            42011,
            38250,
            18441,
            4849,
            514,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            184,
            2492,
            13518,
            31898,
            42367,
            38650,
            20176,
            5557,
            562,
            38,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1341810109988728,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015877850019023754,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06879458900220925,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47877,
            47633,
            47221,
            47430,
            47347,
            47403,
            47367,
            47591,
            47226,
            47559,
            47586,
            47175,
            47367,
            47697,
            47335,
            47440,
            47838,
            47489,
            47178,
            47605,
            47189,
            47454,
            47438,
            47431,
            47214,
            47629,
            47142,
            47459,
            47589,
            47408,
            47319,
            47258,
            47380,
            47562,
            47471,
            47103,
            47179,
            47629,
            47246,
            47405,
            47344,
            47467,
            47215,
            47512,
            47301,
            47579,
            47385,
            47406,
            47171,
            47571,
            47456,
            49280,
            49443,
            47522,
            47368,
            47592,
            47412,
            47576,
            47382,
            47278,
            46955,
            47560,
            47310
          ],
          [
            47877,
            47633,
            47221,
            47430,
            47347,
            47403,
            47367,
            47591,
            47226,
            47559,
            47586,
            47175,
            47367,
            47697,
            47335,
            47440,
            47838,
            47489,
            47178,
            47605,
            47189,
            47454,
            47438,
            47431,
            47214,
            47629,
            47142,
            47459,
            47589,
            47408,
            47319,
            47258,
            47380,
            47562,
            47471,
            47103,
            47179,
            47629,
            47246,
            47405,
            47344,
            47467,
            47215,
            47512,
            47301,
            47579,
            47385,
            47406,
            47171,
            47571,
            47456,
            49280,
            49443,
            47522,
            47368,
            47592,
            47412,
            47576,
            47382,
            47278,
            46955,
            47560,
            47310
          ],
          [
            47877,
            47633,
            47221,
            47430,
            47347,
            47403,
            47367,
            47591,
            47226,
            47559,
            47586,
            47175,
            47367,
            47697,
            47335,
            47440,
            47838,
            47489,
            47178,
            47605,
            47189,
            47454,
            47438,
            47431,
            47214,
            47629,
            47142,
            47459,
            47589,
            47408,
            47319,
            47258,
            47380,
            47562,
            47471,
            47103,
            47179,
            47629,
            47246,
            47405,
            47344,
            47467,
            47215,
            47512,
            47301,
            47579,
            47385,
            47406,
            47171,
            47571,
            47456,
            49280,
            49443,
            47522,
            47368,
            47592,
            47412,
            47576,
            47382,
            47278,
            46955,
            47560,
            47310
          ],
          [
            47877,
            47633,
            47221,
            47430,
            47347,
            47403,
            47367,
            47591,
            47226,
            47559,
            47586,
            47175,
            47367,
            47697,
            47335,
            47440,
            47838,
            47489,
            47178,
            47605,
            47189,
            47454,
            47438,
            47431,
            47214,
            47629,
            47142,
            47459,
            47589,
            47408,
            47319,
            47258,
            47380,
            47562,
            47471,
            47103,
            47179,
            47629,
            47246,
            47405,
            47344,
            47467,
            47215,
            47512,
            47301,
            47579,
            47385,
            47406,
            47171,
            47571,
            47456,
            49280,
            49443,
            47522,
            47368,
            47592,
            47412,
            47576,
            47382,
            47278,
            46955,
            47560,
            47310
          ],
          [
            47877,
            47633,
            47221,
            47430,
            47347,
            47403,
            47367,
            47591,
            47226,
            47559,
            47586,
            47175,
            47367,
            47697,
            47335,
            47440,
            47838,
            47489,
            47178,
            47605,
            47189,
            47454,
            47438,
            47431,
            47214,
            47629,
            47142,
            47459,
            47589,
            47408,
            47319,
            47258,
            47380,
            47562,
            47471,
            47103,
            47179,
            47629,
            47246,
            47405,
            47344,
            47467,
            47215,
            47512,
            47301,
            47579,
            47385,
            47406,
            47171,
            47571,
            47456,
            49280,
            49443,
            47522,
            47368,
            47592,
            47412,
            47576,
            47382,
            47278,
            46955,
            47560,
            47310
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            275,
            2500,
            11365,
            26227,
            37890,
            36369,
            25940,
            12721,
            2782,
            265,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            497,
            2824,
            12587,
            28582,
            38291,
            39428,
            29507,
            16795,
            5349,
            1190,
            112,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            24
          ],
          [
            0,
            0,
            21,
            403,
            4353,
            15138,
            32288,
            40305,
            34667,
            19773,
            6193,
            903,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            95,
            1062,
            7289,
            22928,
            39318,
            44181,
            38976,
            26417,
            12451,
            2579,
            216,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            68,
            1141,
            7555,
            21172,
            35902,
            39697
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            520,
            3963,
            13889,
            27426,
            33856,
            28529,
            14024,
            3746,
            408,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            82,
            775,
            6507,
            19473,
            34619,
            39789,
            32024,
            18503,
            5955,
            825,
            25,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            39,
            840,
            5209,
            17546,
            32586,
            37958,
            32408,
            17695,
            5622,
            833,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            180,
            1921,
            8992,
            22669,
            35490,
            41404,
            35456,
            22984,
            8641,
            1579,
            138,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            130,
            1457,
            8158,
            20983,
            34206,
            41344,
            37608,
            26364,
            12981,
            2958,
            501,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            14,
            367,
            2565,
            11369,
            26705,
            38462,
            43483,
            39074,
            26563,
            12411,
            4403,
            1130,
            85,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            42,
            788,
            5890,
            17845,
            32522
          ]
        ]
      },
      "call": {
        "duration": 0.27132827899913536,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001485692999267485,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2913730439977371,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169439257999329,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001424221001798287,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.4023259019995749,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            85,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035063279974565376,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028815639998356346,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5341841610024858,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            9,
            255,
            15,
            255,
            1,
            20,
            0,
            255,
            0,
            255,
            255
          ],
          [
            88,
            0,
            14,
            0,
            4,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            63,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            223,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            28,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            5,
            255,
            5,
            3,
            0,
            255,
            2,
            255,
            255
          ],
          [
            74,
            0,
            6,
            0,
            12,
            0,
            255,
            159,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            92,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            43,
            0,
            1,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            89,
            255,
            61,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003450526997767156,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028487729978223797,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29598423700008425,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48201,
            48163,
            47562,
            47756,
            47581,
            47810,
            47549,
            47406,
            47392,
            47320,
            47488,
            47557,
            47443,
            47459,
            47393,
            47396,
            47556,
            47399,
            47558,
            47104,
            47176,
            47454,
            47555,
            47499,
            47581,
            47509,
            47638,
            47657,
            47778,
            47664,
            47635,
            47507,
            49099,
            47394,
            47793,
            47553,
            49945,
            47487,
            47496,
            47407,
            47505,
            47623,
            47622,
            47557,
            47420,
            47507,
            47477,
            47455,
            47355,
            47405,
            47415,
            47590,
            47370,
            47518,
            47437,
            47443,
            47502,
            47406,
            47507,
            47454,
            47393,
            47509,
            47410
          ],
          [
            48201,
            48163,
            47562,
            47756,
            47581,
            47810,
            47549,
            47406,
            47392,
            47320,
            47488,
            47557,
            47443,
            47459,
            47393,
            47396,
            47556,
            47399,
            47558,
            47104,
            47176,
            47454,
            47555,
            47499,
            47581,
            47509,
            47638,
            47657,
            47778,
            47664,
            47635,
            47507,
            49099,
            47394,
            47793,
            47553,
            49945,
            47487,
            47496,
            47407,
            47505,
            47623,
            47622,
            47557,
            47420,
            47507,
            47477,
            47455,
            47355,
            47405,
            47415,
            47590,
            47370,
            47518,
            47437,
            47443,
            47502,
            47406,
            47507,
            47454,
            47393,
            47509,
            47410
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            551,
            6463,
            23571,
            39486,
            34695,
            15805,
            2873,
            312,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            599,
            6517,
            21513,
            37486,
            38199,
            21770,
            5215,
            721,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            101,
            2075,
            14132,
            32533,
            40633,
            29489,
            10155,
            1538,
            109,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            677,
            5768,
            22150,
            38216,
            41926,
            32763,
            12629,
            2214,
            197,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            16,
            760,
            7465,
            24670,
            39793,
            43555
          ]
        ]
      },
      "call": {
        "duration": 0.13391982600296615,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015833750003366731,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06905352499961737,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47920,
            47201,
            47288,
            47317,
            47388,
            47260,
            47369,
            47225,
            47278,
            47089,
            47522,
            47236,
            47370,
            47524,
            47180,
            47775,
            47495,
            47270,
            47188,
            47193,
            47327,
            47159,
            47080,
            47281,
            47181,
            47420,
            47306,
            47383,
            47577,
            47488,
            47423,
            47064,
            47375,
            47780,
            47540,
            47431,
            47133,
            47173,
            47125,
            47186,
            47483,
            47315,
            47276,
            47324,
            47313,
            47360,
            47263,
            47321,
            47318,
            47269,
            47464,
            47589,
            47203,
            47174,
            47240,
            47320,
            47299,
            47254,
            46979,
            47213,
            47398,
            47321,
            47235
          ],
          [
            47920,
            47201,
            47288,
            47317,
            47388,
            47260,
            47369,
            47225,
            47278,
            47089,
            47522,
            47236,
            47370,
            47524,
            47180,
            47775,
            47495,
            47270,
            47188,
            47193,
            47327,
            47159,
            47080,
            47281,
            47181,
            47420,
            47306,
            47383,
            47577,
            47488,
            47423,
            47064,
            47375,
            47780,
            47540,
            47431,
            47133,
            47173,
            47125,
            47186,
            47483,
            47315,
            47276,
            47324,
            47313,
            47360,
            47263,
            47321,
            47318,
            47269,
            47464,
            47589,
            47203,
            47174,
            47240,
            47320,
            47299,
            47254,
            46979,
            47213,
            47398,
            47321,
            47235
          ],
          [
            47920,
            47201,
            47288,
            47317,
            47388,
            47260,
            47369,
            47225,
            47278,
            47089,
            47522,
            47236,
            47370,
            47524,
            47180,
            47775,
            47495,
            47270,
            47188,
            47193,
            47327,
            47159,
            47080,
            47281,
            47181,
            47420,
            47306,
            47383,
            47577,
            47488,
            47423,
            47064,
            47375,
            47780,
            47540,
            47431,
            47133,
            47173,
            47125,
            47186,
            47483,
            47315,
            47276,
            47324,
            47313,
            47360,
            47263,
            47321,
            47318,
            47269,
            47464,
            47589,
            47203,
            47174,
            47240,
            47320,
            47299,
            47254,
            46979,
            47213,
            47398,
            47321,
            47235
          ],
          [
            47920,
            47201,
            47288,
            47317,
            47388,
            47260,
            47369,
            47225,
            47278,
            47089,
            47522,
            47236,
            47370,
            47524,
            47180,
            47775,
            47495,
            47270,
            47188,
            47193,
            47327,
            47159,
            47080,
            47281,
            47181,
            47420,
            47306,
            47383,
            47577,
            47488,
            47423,
            47064,
            47375,
            47780,
            47540,
            47431,
            47133,
            47173,
            47125,
            47186,
            47483,
            47315,
            47276,
            47324,
            47313,
            47360,
            47263,
            47321,
            47318,
            47269,
            47464,
            47589,
            47203,
            47174,
            47240,
            47320,
            47299,
            47254,
            46979,
            47213,
            47398,
            47321,
            47235
          ],
          [
            47920,
            47201,
            47288,
            47317,
            47388,
            47260,
            47369,
            47225,
            47278,
            47089,
            47522,
            47236,
            47370,
            47524,
            47180,
            47775,
            47495,
            47270,
            47188,
            47193,
            47327,
            47159,
            47080,
            47281,
            47181,
            47420,
            47306,
            47383,
            47577,
            47488,
            47423,
            47064,
            47375,
            47780,
            47540,
            47431,
            47133,
            47173,
            47125,
            47186,
            47483,
            47315,
            47276,
            47324,
            47313,
            47360,
            47263,
            47321,
            47318,
            47269,
            47464,
            47589,
            47203,
            47174,
            47240,
            47320,
            47299,
            47254,
            46979,
            47213,
            47398,
            47321,
            47235
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            70,
            969,
            5158,
            16149,
            30681,
            38380,
            35618,
            26219,
            14028,
            4360,
            857,
            100,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            315,
            2322,
            9703,
            23057,
            36171,
            38655,
            32721,
            20383,
            8352,
            1797,
            150,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            15,
            311,
            2388,
            10256,
            26430,
            38714,
            41337,
            35817,
            22691,
            9833,
            2570,
            242,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            830,
            4944,
            16134,
            30003,
            38645,
            36074,
            26081,
            11981,
            2475,
            314,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            10970,
            3278,
            428,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            110,
            1598,
            8185,
            21280,
            34726,
            38371,
            29861,
            15608,
            5169,
            844,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            351,
            4462,
            15443,
            27683,
            38382,
            34467,
            22754,
            9810,
            1863,
            223,
            1,
            0,
            0,
            0,
            0
          ],
          [
            26,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            497,
            4591,
            15465,
            28867,
            39606,
            40854,
            33504,
            21734,
            8634,
            1569,
            67,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            193,
            2585,
            12670,
            27043,
            37872,
            35412,
            24810,
            11035,
            3050,
            354,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            473,
            3622,
            14692,
            27254,
            39336,
            41888,
            35591,
            24313,
            13095,
            3924,
            1063,
            133,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            100,
            1161,
            6788,
            18484,
            31332,
            40436,
            40649,
            32688,
            20733,
            9543,
            2686,
            388,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2714058009987639,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014669120027974714,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29180550400269567,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170165875002567,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40046471, 10011617), (410874, 410874), (40050628, 10012657))\nassert ((40046471 > 0 and 10011617 == 0\n  +10011617\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff95f64340>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff95cb0460>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9a83d460>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40046471, 10011617), (410874, 410874), (40050628, 10012657))\nE       assert ((40046471 > 0 and 10011617 == 0\nE         +10011617\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004925868997815996,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}