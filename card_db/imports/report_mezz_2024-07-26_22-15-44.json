{
  "created": 1722032164.0006542,
  "duration": 23.474368810653687,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.508865217998391,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774599300289992,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013656310002261307,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038152150009409525,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14772802300285548,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012828889994125348,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1331922190001933,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12148463999983505,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012865479984611738,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003798235000431305,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12091135700029554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012599680012499448,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003368654997757403,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14630707100150175,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011991270002909005,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033526939987496007,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11973725000279956,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011799860003520735,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003355123997607734,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1460339750010462,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012103769986424595,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003353594001964666,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11980226200103061,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012161070008005481,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004408837998198578,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002125847000570502,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011299150028207805,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033608249977987725,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017086879997805227,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011211849996470846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033079339991672896,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040213800020865165,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032146.2908792,
            "msecs": 290.8792495727539,
            "relativeCreated": 7735.418081283569,
            "thread": 281473388806176,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4579
          }
        ]
      },
      "teardown": {
        "duration": 0.001228166998771485,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033571339990885463,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023992130008991808,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032146.3031764,
            "msecs": 303.1764030456543,
            "relativeCreated": 7747.71523475647,
            "thread": 281473388806176,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4579
          }
        ]
      },
      "teardown": {
        "duration": 0.001222857001266675,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020947960001649335,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002673629998753313,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032146.3126926,
            "msecs": 312.69264221191406,
            "relativeCreated": 7757.2314739227295,
            "thread": 281473388806176,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4579
          }
        ]
      },
      "teardown": {
        "duration": 0.001063014002284035,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021140870012459345,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034417370006849524,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032146.3221626,
            "msecs": 322.1626281738281,
            "relativeCreated": 7766.701459884644,
            "thread": 281473388806176,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4579
          }
        ]
      },
      "teardown": {
        "duration": 0.0011048649976146407,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003353055002662586,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.146269389999361,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011801059990830254,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003317294002044946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12025482199896942,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011783059999288525,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1771434060028696,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1474872670005425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012982789994566701,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01514724600201589,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12100597899916465,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001277997998840874,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8450596900001983,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            6,
            13,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            84,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            11,
            135,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.003590659998735646,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029769659995508846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8951503819989739,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            10,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            11,
            255,
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            14
          ],
          [
            234,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            25,
            255,
            255,
            255,
            6
          ],
          [
            12,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            28,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            132,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            120,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            251,
            255,
            255,
            255,
            255,
            0,
            0,
            224,
            3,
            161,
            255
          ],
          [
            255,
            0,
            149,
            0,
            255,
            0,
            163,
            48,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003460847001406364,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029592049977509305,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30283077900094213,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48192,
            47431,
            47488,
            47487,
            47442,
            48970,
            47429,
            47797,
            47353,
            47536,
            47719,
            47898,
            47484,
            47388,
            47584,
            47390,
            47404,
            47313,
            47485,
            47375,
            47510,
            47451,
            47415,
            47313,
            47416,
            47411,
            47558,
            47399,
            47396,
            47373,
            47541,
            47532,
            47571,
            47463,
            47519,
            47631,
            47527,
            47454,
            47657,
            47529,
            47521,
            47334,
            49110,
            47409,
            48081,
            47538,
            49813,
            47353,
            47321,
            47379,
            47609,
            47564,
            47579,
            47464,
            47537,
            47550,
            47563,
            47496,
            47129,
            47070,
            47449,
            47459,
            47516
          ],
          [
            48192,
            47431,
            47488,
            47487,
            47442,
            48970,
            47429,
            47797,
            47353,
            47536,
            47719,
            47898,
            47484,
            47388,
            47584,
            47390,
            47404,
            47313,
            47485,
            47375,
            47510,
            47451,
            47415,
            47313,
            47416,
            47411,
            47558,
            47399,
            47396,
            47373,
            47541,
            47532,
            47571,
            47463,
            47519,
            47631,
            47527,
            47454,
            47657,
            47529,
            47521,
            47334,
            49110,
            47409,
            48081,
            47538,
            49813,
            47353,
            47321,
            47379,
            47609,
            47564,
            47579,
            47464,
            47537,
            47550,
            47563,
            47496,
            47129,
            47070,
            47449,
            47459,
            47516
          ]
        ],
        "eTX_errcounts": [
          [
            40719,
            26784,
            8412,
            1157,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            149,
            3109,
            15356,
            33866,
            42129,
            31480,
            14189,
            2051,
            149,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            889,
            7042,
            24933,
            40355,
            37171,
            19921,
            5102,
            525,
            12,
            0,
            0,
            0
          ],
          [
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            321,
            3710,
            17450,
            35802,
            42190,
            32106,
            13410,
            3216,
            400,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            317,
            4112,
            19133,
            36383,
            42877,
            35768,
            17531,
            3410,
            292,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13374405200011097,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016366259987989906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06891642099799355,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48141,
            47319,
            47213,
            46758,
            47254,
            46981,
            47066,
            47132,
            46979,
            47114,
            47096,
            47079,
            47004,
            47193,
            47232,
            47174,
            47320,
            47228,
            47294,
            47130,
            47277,
            47329,
            47198,
            46918,
            47162,
            47184,
            47174,
            47081,
            46872,
            47210,
            47176,
            46797,
            46933,
            46948,
            47198,
            47147,
            47111,
            47140,
            47138,
            47171,
            47229,
            49273,
            49365,
            47292,
            47095,
            47124,
            47201,
            47056,
            47038,
            47354,
            47360,
            47187,
            47117,
            46668,
            47357,
            47077,
            47180,
            47138,
            47210,
            47149,
            47209,
            47374,
            48778
          ],
          [
            48141,
            47319,
            47213,
            46758,
            47254,
            46981,
            47066,
            47132,
            46979,
            47114,
            47096,
            47079,
            47004,
            47193,
            47232,
            47174,
            47320,
            47228,
            47294,
            47130,
            47277,
            47329,
            47198,
            46918,
            47162,
            47184,
            47174,
            47081,
            46872,
            47210,
            47176,
            46797,
            46933,
            46948,
            47198,
            47147,
            47111,
            47140,
            47138,
            47171,
            47229,
            49273,
            49365,
            47292,
            47095,
            47124,
            47201,
            47056,
            47038,
            47354,
            47360,
            47187,
            47117,
            46668,
            47357,
            47077,
            47180,
            47138,
            47210,
            47149,
            47209,
            47374,
            48778
          ],
          [
            48141,
            47319,
            47213,
            46758,
            47254,
            46981,
            47066,
            47132,
            46979,
            47114,
            47096,
            47079,
            47004,
            47193,
            47232,
            47174,
            47320,
            47228,
            47294,
            47130,
            47277,
            47329,
            47198,
            46918,
            47162,
            47184,
            47174,
            47081,
            46872,
            47210,
            47176,
            46797,
            46933,
            46948,
            47198,
            47147,
            47111,
            47140,
            47138,
            47171,
            47229,
            49273,
            49365,
            47292,
            47095,
            47124,
            47201,
            47056,
            47038,
            47354,
            47360,
            47187,
            47117,
            46668,
            47357,
            47077,
            47180,
            47138,
            47210,
            47149,
            47209,
            47374,
            48778
          ],
          [
            48141,
            47319,
            47213,
            46758,
            47254,
            46981,
            47066,
            47132,
            46979,
            47114,
            47096,
            47079,
            47004,
            47193,
            47232,
            47174,
            47320,
            47228,
            47294,
            47130,
            47277,
            47329,
            47198,
            46918,
            47162,
            47184,
            47174,
            47081,
            46872,
            47210,
            47176,
            46797,
            46933,
            46948,
            47198,
            47147,
            47111,
            47140,
            47138,
            47171,
            47229,
            49273,
            49365,
            47292,
            47095,
            47124,
            47201,
            47056,
            47038,
            47354,
            47360,
            47187,
            47117,
            46668,
            47357,
            47077,
            47180,
            47138,
            47210,
            47149,
            47209,
            47374,
            48778
          ],
          [
            48141,
            47319,
            47213,
            46758,
            47254,
            46981,
            47066,
            47132,
            46979,
            47114,
            47096,
            47079,
            47004,
            47193,
            47232,
            47174,
            47320,
            47228,
            47294,
            47130,
            47277,
            47329,
            47198,
            46918,
            47162,
            47184,
            47174,
            47081,
            46872,
            47210,
            47176,
            46797,
            46933,
            46948,
            47198,
            47147,
            47111,
            47140,
            47138,
            47171,
            47229,
            49273,
            49365,
            47292,
            47095,
            47124,
            47201,
            47056,
            47038,
            47354,
            47360,
            47187,
            47117,
            46668,
            47357,
            47077,
            47180,
            47138,
            47210,
            47149,
            47209,
            47374,
            48778
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            115,
            1197,
            4925,
            11638,
            23059,
            31769,
            31796,
            26379,
            19036,
            13006,
            7402,
            2281,
            455,
            43,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            13,
            156,
            1593,
            5912,
            13603,
            26263,
            34788,
            37146,
            30993,
            22283,
            13382,
            6046,
            1258,
            164,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            10,
            141,
            1286,
            4189,
            9588,
            21247,
            35300,
            39487,
            35451,
            26912,
            16376,
            9515,
            3687,
            817,
            61,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            15,
            238,
            1704,
            5846,
            14108,
            26121,
            32023,
            35272,
            36365,
            29535,
            18062,
            7395,
            1963,
            275,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            57,
            457,
            2363,
            6097,
            14043,
            27320
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            91,
            1013,
            4912,
            16053,
            30379,
            34926,
            31967,
            23805,
            13515,
            5854,
            1410,
            129,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            177,
            1267,
            6624,
            15149,
            28677,
            35437,
            33784,
            24960,
            13162,
            3789,
            573,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            323,
            1948,
            7662,
            19155,
            33789,
            37737,
            34275,
            26598,
            16982,
            7424,
            1899,
            209,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            43,
            520,
            2876,
            8080,
            17048,
            27358,
            35962,
            34114,
            26577,
            16639,
            7461,
            2113,
            267,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            9,
            205,
            1123,
            3533,
            7663,
            17532,
            32655,
            38994,
            36806,
            31174,
            22728,
            14270,
            8346,
            3679,
            579,
            70,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            115,
            1083,
            4882,
            12352,
            24914,
            32229,
            34945,
            37301,
            33544,
            26262,
            16574,
            8026,
            2176,
            403,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            118,
            957,
            3347,
            8602
          ]
        ]
      },
      "call": {
        "duration": 0.27110132400048315,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8c9a5f30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8c9a5f30> = array([21, 12, 19, 21, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8ca0e4f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48141, 47319, 47213, 46758, 47254, 46981, ...], [48141, 47319, 47213, 46758, 47254, 46981, ...], [..., ...], [0, 0, 10, 141, 1286, 4189, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 9, 205, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8c9a5f30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8c9a5f30> = array([21, 12, 19, 21, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016317959998559672,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926844039975549,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170243936001498,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001488092999352375,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.303314311997383,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            18,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            212,
            80,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            31,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003571548997570062,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002963795999676222,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5353741670005547,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            168,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            76,
            255,
            121,
            255,
            106,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            179,
            0,
            185,
            2,
            255,
            57,
            255,
            4
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            80,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            6,
            255,
            210,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            220,
            255,
            145,
            255,
            255,
            8,
            0,
            146,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            5,
            255,
            174,
            255,
            101
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003494297001452651,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029740560021309648,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29590206499779015,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47918,
            47448,
            47403,
            47611,
            47346,
            47506,
            47477,
            47314,
            47480,
            47468,
            47352,
            47613,
            47343,
            47449,
            47770,
            47467,
            47821,
            47442,
            50096,
            47611,
            47449,
            47550,
            47493,
            47474,
            47379,
            47640,
            47480,
            47779,
            47372,
            47408,
            47489,
            47456,
            47329,
            47408,
            47397,
            47485,
            47418,
            47532,
            47287,
            47200,
            47598,
            47533,
            47530,
            47695,
            47583,
            47612,
            47440,
            47490,
            47406,
            47537,
            47427,
            47649,
            47351,
            49738,
            47449,
            47310,
            47333,
            47264,
            47420,
            47514,
            47413,
            47383,
            47471
          ],
          [
            47918,
            47448,
            47403,
            47611,
            47346,
            47506,
            47477,
            47314,
            47480,
            47468,
            47352,
            47613,
            47343,
            47449,
            47770,
            47467,
            47821,
            47442,
            50096,
            47611,
            47449,
            47550,
            47493,
            47474,
            47379,
            47640,
            47480,
            47779,
            47372,
            47408,
            47489,
            47456,
            47329,
            47408,
            47397,
            47485,
            47418,
            47532,
            47287,
            47200,
            47598,
            47533,
            47530,
            47695,
            47583,
            47612,
            47440,
            47490,
            47406,
            47537,
            47427,
            47649,
            47351,
            49738,
            47449,
            47310,
            47333,
            47264,
            47420,
            47514,
            47413,
            47383,
            47471
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            307,
            3424,
            17948,
            35788,
            36631,
            19203,
            4903,
            480,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            184,
            2593,
            16098,
            34895,
            39769,
            26274,
            8664,
            1198,
            52,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            776,
            7834,
            28221,
            42286,
            38824,
            20821,
            4513,
            546,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            113,
            2255,
            12731,
            30386,
            42868,
            39309,
            21190,
            5848,
            653,
            68,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1335995979970903,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016576569978496991,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06863300500117475,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47826,
            47200,
            47334,
            47227,
            47153,
            47295,
            47253,
            47150,
            47181,
            47328,
            47174,
            47423,
            47219,
            47143,
            47250,
            47395,
            47401,
            47284,
            46895,
            47122,
            47287,
            47115,
            47213,
            47232,
            47105,
            47166,
            47279,
            47073,
            47156,
            47362,
            47050,
            46819,
            47252,
            47134,
            47218,
            47229,
            47509,
            47182,
            47393,
            47200,
            47210,
            47152,
            47121,
            46765,
            47489,
            47045,
            47219,
            47285,
            47150,
            47077,
            47339,
            47246,
            47175,
            47246,
            47196,
            47139,
            49108,
            47564,
            47131,
            47261,
            47060,
            47230,
            47218
          ],
          [
            47826,
            47200,
            47334,
            47227,
            47153,
            47295,
            47253,
            47150,
            47181,
            47328,
            47174,
            47423,
            47219,
            47143,
            47250,
            47395,
            47401,
            47284,
            46895,
            47122,
            47287,
            47115,
            47213,
            47232,
            47105,
            47166,
            47279,
            47073,
            47156,
            47362,
            47050,
            46819,
            47252,
            47134,
            47218,
            47229,
            47509,
            47182,
            47393,
            47200,
            47210,
            47152,
            47121,
            46765,
            47489,
            47045,
            47219,
            47285,
            47150,
            47077,
            47339,
            47246,
            47175,
            47246,
            47196,
            47139,
            49108,
            47564,
            47131,
            47261,
            47060,
            47230,
            47218
          ],
          [
            47826,
            47200,
            47334,
            47227,
            47153,
            47295,
            47253,
            47150,
            47181,
            47328,
            47174,
            47423,
            47219,
            47143,
            47250,
            47395,
            47401,
            47284,
            46895,
            47122,
            47287,
            47115,
            47213,
            47232,
            47105,
            47166,
            47279,
            47073,
            47156,
            47362,
            47050,
            46819,
            47252,
            47134,
            47218,
            47229,
            47509,
            47182,
            47393,
            47200,
            47210,
            47152,
            47121,
            46765,
            47489,
            47045,
            47219,
            47285,
            47150,
            47077,
            47339,
            47246,
            47175,
            47246,
            47196,
            47139,
            49108,
            47564,
            47131,
            47261,
            47060,
            47230,
            47218
          ],
          [
            47826,
            47200,
            47334,
            47227,
            47153,
            47295,
            47253,
            47150,
            47181,
            47328,
            47174,
            47423,
            47219,
            47143,
            47250,
            47395,
            47401,
            47284,
            46895,
            47122,
            47287,
            47115,
            47213,
            47232,
            47105,
            47166,
            47279,
            47073,
            47156,
            47362,
            47050,
            46819,
            47252,
            47134,
            47218,
            47229,
            47509,
            47182,
            47393,
            47200,
            47210,
            47152,
            47121,
            46765,
            47489,
            47045,
            47219,
            47285,
            47150,
            47077,
            47339,
            47246,
            47175,
            47246,
            47196,
            47139,
            49108,
            47564,
            47131,
            47261,
            47060,
            47230,
            47218
          ],
          [
            47826,
            47200,
            47334,
            47227,
            47153,
            47295,
            47253,
            47150,
            47181,
            47328,
            47174,
            47423,
            47219,
            47143,
            47250,
            47395,
            47401,
            47284,
            46895,
            47122,
            47287,
            47115,
            47213,
            47232,
            47105,
            47166,
            47279,
            47073,
            47156,
            47362,
            47050,
            46819,
            47252,
            47134,
            47218,
            47229,
            47509,
            47182,
            47393,
            47200,
            47210,
            47152,
            47121,
            46765,
            47489,
            47045,
            47219,
            47285,
            47150,
            47077,
            47339,
            47246,
            47175,
            47246,
            47196,
            47139,
            49108,
            47564,
            47131,
            47261,
            47060,
            47230,
            47218
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53,
            460,
            3187,
            12359,
            24940,
            34020,
            35286,
            25513,
            12088,
            2969,
            256,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            669,
            3644,
            13927,
            26373,
            34956,
            37358,
            30355,
            18720,
            7401,
            1846,
            163,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            11,
            140,
            1302,
            5986,
            16829,
            31961,
            38882,
            33757,
            18999,
            6467,
            1107,
            42,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            142,
            1662,
            9650,
            23286,
            35441,
            42023,
            40959,
            31222,
            17146,
            4333,
            576,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            20,
            312,
            2117,
            7021,
            18124,
            31624,
            38239
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            378,
            3445,
            15152,
            29949,
            36442,
            32522,
            19262,
            6861,
            1241,
            65,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            885,
            7434,
            20361,
            37322,
            41626,
            35564,
            22962,
            10097,
            2116,
            182,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            97,
            961,
            5692,
            19349,
            33987,
            39123,
            34684,
            21040,
            8253,
            1609,
            175,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            205,
            2507,
            11434,
            23970,
            33514,
            38751,
            35731,
            26485,
            12561,
            3354,
            313,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            9,
            155,
            1741,
            8129,
            20835,
            33004,
            39137,
            36077,
            25363,
            12487,
            3159,
            485,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            525,
            3797,
            13636,
            26036,
            35554,
            40876,
            38267,
            27936,
            13969,
            4092,
            634,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            84,
            848,
            5422,
            15624,
            30996
          ]
        ]
      },
      "call": {
        "duration": 0.2692295529996045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015302139981940854,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29143067599943606,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1700736220009276,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001485962999140611,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3664028340026562,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            88,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00356608999936725,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029745360006927513,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5354716989968438,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            5,
            255,
            1,
            79,
            0,
            255,
            1,
            255,
            255
          ],
          [
            58,
            0,
            21,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            24,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            231,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            34,
            0,
            6,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            42,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            4,
            0,
            255,
            2,
            255,
            255
          ],
          [
            46,
            0,
            3,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            78,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            117,
            0,
            6,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            127,
            255,
            85,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034833770005207043,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029606450007122476,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29621086200131685,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48109,
            47553,
            47388,
            47423,
            47470,
            47711,
            47394,
            47470,
            49136,
            47535,
            47818,
            47615,
            49607,
            47436,
            47321,
            47394,
            47437,
            47555,
            47402,
            47439,
            47466,
            47489,
            47198,
            47279,
            47491,
            47457,
            47432,
            47368,
            47433,
            47585,
            47320,
            47373,
            47437,
            47502,
            47500,
            47521,
            47341,
            47367,
            47505,
            47681,
            47383,
            47618,
            47406,
            49274,
            47497,
            47929,
            47562,
            49721,
            47442,
            47336,
            47510,
            47561,
            47517,
            47553,
            47417,
            47376,
            47427,
            47458,
            47532,
            47499,
            47505,
            47530,
            47476
          ],
          [
            48109,
            47553,
            47388,
            47423,
            47470,
            47711,
            47394,
            47470,
            49136,
            47535,
            47818,
            47615,
            49607,
            47436,
            47321,
            47394,
            47437,
            47555,
            47402,
            47439,
            47466,
            47489,
            47198,
            47279,
            47491,
            47457,
            47432,
            47368,
            47433,
            47585,
            47320,
            47373,
            47437,
            47502,
            47500,
            47521,
            47341,
            47367,
            47505,
            47681,
            47383,
            47618,
            47406,
            49274,
            47497,
            47929,
            47562,
            49721,
            47442,
            47336,
            47510,
            47561,
            47517,
            47553,
            47417,
            47376,
            47427,
            47458,
            47532,
            47499,
            47505,
            47530,
            47476
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            556,
            7059,
            23814,
            41389,
            33584,
            15690,
            2781,
            324,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            521,
            6273,
            22622,
            39010,
            38332,
            21860,
            5091,
            605,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            0,
            113,
            2057,
            14250,
            32710,
            42465,
            29879,
            10490,
            1596,
            118,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            519,
            5526,
            21595,
            38481,
            41611,
            31108,
            13346,
            2275,
            243,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            718,
            7641,
            24672,
            39585,
            43001
          ]
        ]
      },
      "call": {
        "duration": 0.1336589999991702,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016539370008104015,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06913872699806234,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47769,
            47334,
            47079,
            47362,
            47171,
            47345,
            47289,
            47282,
            47153,
            47561,
            49144,
            47448,
            47110,
            47149,
            47295,
            47310,
            47382,
            47250,
            47139,
            47240,
            47145,
            47432,
            47190,
            47400,
            47285,
            47408,
            47175,
            47357,
            47458,
            47520,
            47272,
            47389,
            47161,
            47350,
            47295,
            46960,
            47178,
            47188,
            47039,
            47318,
            47066,
            47338,
            47078,
            47090,
            47112,
            47314,
            46923,
            47166,
            46898,
            47375,
            47198,
            47356,
            47080,
            47245,
            47087,
            47244,
            47080,
            47276,
            47186,
            47264,
            46824,
            47572,
            47213
          ],
          [
            47769,
            47334,
            47079,
            47362,
            47171,
            47345,
            47289,
            47282,
            47153,
            47561,
            49144,
            47448,
            47110,
            47149,
            47295,
            47310,
            47382,
            47250,
            47139,
            47240,
            47145,
            47432,
            47190,
            47400,
            47285,
            47408,
            47175,
            47357,
            47458,
            47520,
            47272,
            47389,
            47161,
            47350,
            47295,
            46960,
            47178,
            47188,
            47039,
            47318,
            47066,
            47338,
            47078,
            47090,
            47112,
            47314,
            46923,
            47166,
            46898,
            47375,
            47198,
            47356,
            47080,
            47245,
            47087,
            47244,
            47080,
            47276,
            47186,
            47264,
            46824,
            47572,
            47213
          ],
          [
            47769,
            47334,
            47079,
            47362,
            47171,
            47345,
            47289,
            47282,
            47153,
            47561,
            49144,
            47448,
            47110,
            47149,
            47295,
            47310,
            47382,
            47250,
            47139,
            47240,
            47145,
            47432,
            47190,
            47400,
            47285,
            47408,
            47175,
            47357,
            47458,
            47520,
            47272,
            47389,
            47161,
            47350,
            47295,
            46960,
            47178,
            47188,
            47039,
            47318,
            47066,
            47338,
            47078,
            47090,
            47112,
            47314,
            46923,
            47166,
            46898,
            47375,
            47198,
            47356,
            47080,
            47245,
            47087,
            47244,
            47080,
            47276,
            47186,
            47264,
            46824,
            47572,
            47213
          ],
          [
            47769,
            47334,
            47079,
            47362,
            47171,
            47345,
            47289,
            47282,
            47153,
            47561,
            49144,
            47448,
            47110,
            47149,
            47295,
            47310,
            47382,
            47250,
            47139,
            47240,
            47145,
            47432,
            47190,
            47400,
            47285,
            47408,
            47175,
            47357,
            47458,
            47520,
            47272,
            47389,
            47161,
            47350,
            47295,
            46960,
            47178,
            47188,
            47039,
            47318,
            47066,
            47338,
            47078,
            47090,
            47112,
            47314,
            46923,
            47166,
            46898,
            47375,
            47198,
            47356,
            47080,
            47245,
            47087,
            47244,
            47080,
            47276,
            47186,
            47264,
            46824,
            47572,
            47213
          ],
          [
            47769,
            47334,
            47079,
            47362,
            47171,
            47345,
            47289,
            47282,
            47153,
            47561,
            49144,
            47448,
            47110,
            47149,
            47295,
            47310,
            47382,
            47250,
            47139,
            47240,
            47145,
            47432,
            47190,
            47400,
            47285,
            47408,
            47175,
            47357,
            47458,
            47520,
            47272,
            47389,
            47161,
            47350,
            47295,
            46960,
            47178,
            47188,
            47039,
            47318,
            47066,
            47338,
            47078,
            47090,
            47112,
            47314,
            46923,
            47166,
            46898,
            47375,
            47198,
            47356,
            47080,
            47245,
            47087,
            47244,
            47080,
            47276,
            47186,
            47264,
            46824,
            47572,
            47213
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            115,
            1182,
            6053,
            18305,
            29262,
            33732,
            33020,
            24588,
            15012,
            6799,
            1461,
            164,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            424,
            2971,
            10393,
            21031,
            31242,
            35364,
            30865,
            19941,
            10493,
            4258,
            961,
            113,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            48,
            544,
            4637,
            15190,
            26065,
            33375,
            38128,
            36975,
            27118,
            13732,
            4972,
            698,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            136,
            1349,
            5380,
            14354,
            26609,
            34519,
            34946,
            26423,
            13340,
            4407,
            970,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            14438,
            5608,
            1115,
            23,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            178,
            2059,
            10531,
            22643,
            34122,
            39426,
            32923,
            19824,
            8890,
            1751,
            131,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            9,
            320,
            3845,
            14137,
            27603,
            37761,
            35809,
            24382,
            10280,
            2452,
            304,
            2,
            0,
            0,
            0,
            0
          ],
          [
            88,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            78,
            938,
            7129,
            19013,
            30553,
            38818,
            39186,
            34249,
            24466,
            12996,
            3680,
            426,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            468,
            3099,
            11879,
            24487,
            34919,
            34079,
            23160,
            11237,
            4341,
            1081,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            77,
            1076,
            5788,
            17231,
            28016,
            36447,
            39184,
            35653,
            24280,
            13360,
            3718,
            494,
            42,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            197,
            1299,
            6189,
            16888,
            29132,
            38442,
            39985,
            33597,
            22819,
            13300,
            6191,
            2024,
            123,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2706417440022051,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014977240025473293,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2920735300031083,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1716161660006037,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40047021, 10011755), (411208, 411208), (40049481, 10012370))\nassert ((40047021 > 0 and 10011755 == 0\n  +10011755\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff8ca0e100>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff8c708550>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9132cd90>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40047021, 10011755), (411208, 411208), (40049481, 10012370))\nE       assert ((40047021 > 0 and 10011755 == 0\nE         +10011755\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005000750999897718,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}