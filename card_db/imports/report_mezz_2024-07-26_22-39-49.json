{
  "created": 1722033608.8705866,
  "duration": 23.247293710708618,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5049309850001009,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1483509130011953,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013454399995680433,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038024050008971244,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14817849899918656,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012601479975273833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13243078700179467,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12174256900107139,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012985190005565528,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038038450002204627,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120588600009796,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013018489989917725,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033417140002711676,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14665140499710105,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011933369969483465,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033424650027882308,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12000457000249298,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011777660001826007,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033420149993617088,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14639672900011647,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011919560020032804,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033153740005218424,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12019543399946997,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011718560017470736,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004400948000693461,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020690559977083467,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011310549998597708,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003316725000331644,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017472690014983527,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010937340011878405,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033454939984949306,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004058970000187401,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033591.4491637,
            "msecs": 449.16367530822754,
            "relativeCreated": 7801.389694213867,
            "thread": 281473262383136,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5271
          }
        ]
      },
      "teardown": {
        "duration": 0.0012310179990890902,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033882459974847734,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024090240003715735,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033591.461454,
            "msecs": 461.453914642334,
            "relativeCreated": 7813.679933547974,
            "thread": 281473262383136,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5271
          }
        ]
      },
      "teardown": {
        "duration": 0.0011411659979785327,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002058285997918574,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027211500018893275,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033591.4709327,
            "msecs": 470.9327220916748,
            "relativeCreated": 7823.158740997314,
            "thread": 281473262383136,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5271
          }
        ]
      },
      "teardown": {
        "duration": 0.0010636740007612389,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002044215001660632,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0033835360009106807,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033591.4802907,
            "msecs": 480.29065132141113,
            "relativeCreated": 7832.516670227051,
            "thread": 281473262383136,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5271
          }
        ]
      },
      "teardown": {
        "duration": 0.0010841039984370582,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003321225001855055,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1465614619992266,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011935469992749859,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033274940033152234,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12035416800063103,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012041959998896345,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17950285799815902,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774243899955763,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012728080000670161,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015273910998075735,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12137704099950497,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012597890017786995,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8348934140012716,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            21,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            79,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            17,
            98,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.0035573899986047763,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029007049997744616,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.905519790998369,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            14,
            0,
            1,
            0,
            0
          ],
          [
            0,
            12,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            17
          ],
          [
            243,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            208,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            37,
            255,
            255,
            255,
            18
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            51,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            155,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            100,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            173,
            0,
            119,
            255
          ],
          [
            255,
            0,
            205,
            0,
            255,
            0,
            172,
            56,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          3
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003523429000779288,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002905803998146439,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3023853020022216,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48754,
            47838,
            47844,
            47750,
            47846,
            47672,
            47710,
            47803,
            47742,
            47668,
            47792,
            47810,
            47777,
            47902,
            47726,
            47882,
            47875,
            47762,
            47640,
            47900,
            49516,
            47814,
            48248,
            47697,
            47634,
            47794,
            47786,
            47862,
            47696,
            47636,
            47603,
            47998,
            47764,
            47778,
            47685,
            47868,
            47703,
            47872,
            47745,
            47654,
            47408,
            47442,
            47771,
            47872,
            47676,
            47765,
            47821,
            47864,
            47745,
            47892,
            47848,
            49516,
            47895,
            48067,
            47747,
            50051,
            47815,
            47723,
            47682,
            47605,
            47851,
            47749,
            47643
          ],
          [
            48754,
            47838,
            47844,
            47750,
            47846,
            47672,
            47710,
            47803,
            47742,
            47668,
            47792,
            47810,
            47777,
            47902,
            47726,
            47882,
            47875,
            47762,
            47640,
            47900,
            49516,
            47814,
            48248,
            47697,
            47634,
            47794,
            47786,
            47862,
            47696,
            47636,
            47603,
            47998,
            47764,
            47778,
            47685,
            47868,
            47703,
            47872,
            47745,
            47654,
            47408,
            47442,
            47771,
            47872,
            47676,
            47765,
            47821,
            47864,
            47745,
            47892,
            47848,
            49516,
            47895,
            48067,
            47747,
            50051,
            47815,
            47723,
            47682,
            47605,
            47851,
            47749,
            47643
          ]
        ],
        "eTX_errcounts": [
          [
            40519,
            26122,
            8397,
            1026,
            76,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            221,
            3195,
            17020,
            34933,
            42606,
            31327,
            14100,
            2222,
            169,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            938,
            7613,
            25864,
            40860,
            39507,
            20073,
            5341,
            594,
            11,
            0,
            0,
            0
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            329,
            4435,
            19238,
            36709,
            42620,
            32071,
            13604,
            2953,
            316,
            15,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            406,
            4403,
            19402,
            37291,
            43999,
            36115,
            17505,
            3105,
            357,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1342565079976339,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016411569995398168,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06906013299885672,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48226,
            47634,
            47564,
            47445,
            47509,
            47469,
            47561,
            47685,
            47408,
            47571,
            47583,
            48056,
            47270,
            47329,
            47396,
            47465,
            47512,
            47298,
            47551,
            47182,
            47389,
            47664,
            47465,
            47563,
            47745,
            47645,
            47677,
            47480,
            49489,
            48924,
            47177,
            47486,
            47490,
            47462,
            47534,
            47459,
            47420,
            47269,
            47527,
            47444,
            47483,
            47584,
            47540,
            47602,
            47192,
            47464,
            47900,
            47581,
            47473,
            47389,
            47520,
            47394,
            47369,
            47501,
            47375,
            47549,
            47580,
            47555,
            47611,
            47623,
            47577,
            47504,
            47564
          ],
          [
            48226,
            47634,
            47564,
            47445,
            47509,
            47469,
            47561,
            47685,
            47408,
            47571,
            47583,
            48056,
            47270,
            47329,
            47396,
            47465,
            47512,
            47298,
            47551,
            47182,
            47389,
            47664,
            47465,
            47563,
            47745,
            47645,
            47677,
            47480,
            49489,
            48924,
            47177,
            47486,
            47490,
            47462,
            47534,
            47459,
            47420,
            47269,
            47527,
            47444,
            47483,
            47584,
            47540,
            47602,
            47192,
            47464,
            47900,
            47581,
            47473,
            47389,
            47520,
            47394,
            47369,
            47501,
            47375,
            47549,
            47580,
            47555,
            47611,
            47623,
            47577,
            47504,
            47564
          ],
          [
            48226,
            47634,
            47564,
            47445,
            47509,
            47469,
            47561,
            47685,
            47408,
            47571,
            47583,
            48056,
            47270,
            47329,
            47396,
            47465,
            47512,
            47298,
            47551,
            47182,
            47389,
            47664,
            47465,
            47563,
            47745,
            47645,
            47677,
            47480,
            49489,
            48924,
            47177,
            47486,
            47490,
            47462,
            47534,
            47459,
            47420,
            47269,
            47527,
            47444,
            47483,
            47584,
            47540,
            47602,
            47192,
            47464,
            47900,
            47581,
            47473,
            47389,
            47520,
            47394,
            47369,
            47501,
            47375,
            47549,
            47580,
            47555,
            47611,
            47623,
            47577,
            47504,
            47564
          ],
          [
            48226,
            47634,
            47564,
            47445,
            47509,
            47469,
            47561,
            47685,
            47408,
            47571,
            47583,
            48056,
            47270,
            47329,
            47396,
            47465,
            47512,
            47298,
            47551,
            47182,
            47389,
            47664,
            47465,
            47563,
            47745,
            47645,
            47677,
            47480,
            49489,
            48924,
            47177,
            47486,
            47490,
            47462,
            47534,
            47459,
            47420,
            47269,
            47527,
            47444,
            47483,
            47584,
            47540,
            47602,
            47192,
            47464,
            47900,
            47581,
            47473,
            47389,
            47520,
            47394,
            47369,
            47501,
            47375,
            47549,
            47580,
            47555,
            47611,
            47623,
            47577,
            47504,
            47564
          ],
          [
            48226,
            47634,
            47564,
            47445,
            47509,
            47469,
            47561,
            47685,
            47408,
            47571,
            47583,
            48056,
            47270,
            47329,
            47396,
            47465,
            47512,
            47298,
            47551,
            47182,
            47389,
            47664,
            47465,
            47563,
            47745,
            47645,
            47677,
            47480,
            49489,
            48924,
            47177,
            47486,
            47490,
            47462,
            47534,
            47459,
            47420,
            47269,
            47527,
            47444,
            47483,
            47584,
            47540,
            47602,
            47192,
            47464,
            47900,
            47581,
            47473,
            47389,
            47520,
            47394,
            47369,
            47501,
            47375,
            47549,
            47580,
            47555,
            47611,
            47623,
            47577,
            47504,
            47564
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            33,
            442,
            2909,
            10097,
            22857,
            33846,
            36587,
            31492,
            20724,
            9161,
            2463,
            482,
            53,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            64,
            880,
            4668,
            12535,
            24037,
            32616,
            35925,
            30912,
            22913,
            11897,
            4869,
            1025,
            160,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            7,
            165,
            1309,
            4175,
            9716,
            22363,
            36307,
            39528,
            35527,
            26271,
            16066,
            8668,
            3269,
            663,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            177,
            1326,
            5748,
            15440,
            27061,
            32450,
            35010,
            35718,
            28156,
            16764,
            6845,
            1628,
            175,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            62,
            623,
            2469,
            6213,
            13865,
            26728
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            98,
            1137,
            5228,
            16413,
            30593,
            35759,
            32349,
            23192,
            12670,
            4905,
            1146,
            88,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            118,
            1299,
            6503,
            15486,
            29782,
            35612,
            33514,
            23279,
            12172,
            3428,
            394,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            20,
            451,
            2395,
            8640,
            21132,
            34462,
            37647,
            34123,
            25780,
            16039,
            6982,
            1591,
            122,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            68,
            697,
            3176,
            8296,
            16884,
            27965,
            36460,
            34100,
            25740,
            16138,
            7047,
            2018,
            199,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            12,
            235,
            1227,
            3804,
            8050,
            18649,
            33500,
            40261,
            36905,
            30570,
            22429,
            13875,
            7673,
            2830,
            459,
            46,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            122,
            1236,
            4935,
            12425,
            24987,
            32971,
            35716,
            37474,
            33077,
            24321,
            14905,
            7187,
            1691,
            205,
            16,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            9,
            139,
            1061,
            3505,
            8383
          ]
        ]
      },
      "call": {
        "duration": 0.2729713859989715,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff85178ab0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff85178ab0> = array([21, 12, 19, 21,  9]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff85154550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48226, 47634, 47564, 47445, 47509, 47469, ...], [48226, 47634, 47564, 47445, 47509, 47469, ...], [..., ...], [0, 0, 7, 165, 1309, 4175, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 12, 235, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff85178ab0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff85178ab0> = array([21, 12, 19, 21,  9]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016280759991786908,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2924945620034123,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169293631999608,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001467391997721279,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2909236980012793,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            22,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            173,
            65,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            34,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003457156999502331,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002885735000745626,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5378900819996488,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            246,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            204,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            82,
            255,
            130,
            255,
            106,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            203,
            0,
            133,
            2,
            255,
            31,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            73,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            7,
            255,
            156,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            167,
            255,
            134,
            255,
            255,
            3,
            0,
            123,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            89,
            255,
            92
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034511569974711165,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002893144999688957,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2955568500001391,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            51177,
            47816,
            47637,
            47711,
            47656,
            47734,
            47633,
            47576,
            47515,
            47782,
            47692,
            47788,
            47628,
            47650,
            47598,
            47655,
            47752,
            47672,
            47793,
            47901,
            47797,
            47739,
            47894,
            47708,
            47905,
            47656,
            47353,
            53041,
            47672,
            48103,
            47667,
            50147,
            47699,
            47823,
            47865,
            47693,
            47803,
            47583,
            47820,
            47808,
            47760,
            47619,
            47814,
            47675,
            47683,
            47593,
            47658,
            47609,
            47729,
            47703,
            47691,
            47668,
            47684,
            47720,
            47683,
            47580,
            47692,
            47724,
            47737,
            47869,
            48141,
            47694,
            48092
          ],
          [
            51177,
            47816,
            47637,
            47711,
            47656,
            47734,
            47633,
            47576,
            47515,
            47782,
            47692,
            47788,
            47628,
            47650,
            47598,
            47655,
            47752,
            47672,
            47793,
            47901,
            47797,
            47739,
            47894,
            47708,
            47905,
            47656,
            47353,
            53041,
            47672,
            48103,
            47667,
            50147,
            47699,
            47823,
            47865,
            47693,
            47803,
            47583,
            47820,
            47808,
            47760,
            47619,
            47814,
            47675,
            47683,
            47593,
            47658,
            47609,
            47729,
            47703,
            47691,
            47668,
            47684,
            47720,
            47683,
            47580,
            47692,
            47724,
            47737,
            47869,
            48141,
            47694,
            48092
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            338,
            3921,
            18034,
            37088,
            36951,
            18828,
            4254,
            402,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            197,
            3039,
            16519,
            35319,
            40507,
            25079,
            8279,
            999,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            84,
            933,
            8645,
            30133,
            42099,
            38503,
            18966,
            4239,
            475,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            148,
            2271,
            13998,
            31700,
            43032,
            38588,
            20150,
            5157,
            595,
            66,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13394828099990264,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016082160000223666,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06866139300109353,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48218,
            47547,
            47583,
            47437,
            47577,
            47381,
            47598,
            50037,
            47419,
            47407,
            47463,
            47401,
            47176,
            47286,
            47609,
            47299,
            47478,
            47406,
            47498,
            47332,
            47484,
            47515,
            47405,
            47458,
            47634,
            47432,
            47531,
            49209,
            49343,
            47211,
            47510,
            47164,
            47604,
            47288,
            47407,
            47155,
            47441,
            47217,
            47564,
            47266,
            47469,
            47432,
            47644,
            47440,
            47566,
            47452,
            47641,
            47526,
            49549,
            47321,
            47318,
            47230,
            47462,
            47309,
            47425,
            47315,
            47452,
            47302,
            47462,
            47320,
            47626,
            47315,
            47188
          ],
          [
            48218,
            47547,
            47583,
            47437,
            47577,
            47381,
            47598,
            50037,
            47419,
            47407,
            47463,
            47401,
            47176,
            47286,
            47609,
            47299,
            47478,
            47406,
            47498,
            47332,
            47484,
            47515,
            47405,
            47458,
            47634,
            47432,
            47531,
            49209,
            49343,
            47211,
            47510,
            47164,
            47604,
            47288,
            47407,
            47155,
            47441,
            47217,
            47564,
            47266,
            47469,
            47432,
            47644,
            47440,
            47566,
            47452,
            47641,
            47526,
            49549,
            47321,
            47318,
            47230,
            47462,
            47309,
            47425,
            47315,
            47452,
            47302,
            47462,
            47320,
            47626,
            47315,
            47188
          ],
          [
            48218,
            47547,
            47583,
            47437,
            47577,
            47381,
            47598,
            50037,
            47419,
            47407,
            47463,
            47401,
            47176,
            47286,
            47609,
            47299,
            47478,
            47406,
            47498,
            47332,
            47484,
            47515,
            47405,
            47458,
            47634,
            47432,
            47531,
            49209,
            49343,
            47211,
            47510,
            47164,
            47604,
            47288,
            47407,
            47155,
            47441,
            47217,
            47564,
            47266,
            47469,
            47432,
            47644,
            47440,
            47566,
            47452,
            47641,
            47526,
            49549,
            47321,
            47318,
            47230,
            47462,
            47309,
            47425,
            47315,
            47452,
            47302,
            47462,
            47320,
            47626,
            47315,
            47188
          ],
          [
            48218,
            47547,
            47583,
            47437,
            47577,
            47381,
            47598,
            50037,
            47419,
            47407,
            47463,
            47401,
            47176,
            47286,
            47609,
            47299,
            47478,
            47406,
            47498,
            47332,
            47484,
            47515,
            47405,
            47458,
            47634,
            47432,
            47531,
            49209,
            49343,
            47211,
            47510,
            47164,
            47604,
            47288,
            47407,
            47155,
            47441,
            47217,
            47564,
            47266,
            47469,
            47432,
            47644,
            47440,
            47566,
            47452,
            47641,
            47526,
            49549,
            47321,
            47318,
            47230,
            47462,
            47309,
            47425,
            47315,
            47452,
            47302,
            47462,
            47320,
            47626,
            47315,
            47188
          ],
          [
            48218,
            47547,
            47583,
            47437,
            47577,
            47381,
            47598,
            50037,
            47419,
            47407,
            47463,
            47401,
            47176,
            47286,
            47609,
            47299,
            47478,
            47406,
            47498,
            47332,
            47484,
            47515,
            47405,
            47458,
            47634,
            47432,
            47531,
            49209,
            49343,
            47211,
            47510,
            47164,
            47604,
            47288,
            47407,
            47155,
            47441,
            47217,
            47564,
            47266,
            47469,
            47432,
            47644,
            47440,
            47566,
            47452,
            47641,
            47526,
            49549,
            47321,
            47318,
            47230,
            47462,
            47309,
            47425,
            47315,
            47452,
            47302,
            47462,
            47320,
            47626,
            47315,
            47188
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            334,
            2740,
            12811,
            25943,
            34729,
            34101,
            22478,
            10990,
            2887,
            390,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            31,
            887,
            4633,
            15364,
            26320,
            36425,
            39262,
            31161,
            17621,
            4533,
            677,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6
          ],
          [
            0,
            8,
            239,
            1626,
            6829,
            18669,
            33681,
            41276,
            32919,
            18168,
            6050,
            979,
            62,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            190,
            2189,
            10951,
            25031,
            36554,
            42499,
            40151,
            30496,
            16710,
            4821,
            737,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            31,
            457,
            2409,
            8219,
            20099,
            32809,
            37491
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            502,
            4152,
            16237,
            31255,
            37055,
            31964,
            18686,
            6582,
            1197,
            57,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            126,
            889,
            8033,
            22086,
            38305,
            41957,
            35285,
            22216,
            9926,
            2012,
            176,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            100,
            1164,
            6744,
            20110,
            34589,
            38439,
            33696,
            19855,
            7815,
            1442,
            117,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            221,
            3345,
            12119,
            24868,
            34138,
            38945,
            35293,
            25243,
            11610,
            3227,
            275,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            22,
            232,
            2012,
            9039,
            23212,
            34138,
            39626,
            35588,
            24293,
            11780,
            2707,
            364,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            597,
            4062,
            14450,
            26975,
            36405,
            41106,
            37872,
            26875,
            13216,
            3310,
            367,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            80,
            980,
            6054,
            17238,
            31532
          ]
        ]
      },
      "call": {
        "duration": 0.2697911640025268,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00150765299986233,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2911377810014528,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1690426169989223,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001460223000322003,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.360539442001027,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            103,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034717070011538453,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0076679310004692525,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5335466739998083,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            10,
            255,
            17,
            255,
            3,
            83,
            0,
            255,
            0,
            255,
            255
          ],
          [
            85,
            0,
            23,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            26,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            241,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            1,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            38,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            10,
            0,
            255,
            8,
            255,
            255
          ],
          [
            67,
            0,
            3,
            0,
            4,
            0,
            255,
            235,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            80,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            255,
            0,
            8,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            64,
            0,
            9,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            95,
            255,
            82,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034626170017872937,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028860649981652386,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2957750749992556,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            49162,
            47705,
            47606,
            47811,
            47514,
            47699,
            47627,
            47687,
            47478,
            47620,
            47509,
            47890,
            47694,
            47637,
            47646,
            47635,
            47869,
            47799,
            47894,
            47663,
            47730,
            47960,
            47835,
            47836,
            47854,
            47640,
            47763,
            49394,
            47642,
            48080,
            47700,
            49747,
            47731,
            47693,
            47685,
            47916,
            48016,
            47869,
            47834,
            47689,
            47808,
            47375,
            47533,
            47595,
            47699,
            47663,
            47667,
            47633,
            47717,
            47615,
            47716,
            47662,
            47777,
            47885,
            47841,
            47696,
            49513,
            47741,
            48018,
            47715,
            49835,
            47670,
            47453
          ],
          [
            49162,
            47705,
            47606,
            47811,
            47514,
            47699,
            47627,
            47687,
            47478,
            47620,
            47509,
            47890,
            47694,
            47637,
            47646,
            47635,
            47869,
            47799,
            47894,
            47663,
            47730,
            47960,
            47835,
            47836,
            47854,
            47640,
            47763,
            49394,
            47642,
            48080,
            47700,
            49747,
            47731,
            47693,
            47685,
            47916,
            48016,
            47869,
            47834,
            47689,
            47808,
            47375,
            47533,
            47595,
            47699,
            47663,
            47667,
            47633,
            47717,
            47615,
            47716,
            47662,
            47777,
            47885,
            47841,
            47696,
            49513,
            47741,
            48018,
            47715,
            49835,
            47670,
            47453
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            536,
            7011,
            25202,
            39766,
            33491,
            15130,
            2566,
            228,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            744,
            6238,
            23103,
            38607,
            37112,
            20465,
            4829,
            556,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            0,
            1,
            110,
            2128,
            14016,
            33509,
            40560,
            29444,
            10043,
            1605,
            99,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            721,
            6032,
            22721,
            38817,
            41937,
            30107,
            11669,
            2047,
            185,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            749,
            7930,
            27003,
            40535,
            43357
          ]
        ]
      },
      "call": {
        "duration": 0.13432227000157582,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016111259974422865,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06891210899993894,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48443,
            47800,
            47486,
            47589,
            49010,
            53649,
            47394,
            47493,
            47393,
            47303,
            47397,
            47404,
            47611,
            47474,
            47344,
            47461,
            47493,
            47388,
            47321,
            47576,
            47350,
            47432,
            48691,
            47662,
            47273,
            47314,
            47442,
            47377,
            47699,
            47575,
            47590,
            47145,
            47587,
            47481,
            47676,
            47513,
            47338,
            47462,
            47544,
            47483,
            47931,
            47469,
            47313,
            47278,
            47243,
            47415,
            47444,
            47448,
            47665,
            47249,
            47424,
            47477,
            47614,
            47410,
            47351,
            47542,
            47553,
            47418,
            47852,
            47588,
            47386,
            47575,
            47429
          ],
          [
            48443,
            47800,
            47486,
            47589,
            49010,
            53649,
            47394,
            47493,
            47393,
            47303,
            47397,
            47404,
            47611,
            47474,
            47344,
            47461,
            47493,
            47388,
            47321,
            47576,
            47350,
            47432,
            48691,
            47662,
            47273,
            47314,
            47442,
            47377,
            47699,
            47575,
            47590,
            47145,
            47587,
            47481,
            47676,
            47513,
            47338,
            47462,
            47544,
            47483,
            47931,
            47469,
            47313,
            47278,
            47243,
            47415,
            47444,
            47448,
            47665,
            47249,
            47424,
            47477,
            47614,
            47410,
            47351,
            47542,
            47553,
            47418,
            47852,
            47588,
            47386,
            47575,
            47429
          ],
          [
            48443,
            47800,
            47486,
            47589,
            49010,
            53649,
            47394,
            47493,
            47393,
            47303,
            47397,
            47404,
            47611,
            47474,
            47344,
            47461,
            47493,
            47388,
            47321,
            47576,
            47350,
            47432,
            48691,
            47662,
            47273,
            47314,
            47442,
            47377,
            47699,
            47575,
            47590,
            47145,
            47587,
            47481,
            47676,
            47513,
            47338,
            47462,
            47544,
            47483,
            47931,
            47469,
            47313,
            47278,
            47243,
            47415,
            47444,
            47448,
            47665,
            47249,
            47424,
            47477,
            47614,
            47410,
            47351,
            47542,
            47553,
            47418,
            47852,
            47588,
            47386,
            47575,
            47429
          ],
          [
            48443,
            47800,
            47486,
            47589,
            49010,
            53649,
            47394,
            47493,
            47393,
            47303,
            47397,
            47404,
            47611,
            47474,
            47344,
            47461,
            47493,
            47388,
            47321,
            47576,
            47350,
            47432,
            48691,
            47662,
            47273,
            47314,
            47442,
            47377,
            47699,
            47575,
            47590,
            47145,
            47587,
            47481,
            47676,
            47513,
            47338,
            47462,
            47544,
            47483,
            47931,
            47469,
            47313,
            47278,
            47243,
            47415,
            47444,
            47448,
            47665,
            47249,
            47424,
            47477,
            47614,
            47410,
            47351,
            47542,
            47553,
            47418,
            47852,
            47588,
            47386,
            47575,
            47429
          ],
          [
            48443,
            47800,
            47486,
            47589,
            49010,
            53649,
            47394,
            47493,
            47393,
            47303,
            47397,
            47404,
            47611,
            47474,
            47344,
            47461,
            47493,
            47388,
            47321,
            47576,
            47350,
            47432,
            48691,
            47662,
            47273,
            47314,
            47442,
            47377,
            47699,
            47575,
            47590,
            47145,
            47587,
            47481,
            47676,
            47513,
            47338,
            47462,
            47544,
            47483,
            47931,
            47469,
            47313,
            47278,
            47243,
            47415,
            47444,
            47448,
            47665,
            47249,
            47424,
            47477,
            47614,
            47410,
            47351,
            47542,
            47553,
            47418,
            47852,
            47588,
            47386,
            47575,
            47429
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            233,
            1954,
            8450,
            18538,
            28351,
            35799,
            35562,
            28134,
            13222,
            2599,
            377,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            333,
            2736,
            10802,
            22808,
            34198,
            38269,
            32782,
            19983,
            7973,
            2106,
            355,
            28,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            801,
            4752,
            15809,
            27441,
            35266,
            38975,
            36715,
            26423,
            13247,
            4869,
            799,
            21,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            8,
            135,
            1466,
            6167,
            15784,
            28269,
            35227,
            34495,
            26627,
            12898,
            4153,
            727,
            81,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            14044,
            5715,
            966,
            43,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            239,
            2406,
            10965,
            23801,
            35466,
            39589,
            32532,
            18892,
            7683,
            1671,
            85,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            439,
            4212,
            14168,
            28653,
            38721,
            35183,
            22583,
            10007,
            2146,
            221,
            9,
            0,
            0,
            0,
            0
          ],
          [
            76,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            62,
            1099,
            7533,
            19841,
            31476,
            39052,
            40698,
            33817,
            23450,
            11559,
            3238,
            372,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            65,
            598,
            3303,
            12866,
            25559,
            35100,
            34062,
            22081,
            10505,
            4001,
            902,
            104,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            81,
            1133,
            6339,
            18432,
            28805,
            37220,
            39558,
            35166,
            23683,
            12761,
            3160,
            433,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            225,
            1490,
            6755,
            17500,
            29814,
            38553,
            39794,
            32825,
            22605,
            12939,
            5614,
            1616,
            112,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27127610800016555,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015216339998005424,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29149334899921087,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168583275997662,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00479971800086787,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}