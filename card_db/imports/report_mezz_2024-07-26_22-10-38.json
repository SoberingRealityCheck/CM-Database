{
  "created": 1722031858.3030045,
  "duration": 23.45125126838684,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5054047609992267,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14840423799978453,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013363190009840764,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037999150008545257,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14802574900022591,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012914679973619059,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13356959800148616,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12181872699875385,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012990290015295614,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003796974000579212,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12110507200122811,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001315289999183733,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003381704998901114,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14658967699870118,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011956460002693348,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033452239986218046,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1199728760002472,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012134370008425321,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033636450025369413,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464069740031846,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011994259984930977,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033211640002264176,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12021066100351163,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011864360021718312,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00439968800128554,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021284269969328307,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011459960005595349,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003358933998242719,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00174984900149866,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011612359994614962,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033144139997602906,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00405771000077948,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031840.5978096,
            "msecs": 597.8095531463623,
            "relativeCreated": 7718.223094940186,
            "thread": 281473712054304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4433
          }
        ]
      },
      "teardown": {
        "duration": 0.001269418000447331,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033568649996595923,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024452040015603416,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031840.6101186,
            "msecs": 610.1186275482178,
            "relativeCreated": 7730.532169342041,
            "thread": 281473712054304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4433
          }
        ]
      },
      "teardown": {
        "duration": 0.001164866000181064,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002057445999525953,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002735581001616083,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031840.619652,
            "msecs": 619.6520328521729,
            "relativeCreated": 7740.065574645996,
            "thread": 281473712054304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4433
          }
        ]
      },
      "teardown": {
        "duration": 0.0010965539986500517,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020843860002059955,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034534070000518113,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031840.6290889,
            "msecs": 629.0888786315918,
            "relativeCreated": 7749.502420425415,
            "thread": 281473712054304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4433
          }
        ]
      },
      "teardown": {
        "duration": 0.001078344001143705,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033467539979028516,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14664061900111847,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011934859976463486,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003328544000396505,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12035826500141411,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011956760026805568,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17793833399991854,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479051160022209,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012762280020979233,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01517787700140616,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12125492499762913,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012647979965549894,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8397357719986758,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            10,
            11,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            91,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            18,
            111,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035678589993040077,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029394949997367803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9001186419991427,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            10,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            217,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            121,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            14,
            255,
            255,
            255,
            13
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            30,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            144,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            56,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            227,
            255,
            255,
            255,
            255,
            0,
            0,
            90,
            0,
            59,
            255
          ],
          [
            255,
            0,
            168,
            0,
            255,
            0,
            204,
            62,
            255,
            255,
            255,
            4
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003552558999217581,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029434860007313546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30261174399856827,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48519,
            47764,
            47735,
            48012,
            47700,
            47944,
            47657,
            47623,
            47589,
            47591,
            47680,
            47532,
            47739,
            47531,
            47602,
            47692,
            47669,
            47457,
            47651,
            47330,
            47381,
            47509,
            47576,
            47581,
            47753,
            47692,
            47569,
            47746,
            47575,
            47505,
            47774,
            47651,
            49423,
            47771,
            47921,
            47615,
            49868,
            47539,
            47596,
            47552,
            47548,
            47608,
            47700,
            47515,
            47731,
            47809,
            47414,
            47539,
            47569,
            47564,
            47628,
            47827,
            47635,
            47644,
            47710,
            47605,
            47483,
            47746,
            47665,
            47654,
            48003,
            49354,
            47582
          ],
          [
            48519,
            47764,
            47735,
            48012,
            47700,
            47944,
            47657,
            47623,
            47589,
            47591,
            47680,
            47532,
            47739,
            47531,
            47602,
            47692,
            47669,
            47457,
            47651,
            47330,
            47381,
            47509,
            47576,
            47581,
            47753,
            47692,
            47569,
            47746,
            47575,
            47505,
            47774,
            47651,
            49423,
            47771,
            47921,
            47615,
            49868,
            47539,
            47596,
            47552,
            47548,
            47608,
            47700,
            47515,
            47731,
            47809,
            47414,
            47539,
            47569,
            47564,
            47628,
            47827,
            47635,
            47644,
            47710,
            47605,
            47483,
            47746,
            47665,
            47654,
            48003,
            49354,
            47582
          ]
        ],
        "eTX_errcounts": [
          [
            41084,
            27355,
            9220,
            1224,
            132,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            171,
            2927,
            14545,
            33944,
            42950,
            32020,
            15316,
            2512,
            176,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            801,
            6647,
            25079,
            40135,
            38404,
            20605,
            5581,
            741,
            33,
            1,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            236,
            3716,
            16814,
            35338,
            42406,
            32555,
            13861,
            3389,
            352,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            308,
            3791,
            18319,
            35931,
            43018,
            36391,
            17805,
            3525,
            338,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1345740199976717,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016378869986510836,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907740500173531,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47992,
            47371,
            47366,
            47289,
            47345,
            47123,
            47319,
            47425,
            47314,
            47140,
            47478,
            47402,
            47301,
            47711,
            47520,
            47345,
            47204,
            47322,
            47232,
            47314,
            47211,
            47285,
            47287,
            47349,
            47370,
            47249,
            47510,
            47245,
            47556,
            47409,
            47345,
            47138,
            47771,
            47169,
            47327,
            47330,
            47350,
            47140,
            47213,
            47298,
            47194,
            47224,
            47373,
            47302,
            47402,
            47255,
            47414,
            47302,
            47227,
            47517,
            49247,
            48975,
            47149,
            47257,
            47250,
            47212,
            47378,
            47232,
            47029,
            47430,
            47235,
            47148,
            47351
          ],
          [
            47992,
            47371,
            47366,
            47289,
            47345,
            47123,
            47319,
            47425,
            47314,
            47140,
            47478,
            47402,
            47301,
            47711,
            47520,
            47345,
            47204,
            47322,
            47232,
            47314,
            47211,
            47285,
            47287,
            47349,
            47370,
            47249,
            47510,
            47245,
            47556,
            47409,
            47345,
            47138,
            47771,
            47169,
            47327,
            47330,
            47350,
            47140,
            47213,
            47298,
            47194,
            47224,
            47373,
            47302,
            47402,
            47255,
            47414,
            47302,
            47227,
            47517,
            49247,
            48975,
            47149,
            47257,
            47250,
            47212,
            47378,
            47232,
            47029,
            47430,
            47235,
            47148,
            47351
          ],
          [
            47992,
            47371,
            47366,
            47289,
            47345,
            47123,
            47319,
            47425,
            47314,
            47140,
            47478,
            47402,
            47301,
            47711,
            47520,
            47345,
            47204,
            47322,
            47232,
            47314,
            47211,
            47285,
            47287,
            47349,
            47370,
            47249,
            47510,
            47245,
            47556,
            47409,
            47345,
            47138,
            47771,
            47169,
            47327,
            47330,
            47350,
            47140,
            47213,
            47298,
            47194,
            47224,
            47373,
            47302,
            47402,
            47255,
            47414,
            47302,
            47227,
            47517,
            49247,
            48975,
            47149,
            47257,
            47250,
            47212,
            47378,
            47232,
            47029,
            47430,
            47235,
            47148,
            47351
          ],
          [
            47992,
            47371,
            47366,
            47289,
            47345,
            47123,
            47319,
            47425,
            47314,
            47140,
            47478,
            47402,
            47301,
            47711,
            47520,
            47345,
            47204,
            47322,
            47232,
            47314,
            47211,
            47285,
            47287,
            47349,
            47370,
            47249,
            47510,
            47245,
            47556,
            47409,
            47345,
            47138,
            47771,
            47169,
            47327,
            47330,
            47350,
            47140,
            47213,
            47298,
            47194,
            47224,
            47373,
            47302,
            47402,
            47255,
            47414,
            47302,
            47227,
            47517,
            49247,
            48975,
            47149,
            47257,
            47250,
            47212,
            47378,
            47232,
            47029,
            47430,
            47235,
            47148,
            47351
          ],
          [
            47992,
            47371,
            47366,
            47289,
            47345,
            47123,
            47319,
            47425,
            47314,
            47140,
            47478,
            47402,
            47301,
            47711,
            47520,
            47345,
            47204,
            47322,
            47232,
            47314,
            47211,
            47285,
            47287,
            47349,
            47370,
            47249,
            47510,
            47245,
            47556,
            47409,
            47345,
            47138,
            47771,
            47169,
            47327,
            47330,
            47350,
            47140,
            47213,
            47298,
            47194,
            47224,
            47373,
            47302,
            47402,
            47255,
            47414,
            47302,
            47227,
            47517,
            49247,
            48975,
            47149,
            47257,
            47250,
            47212,
            47378,
            47232,
            47029,
            47430,
            47235,
            47148,
            47351
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            76,
            928,
            4749,
            12835,
            23940,
            30916,
            32363,
            28247,
            20788,
            11269,
            2916,
            415,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            17,
            216,
            1645,
            5201,
            11943,
            23586,
            34305,
            39384,
            32688,
            22398,
            10852,
            3234,
            484,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            2,
            33,
            648,
            2801,
            10124,
            21386,
            32158,
            36085,
            34800,
            27112,
            15677,
            6413,
            1347,
            157,
            7,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            167,
            1365,
            5067,
            10898,
            20068,
            31878,
            40962,
            39532,
            29235,
            18745,
            6811,
            1243,
            135,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            163,
            1248,
            5022,
            12671,
            22738
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            173,
            1563,
            6506,
            16157,
            29338,
            36087,
            32979,
            24175,
            13318,
            4334,
            620,
            35,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            163,
            1173,
            6281,
            16210,
            31069,
            34554,
            31320,
            24668,
            16122,
            5063,
            626,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            277,
            2162,
            8137,
            17963,
            30216,
            37645,
            35974,
            26409,
            13705,
            3963,
            600,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            43,
            481,
            2500,
            6350,
            15085,
            29297,
            38445,
            36846,
            29496,
            18121,
            7202,
            1685,
            95,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            10,
            112,
            800,
            3354,
            8661,
            19173,
            31871,
            38285,
            37187,
            32408,
            23757,
            10746,
            3276,
            549,
            23,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            153,
            1284,
            4621,
            9920,
            17786,
            29612,
            39813,
            41877,
            35089,
            24482,
            12631,
            4360,
            872,
            98,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            55,
            605,
            2690,
            7714
          ]
        ]
      },
      "call": {
        "duration": 0.2723386709985789,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9fe41db0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9fe41db0> = array([22, 13, 14, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9fe55610>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47992, 47371, 47366, 47289, 47345, 47123, ...], [47992, 47371, 47366, 47289, 47345, 47123, ...], [... 0, ...], [0, 0, 2, 33, 648, 2801, ...], [1, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 10, 112, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9fe41db0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9fe41db0> = array([22, 13, 14, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016506959982507396,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29269277400089777,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1694866890029516,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014445029992202763,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2979086419982195,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            248,
            60,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003499246999126626,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029319050008780323,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5391267400009383,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            245,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            213,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            63,
            255,
            131,
            255,
            131,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            247,
            0,
            62,
            1,
            255,
            16,
            255,
            12
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            89,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            6,
            255,
            157,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            228,
            255,
            132,
            255,
            255,
            4,
            0,
            151,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            0,
            255,
            106,
            255,
            62
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035015580033359583,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002934516000095755,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29582349399788654,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47797,
            47757,
            47617,
            47523,
            47447,
            47609,
            47459,
            47562,
            47733,
            47633,
            47604,
            47595,
            47527,
            47546,
            49087,
            47587,
            48062,
            47556,
            47966,
            47659,
            47479,
            47614,
            47485,
            47622,
            47541,
            47551,
            47660,
            47797,
            47583,
            47638,
            47498,
            47570,
            47422,
            47611,
            47471,
            47635,
            47581,
            47593,
            47554,
            47619,
            47541,
            47559,
            47494,
            47493,
            47601,
            47986,
            47717,
            49724,
            47469,
            47356,
            47300,
            47558,
            47707,
            47399,
            47539,
            47390,
            47526,
            47539,
            47677,
            47529,
            47599,
            47682,
            47593
          ],
          [
            47797,
            47757,
            47617,
            47523,
            47447,
            47609,
            47459,
            47562,
            47733,
            47633,
            47604,
            47595,
            47527,
            47546,
            49087,
            47587,
            48062,
            47556,
            47966,
            47659,
            47479,
            47614,
            47485,
            47622,
            47541,
            47551,
            47660,
            47797,
            47583,
            47638,
            47498,
            47570,
            47422,
            47611,
            47471,
            47635,
            47581,
            47593,
            47554,
            47619,
            47541,
            47559,
            47494,
            47493,
            47601,
            47986,
            47717,
            49724,
            47469,
            47356,
            47300,
            47558,
            47707,
            47399,
            47539,
            47390,
            47526,
            47539,
            47677,
            47529,
            47599,
            47682,
            47593
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            188,
            3443,
            17070,
            35746,
            36296,
            20041,
            4913,
            410,
            51,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            130,
            2304,
            15091,
            35376,
            40592,
            26265,
            9107,
            842,
            82,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            899,
            8623,
            28296,
            42050,
            39187,
            19459,
            4858,
            389,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            134,
            1952,
            12703,
            30777,
            42578,
            38733,
            21153,
            5428,
            570,
            43,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1342712229998142,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016534569986106362,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06884333999914816,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48048,
            47650,
            47307,
            47551,
            47369,
            47463,
            47544,
            47289,
            47528,
            49227,
            49144,
            47313,
            47170,
            47458,
            47415,
            47359,
            47350,
            47258,
            47572,
            47193,
            47246,
            47252,
            47430,
            47491,
            47018,
            47523,
            47451,
            49056,
            49417,
            47309,
            47302,
            47176,
            47308,
            47518,
            47340,
            47370,
            47646,
            47145,
            47598,
            47222,
            47313,
            47424,
            47192,
            47536,
            47392,
            47722,
            47431,
            47440,
            47165,
            47237,
            47201,
            47415,
            47529,
            47597,
            47255,
            47347,
            47395,
            47367,
            47739,
            47252,
            47260,
            47423,
            47282
          ],
          [
            48048,
            47650,
            47307,
            47551,
            47369,
            47463,
            47544,
            47289,
            47528,
            49227,
            49144,
            47313,
            47170,
            47458,
            47415,
            47359,
            47350,
            47258,
            47572,
            47193,
            47246,
            47252,
            47430,
            47491,
            47018,
            47523,
            47451,
            49056,
            49417,
            47309,
            47302,
            47176,
            47308,
            47518,
            47340,
            47370,
            47646,
            47145,
            47598,
            47222,
            47313,
            47424,
            47192,
            47536,
            47392,
            47722,
            47431,
            47440,
            47165,
            47237,
            47201,
            47415,
            47529,
            47597,
            47255,
            47347,
            47395,
            47367,
            47739,
            47252,
            47260,
            47423,
            47282
          ],
          [
            48048,
            47650,
            47307,
            47551,
            47369,
            47463,
            47544,
            47289,
            47528,
            49227,
            49144,
            47313,
            47170,
            47458,
            47415,
            47359,
            47350,
            47258,
            47572,
            47193,
            47246,
            47252,
            47430,
            47491,
            47018,
            47523,
            47451,
            49056,
            49417,
            47309,
            47302,
            47176,
            47308,
            47518,
            47340,
            47370,
            47646,
            47145,
            47598,
            47222,
            47313,
            47424,
            47192,
            47536,
            47392,
            47722,
            47431,
            47440,
            47165,
            47237,
            47201,
            47415,
            47529,
            47597,
            47255,
            47347,
            47395,
            47367,
            47739,
            47252,
            47260,
            47423,
            47282
          ],
          [
            48048,
            47650,
            47307,
            47551,
            47369,
            47463,
            47544,
            47289,
            47528,
            49227,
            49144,
            47313,
            47170,
            47458,
            47415,
            47359,
            47350,
            47258,
            47572,
            47193,
            47246,
            47252,
            47430,
            47491,
            47018,
            47523,
            47451,
            49056,
            49417,
            47309,
            47302,
            47176,
            47308,
            47518,
            47340,
            47370,
            47646,
            47145,
            47598,
            47222,
            47313,
            47424,
            47192,
            47536,
            47392,
            47722,
            47431,
            47440,
            47165,
            47237,
            47201,
            47415,
            47529,
            47597,
            47255,
            47347,
            47395,
            47367,
            47739,
            47252,
            47260,
            47423,
            47282
          ],
          [
            48048,
            47650,
            47307,
            47551,
            47369,
            47463,
            47544,
            47289,
            47528,
            49227,
            49144,
            47313,
            47170,
            47458,
            47415,
            47359,
            47350,
            47258,
            47572,
            47193,
            47246,
            47252,
            47430,
            47491,
            47018,
            47523,
            47451,
            49056,
            49417,
            47309,
            47302,
            47176,
            47308,
            47518,
            47340,
            47370,
            47646,
            47145,
            47598,
            47222,
            47313,
            47424,
            47192,
            47536,
            47392,
            47722,
            47431,
            47440,
            47165,
            47237,
            47201,
            47415,
            47529,
            47597,
            47255,
            47347,
            47395,
            47367,
            47739,
            47252,
            47260,
            47423,
            47282
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            619,
            4389,
            15957,
            28200,
            34601,
            33310,
            25517,
            15451,
            5827,
            1269,
            125,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            78,
            965,
            3970,
            11945,
            24594,
            36973,
            39469,
            29101,
            15711,
            4101,
            631,
            44,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33
          ],
          [
            0,
            5,
            141,
            1425,
            7744,
            20338,
            36451,
            40085,
            35149,
            23557,
            10526,
            2364,
            298,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            387,
            2265,
            8632,
            21282,
            35623,
            43991,
            41791,
            28979,
            13711,
            2881,
            304,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            38,
            501,
            2919,
            8183,
            19628,
            33917,
            37973
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            781,
            6032,
            20673,
            33621,
            38477,
            32054,
            15084,
            3784,
            421,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            16,
            524,
            4801,
            16772,
            33891,
            41500,
            34658,
            19791,
            6374,
            1030,
            80,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            136,
            1580,
            9734,
            25656,
            39051,
            42150,
            34694,
            18767,
            5923,
            846,
            44,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            182,
            1873,
            8407,
            20492,
            33946,
            41830,
            36445,
            23987,
            10675,
            2481,
            219,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            6,
            232,
            2272,
            10278,
            25914,
            38432,
            41390,
            35824,
            27212,
            16793,
            6177,
            1597,
            127,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            665,
            3478,
            11526,
            24701,
            36175,
            43355,
            40990,
            30292,
            14884,
            4781,
            779,
            29,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            176,
            1324,
            6712,
            16778,
            29605
          ]
        ]
      },
      "call": {
        "duration": 0.2712779079993197,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001503723000496393,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29147675700005493,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169271224000113,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014656530001957435,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3554518700002518,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            102,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003508937999868067,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029352649980864953,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5402323849993991,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            10,
            255,
            1,
            51,
            0,
            255,
            0,
            255,
            255
          ],
          [
            87,
            0,
            26,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            30,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            46,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            4,
            0,
            255,
            1,
            255,
            255
          ],
          [
            63,
            0,
            5,
            0,
            10,
            0,
            255,
            213,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            82,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            63,
            0,
            14,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            138,
            255,
            41,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034515769984864164,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029258750000735745,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2962831039985758,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48146,
            47620,
            47666,
            47301,
            47518,
            47505,
            47571,
            47621,
            47565,
            47444,
            47488,
            47547,
            47560,
            47532,
            47490,
            47235,
            47345,
            47660,
            49659,
            47621,
            47633,
            47726,
            49616,
            47601,
            47590,
            47419,
            47460,
            47457,
            47503,
            47448,
            47457,
            47499,
            47357,
            47517,
            47303,
            47522,
            47618,
            47487,
            47487,
            47525,
            47477,
            47517,
            47453,
            47446,
            47495,
            47595,
            47721,
            47592,
            47921,
            47581,
            47623,
            47514,
            47607,
            49146,
            47589,
            47846,
            47520,
            49905,
            47627,
            47422,
            47685,
            47433,
            47364
          ],
          [
            48146,
            47620,
            47666,
            47301,
            47518,
            47505,
            47571,
            47621,
            47565,
            47444,
            47488,
            47547,
            47560,
            47532,
            47490,
            47235,
            47345,
            47660,
            49659,
            47621,
            47633,
            47726,
            49616,
            47601,
            47590,
            47419,
            47460,
            47457,
            47503,
            47448,
            47457,
            47499,
            47357,
            47517,
            47303,
            47522,
            47618,
            47487,
            47487,
            47525,
            47477,
            47517,
            47453,
            47446,
            47495,
            47595,
            47721,
            47592,
            47921,
            47581,
            47623,
            47514,
            47607,
            49146,
            47589,
            47846,
            47520,
            49905,
            47627,
            47422,
            47685,
            47433,
            47364
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            689,
            6907,
            24335,
            40243,
            34355,
            14900,
            2777,
            267,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            47,
            659,
            6481,
            22017,
            38061,
            37924,
            21712,
            5139,
            767,
            28,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            113,
            1988,
            14764,
            32898,
            41227,
            28487,
            9284,
            1512,
            87,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            634,
            5621,
            21951,
            38652,
            41560,
            30216,
            12165,
            1860,
            245,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            782,
            7338,
            24979,
            40065,
            43766
          ]
        ]
      },
      "call": {
        "duration": 0.13381587299954845,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016505470011907164,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06921864800096955,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47731,
            47286,
            47480,
            47363,
            47430,
            47338,
            47239,
            47279,
            47412,
            47338,
            47285,
            49446,
            47696,
            47340,
            47413,
            47330,
            47407,
            47343,
            47385,
            47447,
            47196,
            47311,
            47417,
            47285,
            47419,
            47307,
            47210,
            47453,
            47315,
            47432,
            49033,
            48419,
            47386,
            47311,
            47223,
            47339,
            47250,
            47279,
            47271,
            47200,
            47259,
            47279,
            47287,
            47372,
            47422,
            47256,
            49491,
            56742,
            48492,
            47532,
            47159,
            47385,
            47448,
            47390,
            47382,
            47335,
            47008,
            47292,
            47403,
            47420,
            47325,
            47417,
            47358
          ],
          [
            47731,
            47286,
            47480,
            47363,
            47430,
            47338,
            47239,
            47279,
            47412,
            47338,
            47285,
            49446,
            47696,
            47340,
            47413,
            47330,
            47407,
            47343,
            47385,
            47447,
            47196,
            47311,
            47417,
            47285,
            47419,
            47307,
            47210,
            47453,
            47315,
            47432,
            49033,
            48419,
            47386,
            47311,
            47223,
            47339,
            47250,
            47279,
            47271,
            47200,
            47259,
            47279,
            47287,
            47372,
            47422,
            47256,
            49491,
            56742,
            48492,
            47532,
            47159,
            47385,
            47448,
            47390,
            47382,
            47335,
            47008,
            47292,
            47403,
            47420,
            47325,
            47417,
            47358
          ],
          [
            47731,
            47286,
            47480,
            47363,
            47430,
            47338,
            47239,
            47279,
            47412,
            47338,
            47285,
            49446,
            47696,
            47340,
            47413,
            47330,
            47407,
            47343,
            47385,
            47447,
            47196,
            47311,
            47417,
            47285,
            47419,
            47307,
            47210,
            47453,
            47315,
            47432,
            49033,
            48419,
            47386,
            47311,
            47223,
            47339,
            47250,
            47279,
            47271,
            47200,
            47259,
            47279,
            47287,
            47372,
            47422,
            47256,
            49491,
            56742,
            48492,
            47532,
            47159,
            47385,
            47448,
            47390,
            47382,
            47335,
            47008,
            47292,
            47403,
            47420,
            47325,
            47417,
            47358
          ],
          [
            47731,
            47286,
            47480,
            47363,
            47430,
            47338,
            47239,
            47279,
            47412,
            47338,
            47285,
            49446,
            47696,
            47340,
            47413,
            47330,
            47407,
            47343,
            47385,
            47447,
            47196,
            47311,
            47417,
            47285,
            47419,
            47307,
            47210,
            47453,
            47315,
            47432,
            49033,
            48419,
            47386,
            47311,
            47223,
            47339,
            47250,
            47279,
            47271,
            47200,
            47259,
            47279,
            47287,
            47372,
            47422,
            47256,
            49491,
            56742,
            48492,
            47532,
            47159,
            47385,
            47448,
            47390,
            47382,
            47335,
            47008,
            47292,
            47403,
            47420,
            47325,
            47417,
            47358
          ],
          [
            47731,
            47286,
            47480,
            47363,
            47430,
            47338,
            47239,
            47279,
            47412,
            47338,
            47285,
            49446,
            47696,
            47340,
            47413,
            47330,
            47407,
            47343,
            47385,
            47447,
            47196,
            47311,
            47417,
            47285,
            47419,
            47307,
            47210,
            47453,
            47315,
            47432,
            49033,
            48419,
            47386,
            47311,
            47223,
            47339,
            47250,
            47279,
            47271,
            47200,
            47259,
            47279,
            47287,
            47372,
            47422,
            47256,
            49491,
            56742,
            48492,
            47532,
            47159,
            47385,
            47448,
            47390,
            47382,
            47335,
            47008,
            47292,
            47403,
            47420,
            47325,
            47417,
            47358
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            264,
            1833,
            6846,
            15530,
            27342,
            36953,
            35882,
            24590,
            12206,
            3450,
            350,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            52,
            661,
            4155,
            12175,
            24209,
            38747,
            33945,
            28612,
            19846,
            10804,
            4372,
            700,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            329,
            1727,
            5237,
            13097,
            25556,
            37516,
            43366,
            38567,
            23785,
            9128,
            2045,
            169,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            26,
            407,
            2635,
            6800,
            14746,
            29013,
            39073,
            37158,
            28520,
            14420,
            4394,
            1010,
            63,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            87
          ],
          [
            11515,
            3233,
            354,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            95,
            1378,
            8454,
            20197,
            32183,
            39417,
            30757,
            16750,
            6101,
            928,
            81,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            59,
            864,
            5361,
            15213,
            28315,
            35753,
            32845,
            21995,
            8471,
            1754,
            153,
            1,
            0,
            0,
            0,
            0
          ],
          [
            61,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            58,
            864,
            5956,
            16427,
            27313,
            38756,
            40988,
            32530,
            21718,
            10062,
            3196,
            495,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            120,
            863,
            4382,
            16821,
            27350,
            35011,
            33045,
            23683,
            12014,
            3752,
            649,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            130,
            1544,
            5871,
            16405,
            27028,
            36632,
            41111,
            38073,
            25875,
            14669,
            4592,
            716,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            511,
            2547,
            7788,
            17393,
            29667,
            37205,
            36431,
            30825,
            24343,
            16749,
            5868,
            1522,
            67,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27141474100062624,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015135039975575637,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918709349978599,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170482050998544,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045847, 10011462), (412286, 412286), (40048058, 10012015))\nassert ((40045847 > 0 and 10011462 == 0\n  +10011462\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9fe550a0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff9fb8f280>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9fe979d0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045847, 10011462), (412286, 412286), (40048058, 10012015))\nE       assert ((40045847 > 0 and 10011462 == 0\nE         +10011462\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005000451001251349,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}