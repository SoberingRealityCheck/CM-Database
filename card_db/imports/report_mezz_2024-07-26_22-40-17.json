{
  "created": 1722033636.8818657,
  "duration": 23.51889944076538,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5053855549995205,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14789337199908914,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001348919999145437,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038282950008579064,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14782554100020207,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012686980007856619,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13223449299766799,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117882600068697,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012658180021389853,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038000049971742555,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12092975999985356,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001252978003321914,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033835049980552867,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14612528399811708,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011878459990839474,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003339523998874938,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1195841400003701,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011625260012806393,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033680550004646648,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1458049659995595,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011755160012398846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003355844997713575,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11986014600188355,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011771369972848333,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004432688998349477,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002072775998385623,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011207349998585414,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003324494002299616,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017169679995276965,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011249349990976043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003338235001137946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040427409985568374,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033619.217921,
            "msecs": 217.92101860046387,
            "relativeCreated": 7827.931880950928,
            "thread": 281473377292320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5286
          }
        ]
      },
      "teardown": {
        "duration": 0.0012177270000393037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003381704998901114,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002407253999990644,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033619.2307572,
            "msecs": 230.7572364807129,
            "relativeCreated": 7840.768098831177,
            "thread": 281473377292320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5286
          }
        ]
      },
      "teardown": {
        "duration": 0.0011891970025317278,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002102145997923799,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026894699985859916,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033619.2407475,
            "msecs": 240.74745178222656,
            "relativeCreated": 7850.75831413269,
            "thread": 281473377292320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5286
          }
        ]
      },
      "teardown": {
        "duration": 0.001050473001669161,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002087117001792649,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034504670002206694,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033619.2507262,
            "msecs": 250.72622299194336,
            "relativeCreated": 7860.737085342407,
            "thread": 281473377292320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5286
          }
        ]
      },
      "teardown": {
        "duration": 0.0011098739996668883,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033567749997018836,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14650362199972733,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011929770007554907,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033573450018593576,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11996547899980214,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001207496999995783,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1792854739978793,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14731234999999288,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001282768997043604,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01515627800108632,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12095604099886259,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012660280008276459,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8352875939999649,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            13,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            75,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            15,
            96,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003579979998903582,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028849549998994917,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9059301699999196,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            20,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            224,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            129,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            18,
            255,
            255,
            255,
            11
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            2,
            45,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            93,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            144,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            214,
            255,
            255,
            255,
            255,
            0,
            0,
            121,
            0,
            84,
            255
          ],
          [
            255,
            0,
            138,
            0,
            255,
            0,
            182,
            41,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034742579991871025,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028760750028595794,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3022919710019778,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48338,
            47634,
            47622,
            47576,
            49402,
            47675,
            47916,
            47610,
            49467,
            47544,
            47654,
            47654,
            47598,
            47676,
            47653,
            47697,
            47463,
            47692,
            47424,
            47553,
            47641,
            47457,
            47455,
            47541,
            47515,
            47533,
            47353,
            47401,
            47466,
            47486,
            47734,
            47661,
            47592,
            47780,
            47738,
            47655,
            47544,
            47530,
            47591,
            49334,
            47572,
            47686,
            47593,
            47546,
            47593,
            47494,
            47513,
            47352,
            47490,
            47534,
            47779,
            47625,
            47653,
            47605,
            47694,
            47462,
            47565,
            47183,
            47210,
            47496,
            47590,
            47482,
            47626
          ],
          [
            48338,
            47634,
            47622,
            47576,
            49402,
            47675,
            47916,
            47610,
            49467,
            47544,
            47654,
            47654,
            47598,
            47676,
            47653,
            47697,
            47463,
            47692,
            47424,
            47553,
            47641,
            47457,
            47455,
            47541,
            47515,
            47533,
            47353,
            47401,
            47466,
            47486,
            47734,
            47661,
            47592,
            47780,
            47738,
            47655,
            47544,
            47530,
            47591,
            49334,
            47572,
            47686,
            47593,
            47546,
            47593,
            47494,
            47513,
            47352,
            47490,
            47534,
            47779,
            47625,
            47653,
            47605,
            47694,
            47462,
            47565,
            47183,
            47210,
            47496,
            47590,
            47482,
            47626
          ]
        ],
        "eTX_errcounts": [
          [
            40707,
            26801,
            7795,
            1123,
            48,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            178,
            2688,
            15684,
            34282,
            42228,
            30133,
            13449,
            1775,
            152,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            874,
            8022,
            25574,
            40532,
            37171,
            19730,
            5119,
            493,
            7,
            1,
            0,
            0
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            299,
            3623,
            17914,
            36422,
            42205,
            32062,
            12945,
            2821,
            365,
            29,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            477,
            4356,
            19290,
            36259,
            43047,
            34574,
            16652,
            3206,
            303,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13370422500156565,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016356059968529735,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06898197999908007,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48050,
            47081,
            47097,
            47501,
            47306,
            47417,
            47209,
            47897,
            47359,
            47284,
            47043,
            47248,
            46997,
            47381,
            47165,
            47297,
            47006,
            47449,
            47430,
            47183,
            47337,
            47315,
            47523,
            47473,
            47386,
            47641,
            49200,
            47341,
            47293,
            47317,
            46765,
            47279,
            47277,
            47471,
            47326,
            47312,
            47187,
            47069,
            47099,
            47429,
            47241,
            47171,
            47406,
            47328,
            47367,
            47674,
            49027,
            47242,
            47283,
            47254,
            47124,
            47063,
            47218,
            47384,
            47158,
            47271,
            46801,
            47333,
            47385,
            47482,
            47313,
            47314,
            46935
          ],
          [
            48050,
            47081,
            47097,
            47501,
            47306,
            47417,
            47209,
            47897,
            47359,
            47284,
            47043,
            47248,
            46997,
            47381,
            47165,
            47297,
            47006,
            47449,
            47430,
            47183,
            47337,
            47315,
            47523,
            47473,
            47386,
            47641,
            49200,
            47341,
            47293,
            47317,
            46765,
            47279,
            47277,
            47471,
            47326,
            47312,
            47187,
            47069,
            47099,
            47429,
            47241,
            47171,
            47406,
            47328,
            47367,
            47674,
            49027,
            47242,
            47283,
            47254,
            47124,
            47063,
            47218,
            47384,
            47158,
            47271,
            46801,
            47333,
            47385,
            47482,
            47313,
            47314,
            46935
          ],
          [
            48050,
            47081,
            47097,
            47501,
            47306,
            47417,
            47209,
            47897,
            47359,
            47284,
            47043,
            47248,
            46997,
            47381,
            47165,
            47297,
            47006,
            47449,
            47430,
            47183,
            47337,
            47315,
            47523,
            47473,
            47386,
            47641,
            49200,
            47341,
            47293,
            47317,
            46765,
            47279,
            47277,
            47471,
            47326,
            47312,
            47187,
            47069,
            47099,
            47429,
            47241,
            47171,
            47406,
            47328,
            47367,
            47674,
            49027,
            47242,
            47283,
            47254,
            47124,
            47063,
            47218,
            47384,
            47158,
            47271,
            46801,
            47333,
            47385,
            47482,
            47313,
            47314,
            46935
          ],
          [
            48050,
            47081,
            47097,
            47501,
            47306,
            47417,
            47209,
            47897,
            47359,
            47284,
            47043,
            47248,
            46997,
            47381,
            47165,
            47297,
            47006,
            47449,
            47430,
            47183,
            47337,
            47315,
            47523,
            47473,
            47386,
            47641,
            49200,
            47341,
            47293,
            47317,
            46765,
            47279,
            47277,
            47471,
            47326,
            47312,
            47187,
            47069,
            47099,
            47429,
            47241,
            47171,
            47406,
            47328,
            47367,
            47674,
            49027,
            47242,
            47283,
            47254,
            47124,
            47063,
            47218,
            47384,
            47158,
            47271,
            46801,
            47333,
            47385,
            47482,
            47313,
            47314,
            46935
          ],
          [
            48050,
            47081,
            47097,
            47501,
            47306,
            47417,
            47209,
            47897,
            47359,
            47284,
            47043,
            47248,
            46997,
            47381,
            47165,
            47297,
            47006,
            47449,
            47430,
            47183,
            47337,
            47315,
            47523,
            47473,
            47386,
            47641,
            49200,
            47341,
            47293,
            47317,
            46765,
            47279,
            47277,
            47471,
            47326,
            47312,
            47187,
            47069,
            47099,
            47429,
            47241,
            47171,
            47406,
            47328,
            47367,
            47674,
            49027,
            47242,
            47283,
            47254,
            47124,
            47063,
            47218,
            47384,
            47158,
            47271,
            46801,
            47333,
            47385,
            47482,
            47313,
            47314,
            46935
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            102,
            1201,
            5374,
            13704,
            24938,
            31442,
            32260,
            28385,
            20121,
            10520,
            2911,
            276,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            230,
            1762,
            5716,
            13014,
            24909,
            35853,
            39687,
            31913,
            21554,
            10134,
            2924,
            292,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            49,
            737,
            3171,
            10632,
            22274,
            32042,
            36017,
            33978,
            26421,
            14760,
            6013,
            1216,
            136,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            198,
            1698,
            5572,
            11528,
            21394,
            33491,
            41343,
            39253,
            28864,
            18321,
            6373,
            1090,
            81,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            142,
            1381,
            5698,
            13582,
            23399
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            153,
            1663,
            6454,
            17252,
            29704,
            35782,
            32459,
            23876,
            12613,
            4035,
            558,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            2,
            131,
            1328,
            6802,
            17606,
            33008,
            33972,
            30894,
            23952,
            14018,
            4212,
            592,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            358,
            2394,
            8689,
            18460,
            30717,
            38094,
            35514,
            25556,
            13190,
            3390,
            454,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            49,
            649,
            2742,
            6725,
            16764,
            30732,
            38423,
            36455,
            29353,
            17172,
            6185,
            1370,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            19,
            125,
            898,
            3687,
            9019,
            20053,
            31699,
            38221,
            36754,
            31741,
            22864,
            10438,
            2784,
            502,
            37,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            190,
            1368,
            5107,
            10678,
            17992,
            30377,
            40195,
            41220,
            34103,
            23385,
            11201,
            3591,
            739,
            70,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            74,
            666,
            3060,
            8358
          ]
        ]
      },
      "call": {
        "duration": 0.2716903869986709,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8be87bd0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8be87bd0> = array([22, 13, 18, 22, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8be6e550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48050, 47081, 47097, 47501, 47306, 47417, ...], [48050, 47081, 47097, 47501, 47306, 47417, ...], [... 0, ...], [0, 0, 0, 49, 737, 3171, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 19, 125, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8be87bd0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8be87bd0> = array([22, 13, 18, 22, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016132560012920294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29244289999769535,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1691891999980726,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014365220013132785,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2946579410017875,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            8,
            31,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            195,
            61,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034852680000767577,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028819549988838844,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5341336679994129,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            236,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            220,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            66,
            255,
            117,
            255,
            113,
            0,
            0,
            237,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            246,
            0,
            76,
            0,
            255,
            26,
            255,
            16
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            127,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            167,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            212,
            255,
            152,
            255,
            255,
            4,
            0,
            161,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            143,
            255,
            101
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          6,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034700279975368176,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002881745000195224,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956400719995145,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48021,
            47769,
            47549,
            47629,
            47521,
            47521,
            47346,
            47445,
            47527,
            47485,
            47343,
            47199,
            47817,
            47672,
            47593,
            49644,
            47763,
            47918,
            47500,
            49270,
            47460,
            47574,
            47735,
            47487,
            47453,
            47319,
            47221,
            47579,
            47694,
            47612,
            47600,
            47432,
            47636,
            47609,
            47603,
            47407,
            47568,
            47440,
            47523,
            47480,
            47636,
            47502,
            47596,
            47600,
            47556,
            47570,
            47665,
            47562,
            47526,
            47536,
            47584,
            47575,
            49448,
            47599,
            47961,
            47576,
            49578,
            47615,
            47644,
            47630,
            47127,
            47325,
            47124
          ],
          [
            48021,
            47769,
            47549,
            47629,
            47521,
            47521,
            47346,
            47445,
            47527,
            47485,
            47343,
            47199,
            47817,
            47672,
            47593,
            49644,
            47763,
            47918,
            47500,
            49270,
            47460,
            47574,
            47735,
            47487,
            47453,
            47319,
            47221,
            47579,
            47694,
            47612,
            47600,
            47432,
            47636,
            47609,
            47603,
            47407,
            47568,
            47440,
            47523,
            47480,
            47636,
            47502,
            47596,
            47600,
            47556,
            47570,
            47665,
            47562,
            47526,
            47536,
            47584,
            47575,
            49448,
            47599,
            47961,
            47576,
            49578,
            47615,
            47644,
            47630,
            47127,
            47325,
            47124
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            271,
            3579,
            17808,
            35947,
            36587,
            19527,
            4794,
            403,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            161,
            2635,
            16000,
            34519,
            39996,
            26465,
            8673,
            1288,
            80,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            1075,
            8075,
            29872,
            41784,
            38675,
            20106,
            5024,
            503,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            190,
            2105,
            13381,
            30763,
            42489,
            38845,
            20881,
            5306,
            863,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13362436299939873,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001605876001121942,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06881298699954641,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48250,
            49158,
            49235,
            47353,
            46879,
            47380,
            47358,
            47435,
            47215,
            47249,
            47268,
            47194,
            47162,
            47387,
            47353,
            47293,
            47341,
            47246,
            47428,
            47388,
            47549,
            47554,
            47464,
            47205,
            47176,
            47424,
            47194,
            47178,
            47550,
            46954,
            47419,
            47134,
            47464,
            47229,
            47308,
            47568,
            47273,
            47526,
            47248,
            47428,
            48969,
            48892,
            47207,
            47546,
            47070,
            47333,
            47044,
            47323,
            47106,
            47361,
            47118,
            47282,
            47409,
            47410,
            47027,
            47468,
            47238,
            47316,
            47380,
            49421,
            48813,
            47400,
            47287
          ],
          [
            48250,
            49158,
            49235,
            47353,
            46879,
            47380,
            47358,
            47435,
            47215,
            47249,
            47268,
            47194,
            47162,
            47387,
            47353,
            47293,
            47341,
            47246,
            47428,
            47388,
            47549,
            47554,
            47464,
            47205,
            47176,
            47424,
            47194,
            47178,
            47550,
            46954,
            47419,
            47134,
            47464,
            47229,
            47308,
            47568,
            47273,
            47526,
            47248,
            47428,
            48969,
            48892,
            47207,
            47546,
            47070,
            47333,
            47044,
            47323,
            47106,
            47361,
            47118,
            47282,
            47409,
            47410,
            47027,
            47468,
            47238,
            47316,
            47380,
            49421,
            48813,
            47400,
            47287
          ],
          [
            48250,
            49158,
            49235,
            47353,
            46879,
            47380,
            47358,
            47435,
            47215,
            47249,
            47268,
            47194,
            47162,
            47387,
            47353,
            47293,
            47341,
            47246,
            47428,
            47388,
            47549,
            47554,
            47464,
            47205,
            47176,
            47424,
            47194,
            47178,
            47550,
            46954,
            47419,
            47134,
            47464,
            47229,
            47308,
            47568,
            47273,
            47526,
            47248,
            47428,
            48969,
            48892,
            47207,
            47546,
            47070,
            47333,
            47044,
            47323,
            47106,
            47361,
            47118,
            47282,
            47409,
            47410,
            47027,
            47468,
            47238,
            47316,
            47380,
            49421,
            48813,
            47400,
            47287
          ],
          [
            48250,
            49158,
            49235,
            47353,
            46879,
            47380,
            47358,
            47435,
            47215,
            47249,
            47268,
            47194,
            47162,
            47387,
            47353,
            47293,
            47341,
            47246,
            47428,
            47388,
            47549,
            47554,
            47464,
            47205,
            47176,
            47424,
            47194,
            47178,
            47550,
            46954,
            47419,
            47134,
            47464,
            47229,
            47308,
            47568,
            47273,
            47526,
            47248,
            47428,
            48969,
            48892,
            47207,
            47546,
            47070,
            47333,
            47044,
            47323,
            47106,
            47361,
            47118,
            47282,
            47409,
            47410,
            47027,
            47468,
            47238,
            47316,
            47380,
            49421,
            48813,
            47400,
            47287
          ],
          [
            48250,
            49158,
            49235,
            47353,
            46879,
            47380,
            47358,
            47435,
            47215,
            47249,
            47268,
            47194,
            47162,
            47387,
            47353,
            47293,
            47341,
            47246,
            47428,
            47388,
            47549,
            47554,
            47464,
            47205,
            47176,
            47424,
            47194,
            47178,
            47550,
            46954,
            47419,
            47134,
            47464,
            47229,
            47308,
            47568,
            47273,
            47526,
            47248,
            47428,
            48969,
            48892,
            47207,
            47546,
            47070,
            47333,
            47044,
            47323,
            47106,
            47361,
            47118,
            47282,
            47409,
            47410,
            47027,
            47468,
            47238,
            47316,
            47380,
            49421,
            48813,
            47400,
            47287
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            35,
            655,
            4336,
            15869,
            28091,
            34758,
            33460,
            25250,
            14863,
            5691,
            1048,
            134,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            63,
            850,
            3498,
            11927,
            24412,
            38099,
            40989,
            29317,
            16263,
            4226,
            601,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28
          ],
          [
            0,
            3,
            125,
            1494,
            7192,
            20354,
            36723,
            40478,
            34451,
            22895,
            10076,
            2561,
            291,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            262,
            2182,
            8062,
            20900,
            35476,
            43920,
            42307,
            28739,
            13448,
            2755,
            314,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            36,
            477,
            2877,
            8552,
            20480,
            34028,
            37793
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            26,
            817,
            6036,
            20288,
            32977,
            38804,
            32053,
            15299,
            4053,
            375,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            504,
            4334,
            15846,
            33448,
            41130,
            34033,
            19310,
            5905,
            1107,
            113,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            168,
            1814,
            9681,
            25602,
            38949,
            41802,
            34409,
            18790,
            5412,
            836,
            36,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            118,
            1967,
            8034,
            20930,
            35204,
            41857,
            36593,
            23417,
            9821,
            2253,
            216,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            14,
            203,
            2256,
            10492,
            26019,
            38223,
            39834,
            34540,
            27085,
            16998,
            6165,
            1529,
            104,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            64,
            575,
            3131,
            11372,
            24420,
            36204,
            42837,
            41618,
            29287,
            14766,
            4784,
            666,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            183,
            1486,
            7018,
            16703,
            29838
          ]
        ]
      },
      "call": {
        "duration": 0.2701154120004503,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001506124001025455,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29128268500062404,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1681598169998324,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014225409977370873,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3585837880018516,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            90,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            232,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003512298000714509,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002907484999013832,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5340598959992349,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            5,
            255,
            1,
            38,
            0,
            255,
            0,
            255,
            255
          ],
          [
            74,
            0,
            22,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            31,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            206,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            13,
            255,
            42,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            1,
            0,
            255,
            1,
            255,
            255
          ],
          [
            53,
            0,
            2,
            0,
            12,
            0,
            255,
            193,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            122,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            77,
            0,
            9,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            73,
            255,
            31,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003472368000075221,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028870239984826185,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29602300099941203,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48145,
            47538,
            47556,
            47539,
            47465,
            47578,
            47499,
            47409,
            47549,
            47399,
            47587,
            47457,
            47657,
            47486,
            47436,
            48751,
            47570,
            47881,
            47689,
            49097,
            47547,
            47587,
            47571,
            47652,
            47586,
            47429,
            47608,
            47334,
            47286,
            47540,
            47578,
            47336,
            47627,
            47423,
            47509,
            47451,
            47600,
            47130,
            47103,
            47481,
            47471,
            47560,
            47597,
            47530,
            47576,
            47629,
            47548,
            47579,
            47630,
            47567,
            49235,
            47443,
            47794,
            47476,
            47784,
            47484,
            47514,
            47484,
            47311,
            47441,
            47397,
            47485,
            47464
          ],
          [
            48145,
            47538,
            47556,
            47539,
            47465,
            47578,
            47499,
            47409,
            47549,
            47399,
            47587,
            47457,
            47657,
            47486,
            47436,
            48751,
            47570,
            47881,
            47689,
            49097,
            47547,
            47587,
            47571,
            47652,
            47586,
            47429,
            47608,
            47334,
            47286,
            47540,
            47578,
            47336,
            47627,
            47423,
            47509,
            47451,
            47600,
            47130,
            47103,
            47481,
            47471,
            47560,
            47597,
            47530,
            47576,
            47629,
            47548,
            47579,
            47630,
            47567,
            49235,
            47443,
            47794,
            47476,
            47784,
            47484,
            47514,
            47484,
            47311,
            47441,
            47397,
            47485,
            47464
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            495,
            7313,
            24348,
            38958,
            34127,
            14680,
            2880,
            278,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            617,
            6352,
            22465,
            38465,
            37957,
            21189,
            5291,
            666,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            14,
            113,
            1898,
            14019,
            32797,
            41591,
            29244,
            10322,
            1859,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            695,
            5712,
            21782,
            38420,
            41969,
            30600,
            12386,
            1772,
            240,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            805,
            7666,
            25296,
            40034,
            43327
          ]
        ]
      },
      "call": {
        "duration": 0.13346335100141005,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015962149991537444,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06893235899769934,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47909,
            48893,
            47120,
            47300,
            47172,
            47323,
            47355,
            47243,
            47121,
            47203,
            47118,
            47186,
            47205,
            46842,
            47291,
            47384,
            47306,
            47308,
            47221,
            47325,
            47247,
            47304,
            47499,
            47220,
            47169,
            47172,
            47221,
            47246,
            47195,
            47221,
            47167,
            46950,
            47147,
            47221,
            47236,
            47099,
            47091,
            47310,
            46931,
            47413,
            47565,
            47347,
            47619,
            47287,
            47140,
            47161,
            47252,
            47409,
            47210,
            47177,
            47431,
            47238,
            47182,
            47036,
            47204,
            47288,
            47212,
            47291,
            47165,
            47111,
            47220,
            47307,
            47684
          ],
          [
            47909,
            48893,
            47120,
            47300,
            47172,
            47323,
            47355,
            47243,
            47121,
            47203,
            47118,
            47186,
            47205,
            46842,
            47291,
            47384,
            47306,
            47308,
            47221,
            47325,
            47247,
            47304,
            47499,
            47220,
            47169,
            47172,
            47221,
            47246,
            47195,
            47221,
            47167,
            46950,
            47147,
            47221,
            47236,
            47099,
            47091,
            47310,
            46931,
            47413,
            47565,
            47347,
            47619,
            47287,
            47140,
            47161,
            47252,
            47409,
            47210,
            47177,
            47431,
            47238,
            47182,
            47036,
            47204,
            47288,
            47212,
            47291,
            47165,
            47111,
            47220,
            47307,
            47684
          ],
          [
            47909,
            48893,
            47120,
            47300,
            47172,
            47323,
            47355,
            47243,
            47121,
            47203,
            47118,
            47186,
            47205,
            46842,
            47291,
            47384,
            47306,
            47308,
            47221,
            47325,
            47247,
            47304,
            47499,
            47220,
            47169,
            47172,
            47221,
            47246,
            47195,
            47221,
            47167,
            46950,
            47147,
            47221,
            47236,
            47099,
            47091,
            47310,
            46931,
            47413,
            47565,
            47347,
            47619,
            47287,
            47140,
            47161,
            47252,
            47409,
            47210,
            47177,
            47431,
            47238,
            47182,
            47036,
            47204,
            47288,
            47212,
            47291,
            47165,
            47111,
            47220,
            47307,
            47684
          ],
          [
            47909,
            48893,
            47120,
            47300,
            47172,
            47323,
            47355,
            47243,
            47121,
            47203,
            47118,
            47186,
            47205,
            46842,
            47291,
            47384,
            47306,
            47308,
            47221,
            47325,
            47247,
            47304,
            47499,
            47220,
            47169,
            47172,
            47221,
            47246,
            47195,
            47221,
            47167,
            46950,
            47147,
            47221,
            47236,
            47099,
            47091,
            47310,
            46931,
            47413,
            47565,
            47347,
            47619,
            47287,
            47140,
            47161,
            47252,
            47409,
            47210,
            47177,
            47431,
            47238,
            47182,
            47036,
            47204,
            47288,
            47212,
            47291,
            47165,
            47111,
            47220,
            47307,
            47684
          ],
          [
            47909,
            48893,
            47120,
            47300,
            47172,
            47323,
            47355,
            47243,
            47121,
            47203,
            47118,
            47186,
            47205,
            46842,
            47291,
            47384,
            47306,
            47308,
            47221,
            47325,
            47247,
            47304,
            47499,
            47220,
            47169,
            47172,
            47221,
            47246,
            47195,
            47221,
            47167,
            46950,
            47147,
            47221,
            47236,
            47099,
            47091,
            47310,
            46931,
            47413,
            47565,
            47347,
            47619,
            47287,
            47140,
            47161,
            47252,
            47409,
            47210,
            47177,
            47431,
            47238,
            47182,
            47036,
            47204,
            47288,
            47212,
            47291,
            47165,
            47111,
            47220,
            47307,
            47684
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            254,
            1837,
            6957,
            15799,
            27161,
            36804,
            35547,
            25128,
            12014,
            3110,
            273,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            62,
            754,
            3956,
            12366,
            23759,
            32711,
            33007,
            28399,
            20654,
            10956,
            4486,
            716,
            68,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            232,
            1489,
            5050,
            12430,
            24064,
            36994,
            43180,
            37984,
            23598,
            9230,
            1937,
            172,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            60,
            475,
            2657,
            6917,
            15082,
            28565,
            38610,
            36557,
            27225,
            13995,
            4272,
            719,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            99
          ],
          [
            11937,
            3527,
            392,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            96,
            1409,
            8019,
            19840,
            32369,
            38965,
            30572,
            16045,
            5904,
            1010,
            73,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            38,
            880,
            5231,
            14695,
            27465,
            35602,
            32494,
            22183,
            8302,
            1525,
            152,
            8,
            0,
            0,
            0,
            0
          ],
          [
            77,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            80,
            1127,
            6296,
            16391,
            26683,
            38557,
            40995,
            32282,
            21054,
            10011,
            3082,
            387,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            99,
            891,
            4635,
            14815,
            26706,
            34881,
            33244,
            23597,
            12056,
            3617,
            768,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            111,
            1462,
            5409,
            15603,
            27409,
            36722,
            40736,
            37548,
            25300,
            14198,
            4744,
            702,
            18,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            61,
            555,
            2719,
            7495,
            17260,
            29866,
            37376,
            36375,
            30676,
            22721,
            13444,
            5614,
            1306,
            102,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.2711015039967606,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8bc73210>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8bc73210> = array([18, 14, 15, 14, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8be6e550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47909, 48893, 47120, 47300, 47172, 47323, ...], [47909, 48893, 47120, 47300, 47172, 47323, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [11937, 3527, 392, 31, 0, 0, ...], [77, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8bc73210>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8bc73210> = array([18, 14, 15, 14, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.00160824599879561,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2921430140013399,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169089298000472,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004791857001691824,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}