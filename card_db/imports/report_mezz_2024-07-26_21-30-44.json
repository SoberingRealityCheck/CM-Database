{
  "created": 1722029472.9988806,
  "duration": 35.11824083328247,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5070200339978328,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14844336900205235,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013412400003289804,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003826285003015073,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14760002099865233,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012990289978915825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13173461699989275,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12156186999709462,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012697780002781656,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003811255002801772,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12105839899959392,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001298009003221523,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003377084998646751,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1475329690001672,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012095669990230817,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003372465002030367,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1207850930004497,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011826560003100894,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033814050002547447,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14723128200057545,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011775569983001333,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033669749973341823,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1309911700009252,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012165869993623346,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004445948998181848,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021614580000459682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011719169997377321,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033915460007847287,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017180489994643722,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001108553999074502,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033287840014963876,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004115761999855749,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029446.4435215,
            "msecs": 443.52149963378906,
            "relativeCreated": 10588.833570480347,
            "thread": 281473357193248,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4019
          }
        ]
      },
      "teardown": {
        "duration": 0.0012245079997228459,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003353025000251364,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024002040008781478,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029446.455902,
            "msecs": 455.902099609375,
            "relativeCreated": 10601.214170455933,
            "thread": 281473357193248,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4019
          }
        ]
      },
      "teardown": {
        "duration": 0.0011788459996751044,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020876269991276786,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002748900998994941,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029446.465427,
            "msecs": 465.4269218444824,
            "relativeCreated": 10610.73899269104,
            "thread": 281473357193248,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4019
          }
        ]
      },
      "teardown": {
        "duration": 0.001033702999848174,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020815969983232208,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003459556999587221,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029446.474916,
            "msecs": 474.9159812927246,
            "relativeCreated": 10620.228052139282,
            "thread": 281473357193248,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4019
          }
        ]
      },
      "teardown": {
        "duration": 0.0011213949983357452,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003368744997715112,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14694792600130313,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012175769988971297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034132059990952257,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12054853800145793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001192887000797782,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17915475399786374,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1478347450029105,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012580780021380633,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015232629997626645,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12159748100020806,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001255047998711234,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.730903062001744,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            6,
            20,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            100,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            250,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            30,
            173,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.0035836999995808583,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028940740012330934,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8985762529991916,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            13,
            0,
            0,
            0,
            0
          ],
          [
            0,
            32,
            0,
            1,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            25
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            108,
            255,
            255,
            255,
            10
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            65,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            1,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            110,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            2,
            250,
            255
          ],
          [
            255,
            0,
            112,
            0,
            255,
            0,
            255,
            193,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034686170001805294,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028841140010626987,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027080690008006,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48253,
            47432,
            47418,
            47507,
            47478,
            47373,
            47280,
            47464,
            47344,
            47486,
            48865,
            47342,
            47775,
            47390,
            50461,
            47412,
            47409,
            47369,
            47253,
            47415,
            47393,
            47489,
            47493,
            47388,
            47266,
            47444,
            47310,
            47438,
            47388,
            47273,
            47325,
            47313,
            47279,
            47372,
            47334,
            47435,
            47449,
            47548,
            47489,
            47505,
            47514,
            49311,
            47491,
            47780,
            47340,
            49368,
            47122,
            47317,
            47343,
            47448,
            47514,
            47323,
            47540,
            47363,
            47283,
            47228,
            47275,
            47362,
            47500,
            47582,
            47409,
            47433,
            47471
          ],
          [
            48253,
            47432,
            47418,
            47507,
            47478,
            47373,
            47280,
            47464,
            47344,
            47486,
            48865,
            47342,
            47775,
            47390,
            50461,
            47412,
            47409,
            47369,
            47253,
            47415,
            47393,
            47489,
            47493,
            47388,
            47266,
            47444,
            47310,
            47438,
            47388,
            47273,
            47325,
            47313,
            47279,
            47372,
            47334,
            47435,
            47449,
            47548,
            47489,
            47505,
            47514,
            49311,
            47491,
            47780,
            47340,
            49368,
            47122,
            47317,
            47343,
            47448,
            47514,
            47323,
            47540,
            47363,
            47283,
            47228,
            47275,
            47362,
            47500,
            47582,
            47409,
            47433,
            47471
          ]
        ],
        "eTX_errcounts": [
          [
            41438,
            28234,
            8877,
            1698,
            116,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            193,
            2631,
            14814,
            33454,
            42578,
            32445,
            15409,
            2358,
            185,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            658,
            7454,
            24350,
            39695,
            38165,
            21270,
            6166,
            692,
            25,
            0,
            0,
            0
          ],
          [
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            253,
            3728,
            16848,
            34471,
            42203,
            33213,
            14837,
            3602,
            434,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            371,
            3369,
            17332,
            35163,
            42699,
            36868,
            17673,
            3684,
            678,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13425311299943132,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016357269996660762,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.07431684699986363,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48396,
            47373,
            47693,
            47481,
            47300,
            47248,
            47261,
            47431,
            47425,
            47241,
            47226,
            47325,
            47303,
            47340,
            47195,
            47240,
            47344,
            47522,
            47409,
            47362,
            47243,
            47724,
            47246,
            47354,
            47287,
            47116,
            47260,
            47232,
            47262,
            47023,
            47251,
            47305,
            47125,
            47554,
            47157,
            47384,
            47560,
            47481,
            47501,
            49262,
            48738,
            47333,
            47148,
            47537,
            47103,
            46927,
            47788,
            47266,
            47222,
            47281,
            47127,
            47347,
            47180,
            47466,
            47227,
            47321,
            47388,
            47404,
            47770,
            47660,
            47096,
            47377,
            47504
          ],
          [
            48396,
            47373,
            47693,
            47481,
            47300,
            47248,
            47261,
            47431,
            47425,
            47241,
            47226,
            47325,
            47303,
            47340,
            47195,
            47240,
            47344,
            47522,
            47409,
            47362,
            47243,
            47724,
            47246,
            47354,
            47287,
            47116,
            47260,
            47232,
            47262,
            47023,
            47251,
            47305,
            47125,
            47554,
            47157,
            47384,
            47560,
            47481,
            47501,
            49262,
            48738,
            47333,
            47148,
            47537,
            47103,
            46927,
            47788,
            47266,
            47222,
            47281,
            47127,
            47347,
            47180,
            47466,
            47227,
            47321,
            47388,
            47404,
            47770,
            47660,
            47096,
            47377,
            47504
          ],
          [
            48396,
            47373,
            47693,
            47481,
            47300,
            47248,
            47261,
            47431,
            47425,
            47241,
            47226,
            47325,
            47303,
            47340,
            47195,
            47240,
            47344,
            47522,
            47409,
            47362,
            47243,
            47724,
            47246,
            47354,
            47287,
            47116,
            47260,
            47232,
            47262,
            47023,
            47251,
            47305,
            47125,
            47554,
            47157,
            47384,
            47560,
            47481,
            47501,
            49262,
            48738,
            47333,
            47148,
            47537,
            47103,
            46927,
            47788,
            47266,
            47222,
            47281,
            47127,
            47347,
            47180,
            47466,
            47227,
            47321,
            47388,
            47404,
            47770,
            47660,
            47096,
            47377,
            47504
          ],
          [
            48396,
            47373,
            47693,
            47481,
            47300,
            47248,
            47261,
            47431,
            47425,
            47241,
            47226,
            47325,
            47303,
            47340,
            47195,
            47240,
            47344,
            47522,
            47409,
            47362,
            47243,
            47724,
            47246,
            47354,
            47287,
            47116,
            47260,
            47232,
            47262,
            47023,
            47251,
            47305,
            47125,
            47554,
            47157,
            47384,
            47560,
            47481,
            47501,
            49262,
            48738,
            47333,
            47148,
            47537,
            47103,
            46927,
            47788,
            47266,
            47222,
            47281,
            47127,
            47347,
            47180,
            47466,
            47227,
            47321,
            47388,
            47404,
            47770,
            47660,
            47096,
            47377,
            47504
          ],
          [
            48396,
            47373,
            47693,
            47481,
            47300,
            47248,
            47261,
            47431,
            47425,
            47241,
            47226,
            47325,
            47303,
            47340,
            47195,
            47240,
            47344,
            47522,
            47409,
            47362,
            47243,
            47724,
            47246,
            47354,
            47287,
            47116,
            47260,
            47232,
            47262,
            47023,
            47251,
            47305,
            47125,
            47554,
            47157,
            47384,
            47560,
            47481,
            47501,
            49262,
            48738,
            47333,
            47148,
            47537,
            47103,
            46927,
            47788,
            47266,
            47222,
            47281,
            47127,
            47347,
            47180,
            47466,
            47227,
            47321,
            47388,
            47404,
            47770,
            47660,
            47096,
            47377,
            47504
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            553,
            3429,
            11380,
            23914,
            34262,
            37486,
            30157,
            19510,
            9851,
            3132,
            430,
            13,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            762,
            4897,
            13039,
            22545,
            30287,
            36570,
            34161,
            27310,
            14881,
            4520,
            711,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            91,
            627,
            2758,
            9456,
            19525,
            29554,
            36753,
            35387,
            27053,
            17286,
            7227,
            1497,
            142,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            22,
            439,
            3266,
            10665,
            21384,
            31690,
            38103,
            38762,
            33085,
            23699,
            13243,
            5415,
            1048,
            100,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            172,
            1032,
            5400,
            14398,
            25314
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            38,
            630,
            4821,
            14445,
            26418,
            31373,
            33455,
            26414,
            16653,
            6999,
            1741,
            166,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            136,
            1192,
            7130,
            15335,
            27489,
            33379,
            31568,
            25569,
            17834,
            9977,
            3473,
            598,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            237,
            1704,
            7608,
            17714,
            28862,
            34360,
            34452,
            28896,
            20840,
            11576,
            2970,
            312,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            346,
            2448,
            8532,
            18793,
            28242,
            34044,
            31664,
            27331,
            20915,
            12909,
            6409,
            1573,
            161,
            3,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            46,
            523,
            3124,
            9462,
            18804,
            29338,
            37421,
            39308,
            32928,
            22642,
            11844,
            4234,
            1078,
            67,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            52,
            588,
            3522,
            9996,
            20883,
            32274,
            38665,
            41351,
            36477,
            28401,
            19476,
            8856,
            1890,
            192,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            12,
            248,
            1583,
            6672
          ]
        ]
      },
      "call": {
        "duration": 0.27227764000053867,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff85506f30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff85506f30> = array([23, 12, 18, 19, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff85520400>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48396, 47373, 47693, 47481, 47300, 47248, ...], [48396, 47373, 47693, 47481, 47300, 47248, ...], [...0, 0, ...], [0, 0, 0, 91, 627, 2758, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 46, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff85506f30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff85506f30> = array([23, 12, 18, 19, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016176659992197528,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926465640011884,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1691695010013063,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014324719995784108,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.3035149140014255,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            37,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            150,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.00350686900128494,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002889904997573467,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5357366740026919,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            127,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            185,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            96,
            255,
            129,
            255,
            136,
            0,
            0,
            208,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            244,
            0,
            53,
            0,
            255,
            11,
            255,
            17
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            73,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            4,
            255,
            138,
            255,
            174,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            249,
            255,
            184,
            255,
            255,
            0,
            0,
            98,
            0,
            255,
            255
          ],
          [
            255,
            1,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            96,
            255,
            119
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034720379990176298,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028514730001916178,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959055970022746,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48079,
            51758,
            47406,
            47410,
            47606,
            47450,
            47519,
            47558,
            47556,
            47425,
            47632,
            47494,
            47444,
            47483,
            47446,
            47223,
            47584,
            47340,
            47485,
            47514,
            47432,
            47460,
            47673,
            47445,
            47470,
            47528,
            47307,
            47171,
            52743,
            47323,
            47799,
            47515,
            47716,
            47494,
            47409,
            47318,
            47263,
            47369,
            47422,
            47507,
            47520,
            47475,
            47471,
            47383,
            47471,
            47459,
            47639,
            47415,
            47372,
            47341,
            47498,
            47500,
            47518,
            47305,
            47361,
            47421,
            47263,
            47420,
            47622,
            47427,
            47506,
            47872,
            47416
          ],
          [
            48079,
            51758,
            47406,
            47410,
            47606,
            47450,
            47519,
            47558,
            47556,
            47425,
            47632,
            47494,
            47444,
            47483,
            47446,
            47223,
            47584,
            47340,
            47485,
            47514,
            47432,
            47460,
            47673,
            47445,
            47470,
            47528,
            47307,
            47171,
            52743,
            47323,
            47799,
            47515,
            47716,
            47494,
            47409,
            47318,
            47263,
            47369,
            47422,
            47507,
            47520,
            47475,
            47471,
            47383,
            47471,
            47459,
            47639,
            47415,
            47372,
            47341,
            47498,
            47500,
            47518,
            47305,
            47361,
            47421,
            47263,
            47420,
            47622,
            47427,
            47506,
            47872,
            47416
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            189,
            3481,
            17122,
            35373,
            37451,
            19461,
            4785,
            378,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            176,
            2792,
            15808,
            34675,
            40426,
            26417,
            9563,
            1082,
            113,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            925,
            8244,
            28205,
            41544,
            39628,
            19450,
            4915,
            517,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            166,
            2407,
            13460,
            30724,
            42194,
            39652,
            20870,
            6026,
            808,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13403971799925785,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001593605997186387,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06908956000188482,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48132,
            47483,
            47191,
            47235,
            47261,
            47184,
            47375,
            47357,
            47322,
            47276,
            47199,
            47307,
            47475,
            47039,
            47740,
            47244,
            47150,
            47382,
            47303,
            47311,
            47250,
            47350,
            47424,
            47309,
            47229,
            47194,
            47321,
            47217,
            47388,
            47370,
            47434,
            46923,
            49350,
            47225,
            47435,
            47205,
            47268,
            46904,
            47372,
            47307,
            47362,
            47365,
            47228,
            47331,
            47327,
            47270,
            47292,
            47536,
            47390,
            47102,
            47338,
            47561,
            47436,
            47247,
            47173,
            47297,
            47473,
            47269,
            47396,
            47348,
            47349,
            47253,
            47031
          ],
          [
            48132,
            47483,
            47191,
            47235,
            47261,
            47184,
            47375,
            47357,
            47322,
            47276,
            47199,
            47307,
            47475,
            47039,
            47740,
            47244,
            47150,
            47382,
            47303,
            47311,
            47250,
            47350,
            47424,
            47309,
            47229,
            47194,
            47321,
            47217,
            47388,
            47370,
            47434,
            46923,
            49350,
            47225,
            47435,
            47205,
            47268,
            46904,
            47372,
            47307,
            47362,
            47365,
            47228,
            47331,
            47327,
            47270,
            47292,
            47536,
            47390,
            47102,
            47338,
            47561,
            47436,
            47247,
            47173,
            47297,
            47473,
            47269,
            47396,
            47348,
            47349,
            47253,
            47031
          ],
          [
            48132,
            47483,
            47191,
            47235,
            47261,
            47184,
            47375,
            47357,
            47322,
            47276,
            47199,
            47307,
            47475,
            47039,
            47740,
            47244,
            47150,
            47382,
            47303,
            47311,
            47250,
            47350,
            47424,
            47309,
            47229,
            47194,
            47321,
            47217,
            47388,
            47370,
            47434,
            46923,
            49350,
            47225,
            47435,
            47205,
            47268,
            46904,
            47372,
            47307,
            47362,
            47365,
            47228,
            47331,
            47327,
            47270,
            47292,
            47536,
            47390,
            47102,
            47338,
            47561,
            47436,
            47247,
            47173,
            47297,
            47473,
            47269,
            47396,
            47348,
            47349,
            47253,
            47031
          ],
          [
            48132,
            47483,
            47191,
            47235,
            47261,
            47184,
            47375,
            47357,
            47322,
            47276,
            47199,
            47307,
            47475,
            47039,
            47740,
            47244,
            47150,
            47382,
            47303,
            47311,
            47250,
            47350,
            47424,
            47309,
            47229,
            47194,
            47321,
            47217,
            47388,
            47370,
            47434,
            46923,
            49350,
            47225,
            47435,
            47205,
            47268,
            46904,
            47372,
            47307,
            47362,
            47365,
            47228,
            47331,
            47327,
            47270,
            47292,
            47536,
            47390,
            47102,
            47338,
            47561,
            47436,
            47247,
            47173,
            47297,
            47473,
            47269,
            47396,
            47348,
            47349,
            47253,
            47031
          ],
          [
            48132,
            47483,
            47191,
            47235,
            47261,
            47184,
            47375,
            47357,
            47322,
            47276,
            47199,
            47307,
            47475,
            47039,
            47740,
            47244,
            47150,
            47382,
            47303,
            47311,
            47250,
            47350,
            47424,
            47309,
            47229,
            47194,
            47321,
            47217,
            47388,
            47370,
            47434,
            46923,
            49350,
            47225,
            47435,
            47205,
            47268,
            46904,
            47372,
            47307,
            47362,
            47365,
            47228,
            47331,
            47327,
            47270,
            47292,
            47536,
            47390,
            47102,
            47338,
            47561,
            47436,
            47247,
            47173,
            47297,
            47473,
            47269,
            47396,
            47348,
            47349,
            47253,
            47031
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            307,
            2365,
            11049,
            24144,
            33472,
            35168,
            23616,
            11699,
            3845,
            638,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            441,
            3215,
            10862,
            24558,
            35658,
            36615,
            29079,
            14876,
            4752,
            671,
            30,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            75
          ],
          [
            0,
            0,
            17,
            356,
            4723,
            15579,
            31952,
            40007,
            34864,
            20145,
            6935,
            890,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            99,
            1058,
            6493,
            23489,
            37535,
            41455,
            28512,
            13447,
            3954,
            439,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            74,
            1311,
            7311,
            20326,
            33970,
            39612,
            31603
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            397,
            3448,
            13700,
            27014,
            33888,
            28229,
            14299,
            3898,
            455,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            797,
            4493,
            17681,
            33633,
            39249,
            33430,
            20132,
            6498,
            1143,
            64,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            882,
            6013,
            17146,
            32427,
            38142,
            31517,
            17976,
            6094,
            921,
            56,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            117,
            1437,
            7899,
            20937,
            34472,
            41354,
            35843,
            22458,
            9722,
            1815,
            199,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            133,
            1298,
            7980,
            20648,
            33954,
            40873,
            37816,
            26234,
            12491,
            3211,
            427,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            235,
            2474,
            10680,
            36317,
            43342,
            39430,
            27596,
            13946,
            4461,
            1171,
            151,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            650,
            4634,
            16421,
            31240,
            41530
          ]
        ]
      },
      "call": {
        "duration": 0.27075471600255696,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014892030012561008,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29154121999818017,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1694813269969018,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014618120003433432,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.303872371001489,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            86,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            22,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            55,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003467957998509519,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002889933999540517,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5361263820013846,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            4,
            255,
            8,
            255,
            1,
            35,
            0,
            255,
            0,
            255,
            255
          ],
          [
            45,
            0,
            13,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            35,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            171,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            1,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            30,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            3,
            0,
            255,
            3,
            255,
            255
          ],
          [
            63,
            0,
            6,
            0,
            12,
            0,
            255,
            117,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            86,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            79,
            0,
            9,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            89,
            255,
            59,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034648379987629596,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002867253999284003,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961077120016853,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48110,
            51525,
            47426,
            47620,
            47424,
            47377,
            47583,
            47410,
            47345,
            47389,
            47312,
            47437,
            47643,
            47387,
            47514,
            47712,
            47675,
            47424,
            47596,
            47439,
            47472,
            47455,
            47296,
            47387,
            47566,
            47337,
            47493,
            47299,
            45477,
            47461,
            48006,
            47648,
            47550,
            47672,
            47412,
            47522,
            47685,
            47571,
            47377,
            47566,
            47314,
            47306,
            47481,
            47570,
            47448,
            47501,
            47380,
            47391,
            47320,
            47451,
            47432,
            47531,
            47516,
            47586,
            47557,
            47567,
            47638,
            49652,
            47448,
            47886,
            47565,
            47497,
            47439
          ],
          [
            48110,
            51525,
            47426,
            47620,
            47424,
            47377,
            47583,
            47410,
            47345,
            47389,
            47312,
            47437,
            47643,
            47387,
            47514,
            47712,
            47675,
            47424,
            47596,
            47439,
            47472,
            47455,
            47296,
            47387,
            47566,
            47337,
            47493,
            47299,
            45477,
            47461,
            48006,
            47648,
            47550,
            47672,
            47412,
            47522,
            47685,
            47571,
            47377,
            47566,
            47314,
            47306,
            47481,
            47570,
            47448,
            47501,
            47380,
            47391,
            47320,
            47451,
            47432,
            47531,
            47516,
            47586,
            47557,
            47567,
            47638,
            49652,
            47448,
            47886,
            47565,
            47497,
            47439
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            598,
            5924,
            23003,
            38953,
            35266,
            17004,
            2920,
            250,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            484,
            5286,
            21524,
            37940,
            39388,
            22635,
            5590,
            593,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            85,
            1560,
            12559,
            31867,
            41130,
            30694,
            10993,
            1625,
            179,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            611,
            5071,
            20961,
            37906,
            42356,
            31210,
            12944,
            2203,
            252,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            23,
            630,
            7476,
            24393,
            39753,
            43434
          ]
        ]
      },
      "call": {
        "duration": 0.134305013998528,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016154160002770368,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06922342399775516,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48041,
            47364,
            47442,
            47385,
            47297,
            47491,
            47379,
            47526,
            47227,
            47325,
            47461,
            48993,
            47694,
            47328,
            47309,
            47252,
            47241,
            47426,
            47294,
            47353,
            47323,
            47304,
            47330,
            47306,
            47436,
            47431,
            47355,
            47488,
            47241,
            49319,
            48538,
            47444,
            47307,
            47388,
            47169,
            47443,
            47440,
            47386,
            47467,
            47462,
            47386,
            47433,
            47432,
            47485,
            47263,
            47448,
            47258,
            47841,
            50093,
            47420,
            47412,
            47380,
            47241,
            47308,
            47134,
            47268,
            47330,
            47503,
            47193,
            47400,
            47296,
            47364,
            46997
          ],
          [
            48041,
            47364,
            47442,
            47385,
            47297,
            47491,
            47379,
            47526,
            47227,
            47325,
            47461,
            48993,
            47694,
            47328,
            47309,
            47252,
            47241,
            47426,
            47294,
            47353,
            47323,
            47304,
            47330,
            47306,
            47436,
            47431,
            47355,
            47488,
            47241,
            49319,
            48538,
            47444,
            47307,
            47388,
            47169,
            47443,
            47440,
            47386,
            47467,
            47462,
            47386,
            47433,
            47432,
            47485,
            47263,
            47448,
            47258,
            47841,
            50093,
            47420,
            47412,
            47380,
            47241,
            47308,
            47134,
            47268,
            47330,
            47503,
            47193,
            47400,
            47296,
            47364,
            46997
          ],
          [
            48041,
            47364,
            47442,
            47385,
            47297,
            47491,
            47379,
            47526,
            47227,
            47325,
            47461,
            48993,
            47694,
            47328,
            47309,
            47252,
            47241,
            47426,
            47294,
            47353,
            47323,
            47304,
            47330,
            47306,
            47436,
            47431,
            47355,
            47488,
            47241,
            49319,
            48538,
            47444,
            47307,
            47388,
            47169,
            47443,
            47440,
            47386,
            47467,
            47462,
            47386,
            47433,
            47432,
            47485,
            47263,
            47448,
            47258,
            47841,
            50093,
            47420,
            47412,
            47380,
            47241,
            47308,
            47134,
            47268,
            47330,
            47503,
            47193,
            47400,
            47296,
            47364,
            46997
          ],
          [
            48041,
            47364,
            47442,
            47385,
            47297,
            47491,
            47379,
            47526,
            47227,
            47325,
            47461,
            48993,
            47694,
            47328,
            47309,
            47252,
            47241,
            47426,
            47294,
            47353,
            47323,
            47304,
            47330,
            47306,
            47436,
            47431,
            47355,
            47488,
            47241,
            49319,
            48538,
            47444,
            47307,
            47388,
            47169,
            47443,
            47440,
            47386,
            47467,
            47462,
            47386,
            47433,
            47432,
            47485,
            47263,
            47448,
            47258,
            47841,
            50093,
            47420,
            47412,
            47380,
            47241,
            47308,
            47134,
            47268,
            47330,
            47503,
            47193,
            47400,
            47296,
            47364,
            46997
          ],
          [
            48041,
            47364,
            47442,
            47385,
            47297,
            47491,
            47379,
            47526,
            47227,
            47325,
            47461,
            48993,
            47694,
            47328,
            47309,
            47252,
            47241,
            47426,
            47294,
            47353,
            47323,
            47304,
            47330,
            47306,
            47436,
            47431,
            47355,
            47488,
            47241,
            49319,
            48538,
            47444,
            47307,
            47388,
            47169,
            47443,
            47440,
            47386,
            47467,
            47462,
            47386,
            47433,
            47432,
            47485,
            47263,
            47448,
            47258,
            47841,
            50093,
            47420,
            47412,
            47380,
            47241,
            47308,
            47134,
            47268,
            47330,
            47503,
            47193,
            47400,
            47296,
            47364,
            46997
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            72,
            897,
            5201,
            15877,
            27643,
            34948,
            33127,
            24262,
            12646,
            3459,
            496,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            112,
            1774,
            9129,
            23120,
            36565,
            42244,
            32356,
            18937,
            8237,
            3000,
            447,
            41,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            205,
            2187,
            10843,
            25326,
            37058,
            41359,
            35640,
            23522,
            10528,
            3042,
            351,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            32,
            737,
            4944,
            15375,
            28958,
            37985,
            36322,
            27462,
            14393,
            3007,
            329,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            12204,
            3687,
            465,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            100,
            1401,
            7898,
            20683,
            34164,
            38143,
            30454,
            17230,
            5807,
            986,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            217,
            3952,
            13777,
            26656,
            37949,
            36001,
            24088,
            10790,
            2568,
            252,
            5,
            0,
            0,
            0,
            0
          ],
          [
            42,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            320,
            4317,
            14493,
            27523,
            39504,
            40957,
            33457,
            22823,
            9452,
            1956,
            139,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            149,
            2444,
            11670,
            27098,
            37250,
            36327,
            25281,
            12535,
            3610,
            489,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            502,
            3384,
            13003,
            26399,
            38597,
            42090,
            36335,
            24648,
            13813,
            4257,
            1081,
            152,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            88,
            868,
            5873,
            16599,
            30963,
            40742,
            41061,
            33403,
            20952,
            9852,
            2960,
            431,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27115114600019297,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001490913000452565,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.291934498000046,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1704600089979067,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045998, 10011499), (411162, 411162), (40049195, 10012299))\nassert ((40045998 > 0 and 10011499 == 0\n  +10011499\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff85520700>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff854cc6a0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff85596220>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045998, 10011499), (411162, 411162), (40049195, 10012299))\nE       assert ((40045998 > 0 and 10011499 == 0\nE         +10011499\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004965080999681959,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}