{
  "created": 1722034360.809437,
  "duration": 23.581117153167725,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5094228349989862,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482959219974873,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013749009995080996,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003918058002454927,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1481944589977502,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012807589992007706,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13253908999831765,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12174142799995025,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013040689991612453,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0039266679996217135,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1211630449979566,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012651880024350248,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034798979977495037,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467270360008115,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001203447001898894,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003449987001658883,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12001393000173266,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011772260004363488,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0035023090022150427,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14615330399828963,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011916570001631044,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034688879968598485,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12003991100209532,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011734460022125859,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0045237410013214685,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020925159988109954,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011363949997758027,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034583570013637654,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017437889982829802,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010970639996230602,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034303360007470474,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004067881000082707,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034343.1008174,
            "msecs": 100.81744194030762,
            "relativeCreated": 7842.272043228149,
            "thread": 281473433186336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5630
          }
        ]
      },
      "teardown": {
        "duration": 0.0012040170004183892,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003501887997117592,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002412054000160424,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034343.1132903,
            "msecs": 113.29030990600586,
            "relativeCreated": 7854.744911193848,
            "thread": 281473433186336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5630
          }
        ]
      },
      "teardown": {
        "duration": 0.0011734160034393426,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00220015900049475,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027563110015762504,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034343.1229389,
            "msecs": 122.93887138366699,
            "relativeCreated": 7864.393472671509,
            "thread": 281473433186336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5630
          }
        ]
      },
      "teardown": {
        "duration": 0.0010631030017975718,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002224309999292018,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003441677003138466,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034343.1325285,
            "msecs": 132.52854347229004,
            "relativeCreated": 7873.983144760132,
            "thread": 281473433186336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5630
          }
        ]
      },
      "teardown": {
        "duration": 0.0010755539988167584,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034458170011930633,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464670209970791,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011916869989363477,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034628569992491975,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12029959600113216,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011898560005647596,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17912677000276744,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1475298549994477,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001272088000405347,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015317171997594414,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120633700033068,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012612280006578658,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8465079640009208,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            9,
            8,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            79,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            22,
            104,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035938410001108423,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029621760004374664,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9043497950005985,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            40,
            0,
            3,
            0,
            44,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            11
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            39,
            255,
            255,
            255,
            8
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            34,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            76,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            193,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            184,
            255,
            255,
            255,
            255,
            0,
            0,
            238,
            3,
            185,
            255
          ],
          [
            255,
            0,
            168,
            0,
            255,
            0,
            255,
            85,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034573970006022137,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029535659996327013,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30311248900034116,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48094,
            47384,
            47340,
            49256,
            47371,
            47832,
            47285,
            54459,
            47274,
            47313,
            47302,
            47261,
            47540,
            47338,
            47201,
            47396,
            47417,
            47406,
            47580,
            47244,
            47364,
            47317,
            47361,
            47567,
            47698,
            47428,
            47413,
            47524,
            47419,
            47325,
            47575,
            47172,
            47333,
            47511,
            47447,
            47427,
            49524,
            47481,
            47725,
            47456,
            49342,
            47355,
            47594,
            47422,
            47202,
            47489,
            47310,
            47344,
            47631,
            47268,
            47104,
            47357,
            47103,
            47513,
            47497,
            47244,
            47010,
            47098,
            47337,
            47471,
            47366,
            47272,
            47212
          ],
          [
            48094,
            47384,
            47340,
            49256,
            47371,
            47832,
            47285,
            54459,
            47274,
            47313,
            47302,
            47261,
            47540,
            47338,
            47201,
            47396,
            47417,
            47406,
            47580,
            47244,
            47364,
            47317,
            47361,
            47567,
            47698,
            47428,
            47413,
            47524,
            47419,
            47325,
            47575,
            47172,
            47333,
            47511,
            47447,
            47427,
            49524,
            47481,
            47725,
            47456,
            49342,
            47355,
            47594,
            47422,
            47202,
            47489,
            47310,
            47344,
            47631,
            47268,
            47104,
            47357,
            47103,
            47513,
            47497,
            47244,
            47010,
            47098,
            47337,
            47471,
            47366,
            47272,
            47212
          ]
        ],
        "eTX_errcounts": [
          [
            40823,
            26954,
            8392,
            1439,
            72,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            246,
            3344,
            16064,
            34386,
            42913,
            31750,
            14032,
            2201,
            145,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            981,
            7304,
            25296,
            39790,
            37331,
            20139,
            5488,
            674,
            27,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            357,
            4123,
            17739,
            36172,
            41729,
            31447,
            14011,
            3259,
            247,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            329,
            4136,
            18737,
            36712,
            42967,
            35268,
            17513,
            3555,
            381,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13391963100002613,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016400159984186757,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06913816399901407,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47660,
            47188,
            46882,
            47107,
            47110,
            47040,
            47025,
            47105,
            47121,
            47042,
            46994,
            47257,
            47074,
            47139,
            47104,
            47253,
            49128,
            48716,
            47182,
            46744,
            47294,
            47066,
            46984,
            47260,
            46953,
            46979,
            47077,
            46846,
            47145,
            47060,
            47090,
            47216,
            47036,
            47006,
            47182,
            46904,
            47530,
            47112,
            47253,
            47302,
            47010,
            47021,
            47096,
            47119,
            47140,
            46776,
            47012,
            47019,
            47032,
            47278,
            46978,
            46877,
            46830,
            47124,
            47210,
            48920,
            48941,
            46944,
            46972,
            47227,
            46858,
            47197,
            47135
          ],
          [
            47660,
            47188,
            46882,
            47107,
            47110,
            47040,
            47025,
            47105,
            47121,
            47042,
            46994,
            47257,
            47074,
            47139,
            47104,
            47253,
            49128,
            48716,
            47182,
            46744,
            47294,
            47066,
            46984,
            47260,
            46953,
            46979,
            47077,
            46846,
            47145,
            47060,
            47090,
            47216,
            47036,
            47006,
            47182,
            46904,
            47530,
            47112,
            47253,
            47302,
            47010,
            47021,
            47096,
            47119,
            47140,
            46776,
            47012,
            47019,
            47032,
            47278,
            46978,
            46877,
            46830,
            47124,
            47210,
            48920,
            48941,
            46944,
            46972,
            47227,
            46858,
            47197,
            47135
          ],
          [
            47660,
            47188,
            46882,
            47107,
            47110,
            47040,
            47025,
            47105,
            47121,
            47042,
            46994,
            47257,
            47074,
            47139,
            47104,
            47253,
            49128,
            48716,
            47182,
            46744,
            47294,
            47066,
            46984,
            47260,
            46953,
            46979,
            47077,
            46846,
            47145,
            47060,
            47090,
            47216,
            47036,
            47006,
            47182,
            46904,
            47530,
            47112,
            47253,
            47302,
            47010,
            47021,
            47096,
            47119,
            47140,
            46776,
            47012,
            47019,
            47032,
            47278,
            46978,
            46877,
            46830,
            47124,
            47210,
            48920,
            48941,
            46944,
            46972,
            47227,
            46858,
            47197,
            47135
          ],
          [
            47660,
            47188,
            46882,
            47107,
            47110,
            47040,
            47025,
            47105,
            47121,
            47042,
            46994,
            47257,
            47074,
            47139,
            47104,
            47253,
            49128,
            48716,
            47182,
            46744,
            47294,
            47066,
            46984,
            47260,
            46953,
            46979,
            47077,
            46846,
            47145,
            47060,
            47090,
            47216,
            47036,
            47006,
            47182,
            46904,
            47530,
            47112,
            47253,
            47302,
            47010,
            47021,
            47096,
            47119,
            47140,
            46776,
            47012,
            47019,
            47032,
            47278,
            46978,
            46877,
            46830,
            47124,
            47210,
            48920,
            48941,
            46944,
            46972,
            47227,
            46858,
            47197,
            47135
          ],
          [
            47660,
            47188,
            46882,
            47107,
            47110,
            47040,
            47025,
            47105,
            47121,
            47042,
            46994,
            47257,
            47074,
            47139,
            47104,
            47253,
            49128,
            48716,
            47182,
            46744,
            47294,
            47066,
            46984,
            47260,
            46953,
            46979,
            47077,
            46846,
            47145,
            47060,
            47090,
            47216,
            47036,
            47006,
            47182,
            46904,
            47530,
            47112,
            47253,
            47302,
            47010,
            47021,
            47096,
            47119,
            47140,
            46776,
            47012,
            47019,
            47032,
            47278,
            46978,
            46877,
            46830,
            47124,
            47210,
            48920,
            48941,
            46944,
            46972,
            47227,
            46858,
            47197,
            47135
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            25,
            709,
            4053,
            12854,
            25479,
            35272,
            37882,
            29778,
            18019,
            8474,
            2230,
            339,
            10,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            103,
            1125,
            5910,
            14128,
            23689,
            31414,
            35877,
            33467,
            25063,
            12385,
            3634,
            506,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            11,
            106,
            903,
            3471,
            11272,
            21074,
            31491,
            37301,
            34110,
            25571,
            15514,
            5873,
            1005,
            62,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            47,
            607,
            4287,
            12464,
            23600,
            33046,
            38269,
            37730,
            30818,
            20494,
            11174,
            4403,
            734,
            83,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            239,
            1681,
            6127,
            16005,
            26127
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            93,
            976,
            5497,
            15897,
            26755,
            31729,
            32130,
            24902,
            15163,
            5941,
            1229,
            85,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            157,
            1614,
            8293,
            16747,
            28209,
            33217,
            30641,
            24592,
            15967,
            8381,
            2833,
            275,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            275,
            2101,
            9077,
            19645,
            31633,
            35444,
            33650,
            27165,
            19018,
            9480,
            2155,
            192,
            4,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            39,
            503,
            3211,
            9734,
            20086,
            28631,
            34352,
            30480,
            25866,
            19432,
            11570,
            5201,
            855,
            60,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            1,
            84,
            718,
            3781,
            11107,
            20509,
            30410,
            38013,
            39052,
            31249,
            20989,
            10522,
            3470,
            779,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            67,
            809,
            4213,
            11272,
            22401,
            32752,
            39197,
            39387,
            33857,
            26901,
            18219,
            7753,
            1239,
            129,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            31,
            305,
            2171,
            7679
          ]
        ]
      },
      "call": {
        "duration": 0.2717388379969634,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8f10ed50>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8f10ed50> = array([22, 13, 18, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8f3ba550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47660, 47188, 46882, 47107, 47110, 47040, ...], [47660, 47188, 46882, 47107, 47110, 47040, ...], [... 0, ...], [0, 0, 11, 106, 903, 3471, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 1, 84, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8f10ed50>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8f10ed50> = array([22, 13, 18, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016571769992879126,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.293031453002186,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17057166000086,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014622929993493017,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.308827017997828,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            224,
            59,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035551990004023537,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029531459986174013,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5345682869992743,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            126,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            162,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            108,
            255,
            175,
            255,
            172,
            0,
            0,
            183,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            53,
            0,
            255,
            9,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            91,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            3,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            135,
            255,
            169,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            245,
            255,
            201,
            255,
            255,
            7,
            0,
            77,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            81,
            255,
            136
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034973279980476946,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002924435000750236,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29624596500070766,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48014,
            47462,
            47533,
            47171,
            47425,
            47324,
            47328,
            47487,
            47538,
            47347,
            47350,
            47344,
            47343,
            47440,
            47375,
            47403,
            47381,
            47374,
            47523,
            47602,
            47609,
            47406,
            47506,
            47318,
            47417,
            47403,
            49192,
            47301,
            47742,
            47440,
            49864,
            47578,
            47312,
            47048,
            47197,
            47466,
            47211,
            47417,
            47555,
            47449,
            47402,
            47620,
            47556,
            47429,
            47356,
            47262,
            47394,
            47460,
            47423,
            47368,
            47426,
            47510,
            47418,
            47293,
            47294,
            49388,
            47411,
            47486,
            47596,
            49644,
            47535,
            47414,
            47482
          ],
          [
            48014,
            47462,
            47533,
            47171,
            47425,
            47324,
            47328,
            47487,
            47538,
            47347,
            47350,
            47344,
            47343,
            47440,
            47375,
            47403,
            47381,
            47374,
            47523,
            47602,
            47609,
            47406,
            47506,
            47318,
            47417,
            47403,
            49192,
            47301,
            47742,
            47440,
            49864,
            47578,
            47312,
            47048,
            47197,
            47466,
            47211,
            47417,
            47555,
            47449,
            47402,
            47620,
            47556,
            47429,
            47356,
            47262,
            47394,
            47460,
            47423,
            47368,
            47426,
            47510,
            47418,
            47293,
            47294,
            49388,
            47411,
            47486,
            47596,
            49644,
            47535,
            47414,
            47482
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            233,
            3806,
            18532,
            36483,
            35643,
            19018,
            4148,
            365,
            11,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            175,
            2832,
            16330,
            34927,
            40532,
            25229,
            8225,
            1064,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            929,
            8223,
            28802,
            41618,
            39085,
            18848,
            4914,
            505,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            216,
            2207,
            13608,
            31151,
            42749,
            38654,
            20635,
            5694,
            558,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1341930560010951,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016608670011919457,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06906043200069689,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47849,
            46958,
            47116,
            46967,
            47034,
            47113,
            47308,
            47100,
            47168,
            47193,
            47375,
            47091,
            47230,
            47464,
            47346,
            46846,
            47186,
            47094,
            47079,
            47085,
            47226,
            47155,
            47130,
            47039,
            47063,
            47393,
            48012,
            47310,
            47164,
            47113,
            47223,
            47326,
            47813,
            47240,
            47057,
            47111,
            47105,
            46959,
            47196,
            47068,
            46724,
            47103,
            47008,
            47027,
            47263,
            47023,
            46928,
            47254,
            47122,
            47090,
            47028,
            47063,
            47597,
            47084,
            47264,
            47086,
            47231,
            47023,
            47113,
            47134,
            47149,
            46808,
            47067
          ],
          [
            47849,
            46958,
            47116,
            46967,
            47034,
            47113,
            47308,
            47100,
            47168,
            47193,
            47375,
            47091,
            47230,
            47464,
            47346,
            46846,
            47186,
            47094,
            47079,
            47085,
            47226,
            47155,
            47130,
            47039,
            47063,
            47393,
            48012,
            47310,
            47164,
            47113,
            47223,
            47326,
            47813,
            47240,
            47057,
            47111,
            47105,
            46959,
            47196,
            47068,
            46724,
            47103,
            47008,
            47027,
            47263,
            47023,
            46928,
            47254,
            47122,
            47090,
            47028,
            47063,
            47597,
            47084,
            47264,
            47086,
            47231,
            47023,
            47113,
            47134,
            47149,
            46808,
            47067
          ],
          [
            47849,
            46958,
            47116,
            46967,
            47034,
            47113,
            47308,
            47100,
            47168,
            47193,
            47375,
            47091,
            47230,
            47464,
            47346,
            46846,
            47186,
            47094,
            47079,
            47085,
            47226,
            47155,
            47130,
            47039,
            47063,
            47393,
            48012,
            47310,
            47164,
            47113,
            47223,
            47326,
            47813,
            47240,
            47057,
            47111,
            47105,
            46959,
            47196,
            47068,
            46724,
            47103,
            47008,
            47027,
            47263,
            47023,
            46928,
            47254,
            47122,
            47090,
            47028,
            47063,
            47597,
            47084,
            47264,
            47086,
            47231,
            47023,
            47113,
            47134,
            47149,
            46808,
            47067
          ],
          [
            47849,
            46958,
            47116,
            46967,
            47034,
            47113,
            47308,
            47100,
            47168,
            47193,
            47375,
            47091,
            47230,
            47464,
            47346,
            46846,
            47186,
            47094,
            47079,
            47085,
            47226,
            47155,
            47130,
            47039,
            47063,
            47393,
            48012,
            47310,
            47164,
            47113,
            47223,
            47326,
            47813,
            47240,
            47057,
            47111,
            47105,
            46959,
            47196,
            47068,
            46724,
            47103,
            47008,
            47027,
            47263,
            47023,
            46928,
            47254,
            47122,
            47090,
            47028,
            47063,
            47597,
            47084,
            47264,
            47086,
            47231,
            47023,
            47113,
            47134,
            47149,
            46808,
            47067
          ],
          [
            47849,
            46958,
            47116,
            46967,
            47034,
            47113,
            47308,
            47100,
            47168,
            47193,
            47375,
            47091,
            47230,
            47464,
            47346,
            46846,
            47186,
            47094,
            47079,
            47085,
            47226,
            47155,
            47130,
            47039,
            47063,
            47393,
            48012,
            47310,
            47164,
            47113,
            47223,
            47326,
            47813,
            47240,
            47057,
            47111,
            47105,
            46959,
            47196,
            47068,
            46724,
            47103,
            47008,
            47027,
            47263,
            47023,
            46928,
            47254,
            47122,
            47090,
            47028,
            47063,
            47597,
            47084,
            47264,
            47086,
            47231,
            47023,
            47113,
            47134,
            47149,
            46808,
            47067
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            268,
            2460,
            11102,
            23393,
            34107,
            34722,
            23297,
            11174,
            3748,
            570,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            605,
            3175,
            12762,
            25547,
            35254,
            37445,
            27438,
            14578,
            3807,
            554,
            29,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            0,
            33,
            543,
            4987,
            16345,
            32739,
            39687,
            34844,
            19555,
            6460,
            888,
            87,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            114,
            996,
            7263,
            23484,
            38489,
            43570,
            38937,
            26824,
            12698,
            2879,
            250,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            105,
            1252,
            7449,
            21151,
            34802,
            38963
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            440,
            3687,
            14016,
            27318,
            33962,
            28070,
            14320,
            4027,
            376,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            703,
            6227,
            19059,
            35021,
            39776,
            32291,
            18171,
            6202,
            1000,
            45,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            74,
            860,
            5490,
            16797,
            33017,
            37776,
            31430,
            17391,
            5555,
            850,
            54,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            147,
            1583,
            8311,
            21296,
            35102,
            41057,
            34874,
            22701,
            8839,
            1628,
            145,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            145,
            1410,
            8277,
            21219,
            34424,
            41261,
            37627,
            25544,
            12742,
            3001,
            304,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            290,
            2270,
            10970,
            25913,
            38562,
            43079,
            38759,
            26976,
            12466,
            4206,
            1101,
            109,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            35,
            656,
            5318,
            16547,
            32070
          ]
        ]
      },
      "call": {
        "duration": 0.2701497620000737,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015057340024213772,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29195923000224866,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170187531999545,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014493020025838632,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3417288119999284,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            137,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            243,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          3,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035335690008651,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002932835999672534,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5357179130005534,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            11,
            255,
            3,
            23,
            0,
            255,
            0,
            255,
            255
          ],
          [
            67,
            0,
            18,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            24,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            183,
            255,
            0,
            14,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            34,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            3,
            1,
            0,
            255,
            5,
            255,
            255
          ],
          [
            60,
            0,
            2,
            0,
            5,
            0,
            255,
            111,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            121,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            62,
            0,
            2,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            103,
            255,
            84,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003485027998976875,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002955636002297979,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29665040399777354,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47935,
            47899,
            47397,
            47405,
            47661,
            47483,
            47102,
            47381,
            47540,
            47404,
            47689,
            47724,
            47484,
            47654,
            47580,
            47871,
            47812,
            49261,
            47415,
            47751,
            47428,
            47560,
            47555,
            47423,
            47302,
            47564,
            47544,
            47355,
            47751,
            47450,
            47492,
            47637,
            47339,
            47399,
            47615,
            47334,
            47448,
            47642,
            47432,
            47430,
            47736,
            47382,
            47417,
            47771,
            47419,
            47462,
            49673,
            47551,
            47963,
            47803,
            49750,
            47537,
            47602,
            47487,
            47257,
            47609,
            47114,
            46997,
            47549,
            47594,
            47371,
            47595,
            47367
          ],
          [
            47935,
            47899,
            47397,
            47405,
            47661,
            47483,
            47102,
            47381,
            47540,
            47404,
            47689,
            47724,
            47484,
            47654,
            47580,
            47871,
            47812,
            49261,
            47415,
            47751,
            47428,
            47560,
            47555,
            47423,
            47302,
            47564,
            47544,
            47355,
            47751,
            47450,
            47492,
            47637,
            47339,
            47399,
            47615,
            47334,
            47448,
            47642,
            47432,
            47430,
            47736,
            47382,
            47417,
            47771,
            47419,
            47462,
            49673,
            47551,
            47963,
            47803,
            49750,
            47537,
            47602,
            47487,
            47257,
            47609,
            47114,
            46997,
            47549,
            47594,
            47371,
            47595,
            47367
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            750,
            7030,
            25488,
            39289,
            33947,
            14931,
            2775,
            329,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            753,
            6541,
            22357,
            38030,
            37757,
            21457,
            5267,
            606,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            6,
            138,
            2175,
            14812,
            32953,
            40795,
            28836,
            9228,
            1467,
            146,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            515,
            6251,
            22358,
            38763,
            41552,
            30178,
            12857,
            2165,
            215,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            929,
            8238,
            25059,
            39910,
            43320
          ]
        ]
      },
      "call": {
        "duration": 0.13406657299856306,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016243559985014144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06931441800043103,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48348,
            47153,
            46816,
            47133,
            47032,
            47083,
            47184,
            47208,
            47409,
            47162,
            47076,
            47211,
            47228,
            47192,
            47165,
            47192,
            47353,
            47161,
            47076,
            47446,
            47107,
            47051,
            47167,
            47124,
            47426,
            47105,
            47051,
            46826,
            47329,
            47157,
            47172,
            47019,
            47108,
            47209,
            47286,
            47211,
            47017,
            47235,
            47406,
            47169,
            47101,
            47071,
            46946,
            47028,
            47333,
            47076,
            47140,
            47312,
            46914,
            46971,
            47185,
            47191,
            46814,
            47274,
            46740,
            47328,
            47258,
            47173,
            47198,
            47025,
            47065,
            47036,
            47072
          ],
          [
            48348,
            47153,
            46816,
            47133,
            47032,
            47083,
            47184,
            47208,
            47409,
            47162,
            47076,
            47211,
            47228,
            47192,
            47165,
            47192,
            47353,
            47161,
            47076,
            47446,
            47107,
            47051,
            47167,
            47124,
            47426,
            47105,
            47051,
            46826,
            47329,
            47157,
            47172,
            47019,
            47108,
            47209,
            47286,
            47211,
            47017,
            47235,
            47406,
            47169,
            47101,
            47071,
            46946,
            47028,
            47333,
            47076,
            47140,
            47312,
            46914,
            46971,
            47185,
            47191,
            46814,
            47274,
            46740,
            47328,
            47258,
            47173,
            47198,
            47025,
            47065,
            47036,
            47072
          ],
          [
            48348,
            47153,
            46816,
            47133,
            47032,
            47083,
            47184,
            47208,
            47409,
            47162,
            47076,
            47211,
            47228,
            47192,
            47165,
            47192,
            47353,
            47161,
            47076,
            47446,
            47107,
            47051,
            47167,
            47124,
            47426,
            47105,
            47051,
            46826,
            47329,
            47157,
            47172,
            47019,
            47108,
            47209,
            47286,
            47211,
            47017,
            47235,
            47406,
            47169,
            47101,
            47071,
            46946,
            47028,
            47333,
            47076,
            47140,
            47312,
            46914,
            46971,
            47185,
            47191,
            46814,
            47274,
            46740,
            47328,
            47258,
            47173,
            47198,
            47025,
            47065,
            47036,
            47072
          ],
          [
            48348,
            47153,
            46816,
            47133,
            47032,
            47083,
            47184,
            47208,
            47409,
            47162,
            47076,
            47211,
            47228,
            47192,
            47165,
            47192,
            47353,
            47161,
            47076,
            47446,
            47107,
            47051,
            47167,
            47124,
            47426,
            47105,
            47051,
            46826,
            47329,
            47157,
            47172,
            47019,
            47108,
            47209,
            47286,
            47211,
            47017,
            47235,
            47406,
            47169,
            47101,
            47071,
            46946,
            47028,
            47333,
            47076,
            47140,
            47312,
            46914,
            46971,
            47185,
            47191,
            46814,
            47274,
            46740,
            47328,
            47258,
            47173,
            47198,
            47025,
            47065,
            47036,
            47072
          ],
          [
            48348,
            47153,
            46816,
            47133,
            47032,
            47083,
            47184,
            47208,
            47409,
            47162,
            47076,
            47211,
            47228,
            47192,
            47165,
            47192,
            47353,
            47161,
            47076,
            47446,
            47107,
            47051,
            47167,
            47124,
            47426,
            47105,
            47051,
            46826,
            47329,
            47157,
            47172,
            47019,
            47108,
            47209,
            47286,
            47211,
            47017,
            47235,
            47406,
            47169,
            47101,
            47071,
            46946,
            47028,
            47333,
            47076,
            47140,
            47312,
            46914,
            46971,
            47185,
            47191,
            46814,
            47274,
            46740,
            47328,
            47258,
            47173,
            47198,
            47025,
            47065,
            47036,
            47072
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            107,
            927,
            5852,
            16590,
            28875,
            35254,
            31846,
            22484,
            10993,
            2931,
            258,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            217,
            2128,
            10348,
            24072,
            36498,
            38481,
            30148,
            16821,
            7096,
            2111,
            250,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            306,
            2582,
            12129,
            26814,
            38300,
            40417,
            34270,
            22251,
            9388,
            2446,
            215,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            113,
            977,
            5702,
            16960,
            29854,
            37697,
            34479,
            25646,
            11891,
            2503,
            349,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10699,
            2986,
            283,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            157,
            1868,
            8901,
            22385,
            34689,
            37867,
            28881,
            14954,
            4940,
            430,
            22,
            1,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            410,
            4715,
            15329,
            28297,
            38495,
            34831,
            21376,
            9108,
            1734,
            116,
            6,
            0,
            0,
            0,
            0
          ],
          [
            29,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            431,
            4655,
            16100,
            29148,
            40044,
            40589,
            31731,
            21046,
            8126,
            1260,
            77,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            260,
            2709,
            13116,
            26706,
            37699,
            34965,
            23654,
            10685,
            2578,
            250,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            598,
            4255,
            14861,
            28067,
            39401,
            42112,
            35286,
            23451,
            12138,
            3524,
            878,
            82,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            114,
            1352,
            6638,
            19216,
            32078,
            40665,
            40497,
            31701,
            20169,
            8967,
            2405,
            350,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2703199860006862,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015220839995890856,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2923685889982153,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1715339929978654,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045721, 10011430), (411144, 411144), (40048220, 10012055))\nassert ((40045721 > 0 and 10011430 == 0\n  +10011430\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff8f3ba370>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff8f207070>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff8f4d0430>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045721, 10011430), (411144, 411144), (40048220, 10012055))\nE       assert ((40045721 > 0 and 10011430 == 0\nE         +10011430\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005047522998211207,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}