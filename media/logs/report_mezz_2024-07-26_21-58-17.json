{
  "created": 1722031116.6661062,
  "duration": 23.209442615509033,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5052739310012839,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14836947699950542,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013405499994405545,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003815274998487439,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1483837570012838,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001302628999837907,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13276441900234204,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12175834400113672,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012894290011900011,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003802344999712659,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12087110300126369,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013022690000070725,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033801460012909956,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14644385399878956,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012432879993866663,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003364724998391466,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11984841200319352,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012239069983479567,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033643649985606316,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1461979980012984,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011792660006904043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033684449990687426,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11997192399940104,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011921059995074756,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004756186001031892,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002132868001353927,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001145844998973189,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033605249991524033,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017129779989772942,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011286249973636586,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033360740017087664,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040179899988288525,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031099.2304862,
            "msecs": 230.4861545562744,
            "relativeCreated": 7746.329784393311,
            "thread": 281473613889568,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4254
          }
        ]
      },
      "teardown": {
        "duration": 0.0012381570013531018,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003408315998967737,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00242192400037311,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031099.242854,
            "msecs": 242.85411834716797,
            "relativeCreated": 7758.697748184204,
            "thread": 281473613889568,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4254
          }
        ]
      },
      "teardown": {
        "duration": 0.00121340699843131,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00208036600088235,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002688569999008905,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031099.252402,
            "msecs": 252.40206718444824,
            "relativeCreated": 7768.245697021484,
            "thread": 281473613889568,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4254
          }
        ]
      },
      "teardown": {
        "duration": 0.0010698539990698919,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002117927000654163,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034439569972164463,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031099.2618918,
            "msecs": 261.89184188842773,
            "relativeCreated": 7777.735471725464,
            "thread": 281473613889568,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4254
          }
        ]
      },
      "teardown": {
        "duration": 0.0011078349998570047,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033643650021986105,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1465218260018446,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001191027000459144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003325034002045868,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12024442000256386,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001175426001282176,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17464205200303695,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1476416599980439,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012884989992016926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015196808999462519,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12109730899828719,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012928489995829295,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8480802169979142,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            14,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            232,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            110,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            213,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            20,
            153,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003591109998524189,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029316660002223216,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8946667390009679,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            3,
            0,
            0,
            0,
            0
          ],
          [
            0,
            37,
            0,
            3,
            0,
            71,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            9,
            255,
            16,
            255,
            0,
            0,
            0,
            0,
            0,
            50
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            3,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            103,
            255,
            255,
            255,
            0
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            22,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            33,
            0,
            0,
            0,
            0
          ],
          [
            0,
            28,
            0,
            1,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            2,
            0,
            1,
            255
          ],
          [
            255,
            129,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            3,
            255,
            255
          ],
          [
            255,
            0,
            85,
            0,
            255,
            0,
            255,
            166,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034793580016412307,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029625960014527664,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3028691399995296,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48181,
            48008,
            47498,
            47467,
            47338,
            47435,
            47347,
            47345,
            47421,
            47356,
            47484,
            47183,
            47494,
            47281,
            47502,
            47350,
            47413,
            47352,
            47327,
            47260,
            47284,
            47352,
            47439,
            47115,
            47102,
            47292,
            47199,
            47403,
            47455,
            47476,
            47442,
            47515,
            47863,
            47244,
            47759,
            47467,
            49456,
            47373,
            47385,
            47344,
            47142,
            47378,
            47242,
            47421,
            47374,
            47514,
            47361,
            47436,
            47397,
            47542,
            47288,
            47391,
            47332,
            47415,
            47511,
            47472,
            47306,
            47413,
            47263,
            47294,
            47373,
            47428,
            47135
          ],
          [
            48181,
            48008,
            47498,
            47467,
            47338,
            47435,
            47347,
            47345,
            47421,
            47356,
            47484,
            47183,
            47494,
            47281,
            47502,
            47350,
            47413,
            47352,
            47327,
            47260,
            47284,
            47352,
            47439,
            47115,
            47102,
            47292,
            47199,
            47403,
            47455,
            47476,
            47442,
            47515,
            47863,
            47244,
            47759,
            47467,
            49456,
            47373,
            47385,
            47344,
            47142,
            47378,
            47242,
            47421,
            47374,
            47514,
            47361,
            47436,
            47397,
            47542,
            47288,
            47391,
            47332,
            47415,
            47511,
            47472,
            47306,
            47413,
            47263,
            47294,
            47373,
            47428,
            47135
          ]
        ],
        "eTX_errcounts": [
          [
            41231,
            31035,
            11132,
            2084,
            239,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            120,
            1966,
            12221,
            30338,
            42212,
            34698,
            18772,
            3371,
            281,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            447,
            5286,
            20538,
            38340,
            39852,
            24378,
            8084,
            1099,
            31,
            0,
            0,
            0
          ],
          [
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            118,
            2582,
            13564,
            32510,
            41685,
            34921,
            17777,
            4538,
            572,
            30,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            131,
            2721,
            14728,
            32057,
            42829,
            38838,
            21866,
            5653,
            607,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1338711130010779,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016370160010410473,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06891036600063671,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47832,
            47161,
            47249,
            47084,
            47046,
            47121,
            47007,
            47122,
            47160,
            47194,
            47223,
            46876,
            47256,
            47112,
            47647,
            47288,
            46913,
            47160,
            47098,
            47036,
            47108,
            46993,
            47099,
            47016,
            47003,
            47156,
            47049,
            47311,
            47209,
            47139,
            47301,
            47254,
            49268,
            49061,
            47087,
            46983,
            47106,
            47173,
            47056,
            46988,
            47317,
            47050,
            47138,
            47138,
            47067,
            47197,
            47064,
            47164,
            47106,
            47052,
            48779,
            48840,
            47097,
            47050,
            47121,
            47067,
            47068,
            47124,
            47038,
            47068,
            46963,
            47424,
            47294
          ],
          [
            47832,
            47161,
            47249,
            47084,
            47046,
            47121,
            47007,
            47122,
            47160,
            47194,
            47223,
            46876,
            47256,
            47112,
            47647,
            47288,
            46913,
            47160,
            47098,
            47036,
            47108,
            46993,
            47099,
            47016,
            47003,
            47156,
            47049,
            47311,
            47209,
            47139,
            47301,
            47254,
            49268,
            49061,
            47087,
            46983,
            47106,
            47173,
            47056,
            46988,
            47317,
            47050,
            47138,
            47138,
            47067,
            47197,
            47064,
            47164,
            47106,
            47052,
            48779,
            48840,
            47097,
            47050,
            47121,
            47067,
            47068,
            47124,
            47038,
            47068,
            46963,
            47424,
            47294
          ],
          [
            47832,
            47161,
            47249,
            47084,
            47046,
            47121,
            47007,
            47122,
            47160,
            47194,
            47223,
            46876,
            47256,
            47112,
            47647,
            47288,
            46913,
            47160,
            47098,
            47036,
            47108,
            46993,
            47099,
            47016,
            47003,
            47156,
            47049,
            47311,
            47209,
            47139,
            47301,
            47254,
            49268,
            49061,
            47087,
            46983,
            47106,
            47173,
            47056,
            46988,
            47317,
            47050,
            47138,
            47138,
            47067,
            47197,
            47064,
            47164,
            47106,
            47052,
            48779,
            48840,
            47097,
            47050,
            47121,
            47067,
            47068,
            47124,
            47038,
            47068,
            46963,
            47424,
            47294
          ],
          [
            47832,
            47161,
            47249,
            47084,
            47046,
            47121,
            47007,
            47122,
            47160,
            47194,
            47223,
            46876,
            47256,
            47112,
            47647,
            47288,
            46913,
            47160,
            47098,
            47036,
            47108,
            46993,
            47099,
            47016,
            47003,
            47156,
            47049,
            47311,
            47209,
            47139,
            47301,
            47254,
            49268,
            49061,
            47087,
            46983,
            47106,
            47173,
            47056,
            46988,
            47317,
            47050,
            47138,
            47138,
            47067,
            47197,
            47064,
            47164,
            47106,
            47052,
            48779,
            48840,
            47097,
            47050,
            47121,
            47067,
            47068,
            47124,
            47038,
            47068,
            46963,
            47424,
            47294
          ],
          [
            47832,
            47161,
            47249,
            47084,
            47046,
            47121,
            47007,
            47122,
            47160,
            47194,
            47223,
            46876,
            47256,
            47112,
            47647,
            47288,
            46913,
            47160,
            47098,
            47036,
            47108,
            46993,
            47099,
            47016,
            47003,
            47156,
            47049,
            47311,
            47209,
            47139,
            47301,
            47254,
            49268,
            49061,
            47087,
            46983,
            47106,
            47173,
            47056,
            46988,
            47317,
            47050,
            47138,
            47138,
            47067,
            47197,
            47064,
            47164,
            47106,
            47052,
            48779,
            48840,
            47097,
            47050,
            47121,
            47067,
            47068,
            47124,
            47038,
            47068,
            46963,
            47424,
            47294
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            48,
            431,
            2727,
            9095,
            19811,
            29032,
            32212,
            30147,
            25631,
            17112,
            6604,
            1311,
            106,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            239,
            2022,
            8295,
            20175,
            30093,
            33414,
            29365,
            25036,
            18810,
            12767,
            6142,
            1657,
            154,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            5,
            40,
            368,
            1744,
            6670,
            16207,
            27356,
            35328,
            36670,
            29871,
            20274,
            9442,
            2365,
            248,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            195,
            1893,
            8273,
            18970,
            28931,
            36491,
            38818,
            34489,
            25793,
            14535,
            6620,
            1384,
            221,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            88,
            692,
            3763,
            10805,
            21979
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            305,
            3043,
            11784,
            23596,
            30072,
            32590,
            28602,
            18816,
            9284,
            2552,
            257,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            54,
            683,
            5475,
            12930,
            23834,
            31979,
            32778,
            27940,
            20487,
            11864,
            5084,
            859,
            72,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            92,
            946,
            5238,
            14634,
            25508,
            33240,
            35776,
            31127,
            22951,
            13464,
            4451,
            435,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            178,
            1735,
            6194,
            16225,
            25618,
            33120,
            33193,
            28660,
            22938,
            15117,
            8116,
            2050,
            247,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            6,
            221,
            2077,
            7720,
            16668,
            27375,
            35105,
            39418,
            35092,
            26291,
            14475,
            6471,
            1848,
            200,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            334,
            2293,
            7503,
            17721,
            29086,
            36706,
            39103,
            36351,
            30281,
            22593,
            11955,
            3452,
            268,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            122,
            921,
            4669
          ]
        ]
      },
      "call": {
        "duration": 0.27294581300157006,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9a053750>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9a053750> = array([20, 13, 17, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9a010490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47832, 47161, 47249, 47084, 47046, 47121, ...], [47832, 47161, 47249, 47084, 47046, 47121, ...], [... 0, 0, ...], [0, 0, 5, 40, 368, 1744, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 6, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9a053750>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9a053750> = array([20, 13, 17, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016545069993298966,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29289160700136563,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170895601997472,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014574630004062783,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3078941180028778,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            14,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            52,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            33,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003486977999273222,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002949035999336047,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5351091160009673,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            206,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            3,
            255,
            237,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            50,
            255,
            87,
            255,
            82,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            222,
            0,
            122,
            0,
            116,
            10,
            255,
            58,
            255,
            13
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            34,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            249,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            4,
            255,
            208,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            171,
            255,
            90,
            255,
            255,
            10,
            0,
            231,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            143,
            255,
            85
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003445605998422252,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002960736001114128,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960480980000284,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48034,
            47886,
            47608,
            47521,
            47511,
            47403,
            47564,
            47599,
            47569,
            47382,
            47547,
            47514,
            49001,
            47592,
            47803,
            47392,
            53016,
            47558,
            47173,
            47527,
            47311,
            47337,
            47425,
            47429,
            47347,
            47498,
            47413,
            47407,
            47397,
            47492,
            47361,
            47473,
            47405,
            47378,
            47557,
            47459,
            47272,
            47484,
            47565,
            47191,
            47427,
            47506,
            47238,
            47786,
            47470,
            49450,
            47444,
            47466,
            47396,
            47126,
            47247,
            47195,
            47484,
            47461,
            47305,
            47439,
            47455,
            47221,
            47409,
            47294,
            47272,
            47416,
            47451
          ],
          [
            48034,
            47886,
            47608,
            47521,
            47511,
            47403,
            47564,
            47599,
            47569,
            47382,
            47547,
            47514,
            49001,
            47592,
            47803,
            47392,
            53016,
            47558,
            47173,
            47527,
            47311,
            47337,
            47425,
            47429,
            47347,
            47498,
            47413,
            47407,
            47397,
            47492,
            47361,
            47473,
            47405,
            47378,
            47557,
            47459,
            47272,
            47484,
            47565,
            47191,
            47427,
            47506,
            47238,
            47786,
            47470,
            49450,
            47444,
            47466,
            47396,
            47126,
            47247,
            47195,
            47484,
            47461,
            47305,
            47439,
            47455,
            47221,
            47409,
            47294,
            47272,
            47416,
            47451
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            101,
            1981,
            13502,
            33196,
            38916,
            23810,
            6878,
            760,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            81,
            1840,
            11940,
            31634,
            40908,
            30168,
            11994,
            1926,
            180,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            414,
            5762,
            23825,
            44559,
            41170,
            23583,
            7078,
            766,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            47,
            1324,
            9857,
            26713,
            41731,
            40730,
            25952,
            7762,
            1002,
            115,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13452368800062686,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00166737700055819,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06884676400295575,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48029,
            47139,
            47014,
            47077,
            47007,
            47022,
            47191,
            47240,
            47392,
            47386,
            49217,
            47003,
            46927,
            47095,
            47028,
            46994,
            46935,
            47067,
            46946,
            46927,
            47013,
            47053,
            47185,
            47135,
            46807,
            47053,
            47228,
            47122,
            47246,
            47704,
            47403,
            47053,
            46987,
            47126,
            47152,
            47032,
            47114,
            47019,
            47060,
            46943,
            46875,
            47044,
            47232,
            46987,
            46912,
            47136,
            47171,
            47038,
            49113,
            51471,
            47201,
            47010,
            47100,
            47111,
            47025,
            47151,
            47165,
            46938,
            47173,
            47110,
            47006,
            47151,
            47150
          ],
          [
            48029,
            47139,
            47014,
            47077,
            47007,
            47022,
            47191,
            47240,
            47392,
            47386,
            49217,
            47003,
            46927,
            47095,
            47028,
            46994,
            46935,
            47067,
            46946,
            46927,
            47013,
            47053,
            47185,
            47135,
            46807,
            47053,
            47228,
            47122,
            47246,
            47704,
            47403,
            47053,
            46987,
            47126,
            47152,
            47032,
            47114,
            47019,
            47060,
            46943,
            46875,
            47044,
            47232,
            46987,
            46912,
            47136,
            47171,
            47038,
            49113,
            51471,
            47201,
            47010,
            47100,
            47111,
            47025,
            47151,
            47165,
            46938,
            47173,
            47110,
            47006,
            47151,
            47150
          ],
          [
            48029,
            47139,
            47014,
            47077,
            47007,
            47022,
            47191,
            47240,
            47392,
            47386,
            49217,
            47003,
            46927,
            47095,
            47028,
            46994,
            46935,
            47067,
            46946,
            46927,
            47013,
            47053,
            47185,
            47135,
            46807,
            47053,
            47228,
            47122,
            47246,
            47704,
            47403,
            47053,
            46987,
            47126,
            47152,
            47032,
            47114,
            47019,
            47060,
            46943,
            46875,
            47044,
            47232,
            46987,
            46912,
            47136,
            47171,
            47038,
            49113,
            51471,
            47201,
            47010,
            47100,
            47111,
            47025,
            47151,
            47165,
            46938,
            47173,
            47110,
            47006,
            47151,
            47150
          ],
          [
            48029,
            47139,
            47014,
            47077,
            47007,
            47022,
            47191,
            47240,
            47392,
            47386,
            49217,
            47003,
            46927,
            47095,
            47028,
            46994,
            46935,
            47067,
            46946,
            46927,
            47013,
            47053,
            47185,
            47135,
            46807,
            47053,
            47228,
            47122,
            47246,
            47704,
            47403,
            47053,
            46987,
            47126,
            47152,
            47032,
            47114,
            47019,
            47060,
            46943,
            46875,
            47044,
            47232,
            46987,
            46912,
            47136,
            47171,
            47038,
            49113,
            51471,
            47201,
            47010,
            47100,
            47111,
            47025,
            47151,
            47165,
            46938,
            47173,
            47110,
            47006,
            47151,
            47150
          ],
          [
            48029,
            47139,
            47014,
            47077,
            47007,
            47022,
            47191,
            47240,
            47392,
            47386,
            49217,
            47003,
            46927,
            47095,
            47028,
            46994,
            46935,
            47067,
            46946,
            46927,
            47013,
            47053,
            47185,
            47135,
            46807,
            47053,
            47228,
            47122,
            47246,
            47704,
            47403,
            47053,
            46987,
            47126,
            47152,
            47032,
            47114,
            47019,
            47060,
            46943,
            46875,
            47044,
            47232,
            46987,
            46912,
            47136,
            47171,
            47038,
            49113,
            51471,
            47201,
            47010,
            47100,
            47111,
            47025,
            47151,
            47165,
            46938,
            47173,
            47110,
            47006,
            47151,
            47150
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            130,
            1276,
            7346,
            20156,
            33946,
            38346,
            30846,
            18172,
            5815,
            605,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            148,
            1420,
            7426,
            21464,
            34882,
            40123,
            34472,
            22666,
            8721,
            2303,
            296,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            108,
            1879,
            9456,
            25467,
            37574,
            38556,
            25853,
            11714,
            2233,
            194,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            296,
            3657,
            15621,
            33605,
            42270,
            42183,
            32092,
            17831,
            5284,
            785,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            383,
            3959,
            14814,
            30197,
            39797
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            138,
            1747,
            8869,
            21532,
            33408,
            32471,
            19738,
            6841,
            918,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            275,
            3310,
            12676,
            29250,
            39136,
            36207,
            24140,
            10785,
            2007,
            153,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            29,
            340,
            3059,
            11967,
            27635,
            37376,
            35202,
            23471,
            9208,
            2024,
            204,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            55,
            791,
            5091,
            15869,
            30997,
            40727,
            38478,
            28731,
            13452,
            3486,
            317,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            31,
            566,
            4487,
            15112,
            28607,
            39652,
            42081,
            31154,
            17561,
            5679,
            1146,
            67,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            122,
            1017,
            7098,
            18652,
            33054,
            42958,
            41746,
            32218,
            18013,
            6864,
            1911,
            295,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            262,
            2829,
            11565,
            26561
          ]
        ]
      },
      "call": {
        "duration": 0.2700069780003105,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015068440006871242,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2915067169997201,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1706980470007693,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014592020015697926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.353146856999956,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            229,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            65,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035166179986845236,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029652359989995603,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5357445900008315,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            2,
            255,
            0,
            52,
            0,
            255,
            0,
            255,
            255
          ],
          [
            29,
            0,
            4,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            22,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            122,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            50,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            1,
            255,
            1,
            255,
            1,
            8,
            0,
            255,
            10,
            255,
            255
          ],
          [
            44,
            0,
            1,
            0,
            0,
            0,
            255,
            191,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            53,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            110,
            0,
            11,
            0,
            40,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            138,
            255,
            94,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0034850569973059464,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029498149997380096,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2963346950018604,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47962,
            47564,
            47321,
            47328,
            47549,
            47412,
            47268,
            47494,
            47419,
            47438,
            47414,
            47622,
            47471,
            47535,
            47674,
            47484,
            47417,
            47429,
            47013,
            47251,
            47477,
            49227,
            47377,
            47348,
            47389,
            47303,
            47641,
            47397,
            47515,
            47465,
            47494,
            47360,
            47273,
            47587,
            47355,
            47442,
            47377,
            47464,
            47446,
            47573,
            47612,
            47385,
            47352,
            47329,
            47406,
            47370,
            47354,
            47409,
            47376,
            47494,
            49338,
            47470,
            47918,
            47860,
            47716,
            47478,
            47533,
            47455,
            47348,
            47644,
            47422,
            47462,
            47446
          ],
          [
            47962,
            47564,
            47321,
            47328,
            47549,
            47412,
            47268,
            47494,
            47419,
            47438,
            47414,
            47622,
            47471,
            47535,
            47674,
            47484,
            47417,
            47429,
            47013,
            47251,
            47477,
            49227,
            47377,
            47348,
            47389,
            47303,
            47641,
            47397,
            47515,
            47465,
            47494,
            47360,
            47273,
            47587,
            47355,
            47442,
            47377,
            47464,
            47446,
            47573,
            47612,
            47385,
            47352,
            47329,
            47406,
            47370,
            47354,
            47409,
            47376,
            47494,
            49338,
            47470,
            47918,
            47860,
            47716,
            47478,
            47533,
            47455,
            47348,
            47644,
            47422,
            47462,
            47446
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            221,
            4530,
            20067,
            37530,
            37762,
            19574,
            4425,
            764,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            332,
            4190,
            17138,
            35108,
            40385,
            26259,
            8172,
            1051,
            64,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            60,
            1237,
            10030,
            28506,
            40927,
            33925,
            13017,
            2723,
            289,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            315,
            3681,
            17450,
            35617,
            41991,
            34508,
            16723,
            3420,
            476,
            38,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            417,
            5166,
            20583,
            37430,
            44074
          ]
        ]
      },
      "call": {
        "duration": 0.1341095290008525,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016326969998772256,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06902208800238441,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47940,
            47201,
            47854,
            47065,
            47235,
            47189,
            47006,
            47295,
            46999,
            46999,
            47234,
            47006,
            47205,
            47142,
            47142,
            47248,
            47199,
            47279,
            47225,
            48982,
            49319,
            47189,
            47222,
            47145,
            46868,
            47228,
            47094,
            47155,
            47111,
            47085,
            47264,
            46888,
            47325,
            46838,
            47184,
            47353,
            47254,
            48748,
            47253,
            47081,
            47223,
            47015,
            47255,
            47061,
            46997,
            47252,
            47079,
            47282,
            47181,
            47022,
            47283,
            47231,
            47249,
            47249,
            47421,
            47202,
            47123,
            46916,
            47155,
            47059,
            47225,
            46913,
            47288
          ],
          [
            47940,
            47201,
            47854,
            47065,
            47235,
            47189,
            47006,
            47295,
            46999,
            46999,
            47234,
            47006,
            47205,
            47142,
            47142,
            47248,
            47199,
            47279,
            47225,
            48982,
            49319,
            47189,
            47222,
            47145,
            46868,
            47228,
            47094,
            47155,
            47111,
            47085,
            47264,
            46888,
            47325,
            46838,
            47184,
            47353,
            47254,
            48748,
            47253,
            47081,
            47223,
            47015,
            47255,
            47061,
            46997,
            47252,
            47079,
            47282,
            47181,
            47022,
            47283,
            47231,
            47249,
            47249,
            47421,
            47202,
            47123,
            46916,
            47155,
            47059,
            47225,
            46913,
            47288
          ],
          [
            47940,
            47201,
            47854,
            47065,
            47235,
            47189,
            47006,
            47295,
            46999,
            46999,
            47234,
            47006,
            47205,
            47142,
            47142,
            47248,
            47199,
            47279,
            47225,
            48982,
            49319,
            47189,
            47222,
            47145,
            46868,
            47228,
            47094,
            47155,
            47111,
            47085,
            47264,
            46888,
            47325,
            46838,
            47184,
            47353,
            47254,
            48748,
            47253,
            47081,
            47223,
            47015,
            47255,
            47061,
            46997,
            47252,
            47079,
            47282,
            47181,
            47022,
            47283,
            47231,
            47249,
            47249,
            47421,
            47202,
            47123,
            46916,
            47155,
            47059,
            47225,
            46913,
            47288
          ],
          [
            47940,
            47201,
            47854,
            47065,
            47235,
            47189,
            47006,
            47295,
            46999,
            46999,
            47234,
            47006,
            47205,
            47142,
            47142,
            47248,
            47199,
            47279,
            47225,
            48982,
            49319,
            47189,
            47222,
            47145,
            46868,
            47228,
            47094,
            47155,
            47111,
            47085,
            47264,
            46888,
            47325,
            46838,
            47184,
            47353,
            47254,
            48748,
            47253,
            47081,
            47223,
            47015,
            47255,
            47061,
            46997,
            47252,
            47079,
            47282,
            47181,
            47022,
            47283,
            47231,
            47249,
            47249,
            47421,
            47202,
            47123,
            46916,
            47155,
            47059,
            47225,
            46913,
            47288
          ],
          [
            47940,
            47201,
            47854,
            47065,
            47235,
            47189,
            47006,
            47295,
            46999,
            46999,
            47234,
            47006,
            47205,
            47142,
            47142,
            47248,
            47199,
            47279,
            47225,
            48982,
            49319,
            47189,
            47222,
            47145,
            46868,
            47228,
            47094,
            47155,
            47111,
            47085,
            47264,
            46888,
            47325,
            46838,
            47184,
            47353,
            47254,
            48748,
            47253,
            47081,
            47223,
            47015,
            47255,
            47061,
            46997,
            47252,
            47079,
            47282,
            47181,
            47022,
            47283,
            47231,
            47249,
            47249,
            47421,
            47202,
            47123,
            46916,
            47155,
            47059,
            47225,
            46913,
            47288
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            32,
            386,
            3249,
            12334,
            26721,
            38536,
            37590,
            29737,
            18409,
            7140,
            1641,
            216,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            179,
            1264,
            6502,
            18545,
            32577,
            39289,
            35668,
            25796,
            12282,
            3561,
            379,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            122,
            1080,
            6484,
            20248,
            34788,
            41475,
            38540,
            27406,
            13634,
            4107,
            676,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            330,
            2721,
            11152,
            25198,
            36460,
            37882,
            29973,
            16639,
            4849,
            726,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            15806,
            5536,
            885,
            52,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            33,
            693,
            5651,
            15835,
            29902,
            38105,
            32792,
            20713,
            8369,
            1384,
            65,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            146,
            2437,
            10208,
            23028,
            36405,
            37716,
            28038,
            13333,
            4069,
            467,
            21,
            0,
            0,
            0,
            0
          ],
          [
            128,
            4,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            4,
            259,
            2701,
            11597,
            24866,
            36915,
            41130,
            36377,
            26279,
            12716,
            2920,
            317,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            70,
            1288,
            8083,
            21589,
            35034,
            37630,
            28934,
            15271,
            5313,
            1076,
            29,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            188,
            1893,
            10364,
            22309,
            35839,
            42475,
            38477,
            27907,
            18378,
            6509,
            1900,
            278,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            418,
            3739,
            13700,
            26812,
            37826,
            41459,
            36256,
            25100,
            13426,
            4497,
            870,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27166115500222077,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015057339987833984,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29190470600224216,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170399841001199,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004996940999262733,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}