{
  "created": 1722033859.6171198,
  "duration": 23.54850482940674,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5087047699998948,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14874482200320926,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013109999999869615,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038127849984448403,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1485438179988705,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012592480015882757,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13286450700252317,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1225067150007817,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00129587899937178,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003805134998401627,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12181721000160906,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012456280019250698,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033685349990264513,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14739935099714785,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011786360009864438,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033221539997612126,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12072776599961799,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011404450015106704,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003358545000082813,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14719705700190389,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011465349998616148,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00335809500029427,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12071882599775563,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011812759985332377,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004412049001984997,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021209279984759632,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010991340022883378,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003344714001286775,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016943480004556477,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010869840007217135,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033122839995485265,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004016519000288099,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033841.9023657,
            "msecs": 902.3656845092773,
            "relativeCreated": 7807.802677154541,
            "thread": 281473602273312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5389
          }
        ]
      },
      "teardown": {
        "duration": 0.0012107969996577594,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033629559984547086,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002402783000434283,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033841.914605,
            "msecs": 914.604902267456,
            "relativeCreated": 7820.04189491272,
            "thread": 281473602273312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5389
          }
        ]
      },
      "teardown": {
        "duration": 0.001140535001468379,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020672270002251025,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026825700006156694,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033841.9240303,
            "msecs": 924.0303039550781,
            "relativeCreated": 7829.467296600342,
            "thread": 281473602273312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5389
          }
        ]
      },
      "teardown": {
        "duration": 0.0010611540019453969,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021013969999330584,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034387669984425884,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033841.9334397,
            "msecs": 933.4397315979004,
            "relativeCreated": 7838.876724243164,
            "thread": 281473602273312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5389
          }
        ]
      },
      "teardown": {
        "duration": 0.0010622039990266785,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033551839987921994,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1472552880004514,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001147555998613825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003333765002025757,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12082109800030594,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011891059984918684,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1744423160016595,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482352599996375,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001236358002643101,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015360883000539616,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12165112599905115,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012627880023501348,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8383120510006847,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            7,
            8,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            56,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            21,
            133,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003575898997951299,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002870944997994229,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8946658790009678,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            211,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            145,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            28,
            255,
            255,
            255,
            7
          ],
          [
            7,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            38,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            161,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            104,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            198,
            255,
            255,
            255,
            255,
            0,
            0,
            80,
            0,
            46,
            255
          ],
          [
            255,
            0,
            160,
            0,
            255,
            0,
            142,
            25,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003474197001196444,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028688749989669304,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027809509985673,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48674,
            47633,
            47775,
            47613,
            47596,
            49429,
            47815,
            47774,
            47528,
            49661,
            47653,
            47568,
            47535,
            47504,
            47827,
            47465,
            47639,
            47419,
            47736,
            47619,
            47510,
            47535,
            47748,
            47643,
            47496,
            47280,
            47447,
            47731,
            47607,
            47591,
            47778,
            47594,
            47501,
            47554,
            47709,
            47833,
            49899,
            47576,
            48150,
            47586,
            47570,
            47629,
            47705,
            47568,
            47488,
            47467,
            47637,
            47537,
            47497,
            47442,
            47688,
            47706,
            47556,
            47401,
            47557,
            47559,
            47493,
            47486,
            47792,
            47683,
            47619,
            47551,
            47663
          ],
          [
            48674,
            47633,
            47775,
            47613,
            47596,
            49429,
            47815,
            47774,
            47528,
            49661,
            47653,
            47568,
            47535,
            47504,
            47827,
            47465,
            47639,
            47419,
            47736,
            47619,
            47510,
            47535,
            47748,
            47643,
            47496,
            47280,
            47447,
            47731,
            47607,
            47591,
            47778,
            47594,
            47501,
            47554,
            47709,
            47833,
            49899,
            47576,
            48150,
            47586,
            47570,
            47629,
            47705,
            47568,
            47488,
            47467,
            47637,
            47537,
            47497,
            47442,
            47688,
            47706,
            47556,
            47401,
            47557,
            47559,
            47493,
            47486,
            47792,
            47683,
            47619,
            47551,
            47663
          ]
        ],
        "eTX_errcounts": [
          [
            41673,
            26480,
            8457,
            1336,
            164,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            219,
            3203,
            15923,
            34607,
            42997,
            31625,
            14254,
            1886,
            173,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            1092,
            8463,
            26093,
            40767,
            37775,
            19386,
            5174,
            411,
            24,
            0,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            369,
            3867,
            18041,
            35973,
            42432,
            31831,
            13821,
            3041,
            381,
            9,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            443,
            4804,
            19045,
            36650,
            42572,
            35290,
            16681,
            3195,
            312,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13436298099986743,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015893150011834223,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06911920399943483,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47944,
            47632,
            47378,
            47302,
            47250,
            47594,
            47404,
            47475,
            47404,
            47435,
            47403,
            47549,
            47092,
            47459,
            47344,
            47675,
            47463,
            47526,
            47192,
            47363,
            47250,
            47535,
            47372,
            47266,
            47162,
            47347,
            47449,
            47462,
            47353,
            47369,
            47439,
            47892,
            49169,
            49306,
            47290,
            47283,
            47119,
            47436,
            47299,
            47188,
            47339,
            47529,
            47330,
            47392,
            47208,
            47513,
            47486,
            47536,
            47172,
            47390,
            47749,
            47537,
            47261,
            47172,
            47220,
            47304,
            47351,
            47559,
            47132,
            47332,
            47305,
            47343,
            47498
          ],
          [
            47944,
            47632,
            47378,
            47302,
            47250,
            47594,
            47404,
            47475,
            47404,
            47435,
            47403,
            47549,
            47092,
            47459,
            47344,
            47675,
            47463,
            47526,
            47192,
            47363,
            47250,
            47535,
            47372,
            47266,
            47162,
            47347,
            47449,
            47462,
            47353,
            47369,
            47439,
            47892,
            49169,
            49306,
            47290,
            47283,
            47119,
            47436,
            47299,
            47188,
            47339,
            47529,
            47330,
            47392,
            47208,
            47513,
            47486,
            47536,
            47172,
            47390,
            47749,
            47537,
            47261,
            47172,
            47220,
            47304,
            47351,
            47559,
            47132,
            47332,
            47305,
            47343,
            47498
          ],
          [
            47944,
            47632,
            47378,
            47302,
            47250,
            47594,
            47404,
            47475,
            47404,
            47435,
            47403,
            47549,
            47092,
            47459,
            47344,
            47675,
            47463,
            47526,
            47192,
            47363,
            47250,
            47535,
            47372,
            47266,
            47162,
            47347,
            47449,
            47462,
            47353,
            47369,
            47439,
            47892,
            49169,
            49306,
            47290,
            47283,
            47119,
            47436,
            47299,
            47188,
            47339,
            47529,
            47330,
            47392,
            47208,
            47513,
            47486,
            47536,
            47172,
            47390,
            47749,
            47537,
            47261,
            47172,
            47220,
            47304,
            47351,
            47559,
            47132,
            47332,
            47305,
            47343,
            47498
          ],
          [
            47944,
            47632,
            47378,
            47302,
            47250,
            47594,
            47404,
            47475,
            47404,
            47435,
            47403,
            47549,
            47092,
            47459,
            47344,
            47675,
            47463,
            47526,
            47192,
            47363,
            47250,
            47535,
            47372,
            47266,
            47162,
            47347,
            47449,
            47462,
            47353,
            47369,
            47439,
            47892,
            49169,
            49306,
            47290,
            47283,
            47119,
            47436,
            47299,
            47188,
            47339,
            47529,
            47330,
            47392,
            47208,
            47513,
            47486,
            47536,
            47172,
            47390,
            47749,
            47537,
            47261,
            47172,
            47220,
            47304,
            47351,
            47559,
            47132,
            47332,
            47305,
            47343,
            47498
          ],
          [
            47944,
            47632,
            47378,
            47302,
            47250,
            47594,
            47404,
            47475,
            47404,
            47435,
            47403,
            47549,
            47092,
            47459,
            47344,
            47675,
            47463,
            47526,
            47192,
            47363,
            47250,
            47535,
            47372,
            47266,
            47162,
            47347,
            47449,
            47462,
            47353,
            47369,
            47439,
            47892,
            49169,
            49306,
            47290,
            47283,
            47119,
            47436,
            47299,
            47188,
            47339,
            47529,
            47330,
            47392,
            47208,
            47513,
            47486,
            47536,
            47172,
            47390,
            47749,
            47537,
            47261,
            47172,
            47220,
            47304,
            47351,
            47559,
            47132,
            47332,
            47305,
            47343,
            47498
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            107,
            1186,
            5032,
            14526,
            24950,
            31549,
            32558,
            28415,
            19920,
            10709,
            2909,
            349,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            225,
            1949,
            5779,
            12582,
            25552,
            35845,
            39256,
            32027,
            21224,
            10458,
            2879,
            419,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            61,
            515,
            3353,
            11150,
            22575,
            32431,
            35990,
            34214,
            26470,
            15169,
            5719,
            1306,
            94,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            173,
            1527,
            5527,
            12007,
            21263,
            33141,
            41058,
            38926,
            28079,
            17910,
            5920,
            1036,
            82,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            145,
            1368,
            5584,
            13632,
            23127
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            14,
            127,
            1725,
            6769,
            17366,
            30338,
            35940,
            32431,
            23532,
            12836,
            3913,
            673,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            5,
            142,
            1419,
            6862,
            17806,
            31303,
            34601,
            30778,
            24007,
            13827,
            3994,
            636,
            37,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            346,
            2791,
            9517,
            19096,
            31145,
            38440,
            34784,
            25281,
            13003,
            3455,
            374,
            23,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            82,
            635,
            2788,
            7104,
            17065,
            30426,
            38067,
            35701,
            28913,
            18008,
            6847,
            1259,
            57,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            157,
            1027,
            3798,
            9446,
            21143,
            32347,
            38614,
            36879,
            31432,
            22398,
            10311,
            2759,
            439,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            155,
            1639,
            5233,
            10567,
            18476,
            31123,
            40475,
            41104,
            34648,
            23223,
            11038,
            3767,
            821,
            104,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            76,
            702,
            3246,
            8451
          ]
        ]
      },
      "call": {
        "duration": 0.27305664799860097,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff99564f30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff99564f30> = array([22, 13, 18, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff994fb340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47944, 47632, 47378, 47302, 47250, 47594, ...], [47944, 47632, 47378, 47302, 47250, 47594, ...], [..., 0, ...], [0, 0, 4, 61, 515, 3353, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 157, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff99564f30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff99564f30> = array([22, 13, 18, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016337170018232428,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29269934599869885,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169342922999931,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014363720001711044,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2970650440001918,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            16,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            21,
            255,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            254,
            64,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035032689993386157,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002877994000300532,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5454742510009964,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            210,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            223,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            80,
            255,
            132,
            255,
            140,
            0,
            0,
            238,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            243,
            0,
            117,
            4,
            255,
            43,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            76,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            2,
            255,
            137,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            236,
            255,
            121,
            255,
            255,
            7,
            0,
            157,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            99,
            255,
            121
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003496277997328434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002910034996602917,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29570925399821135,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48546,
            47660,
            47812,
            47491,
            47744,
            47682,
            49512,
            47515,
            47773,
            47819,
            47298,
            47638,
            47447,
            47492,
            47558,
            47660,
            47461,
            47559,
            47435,
            47453,
            47624,
            47673,
            47533,
            47699,
            47642,
            47651,
            47683,
            47871,
            47511,
            47630,
            47593,
            47531,
            47693,
            48236,
            47636,
            49610,
            47579,
            47591,
            47618,
            47736,
            47526,
            47560,
            47513,
            47528,
            47703,
            47926,
            47533,
            47439,
            47628,
            47574,
            47498,
            47702,
            47517,
            47208,
            47209,
            47618,
            47517,
            47715,
            47577,
            47591,
            47510,
            47450,
            47996
          ],
          [
            48546,
            47660,
            47812,
            47491,
            47744,
            47682,
            49512,
            47515,
            47773,
            47819,
            47298,
            47638,
            47447,
            47492,
            47558,
            47660,
            47461,
            47559,
            47435,
            47453,
            47624,
            47673,
            47533,
            47699,
            47642,
            47651,
            47683,
            47871,
            47511,
            47630,
            47593,
            47531,
            47693,
            48236,
            47636,
            49610,
            47579,
            47591,
            47618,
            47736,
            47526,
            47560,
            47513,
            47528,
            47703,
            47926,
            47533,
            47439,
            47628,
            47574,
            47498,
            47702,
            47517,
            47208,
            47209,
            47618,
            47517,
            47715,
            47577,
            47591,
            47510,
            47450,
            47996
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            286,
            3801,
            18217,
            37124,
            36965,
            18546,
            3975,
            454,
            28,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            143,
            2913,
            16795,
            35328,
            40144,
            25626,
            8837,
            1087,
            58,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            883,
            8297,
            28830,
            42391,
            38662,
            18426,
            4143,
            385,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            175,
            2742,
            13548,
            31183,
            42383,
            38888,
            20610,
            5210,
            665,
            28,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13431512999886763,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015823260000615846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06884409700069227,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48123,
            47148,
            47909,
            47412,
            47304,
            47603,
            49316,
            47698,
            47603,
            47170,
            47458,
            47454,
            47383,
            47219,
            47680,
            47388,
            47067,
            47308,
            47578,
            47273,
            47490,
            47283,
            47457,
            47561,
            47364,
            47338,
            47796,
            47207,
            47356,
            47340,
            47365,
            47191,
            47509,
            47324,
            47541,
            47488,
            47333,
            47337,
            47789,
            47380,
            47452,
            47634,
            47443,
            48932,
            49601,
            47240,
            47613,
            47440,
            47391,
            47268,
            47442,
            47383,
            47348,
            47493,
            47420,
            47301,
            47567,
            47430,
            47329,
            47669,
            47258,
            47392,
            48059
          ],
          [
            48123,
            47148,
            47909,
            47412,
            47304,
            47603,
            49316,
            47698,
            47603,
            47170,
            47458,
            47454,
            47383,
            47219,
            47680,
            47388,
            47067,
            47308,
            47578,
            47273,
            47490,
            47283,
            47457,
            47561,
            47364,
            47338,
            47796,
            47207,
            47356,
            47340,
            47365,
            47191,
            47509,
            47324,
            47541,
            47488,
            47333,
            47337,
            47789,
            47380,
            47452,
            47634,
            47443,
            48932,
            49601,
            47240,
            47613,
            47440,
            47391,
            47268,
            47442,
            47383,
            47348,
            47493,
            47420,
            47301,
            47567,
            47430,
            47329,
            47669,
            47258,
            47392,
            48059
          ],
          [
            48123,
            47148,
            47909,
            47412,
            47304,
            47603,
            49316,
            47698,
            47603,
            47170,
            47458,
            47454,
            47383,
            47219,
            47680,
            47388,
            47067,
            47308,
            47578,
            47273,
            47490,
            47283,
            47457,
            47561,
            47364,
            47338,
            47796,
            47207,
            47356,
            47340,
            47365,
            47191,
            47509,
            47324,
            47541,
            47488,
            47333,
            47337,
            47789,
            47380,
            47452,
            47634,
            47443,
            48932,
            49601,
            47240,
            47613,
            47440,
            47391,
            47268,
            47442,
            47383,
            47348,
            47493,
            47420,
            47301,
            47567,
            47430,
            47329,
            47669,
            47258,
            47392,
            48059
          ],
          [
            48123,
            47148,
            47909,
            47412,
            47304,
            47603,
            49316,
            47698,
            47603,
            47170,
            47458,
            47454,
            47383,
            47219,
            47680,
            47388,
            47067,
            47308,
            47578,
            47273,
            47490,
            47283,
            47457,
            47561,
            47364,
            47338,
            47796,
            47207,
            47356,
            47340,
            47365,
            47191,
            47509,
            47324,
            47541,
            47488,
            47333,
            47337,
            47789,
            47380,
            47452,
            47634,
            47443,
            48932,
            49601,
            47240,
            47613,
            47440,
            47391,
            47268,
            47442,
            47383,
            47348,
            47493,
            47420,
            47301,
            47567,
            47430,
            47329,
            47669,
            47258,
            47392,
            48059
          ],
          [
            48123,
            47148,
            47909,
            47412,
            47304,
            47603,
            49316,
            47698,
            47603,
            47170,
            47458,
            47454,
            47383,
            47219,
            47680,
            47388,
            47067,
            47308,
            47578,
            47273,
            47490,
            47283,
            47457,
            47561,
            47364,
            47338,
            47796,
            47207,
            47356,
            47340,
            47365,
            47191,
            47509,
            47324,
            47541,
            47488,
            47333,
            47337,
            47789,
            47380,
            47452,
            47634,
            47443,
            48932,
            49601,
            47240,
            47613,
            47440,
            47391,
            47268,
            47442,
            47383,
            47348,
            47493,
            47420,
            47301,
            47567,
            47430,
            47329,
            47669,
            47258,
            47392,
            48059
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            625,
            4184,
            16099,
            28430,
            34335,
            33361,
            24978,
            14830,
            5325,
            1095,
            88,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            83,
            985,
            4117,
            12439,
            25101,
            36933,
            39096,
            28459,
            14958,
            3589,
            444,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31
          ],
          [
            0,
            3,
            146,
            1599,
            7476,
            20335,
            37958,
            40644,
            34700,
            21869,
            10110,
            2324,
            221,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            393,
            2226,
            8420,
            21707,
            35998,
            44042,
            41826,
            28411,
            12779,
            2790,
            288,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            61,
            664,
            3154,
            8958,
            20381,
            34519,
            38386
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            853,
            6352,
            20636,
            34020,
            38337,
            31330,
            14472,
            3508,
            267,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            644,
            5320,
            18440,
            37016,
            41399,
            33908,
            18063,
            5837,
            924,
            83,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            122,
            1525,
            10061,
            25480,
            38930,
            42014,
            34353,
            17969,
            5436,
            673,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            154,
            2198,
            8963,
            20519,
            34542,
            41910,
            36783,
            23500,
            8816,
            2054,
            200,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            14,
            226,
            2056,
            11380,
            26403,
            38275,
            39708,
            34634,
            27195,
            16765,
            6152,
            1655,
            94,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            670,
            3842,
            12055,
            25473,
            36711,
            43341,
            40910,
            29179,
            14140,
            4558,
            736,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            8,
            208,
            1611,
            7003,
            17356,
            30864
          ]
        ]
      },
      "call": {
        "duration": 0.27086863799922867,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001489504000346642,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2913677969991113,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1692210900000646,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014257820002967492,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.373315797001851,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035893700005544815,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029374559999268968,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5361948040008429,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            9,
            255,
            15,
            255,
            3,
            41,
            0,
            255,
            0,
            255,
            255
          ],
          [
            74,
            0,
            14,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            58,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            14,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            1,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            28,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            6,
            0,
            255,
            5,
            255,
            255
          ],
          [
            77,
            0,
            2,
            0,
            5,
            0,
            255,
            171,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            114,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            66,
            0,
            3,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            89,
            255,
            42,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003479926999716554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002883303997805342,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2962813369995274,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48398,
            47691,
            47637,
            47710,
            47633,
            47736,
            47745,
            47698,
            47777,
            47776,
            47621,
            47698,
            47547,
            47663,
            47579,
            47682,
            47617,
            47677,
            47537,
            47533,
            47658,
            47747,
            47391,
            47548,
            47592,
            47036,
            47393,
            47786,
            47583,
            47667,
            47789,
            47531,
            47541,
            47653,
            47507,
            47620,
            47534,
            47651,
            47578,
            47749,
            47526,
            47593,
            47514,
            47566,
            47549,
            47666,
            49546,
            47629,
            47974,
            47570,
            50172,
            47687,
            47474,
            47477,
            47477,
            47549,
            47407,
            47746,
            47475,
            47634,
            47283,
            47230,
            47702
          ],
          [
            48398,
            47691,
            47637,
            47710,
            47633,
            47736,
            47745,
            47698,
            47777,
            47776,
            47621,
            47698,
            47547,
            47663,
            47579,
            47682,
            47617,
            47677,
            47537,
            47533,
            47658,
            47747,
            47391,
            47548,
            47592,
            47036,
            47393,
            47786,
            47583,
            47667,
            47789,
            47531,
            47541,
            47653,
            47507,
            47620,
            47534,
            47651,
            47578,
            47749,
            47526,
            47593,
            47514,
            47566,
            47549,
            47666,
            49546,
            47629,
            47974,
            47570,
            50172,
            47687,
            47474,
            47477,
            47477,
            47549,
            47407,
            47746,
            47475,
            47634,
            47283,
            47230,
            47702
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            587,
            7341,
            24722,
            38873,
            34112,
            15342,
            2963,
            335,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            448,
            6748,
            22684,
            38611,
            37868,
            21059,
            5227,
            568,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            2,
            201,
            2239,
            14351,
            32847,
            41442,
            29535,
            9944,
            1701,
            160,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            648,
            5927,
            21785,
            38779,
            41807,
            30531,
            12403,
            2174,
            215,
            15,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            882,
            7559,
            25246,
            40424,
            43914
          ]
        ]
      },
      "call": {
        "duration": 0.1344789029972162,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015900059988780413,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06928021700150566,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50847,
            47405,
            47296,
            47287,
            47298,
            47460,
            47269,
            47613,
            47454,
            47442,
            47180,
            47592,
            47377,
            47560,
            47346,
            47414,
            47561,
            47938,
            47283,
            47310,
            47326,
            47508,
            47263,
            47216,
            47341,
            47408,
            47366,
            47491,
            47281,
            47609,
            47319,
            47492,
            47459,
            47315,
            47414,
            47749,
            47522,
            47589,
            47069,
            47494,
            47206,
            47381,
            47329,
            47339,
            47306,
            47460,
            47252,
            47555,
            47453,
            47562,
            47307,
            47331,
            47406,
            47882,
            47566,
            47414,
            47351,
            47504,
            47125,
            47334,
            47301,
            47126,
            47251
          ],
          [
            50847,
            47405,
            47296,
            47287,
            47298,
            47460,
            47269,
            47613,
            47454,
            47442,
            47180,
            47592,
            47377,
            47560,
            47346,
            47414,
            47561,
            47938,
            47283,
            47310,
            47326,
            47508,
            47263,
            47216,
            47341,
            47408,
            47366,
            47491,
            47281,
            47609,
            47319,
            47492,
            47459,
            47315,
            47414,
            47749,
            47522,
            47589,
            47069,
            47494,
            47206,
            47381,
            47329,
            47339,
            47306,
            47460,
            47252,
            47555,
            47453,
            47562,
            47307,
            47331,
            47406,
            47882,
            47566,
            47414,
            47351,
            47504,
            47125,
            47334,
            47301,
            47126,
            47251
          ],
          [
            50847,
            47405,
            47296,
            47287,
            47298,
            47460,
            47269,
            47613,
            47454,
            47442,
            47180,
            47592,
            47377,
            47560,
            47346,
            47414,
            47561,
            47938,
            47283,
            47310,
            47326,
            47508,
            47263,
            47216,
            47341,
            47408,
            47366,
            47491,
            47281,
            47609,
            47319,
            47492,
            47459,
            47315,
            47414,
            47749,
            47522,
            47589,
            47069,
            47494,
            47206,
            47381,
            47329,
            47339,
            47306,
            47460,
            47252,
            47555,
            47453,
            47562,
            47307,
            47331,
            47406,
            47882,
            47566,
            47414,
            47351,
            47504,
            47125,
            47334,
            47301,
            47126,
            47251
          ],
          [
            50847,
            47405,
            47296,
            47287,
            47298,
            47460,
            47269,
            47613,
            47454,
            47442,
            47180,
            47592,
            47377,
            47560,
            47346,
            47414,
            47561,
            47938,
            47283,
            47310,
            47326,
            47508,
            47263,
            47216,
            47341,
            47408,
            47366,
            47491,
            47281,
            47609,
            47319,
            47492,
            47459,
            47315,
            47414,
            47749,
            47522,
            47589,
            47069,
            47494,
            47206,
            47381,
            47329,
            47339,
            47306,
            47460,
            47252,
            47555,
            47453,
            47562,
            47307,
            47331,
            47406,
            47882,
            47566,
            47414,
            47351,
            47504,
            47125,
            47334,
            47301,
            47126,
            47251
          ],
          [
            50847,
            47405,
            47296,
            47287,
            47298,
            47460,
            47269,
            47613,
            47454,
            47442,
            47180,
            47592,
            47377,
            47560,
            47346,
            47414,
            47561,
            47938,
            47283,
            47310,
            47326,
            47508,
            47263,
            47216,
            47341,
            47408,
            47366,
            47491,
            47281,
            47609,
            47319,
            47492,
            47459,
            47315,
            47414,
            47749,
            47522,
            47589,
            47069,
            47494,
            47206,
            47381,
            47329,
            47339,
            47306,
            47460,
            47252,
            47555,
            47453,
            47562,
            47307,
            47331,
            47406,
            47882,
            47566,
            47414,
            47351,
            47504,
            47125,
            47334,
            47301,
            47126,
            47251
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            288,
            1846,
            6967,
            15897,
            27423,
            37410,
            35969,
            24156,
            11696,
            3145,
            357,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            62,
            929,
            4005,
            12452,
            24086,
            32817,
            33327,
            28525,
            19923,
            11072,
            4277,
            658,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            238,
            1694,
            5220,
            12392,
            24995,
            37285,
            43007,
            37886,
            23979,
            9312,
            1990,
            190,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            517,
            2670,
            6831,
            15561,
            29302,
            39453,
            36439,
            26962,
            13918,
            4310,
            800,
            39,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            71
          ],
          [
            13037,
            3038,
            339,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            82,
            1509,
            8730,
            20553,
            32721,
            39230,
            30445,
            16171,
            5721,
            861,
            76,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            923,
            5432,
            15437,
            28003,
            35909,
            32966,
            21219,
            8612,
            1616,
            212,
            20,
            0,
            0,
            0,
            0
          ],
          [
            69,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            68,
            918,
            6249,
            16531,
            27626,
            38854,
            40646,
            31869,
            21115,
            9863,
            2978,
            401,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            106,
            837,
            4645,
            14881,
            27447,
            35075,
            33170,
            23688,
            11721,
            3573,
            634,
            40,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            134,
            1500,
            5610,
            16306,
            27561,
            36914,
            41233,
            38583,
            25309,
            14529,
            4455,
            656,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            46,
            511,
            2865,
            7946,
            18696,
            30960,
            37408,
            36580,
            31031,
            22548,
            13462,
            5380,
            1553,
            99,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2711904259995208,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001466583002184052,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2919317489977402,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1705322099987825,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045680, 10011420), (410741, 410741), (40050013, 10012503))\nassert ((40045680 > 0 and 10011420 == 0\n  +10011420\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff994fb160>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff99294af0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff99612310>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045680, 10011420), (410741, 410741), (40050013, 10012503))\nE       assert ((40045680 > 0 and 10011420 == 0\nE         +10011420\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004933969998091925,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}