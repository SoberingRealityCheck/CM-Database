{
  "created": 1722032414.1578758,
  "duration": 23.537802934646606,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 30,
    "failed": 3,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5061393870018946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479490080018877,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013174790001357906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037831139998161234,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774749300340773,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012481480007409118,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13188401099978364,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1212710949985194,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001297678998525953,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003786533998209052,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12068407200058573,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00126335800086963,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003314173998660408,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14622382000015932,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011898560005647596,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003349213999172207,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11976233099994715,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011643249999906402,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003343273998325458,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14590950199999497,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011535859994182829,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033397340012015775,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11981393199675949,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011710759972629603,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004404907998832641,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021204179975029547,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011068450003222097,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003341624000313459,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001688467000349192,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001092923997930484,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033059540000976995,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003996569001174066,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032396.3952136,
            "msecs": 395.2136039733887,
            "relativeCreated": 7749.807596206665,
            "thread": 281473283416096,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4700
          }
        ]
      },
      "teardown": {
        "duration": 0.0012098369988962077,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033347839998896234,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023760830008541234,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032396.4079661,
            "msecs": 407.96613693237305,
            "relativeCreated": 7762.560129165649,
            "thread": 281473283416096,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4700
          }
        ]
      },
      "teardown": {
        "duration": 0.0011639959993772209,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020787460016435944,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027335099985066336,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032396.4179182,
            "msecs": 417.91820526123047,
            "relativeCreated": 7772.512197494507,
            "thread": 281473283416096,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4700
          }
        ]
      },
      "teardown": {
        "duration": 0.0010220629992545582,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002111476002028212,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034152760017605033,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032396.4279325,
            "msecs": 427.9325008392334,
            "relativeCreated": 7782.52649307251,
            "thread": 281473283416096,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4700
          }
        ]
      },
      "teardown": {
        "duration": 0.0010830240025825333,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033816750001278706,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14627565999762737,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011943559984501917,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033334350009681657,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12002873700112104,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011681059986585751,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1797627640007704,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14721006199761177,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012570580001920462,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015204938001261326,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12092650699923979,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012581980008690152,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8494734180021624,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            7,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            78,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            17,
            129,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035915000007662456,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002895123998314375,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9022325190017,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            218,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            140,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            20,
            255,
            255,
            255,
            27
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            35,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            76,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            134,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            185,
            255,
            255,
            255,
            255,
            0,
            0,
            124,
            0,
            59,
            255
          ],
          [
            255,
            0,
            143,
            0,
            255,
            0,
            215,
            49,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034681969991652295,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002867434002837399,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027457569987746,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48149,
            47507,
            47505,
            47485,
            47579,
            47537,
            47511,
            47591,
            47519,
            47599,
            47437,
            47408,
            47507,
            49244,
            47493,
            47829,
            47515,
            49736,
            47521,
            47448,
            47634,
            47630,
            47595,
            47270,
            47523,
            47367,
            47474,
            47354,
            47607,
            47524,
            47542,
            47377,
            47594,
            47352,
            47529,
            47393,
            47502,
            47524,
            47426,
            47452,
            47527,
            47691,
            47555,
            47158,
            47269,
            47461,
            47873,
            47601,
            47839,
            47391,
            47700,
            47488,
            47454,
            47479,
            47367,
            47508,
            47438,
            47480,
            47609,
            47568,
            47342,
            47711,
            47451
          ],
          [
            48149,
            47507,
            47505,
            47485,
            47579,
            47537,
            47511,
            47591,
            47519,
            47599,
            47437,
            47408,
            47507,
            49244,
            47493,
            47829,
            47515,
            49736,
            47521,
            47448,
            47634,
            47630,
            47595,
            47270,
            47523,
            47367,
            47474,
            47354,
            47607,
            47524,
            47542,
            47377,
            47594,
            47352,
            47529,
            47393,
            47502,
            47524,
            47426,
            47452,
            47527,
            47691,
            47555,
            47158,
            47269,
            47461,
            47873,
            47601,
            47839,
            47391,
            47700,
            47488,
            47454,
            47479,
            47367,
            47508,
            47438,
            47480,
            47609,
            47568,
            47342,
            47711,
            47451
          ]
        ],
        "eTX_errcounts": [
          [
            41168,
            27513,
            8553,
            1259,
            95,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            140,
            3258,
            15606,
            34164,
            41965,
            31953,
            15080,
            2101,
            243,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            91,
            622,
            7258,
            25341,
            39964,
            37917,
            20504,
            5557,
            728,
            28,
            3,
            0,
            0
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            354,
            3623,
            16503,
            35696,
            42474,
            32342,
            14266,
            3292,
            365,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            336,
            4367,
            18549,
            36328,
            42759,
            35731,
            17375,
            3542,
            514,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13399377800305956,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016173660005733836,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06890823099820409,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48342,
            47681,
            47374,
            47288,
            47208,
            47242,
            47258,
            47213,
            47180,
            47140,
            47224,
            47074,
            47183,
            47071,
            47095,
            47265,
            47311,
            47662,
            47241,
            47556,
            46867,
            47077,
            47189,
            47151,
            47189,
            47277,
            47294,
            47126,
            47186,
            47124,
            47180,
            46786,
            47307,
            47394,
            47208,
            47312,
            47179,
            47280,
            47537,
            47094,
            47051,
            47267,
            47181,
            47237,
            47072,
            46811,
            47199,
            47077,
            47125,
            47219,
            47238,
            47192,
            47274,
            47193,
            47231,
            47256,
            47286,
            47262,
            47204,
            47104,
            47234,
            47062,
            47061
          ],
          [
            48342,
            47681,
            47374,
            47288,
            47208,
            47242,
            47258,
            47213,
            47180,
            47140,
            47224,
            47074,
            47183,
            47071,
            47095,
            47265,
            47311,
            47662,
            47241,
            47556,
            46867,
            47077,
            47189,
            47151,
            47189,
            47277,
            47294,
            47126,
            47186,
            47124,
            47180,
            46786,
            47307,
            47394,
            47208,
            47312,
            47179,
            47280,
            47537,
            47094,
            47051,
            47267,
            47181,
            47237,
            47072,
            46811,
            47199,
            47077,
            47125,
            47219,
            47238,
            47192,
            47274,
            47193,
            47231,
            47256,
            47286,
            47262,
            47204,
            47104,
            47234,
            47062,
            47061
          ],
          [
            48342,
            47681,
            47374,
            47288,
            47208,
            47242,
            47258,
            47213,
            47180,
            47140,
            47224,
            47074,
            47183,
            47071,
            47095,
            47265,
            47311,
            47662,
            47241,
            47556,
            46867,
            47077,
            47189,
            47151,
            47189,
            47277,
            47294,
            47126,
            47186,
            47124,
            47180,
            46786,
            47307,
            47394,
            47208,
            47312,
            47179,
            47280,
            47537,
            47094,
            47051,
            47267,
            47181,
            47237,
            47072,
            46811,
            47199,
            47077,
            47125,
            47219,
            47238,
            47192,
            47274,
            47193,
            47231,
            47256,
            47286,
            47262,
            47204,
            47104,
            47234,
            47062,
            47061
          ],
          [
            48342,
            47681,
            47374,
            47288,
            47208,
            47242,
            47258,
            47213,
            47180,
            47140,
            47224,
            47074,
            47183,
            47071,
            47095,
            47265,
            47311,
            47662,
            47241,
            47556,
            46867,
            47077,
            47189,
            47151,
            47189,
            47277,
            47294,
            47126,
            47186,
            47124,
            47180,
            46786,
            47307,
            47394,
            47208,
            47312,
            47179,
            47280,
            47537,
            47094,
            47051,
            47267,
            47181,
            47237,
            47072,
            46811,
            47199,
            47077,
            47125,
            47219,
            47238,
            47192,
            47274,
            47193,
            47231,
            47256,
            47286,
            47262,
            47204,
            47104,
            47234,
            47062,
            47061
          ],
          [
            48342,
            47681,
            47374,
            47288,
            47208,
            47242,
            47258,
            47213,
            47180,
            47140,
            47224,
            47074,
            47183,
            47071,
            47095,
            47265,
            47311,
            47662,
            47241,
            47556,
            46867,
            47077,
            47189,
            47151,
            47189,
            47277,
            47294,
            47126,
            47186,
            47124,
            47180,
            46786,
            47307,
            47394,
            47208,
            47312,
            47179,
            47280,
            47537,
            47094,
            47051,
            47267,
            47181,
            47237,
            47072,
            46811,
            47199,
            47077,
            47125,
            47219,
            47238,
            47192,
            47274,
            47193,
            47231,
            47256,
            47286,
            47262,
            47204,
            47104,
            47234,
            47062,
            47061
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            34,
            330,
            2597,
            9388,
            19887,
            31755,
            36967,
            32779,
            21261,
            7816,
            1439,
            183,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            39,
            695,
            3801,
            10788,
            22974,
            32482,
            35153,
            29462,
            23564,
            15782,
            7065,
            1330,
            144,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            43,
            436,
            2392,
            9421,
            20832,
            32508,
            36917,
            34928,
            27247,
            15448,
            6297,
            1410,
            203,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            83,
            1034,
            4232,
            10443,
            20554,
            32093,
            40757,
            40520,
            29943,
            18565,
            6244,
            1326,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            82,
            1041,
            4883,
            12724,
            22278
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            113,
            1544,
            6420,
            15706,
            29964,
            35626,
            33278,
            24624,
            13479,
            4274,
            696,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            93,
            1136,
            6933,
            16270,
            30984,
            34440,
            31630,
            24698,
            15152,
            4240,
            578,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            6,
            258,
            2440,
            8082,
            17684,
            30469,
            38678,
            36326,
            26126,
            13712,
            4148,
            511,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            47,
            639,
            2622,
            6449,
            15674,
            29527,
            38313,
            36476,
            29380,
            18167,
            6908,
            1605,
            130,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            112,
            874,
            3388,
            8733,
            19196,
            31472,
            38064,
            37307,
            31775,
            23729,
            11193,
            2885,
            432,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            131,
            1284,
            4535,
            9517,
            17454,
            29509,
            40490,
            40996,
            35101,
            24757,
            11781,
            3877,
            829,
            87,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            60,
            624,
            2915,
            7890
          ]
        ]
      },
      "call": {
        "duration": 0.272260699999606,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff865359f0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff865359f0> = array([21, 13, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff86513340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48342, 47681, 47374, 47288, 47208, 47242, ...], [48342, 47681, 47374, 47288, 47208, 47242, ...], [..., 0, ...], [0, 0, 4, 43, 436, 2392, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 112, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff865359f0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff865359f0> = array([21, 13, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016788670000096317,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2928073770017363,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.171110685001622,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014494820024992805,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3075648360027117,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            30,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            242,
            95,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003486256999167381,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028839039987360593,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.536099433000345,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            210,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            213,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            106,
            255,
            140,
            255,
            139,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            119,
            1,
            255,
            21,
            255,
            14
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            70,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            7,
            255,
            191,
            255,
            247,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            183,
            255,
            255,
            3,
            0,
            128,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            138,
            255,
            134
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003428986998187611,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002892033997341059,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29587059500045143,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48107,
            47412,
            47549,
            47414,
            47256,
            47230,
            47336,
            47350,
            47466,
            47373,
            47469,
            47279,
            47351,
            47268,
            47397,
            47521,
            47265,
            47340,
            47576,
            47115,
            47233,
            47696,
            47584,
            47375,
            48776,
            47295,
            47758,
            47479,
            47693,
            47332,
            47321,
            47351,
            47327,
            47499,
            47319,
            47424,
            47370,
            47297,
            47517,
            47667,
            47284,
            47446,
            47408,
            47459,
            47258,
            47431,
            47297,
            47304,
            47326,
            47329,
            47424,
            47336,
            47376,
            47369,
            47309,
            47282,
            47263,
            49405,
            47464,
            47969,
            47427,
            49570,
            47629
          ],
          [
            48107,
            47412,
            47549,
            47414,
            47256,
            47230,
            47336,
            47350,
            47466,
            47373,
            47469,
            47279,
            47351,
            47268,
            47397,
            47521,
            47265,
            47340,
            47576,
            47115,
            47233,
            47696,
            47584,
            47375,
            48776,
            47295,
            47758,
            47479,
            47693,
            47332,
            47321,
            47351,
            47327,
            47499,
            47319,
            47424,
            47370,
            47297,
            47517,
            47667,
            47284,
            47446,
            47408,
            47459,
            47258,
            47431,
            47297,
            47304,
            47326,
            47329,
            47424,
            47336,
            47376,
            47369,
            47309,
            47282,
            47263,
            49405,
            47464,
            47969,
            47427,
            49570,
            47629
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            227,
            3103,
            17293,
            35441,
            37338,
            20246,
            4872,
            387,
            38,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            130,
            2407,
            15617,
            34536,
            40161,
            26638,
            9365,
            1141,
            49,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            32,
            818,
            7493,
            27696,
            40943,
            38971,
            19990,
            5254,
            407,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            105,
            2341,
            12868,
            30189,
            42508,
            38660,
            21338,
            5983,
            620,
            44,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1338494139999966,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016106460025184788,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06870968700241065,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47894,
            47158,
            47526,
            47152,
            47188,
            47288,
            47136,
            47390,
            47173,
            46981,
            47418,
            47277,
            47411,
            47312,
            47221,
            47773,
            47100,
            47407,
            47189,
            47138,
            47326,
            47169,
            47384,
            47080,
            47229,
            47175,
            47162,
            47396,
            47177,
            47229,
            47251,
            46894,
            47371,
            48958,
            51858,
            47222,
            47112,
            47499,
            47050,
            47227,
            47185,
            47221,
            47417,
            47041,
            47195,
            47313,
            47220,
            47424,
            47278,
            47292,
            47250,
            47209,
            47720,
            47154,
            47268,
            47231,
            47024,
            47479,
            46779,
            47143,
            47168,
            47139,
            47294
          ],
          [
            47894,
            47158,
            47526,
            47152,
            47188,
            47288,
            47136,
            47390,
            47173,
            46981,
            47418,
            47277,
            47411,
            47312,
            47221,
            47773,
            47100,
            47407,
            47189,
            47138,
            47326,
            47169,
            47384,
            47080,
            47229,
            47175,
            47162,
            47396,
            47177,
            47229,
            47251,
            46894,
            47371,
            48958,
            51858,
            47222,
            47112,
            47499,
            47050,
            47227,
            47185,
            47221,
            47417,
            47041,
            47195,
            47313,
            47220,
            47424,
            47278,
            47292,
            47250,
            47209,
            47720,
            47154,
            47268,
            47231,
            47024,
            47479,
            46779,
            47143,
            47168,
            47139,
            47294
          ],
          [
            47894,
            47158,
            47526,
            47152,
            47188,
            47288,
            47136,
            47390,
            47173,
            46981,
            47418,
            47277,
            47411,
            47312,
            47221,
            47773,
            47100,
            47407,
            47189,
            47138,
            47326,
            47169,
            47384,
            47080,
            47229,
            47175,
            47162,
            47396,
            47177,
            47229,
            47251,
            46894,
            47371,
            48958,
            51858,
            47222,
            47112,
            47499,
            47050,
            47227,
            47185,
            47221,
            47417,
            47041,
            47195,
            47313,
            47220,
            47424,
            47278,
            47292,
            47250,
            47209,
            47720,
            47154,
            47268,
            47231,
            47024,
            47479,
            46779,
            47143,
            47168,
            47139,
            47294
          ],
          [
            47894,
            47158,
            47526,
            47152,
            47188,
            47288,
            47136,
            47390,
            47173,
            46981,
            47418,
            47277,
            47411,
            47312,
            47221,
            47773,
            47100,
            47407,
            47189,
            47138,
            47326,
            47169,
            47384,
            47080,
            47229,
            47175,
            47162,
            47396,
            47177,
            47229,
            47251,
            46894,
            47371,
            48958,
            51858,
            47222,
            47112,
            47499,
            47050,
            47227,
            47185,
            47221,
            47417,
            47041,
            47195,
            47313,
            47220,
            47424,
            47278,
            47292,
            47250,
            47209,
            47720,
            47154,
            47268,
            47231,
            47024,
            47479,
            46779,
            47143,
            47168,
            47139,
            47294
          ],
          [
            47894,
            47158,
            47526,
            47152,
            47188,
            47288,
            47136,
            47390,
            47173,
            46981,
            47418,
            47277,
            47411,
            47312,
            47221,
            47773,
            47100,
            47407,
            47189,
            47138,
            47326,
            47169,
            47384,
            47080,
            47229,
            47175,
            47162,
            47396,
            47177,
            47229,
            47251,
            46894,
            47371,
            48958,
            51858,
            47222,
            47112,
            47499,
            47050,
            47227,
            47185,
            47221,
            47417,
            47041,
            47195,
            47313,
            47220,
            47424,
            47278,
            47292,
            47250,
            47209,
            47720,
            47154,
            47268,
            47231,
            47024,
            47479,
            46779,
            47143,
            47168,
            47139,
            47294
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            135,
            1995,
            11735,
            26992,
            38174,
            37527,
            26122,
            12016,
            3135,
            372,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            390,
            2725,
            14059,
            30467,
            40404,
            40570,
            29745,
            15740,
            4476,
            905,
            62,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            124,
            1380,
            7022,
            19538,
            36094,
            40326,
            35041,
            21981,
            10003,
            2623,
            305,
            9,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            249,
            1778,
            8332,
            21926,
            37080,
            47970,
            42276,
            28453,
            13267,
            2666,
            278,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            46,
            543,
            2874,
            8271,
            20422,
            35065,
            38882
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            27,
            844,
            6669,
            21041,
            33618,
            38512,
            31901,
            14837,
            3701,
            354,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            455,
            5232,
            17149,
            34769,
            41822,
            34451,
            19343,
            6626,
            1009,
            89,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            170,
            1663,
            9557,
            26136,
            38842,
            42410,
            33989,
            18347,
            5598,
            607,
            64,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            199,
            1862,
            8420,
            20829,
            34256,
            42008,
            35479,
            22349,
            9457,
            2244,
            305,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            242,
            2212,
            10615,
            25939,
            37676,
            39647,
            34313,
            27219,
            17065,
            5881,
            1445,
            76,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            41,
            635,
            3426,
            11955,
            26612,
            36503,
            42984,
            41178,
            29472,
            14532,
            4354,
            713,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            187,
            1478,
            6765,
            16711,
            29598
          ]
        ]
      },
      "call": {
        "duration": 0.27077176699822303,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014963140019972343,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29154158900200855,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1707705070002703,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001442911998310592,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3390714460001618,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            4,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            120,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          3,
          3,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.003500088001601398,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028881340003863443,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5369032399976277,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            9,
            255,
            2,
            58,
            0,
            255,
            1,
            255,
            255
          ],
          [
            64,
            0,
            14,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            37,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            226,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            0,
            1,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            13,
            255,
            38,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            4,
            4,
            0,
            255,
            4,
            255,
            255
          ],
          [
            81,
            0,
            2,
            0,
            12,
            0,
            255,
            229,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            74,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            76,
            0,
            7,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            146,
            255,
            39,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034767769975587726,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028778740015695803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296289883001009,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48256,
            47349,
            47575,
            47328,
            47633,
            47571,
            47468,
            47330,
            47369,
            47533,
            47580,
            47577,
            47889,
            47359,
            47729,
            47572,
            47660,
            47609,
            47387,
            47447,
            47290,
            47496,
            47389,
            47565,
            47259,
            47333,
            47249,
            47422,
            47312,
            47604,
            47381,
            47476,
            47382,
            47528,
            47658,
            47649,
            47338,
            47268,
            47270,
            47401,
            47568,
            47534,
            47483,
            47809,
            47169,
            47400,
            47671,
            47711,
            47548,
            47369,
            47331,
            47333,
            47468,
            47401,
            47487,
            47206,
            47331,
            47294,
            47445,
            47424,
            47472,
            47290,
            47335
          ],
          [
            48256,
            47349,
            47575,
            47328,
            47633,
            47571,
            47468,
            47330,
            47369,
            47533,
            47580,
            47577,
            47889,
            47359,
            47729,
            47572,
            47660,
            47609,
            47387,
            47447,
            47290,
            47496,
            47389,
            47565,
            47259,
            47333,
            47249,
            47422,
            47312,
            47604,
            47381,
            47476,
            47382,
            47528,
            47658,
            47649,
            47338,
            47268,
            47270,
            47401,
            47568,
            47534,
            47483,
            47809,
            47169,
            47400,
            47671,
            47711,
            47548,
            47369,
            47331,
            47333,
            47468,
            47401,
            47487,
            47206,
            47331,
            47294,
            47445,
            47424,
            47472,
            47290,
            47335
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            551,
            6643,
            23697,
            39599,
            34036,
            15624,
            3307,
            217,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            573,
            5595,
            21389,
            37876,
            38848,
            22116,
            5784,
            735,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            0,
            0,
            1,
            136,
            2021,
            13756,
            32115,
            40666,
            29804,
            9639,
            1615,
            101,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            605,
            5268,
            21740,
            38454,
            41777,
            30327,
            12830,
            2037,
            208,
            25,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            743,
            7464,
            24883,
            39758,
            43352
          ]
        ]
      },
      "call": {
        "duration": 0.13415929199982202,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016345559997716919,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06889374100137502,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47888,
            47395,
            47263,
            47142,
            47179,
            47369,
            47338,
            47213,
            47270,
            48903,
            47541,
            47281,
            47202,
            47092,
            47250,
            47143,
            47321,
            47270,
            47128,
            47283,
            47281,
            47035,
            47416,
            47295,
            47326,
            47287,
            47334,
            48916,
            49432,
            47092,
            46959,
            47364,
            47287,
            47186,
            47226,
            47116,
            47344,
            47294,
            47156,
            47308,
            47091,
            47397,
            47292,
            47345,
            47138,
            47688,
            52647,
            47160,
            47125,
            47167,
            47109,
            47373,
            47250,
            47223,
            47250,
            47525,
            47362,
            47293,
            47181,
            47367,
            47174,
            47445,
            47344
          ],
          [
            47888,
            47395,
            47263,
            47142,
            47179,
            47369,
            47338,
            47213,
            47270,
            48903,
            47541,
            47281,
            47202,
            47092,
            47250,
            47143,
            47321,
            47270,
            47128,
            47283,
            47281,
            47035,
            47416,
            47295,
            47326,
            47287,
            47334,
            48916,
            49432,
            47092,
            46959,
            47364,
            47287,
            47186,
            47226,
            47116,
            47344,
            47294,
            47156,
            47308,
            47091,
            47397,
            47292,
            47345,
            47138,
            47688,
            52647,
            47160,
            47125,
            47167,
            47109,
            47373,
            47250,
            47223,
            47250,
            47525,
            47362,
            47293,
            47181,
            47367,
            47174,
            47445,
            47344
          ],
          [
            47888,
            47395,
            47263,
            47142,
            47179,
            47369,
            47338,
            47213,
            47270,
            48903,
            47541,
            47281,
            47202,
            47092,
            47250,
            47143,
            47321,
            47270,
            47128,
            47283,
            47281,
            47035,
            47416,
            47295,
            47326,
            47287,
            47334,
            48916,
            49432,
            47092,
            46959,
            47364,
            47287,
            47186,
            47226,
            47116,
            47344,
            47294,
            47156,
            47308,
            47091,
            47397,
            47292,
            47345,
            47138,
            47688,
            52647,
            47160,
            47125,
            47167,
            47109,
            47373,
            47250,
            47223,
            47250,
            47525,
            47362,
            47293,
            47181,
            47367,
            47174,
            47445,
            47344
          ],
          [
            47888,
            47395,
            47263,
            47142,
            47179,
            47369,
            47338,
            47213,
            47270,
            48903,
            47541,
            47281,
            47202,
            47092,
            47250,
            47143,
            47321,
            47270,
            47128,
            47283,
            47281,
            47035,
            47416,
            47295,
            47326,
            47287,
            47334,
            48916,
            49432,
            47092,
            46959,
            47364,
            47287,
            47186,
            47226,
            47116,
            47344,
            47294,
            47156,
            47308,
            47091,
            47397,
            47292,
            47345,
            47138,
            47688,
            52647,
            47160,
            47125,
            47167,
            47109,
            47373,
            47250,
            47223,
            47250,
            47525,
            47362,
            47293,
            47181,
            47367,
            47174,
            47445,
            47344
          ],
          [
            47888,
            47395,
            47263,
            47142,
            47179,
            47369,
            47338,
            47213,
            47270,
            48903,
            47541,
            47281,
            47202,
            47092,
            47250,
            47143,
            47321,
            47270,
            47128,
            47283,
            47281,
            47035,
            47416,
            47295,
            47326,
            47287,
            47334,
            48916,
            49432,
            47092,
            46959,
            47364,
            47287,
            47186,
            47226,
            47116,
            47344,
            47294,
            47156,
            47308,
            47091,
            47397,
            47292,
            47345,
            47138,
            47688,
            52647,
            47160,
            47125,
            47167,
            47109,
            47373,
            47250,
            47223,
            47250,
            47525,
            47362,
            47293,
            47181,
            47367,
            47174,
            47445,
            47344
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            51,
            766,
            5736,
            18693,
            32544,
            40324,
            35826,
            24363,
            11891,
            3387,
            548,
            61,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            171,
            1901,
            9875,
            25835,
            36950,
            41375,
            36185,
            21304,
            7772,
            1801,
            248,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            175,
            1429,
            4687,
            12523,
            25326,
            37059,
            42964,
            38636,
            23534,
            8991,
            2260,
            232,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            400,
            2526,
            6612,
            15247,
            29811,
            39841,
            37112,
            27486,
            13458,
            4248,
            944,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            52
          ],
          [
            11704,
            3208,
            372,
            15,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            45,
            1535,
            8545,
            20156,
            32798,
            39147,
            30266,
            15983,
            6142,
            1032,
            64,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            83,
            867,
            5456,
            15599,
            28305,
            35681,
            32796,
            21578,
            8237,
            1448,
            145,
            5,
            0,
            0,
            0,
            0
          ],
          [
            67,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            52,
            931,
            6044,
            15685,
            26872,
            37919,
            40716,
            32085,
            20525,
            9943,
            2948,
            402,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            111,
            1084,
            4695,
            14803,
            27217,
            35042,
            32759,
            23188,
            11292,
            3755,
            610,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            137,
            1630,
            5895,
            16145,
            27147,
            36727,
            41246,
            37650,
            25681,
            14843,
            4130,
            702,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            516,
            2729,
            7945,
            17742,
            30253,
            37401,
            36182,
            30885,
            25995,
            13364,
            5311,
            1339,
            107,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ]
        ]
      },
      "call": {
        "duration": 0.2726969100003771,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff862969f0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff862969f0> = array([14, 12, 14, 13, 10]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff86513340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47888, 47395, 47263, 47142, 47179, 47369, ...], [47888, 47395, 47263, 47142, 47179, 47369, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [11704, 3208, 372, 15, 2, 0, ...], [67, 8, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff862969f0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff862969f0> = array([14, 12, 14, 13, 10]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.001630626000405755,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29228215500188526,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.176858243001334,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40046583, 10011646), (411478, 411478), (40048216, 10012054))\nassert ((40046583 > 0 and 10011646 == 0\n  +10011646\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff865131c0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff862c00a0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff865ee460>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40046583, 10011646), (411478, 411478), (40048216, 10012054))\nE       assert ((40046583 > 0 and 10011646 == 0\nE         +10011646\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004923859996779356,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}