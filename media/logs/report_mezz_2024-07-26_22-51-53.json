{
  "created": 1722034332.8529568,
  "duration": 23.536021947860718,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5084290939994389,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1485716280003544,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001346789998933673,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037918449997960124,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479985250007303,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012958189981873147,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13273037399994791,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12162079599875142,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012915289989905432,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037728839997726027,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12114162500074599,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001278449002711568,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033148039983643685,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14685453999845777,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012023359995509963,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033262040014960803,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11991939799918327,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011715260006894823,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033135740013676696,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14628578599877073,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001202276998810703,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033397650004189927,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12011803200221038,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011985269993601833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004370768001535907,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002129508000507485,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011459060006018262,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003322934000607347,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017066479995264672,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011133250009152107,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032900539990805555,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004025399997772183,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034315.151119,
            "msecs": 151.11899375915527,
            "relativeCreated": 7807.4586391448975,
            "thread": 281473644355616,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5616
          }
        ]
      },
      "teardown": {
        "duration": 0.0012175470001238864,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003342074000102002,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024211140007537324,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034315.1633604,
            "msecs": 163.3603572845459,
            "relativeCreated": 7819.700002670288,
            "thread": 281473644355616,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5616
          }
        ]
      },
      "teardown": {
        "duration": 0.0012062970017723273,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002083455998217687,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002693459999136394,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034315.1728332,
            "msecs": 172.83320426940918,
            "relativeCreated": 7829.172849655151,
            "thread": 281473644355616,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5616
          }
        ]
      },
      "teardown": {
        "duration": 0.0010507740007597022,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002082885999698192,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034777969995047897,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034315.1822224,
            "msecs": 182.2223663330078,
            "relativeCreated": 7838.56201171875,
            "thread": 281473644355616,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5616
          }
        ]
      },
      "teardown": {
        "duration": 0.0010986550005327445,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033241040000575595,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14639006899960805,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011679859999276232,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00329617299939855,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12033307700039586,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011686769976222422,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17971298299744376,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774843999839504,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012745480016747024,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01522380999813322,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120960600077524,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012674090030486695,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8333000790007645,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            92,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            89,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0036307410009612795,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029391349999059457,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8955742990001454,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            16
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            146,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            24,
            255,
            255,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            21,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            100,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            156,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            150,
            255,
            255,
            255,
            255,
            0,
            0,
            108,
            0,
            94,
            255
          ],
          [
            255,
            0,
            74,
            0,
            255,
            0,
            255,
            53,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003478427999652922,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029002840019529685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.302366552001331,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48163,
            47415,
            47401,
            47324,
            47255,
            47317,
            47352,
            47457,
            47342,
            47415,
            47477,
            47241,
            47026,
            46964,
            47227,
            47362,
            47166,
            47315,
            47373,
            47245,
            47254,
            49024,
            47318,
            47745,
            47454,
            48043,
            47155,
            47648,
            47333,
            47316,
            47290,
            47226,
            47228,
            47093,
            47299,
            47055,
            47148,
            47008,
            47332,
            47032,
            47356,
            47271,
            47164,
            47295,
            47406,
            47223,
            47400,
            47258,
            47365,
            47363,
            47336,
            47076,
            47027,
            47569,
            47314,
            47569,
            47442,
            47265,
            49311,
            47321,
            47788,
            47205,
            47624
          ],
          [
            48163,
            47415,
            47401,
            47324,
            47255,
            47317,
            47352,
            47457,
            47342,
            47415,
            47477,
            47241,
            47026,
            46964,
            47227,
            47362,
            47166,
            47315,
            47373,
            47245,
            47254,
            49024,
            47318,
            47745,
            47454,
            48043,
            47155,
            47648,
            47333,
            47316,
            47290,
            47226,
            47228,
            47093,
            47299,
            47055,
            47148,
            47008,
            47332,
            47032,
            47356,
            47271,
            47164,
            47295,
            47406,
            47223,
            47400,
            47258,
            47365,
            47363,
            47336,
            47076,
            47027,
            47569,
            47314,
            47569,
            47442,
            47265,
            49311,
            47321,
            47788,
            47205,
            47624
          ]
        ],
        "eTX_errcounts": [
          [
            40694,
            27259,
            8737,
            1207,
            64,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            233,
            3089,
            16216,
            34578,
            42691,
            31788,
            14625,
            2155,
            261,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            793,
            7598,
            25020,
            40122,
            38138,
            20177,
            5210,
            668,
            17,
            0,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            346,
            3812,
            16758,
            36318,
            42065,
            32596,
            13931,
            3231,
            349,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            267,
            4091,
            18629,
            35986,
            42531,
            36300,
            17593,
            3588,
            320,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13362148399755824,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016215369978453964,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06901327099694754,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47949,
            47413,
            47164,
            47086,
            47470,
            49073,
            47262,
            47096,
            47157,
            47000,
            47094,
            47293,
            47041,
            47074,
            46946,
            47021,
            47053,
            47312,
            47002,
            47168,
            47127,
            47086,
            47067,
            47371,
            48988,
            48826,
            47209,
            47452,
            47168,
            47249,
            46709,
            46891,
            47309,
            47125,
            47033,
            47241,
            47095,
            47143,
            47361,
            47075,
            47177,
            47565,
            46968,
            47127,
            48835,
            47580,
            47080,
            47261,
            47135,
            47101,
            47231,
            47079,
            47066,
            47316,
            47087,
            46871,
            47307,
            47096,
            47131,
            47379,
            47085,
            47169,
            47276
          ],
          [
            47949,
            47413,
            47164,
            47086,
            47470,
            49073,
            47262,
            47096,
            47157,
            47000,
            47094,
            47293,
            47041,
            47074,
            46946,
            47021,
            47053,
            47312,
            47002,
            47168,
            47127,
            47086,
            47067,
            47371,
            48988,
            48826,
            47209,
            47452,
            47168,
            47249,
            46709,
            46891,
            47309,
            47125,
            47033,
            47241,
            47095,
            47143,
            47361,
            47075,
            47177,
            47565,
            46968,
            47127,
            48835,
            47580,
            47080,
            47261,
            47135,
            47101,
            47231,
            47079,
            47066,
            47316,
            47087,
            46871,
            47307,
            47096,
            47131,
            47379,
            47085,
            47169,
            47276
          ],
          [
            47949,
            47413,
            47164,
            47086,
            47470,
            49073,
            47262,
            47096,
            47157,
            47000,
            47094,
            47293,
            47041,
            47074,
            46946,
            47021,
            47053,
            47312,
            47002,
            47168,
            47127,
            47086,
            47067,
            47371,
            48988,
            48826,
            47209,
            47452,
            47168,
            47249,
            46709,
            46891,
            47309,
            47125,
            47033,
            47241,
            47095,
            47143,
            47361,
            47075,
            47177,
            47565,
            46968,
            47127,
            48835,
            47580,
            47080,
            47261,
            47135,
            47101,
            47231,
            47079,
            47066,
            47316,
            47087,
            46871,
            47307,
            47096,
            47131,
            47379,
            47085,
            47169,
            47276
          ],
          [
            47949,
            47413,
            47164,
            47086,
            47470,
            49073,
            47262,
            47096,
            47157,
            47000,
            47094,
            47293,
            47041,
            47074,
            46946,
            47021,
            47053,
            47312,
            47002,
            47168,
            47127,
            47086,
            47067,
            47371,
            48988,
            48826,
            47209,
            47452,
            47168,
            47249,
            46709,
            46891,
            47309,
            47125,
            47033,
            47241,
            47095,
            47143,
            47361,
            47075,
            47177,
            47565,
            46968,
            47127,
            48835,
            47580,
            47080,
            47261,
            47135,
            47101,
            47231,
            47079,
            47066,
            47316,
            47087,
            46871,
            47307,
            47096,
            47131,
            47379,
            47085,
            47169,
            47276
          ],
          [
            47949,
            47413,
            47164,
            47086,
            47470,
            49073,
            47262,
            47096,
            47157,
            47000,
            47094,
            47293,
            47041,
            47074,
            46946,
            47021,
            47053,
            47312,
            47002,
            47168,
            47127,
            47086,
            47067,
            47371,
            48988,
            48826,
            47209,
            47452,
            47168,
            47249,
            46709,
            46891,
            47309,
            47125,
            47033,
            47241,
            47095,
            47143,
            47361,
            47075,
            47177,
            47565,
            46968,
            47127,
            48835,
            47580,
            47080,
            47261,
            47135,
            47101,
            47231,
            47079,
            47066,
            47316,
            47087,
            46871,
            47307,
            47096,
            47131,
            47379,
            47085,
            47169,
            47276
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            50,
            575,
            3446,
            11068,
            21822,
            28415,
            29377,
            26000,
            18816,
            10112,
            2717,
            311,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            87,
            887,
            4528,
            11861,
            22494,
            29342,
            32559,
            28656,
            22671,
            15492,
            7869,
            2253,
            418,
            49,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            182,
            1946,
            9701,
            22507,
            33013,
            37465,
            33754,
            23538,
            13260,
            4725,
            1112,
            101,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            281,
            2803,
            12864,
            25358,
            34150,
            39505,
            36680,
            26262,
            17974,
            8717,
            2374,
            321,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            42,
            557,
            4414,
            13300,
            25004
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            71,
            1216,
            7325,
            19238,
            30655,
            33599,
            30114,
            21806,
            11367,
            3347,
            696,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            104,
            1304,
            10636,
            21654,
            32632,
            35169,
            31410,
            24149,
            16897,
            6948,
            1578,
            139,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            79,
            1490,
            9080,
            21746,
            31041,
            34376,
            31782,
            23277,
            13528,
            5588,
            1155,
            105,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            230,
            2130,
            9236,
            21691,
            30464,
            35307,
            31823,
            25096,
            17773,
            8854,
            2900,
            530,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            26,
            295,
            2904,
            10469,
            21298,
            31131,
            38884,
            39394,
            29729,
            21232,
            11399,
            3570,
            516,
            42,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            558,
            3652,
            11552,
            23529,
            33503,
            40471,
            36452,
            27753,
            20214,
            11876,
            5217,
            1985,
            525,
            78,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            143,
            1398,
            7113
          ]
        ]
      },
      "call": {
        "duration": 0.2712209970013646,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9bd25750>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9bd25750> = array([20, 13, 15, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9bd1a550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47949, 47413, 47164, 47086, 47470, 49073, ...], [47949, 47413, 47164, 47086, 47470, 49073, ...], [... 0, 0, ...], [0, 0, 0, 5, 182, 1946, ...], [1, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 26, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9bd25750>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9bd25750> = array([20, 13, 15, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016225559993472416,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29277767799794674,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689890660018136,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014554819972545374,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2948159250008757,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            14,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            195,
            45,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003500358001474524,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029017549968557432,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5387239800002135,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            157,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            150,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            78,
            255,
            112,
            255,
            128,
            0,
            0,
            150,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            72,
            2,
            255,
            22,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            110,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            142,
            255,
            220,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            184,
            255,
            153,
            255,
            255,
            3,
            0,
            62,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            67,
            255,
            144
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034534670012362767,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002915134999057045,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29593071799899917,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47706,
            47330,
            47276,
            47314,
            47228,
            47373,
            47322,
            47264,
            49285,
            47287,
            47257,
            47183,
            47727,
            47269,
            47350,
            47301,
            47214,
            47276,
            47283,
            47310,
            47294,
            47409,
            47357,
            47194,
            58411,
            47370,
            47336,
            47408,
            47423,
            47359,
            47468,
            47475,
            47420,
            47362,
            47435,
            47326,
            47388,
            47396,
            47453,
            47464,
            47508,
            49098,
            47617,
            47818,
            47311,
            46942,
            47066,
            47507,
            47490,
            47197,
            47128,
            47439,
            47354,
            47314,
            47432,
            47274,
            47316,
            47402,
            47415,
            47341,
            47349,
            47375,
            47352
          ],
          [
            47706,
            47330,
            47276,
            47314,
            47228,
            47373,
            47322,
            47264,
            49285,
            47287,
            47257,
            47183,
            47727,
            47269,
            47350,
            47301,
            47214,
            47276,
            47283,
            47310,
            47294,
            47409,
            47357,
            47194,
            58411,
            47370,
            47336,
            47408,
            47423,
            47359,
            47468,
            47475,
            47420,
            47362,
            47435,
            47326,
            47388,
            47396,
            47453,
            47464,
            47508,
            49098,
            47617,
            47818,
            47311,
            46942,
            47066,
            47507,
            47490,
            47197,
            47128,
            47439,
            47354,
            47314,
            47432,
            47274,
            47316,
            47402,
            47415,
            47341,
            47349,
            47375,
            47352
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            274,
            3621,
            17629,
            36800,
            36593,
            18968,
            4028,
            587,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            201,
            2540,
            15668,
            35367,
            40299,
            25016,
            8381,
            1119,
            45,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            840,
            7864,
            28633,
            41763,
            38471,
            19059,
            4558,
            318,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            243,
            2428,
            14126,
            31328,
            42684,
            38411,
            20666,
            5666,
            565,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13390037000135635,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016361760026484262,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06889695800055051,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47731,
            47351,
            47271,
            47060,
            47391,
            47287,
            47125,
            47280,
            47332,
            47160,
            47653,
            47170,
            47118,
            47348,
            47072,
            47151,
            47271,
            47141,
            47075,
            47111,
            47230,
            47091,
            47026,
            47470,
            47219,
            47234,
            47527,
            47124,
            49023,
            47431,
            47319,
            47455,
            47159,
            47018,
            47265,
            46956,
            47125,
            47241,
            47167,
            46785,
            47392,
            47284,
            47305,
            47250,
            47281,
            47119,
            47600,
            52777,
            47200,
            47202,
            47057,
            47078,
            47220,
            47367,
            47247,
            47176,
            47219,
            46772,
            47290,
            47254,
            47106,
            47172,
            47419
          ],
          [
            47731,
            47351,
            47271,
            47060,
            47391,
            47287,
            47125,
            47280,
            47332,
            47160,
            47653,
            47170,
            47118,
            47348,
            47072,
            47151,
            47271,
            47141,
            47075,
            47111,
            47230,
            47091,
            47026,
            47470,
            47219,
            47234,
            47527,
            47124,
            49023,
            47431,
            47319,
            47455,
            47159,
            47018,
            47265,
            46956,
            47125,
            47241,
            47167,
            46785,
            47392,
            47284,
            47305,
            47250,
            47281,
            47119,
            47600,
            52777,
            47200,
            47202,
            47057,
            47078,
            47220,
            47367,
            47247,
            47176,
            47219,
            46772,
            47290,
            47254,
            47106,
            47172,
            47419
          ],
          [
            47731,
            47351,
            47271,
            47060,
            47391,
            47287,
            47125,
            47280,
            47332,
            47160,
            47653,
            47170,
            47118,
            47348,
            47072,
            47151,
            47271,
            47141,
            47075,
            47111,
            47230,
            47091,
            47026,
            47470,
            47219,
            47234,
            47527,
            47124,
            49023,
            47431,
            47319,
            47455,
            47159,
            47018,
            47265,
            46956,
            47125,
            47241,
            47167,
            46785,
            47392,
            47284,
            47305,
            47250,
            47281,
            47119,
            47600,
            52777,
            47200,
            47202,
            47057,
            47078,
            47220,
            47367,
            47247,
            47176,
            47219,
            46772,
            47290,
            47254,
            47106,
            47172,
            47419
          ],
          [
            47731,
            47351,
            47271,
            47060,
            47391,
            47287,
            47125,
            47280,
            47332,
            47160,
            47653,
            47170,
            47118,
            47348,
            47072,
            47151,
            47271,
            47141,
            47075,
            47111,
            47230,
            47091,
            47026,
            47470,
            47219,
            47234,
            47527,
            47124,
            49023,
            47431,
            47319,
            47455,
            47159,
            47018,
            47265,
            46956,
            47125,
            47241,
            47167,
            46785,
            47392,
            47284,
            47305,
            47250,
            47281,
            47119,
            47600,
            52777,
            47200,
            47202,
            47057,
            47078,
            47220,
            47367,
            47247,
            47176,
            47219,
            46772,
            47290,
            47254,
            47106,
            47172,
            47419
          ],
          [
            47731,
            47351,
            47271,
            47060,
            47391,
            47287,
            47125,
            47280,
            47332,
            47160,
            47653,
            47170,
            47118,
            47348,
            47072,
            47151,
            47271,
            47141,
            47075,
            47111,
            47230,
            47091,
            47026,
            47470,
            47219,
            47234,
            47527,
            47124,
            49023,
            47431,
            47319,
            47455,
            47159,
            47018,
            47265,
            46956,
            47125,
            47241,
            47167,
            46785,
            47392,
            47284,
            47305,
            47250,
            47281,
            47119,
            47600,
            52777,
            47200,
            47202,
            47057,
            47078,
            47220,
            47367,
            47247,
            47176,
            47219,
            46772,
            47290,
            47254,
            47106,
            47172,
            47419
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            223,
            2002,
            10707,
            25138,
            37496,
            36778,
            22367,
            8320,
            1293,
            74,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            348,
            2770,
            12868,
            28284,
            38053,
            38079,
            29099,
            17870,
            5518,
            772,
            82,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            0,
            10,
            567,
            4562,
            13907,
            29525,
            39602,
            36098,
            19141,
            5686,
            806,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            205,
            1473,
            6938,
            18847,
            34450,
            43368,
            40631,
            27255,
            12402,
            2998,
            155,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            75,
            1583,
            7496,
            20388,
            35983,
            41561
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            705,
            4742,
            14422,
            28371,
            37725,
            31837,
            16357,
            3871,
            279,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            621,
            5268,
            17080,
            35757,
            41864,
            34915,
            21720,
            6230,
            1000,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            72,
            1188,
            6079,
            16801,
            30752,
            39319,
            32800,
            16876,
            4775,
            564,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            1796,
            6951,
            18878,
            34410,
            42613,
            36347,
            23239,
            7932,
            1514,
            103,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            171,
            1919,
            8729,
            19468,
            32285,
            41215,
            39982,
            26423,
            10498,
            1522,
            144,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            44,
            672,
            3245,
            10716,
            23354,
            35754,
            42473,
            38623,
            25935,
            9718,
            2656,
            419,
            32,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            187,
            1718,
            9252,
            19876,
            33825
          ]
        ]
      },
      "call": {
        "duration": 0.270729225998366,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014901639988238458,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2914074870022887,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168682458999683,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001448553000955144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3782611080023344,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            93,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003537648997735232,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029345760012802202,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5344495140016079,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            12,
            255,
            1,
            35,
            0,
            255,
            1,
            255,
            255
          ],
          [
            75,
            0,
            14,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            43,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            3,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            23,
            255,
            49,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            3,
            0,
            0,
            255,
            1,
            255,
            255
          ],
          [
            67,
            0,
            4,
            0,
            10,
            0,
            255,
            145,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            133,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            70,
            0,
            3,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            92,
            255,
            37,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034393069981888402,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029647560004377738,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960526110000501,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47998,
            47323,
            47533,
            46984,
            47250,
            47751,
            47480,
            47272,
            47519,
            47349,
            47397,
            47400,
            47451,
            47477,
            47476,
            47308,
            47401,
            47389,
            47412,
            47464,
            49181,
            47496,
            48012,
            47549,
            49578,
            47577,
            47489,
            47477,
            47380,
            47361,
            47425,
            47349,
            47349,
            47401,
            47235,
            47556,
            47312,
            47397,
            47195,
            47402,
            47514,
            47550,
            47438,
            47474,
            47496,
            47439,
            47201,
            47199,
            47485,
            47500,
            47465,
            47550,
            47448,
            47847,
            47163,
            47607,
            47445,
            47632,
            47410,
            47323,
            47523,
            47507,
            47496
          ],
          [
            47998,
            47323,
            47533,
            46984,
            47250,
            47751,
            47480,
            47272,
            47519,
            47349,
            47397,
            47400,
            47451,
            47477,
            47476,
            47308,
            47401,
            47389,
            47412,
            47464,
            49181,
            47496,
            48012,
            47549,
            49578,
            47577,
            47489,
            47477,
            47380,
            47361,
            47425,
            47349,
            47349,
            47401,
            47235,
            47556,
            47312,
            47397,
            47195,
            47402,
            47514,
            47550,
            47438,
            47474,
            47496,
            47439,
            47201,
            47199,
            47485,
            47500,
            47465,
            47550,
            47448,
            47847,
            47163,
            47607,
            47445,
            47632,
            47410,
            47323,
            47523,
            47507,
            47496
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            418,
            7020,
            24886,
            39925,
            33684,
            14943,
            2808,
            261,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            434,
            5959,
            22438,
            38153,
            38360,
            21213,
            5129,
            719,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            0,
            130,
            2207,
            14014,
            32780,
            41567,
            29071,
            9303,
            1490,
            78,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            572,
            6008,
            22065,
            38148,
            41382,
            30424,
            12362,
            1921,
            226,
            5,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            786,
            7673,
            25719,
            40178,
            43726
          ]
        ]
      },
      "call": {
        "duration": 0.13405748399964068,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016249560030701105,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06900373100143042,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47868,
            46884,
            47061,
            47152,
            47276,
            46986,
            47342,
            47094,
            47115,
            47207,
            47317,
            47284,
            49101,
            48685,
            47111,
            47197,
            47356,
            47107,
            47145,
            47215,
            46740,
            47293,
            47119,
            47231,
            47130,
            47230,
            47003,
            47132,
            47111,
            49101,
            48567,
            47521,
            46930,
            47099,
            47184,
            47129,
            47236,
            47301,
            47133,
            47413,
            47039,
            47263,
            47111,
            47142,
            47150,
            47304,
            47365,
            47352,
            48765,
            47137,
            46691,
            47236,
            47107,
            47264,
            47222,
            47265,
            47183,
            47085,
            46988,
            47226,
            47028,
            47336,
            47206
          ],
          [
            47868,
            46884,
            47061,
            47152,
            47276,
            46986,
            47342,
            47094,
            47115,
            47207,
            47317,
            47284,
            49101,
            48685,
            47111,
            47197,
            47356,
            47107,
            47145,
            47215,
            46740,
            47293,
            47119,
            47231,
            47130,
            47230,
            47003,
            47132,
            47111,
            49101,
            48567,
            47521,
            46930,
            47099,
            47184,
            47129,
            47236,
            47301,
            47133,
            47413,
            47039,
            47263,
            47111,
            47142,
            47150,
            47304,
            47365,
            47352,
            48765,
            47137,
            46691,
            47236,
            47107,
            47264,
            47222,
            47265,
            47183,
            47085,
            46988,
            47226,
            47028,
            47336,
            47206
          ],
          [
            47868,
            46884,
            47061,
            47152,
            47276,
            46986,
            47342,
            47094,
            47115,
            47207,
            47317,
            47284,
            49101,
            48685,
            47111,
            47197,
            47356,
            47107,
            47145,
            47215,
            46740,
            47293,
            47119,
            47231,
            47130,
            47230,
            47003,
            47132,
            47111,
            49101,
            48567,
            47521,
            46930,
            47099,
            47184,
            47129,
            47236,
            47301,
            47133,
            47413,
            47039,
            47263,
            47111,
            47142,
            47150,
            47304,
            47365,
            47352,
            48765,
            47137,
            46691,
            47236,
            47107,
            47264,
            47222,
            47265,
            47183,
            47085,
            46988,
            47226,
            47028,
            47336,
            47206
          ],
          [
            47868,
            46884,
            47061,
            47152,
            47276,
            46986,
            47342,
            47094,
            47115,
            47207,
            47317,
            47284,
            49101,
            48685,
            47111,
            47197,
            47356,
            47107,
            47145,
            47215,
            46740,
            47293,
            47119,
            47231,
            47130,
            47230,
            47003,
            47132,
            47111,
            49101,
            48567,
            47521,
            46930,
            47099,
            47184,
            47129,
            47236,
            47301,
            47133,
            47413,
            47039,
            47263,
            47111,
            47142,
            47150,
            47304,
            47365,
            47352,
            48765,
            47137,
            46691,
            47236,
            47107,
            47264,
            47222,
            47265,
            47183,
            47085,
            46988,
            47226,
            47028,
            47336,
            47206
          ],
          [
            47868,
            46884,
            47061,
            47152,
            47276,
            46986,
            47342,
            47094,
            47115,
            47207,
            47317,
            47284,
            49101,
            48685,
            47111,
            47197,
            47356,
            47107,
            47145,
            47215,
            46740,
            47293,
            47119,
            47231,
            47130,
            47230,
            47003,
            47132,
            47111,
            49101,
            48567,
            47521,
            46930,
            47099,
            47184,
            47129,
            47236,
            47301,
            47133,
            47413,
            47039,
            47263,
            47111,
            47142,
            47150,
            47304,
            47365,
            47352,
            48765,
            47137,
            46691,
            47236,
            47107,
            47264,
            47222,
            47265,
            47183,
            47085,
            46988,
            47226,
            47028,
            47336,
            47206
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            73,
            717,
            5471,
            17650,
            30496,
            35984,
            32671,
            24594,
            15024,
            4171,
            509,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            189,
            1502,
            8430,
            21843,
            35857,
            41772,
            33475,
            18865,
            5940,
            855,
            88,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            162,
            1261,
            4580,
            11008,
            22892,
            35828,
            41620,
            36237,
            22291,
            8249,
            1555,
            124,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            58,
            1007,
            5803,
            15732,
            29125,
            40809,
            39948,
            28682,
            11906,
            2295,
            148,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            11192,
            2693,
            224,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            107,
            1450,
            7703,
            18659,
            32525,
            38594,
            30435,
            15104,
            4614,
            704,
            41,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            159,
            1458,
            8322,
            18270,
            29052,
            38623,
            34088,
            20891,
            7416,
            1306,
            90,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            78,
            1014,
            4809,
            13641,
            26102,
            39764,
            42233,
            34409,
            20937,
            7541,
            1488,
            143,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            81,
            1077,
            6338,
            17430,
            28619,
            38244,
            34823,
            22420,
            8011,
            1755,
            153,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            264,
            2069,
            6589,
            15956,
            25712,
            36081,
            40617,
            34982,
            21214,
            9305,
            2222,
            374,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            309,
            3205,
            10248,
            20534,
            32092,
            40546,
            42857,
            36883,
            23735,
            9209,
            1997,
            210,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27082372699806,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014861729978292715,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.291476849000901,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170147001001169,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045848, 10011462), (411008, 411008), (40048577, 10012145))\nassert ((40045848 > 0 and 10011462 == 0\n  +10011462\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9bd1a370>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff9bb6a070>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9be33460>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045848, 10011462), (411008, 411008), (40048577, 10012145))\nE       assert ((40045848 > 0 and 10011462 == 0\nE         +10011462\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005011942001146963,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}