{
  "created": 1722034472.609505,
  "duration": 23.56940770149231,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5065332009980921,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1487781530013308,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013785010014544241,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038433560002886225,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14864758900148445,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00129587899937178,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13213477099998272,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12169789699692046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013021489976381417,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038486060002469458,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120288599908235,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013165789969207253,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033888750003825407,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.146593744000711,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012425979984982405,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003389506000530673,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12008338200030266,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012098070001229644,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033808049993240274,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464425400008622,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012304779993428383,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033947260017157532,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12035014800130739,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012036570005875546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004456059999938589,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021000170017941855,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011476159997982904,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003389596000488382,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017422889977751765,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011529850016813725,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033375140010321047,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004047091002576053,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034454.8938391,
            "msecs": 893.8391208648682,
            "relativeCreated": 7830.339670181274,
            "thread": 281473687478304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5684
          }
        ]
      },
      "teardown": {
        "duration": 0.0012780289980582893,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033941859983315226,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002422583998850314,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034454.9067256,
            "msecs": 906.7256450653076,
            "relativeCreated": 7843.226194381714,
            "thread": 281473687478304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5684
          }
        ]
      },
      "teardown": {
        "duration": 0.0012090870004612952,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002118226999300532,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027104700020572636,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034454.916778,
            "msecs": 916.7780876159668,
            "relativeCreated": 7853.278636932373,
            "thread": 281473687478304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5684
          }
        ]
      },
      "teardown": {
        "duration": 0.0010608539996610489,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021014269987063017,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034561969987407792,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034454.926774,
            "msecs": 926.7740249633789,
            "relativeCreated": 7863.274574279785,
            "thread": 281473687478304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5684
          }
        ]
      },
      "teardown": {
        "duration": 0.0011039350029022899,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033778350007196423,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1466713849986263,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012413069998729043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034249669988639653,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12032692700086045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012100170024496038,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17936461499994039,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1476065059978282,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012822289972973522,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01526302099955501,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12134292900009314,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013205989998823497,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8370324919997074,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            6,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            98,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            38,
            172,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003563000002031913,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029457660020852927,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8969539390018326,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            27,
            0,
            1,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            15,
            255,
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            24
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            71,
            255,
            255,
            255,
            5
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            34,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            47,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            177,
            255,
            255,
            255,
            255,
            0,
            0,
            208,
            0,
            147,
            255
          ],
          [
            255,
            0,
            111,
            0,
            255,
            0,
            255,
            94,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          3,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003508428002533037,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002977056999952765,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30250956500094617,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48529,
            47636,
            47613,
            47665,
            47593,
            47664,
            47696,
            47512,
            47676,
            47565,
            47565,
            47547,
            47757,
            47493,
            47546,
            47706,
            47694,
            47741,
            47746,
            47713,
            47965,
            47581,
            48034,
            47651,
            50514,
            47599,
            47533,
            47662,
            47638,
            47736,
            47584,
            47597,
            47568,
            47796,
            47587,
            47794,
            47477,
            47433,
            47671,
            47658,
            47582,
            47715,
            47831,
            47697,
            47495,
            47554,
            47711,
            47617,
            47772,
            47583,
            47558,
            49324,
            47707,
            47912,
            47727,
            49622,
            47585,
            47615,
            47632,
            47600,
            47759,
            47257,
            47232
          ],
          [
            48529,
            47636,
            47613,
            47665,
            47593,
            47664,
            47696,
            47512,
            47676,
            47565,
            47565,
            47547,
            47757,
            47493,
            47546,
            47706,
            47694,
            47741,
            47746,
            47713,
            47965,
            47581,
            48034,
            47651,
            50514,
            47599,
            47533,
            47662,
            47638,
            47736,
            47584,
            47597,
            47568,
            47796,
            47587,
            47794,
            47477,
            47433,
            47671,
            47658,
            47582,
            47715,
            47831,
            47697,
            47495,
            47554,
            47711,
            47617,
            47772,
            47583,
            47558,
            49324,
            47707,
            47912,
            47727,
            49622,
            47585,
            47615,
            47632,
            47600,
            47759,
            47257,
            47232
          ]
        ],
        "eTX_errcounts": [
          [
            40542,
            27033,
            8487,
            1319,
            100,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            163,
            2862,
            15617,
            34392,
            42308,
            31524,
            14507,
            2410,
            185,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            813,
            7343,
            25581,
            40380,
            39609,
            20721,
            5834,
            742,
            49,
            0,
            0,
            0
          ],
          [
            4,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            341,
            3784,
            17457,
            36018,
            42805,
            32129,
            14906,
            3164,
            340,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            332,
            4239,
            18079,
            35850,
            42780,
            35494,
            18045,
            3358,
            427,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1341935669988743,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016584069999225903,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06920329599961406,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48041,
            47514,
            47457,
            47448,
            47353,
            47476,
            47492,
            47614,
            47697,
            49662,
            47292,
            47388,
            47226,
            47325,
            47349,
            47436,
            47291,
            47046,
            47265,
            47447,
            47211,
            47284,
            47197,
            47405,
            47375,
            47302,
            47467,
            47448,
            47699,
            47241,
            46917,
            47294,
            47344,
            47262,
            47149,
            47385,
            47289,
            47357,
            47231,
            47219,
            47349,
            47133,
            47134,
            47387,
            47305,
            47467,
            47375,
            47399,
            47736,
            47434,
            47348,
            47233,
            47519,
            47263,
            47330,
            47293,
            47211,
            47288,
            47338,
            47028,
            47256,
            47489,
            47479
          ],
          [
            48041,
            47514,
            47457,
            47448,
            47353,
            47476,
            47492,
            47614,
            47697,
            49662,
            47292,
            47388,
            47226,
            47325,
            47349,
            47436,
            47291,
            47046,
            47265,
            47447,
            47211,
            47284,
            47197,
            47405,
            47375,
            47302,
            47467,
            47448,
            47699,
            47241,
            46917,
            47294,
            47344,
            47262,
            47149,
            47385,
            47289,
            47357,
            47231,
            47219,
            47349,
            47133,
            47134,
            47387,
            47305,
            47467,
            47375,
            47399,
            47736,
            47434,
            47348,
            47233,
            47519,
            47263,
            47330,
            47293,
            47211,
            47288,
            47338,
            47028,
            47256,
            47489,
            47479
          ],
          [
            48041,
            47514,
            47457,
            47448,
            47353,
            47476,
            47492,
            47614,
            47697,
            49662,
            47292,
            47388,
            47226,
            47325,
            47349,
            47436,
            47291,
            47046,
            47265,
            47447,
            47211,
            47284,
            47197,
            47405,
            47375,
            47302,
            47467,
            47448,
            47699,
            47241,
            46917,
            47294,
            47344,
            47262,
            47149,
            47385,
            47289,
            47357,
            47231,
            47219,
            47349,
            47133,
            47134,
            47387,
            47305,
            47467,
            47375,
            47399,
            47736,
            47434,
            47348,
            47233,
            47519,
            47263,
            47330,
            47293,
            47211,
            47288,
            47338,
            47028,
            47256,
            47489,
            47479
          ],
          [
            48041,
            47514,
            47457,
            47448,
            47353,
            47476,
            47492,
            47614,
            47697,
            49662,
            47292,
            47388,
            47226,
            47325,
            47349,
            47436,
            47291,
            47046,
            47265,
            47447,
            47211,
            47284,
            47197,
            47405,
            47375,
            47302,
            47467,
            47448,
            47699,
            47241,
            46917,
            47294,
            47344,
            47262,
            47149,
            47385,
            47289,
            47357,
            47231,
            47219,
            47349,
            47133,
            47134,
            47387,
            47305,
            47467,
            47375,
            47399,
            47736,
            47434,
            47348,
            47233,
            47519,
            47263,
            47330,
            47293,
            47211,
            47288,
            47338,
            47028,
            47256,
            47489,
            47479
          ],
          [
            48041,
            47514,
            47457,
            47448,
            47353,
            47476,
            47492,
            47614,
            47697,
            49662,
            47292,
            47388,
            47226,
            47325,
            47349,
            47436,
            47291,
            47046,
            47265,
            47447,
            47211,
            47284,
            47197,
            47405,
            47375,
            47302,
            47467,
            47448,
            47699,
            47241,
            46917,
            47294,
            47344,
            47262,
            47149,
            47385,
            47289,
            47357,
            47231,
            47219,
            47349,
            47133,
            47134,
            47387,
            47305,
            47467,
            47375,
            47399,
            47736,
            47434,
            47348,
            47233,
            47519,
            47263,
            47330,
            47293,
            47211,
            47288,
            47338,
            47028,
            47256,
            47489,
            47479
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            133,
            1129,
            4697,
            12792,
            23508,
            31016,
            31833,
            28683,
            22761,
            13045,
            3877,
            491,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            40,
            729,
            4155,
            12672,
            25325,
            32086,
            32205,
            27419,
            22632,
            16248,
            10251,
            4114,
            704,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            7,
            98,
            764,
            3106,
            10428,
            20534,
            30902,
            39174,
            34425,
            26155,
            15580,
            5860,
            1085,
            89,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            388,
            3647,
            12336,
            24417,
            32893,
            38055,
            38225,
            31437,
            21185,
            10669,
            3752,
            537,
            58,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            207,
            1563,
            6153,
            15373,
            26759
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            51,
            865,
            5138,
            16543,
            26992,
            31503,
            32330,
            25673,
            15875,
            5860,
            1329,
            82,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            186,
            1656,
            8351,
            17098,
            28056,
            33647,
            31687,
            24889,
            16617,
            8922,
            2969,
            375,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            209,
            1826,
            8580,
            19262,
            29524,
            34451,
            34590,
            28436,
            19369,
            9701,
            2178,
            199,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            499,
            2950,
            9785,
            20091,
            28777,
            34251,
            31305,
            26884,
            20428,
            12294,
            5011,
            972,
            56,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            80,
            679,
            3760,
            10471,
            21311,
            30248,
            37812,
            39171,
            31602,
            21791,
            11113,
            4123,
            870,
            33,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            72,
            832,
            4415,
            10792,
            22375,
            32378,
            38666,
            38830,
            33876,
            26896,
            18245,
            7995,
            1594,
            114,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            330,
            1911,
            7774
          ]
        ]
      },
      "call": {
        "duration": 0.2715127829978883,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9e664570>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9e664570> = array([21, 13, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9e63d340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48041, 47514, 47457, 47448, 47353, 47476, ...], [48041, 47514, 47457, 47448, 47353, 47476, ...], [...0, 0, ...], [0, 0, 7, 98, 764, 3106, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 80, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9e664570>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9e664570> = array([21, 13, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001647397002670914,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29288000999804353,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1695664289982233,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00145614199936972,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2970636650024971,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            26,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            42,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            38,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035125079994031694,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029105749999871477,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5397079719987232,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            156,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            179,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            112,
            255,
            202,
            255,
            203,
            0,
            0,
            214,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            227,
            0,
            90,
            3,
            255,
            23,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            91,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            2,
            255,
            102,
            255,
            147,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            241,
            255,
            193,
            255,
            255,
            5,
            0,
            75,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            70,
            255,
            132
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034815780018107034,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002924436001194408,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29568963299971074,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48474,
            47702,
            47386,
            47828,
            47502,
            47638,
            47511,
            47592,
            47658,
            47637,
            47542,
            47625,
            47715,
            47971,
            47442,
            47348,
            47752,
            47675,
            47717,
            48059,
            47570,
            48032,
            47606,
            47389,
            47472,
            47589,
            47393,
            47550,
            47742,
            47594,
            47813,
            47641,
            47710,
            47446,
            47650,
            47474,
            47544,
            47499,
            47553,
            47562,
            47574,
            47609,
            47635,
            47762,
            47685,
            47746,
            47824,
            47674,
            47609,
            47723,
            49132,
            47494,
            48080,
            47484,
            49155,
            47594,
            47554,
            47572,
            47445,
            47438,
            47180,
            47336,
            47331
          ],
          [
            48474,
            47702,
            47386,
            47828,
            47502,
            47638,
            47511,
            47592,
            47658,
            47637,
            47542,
            47625,
            47715,
            47971,
            47442,
            47348,
            47752,
            47675,
            47717,
            48059,
            47570,
            48032,
            47606,
            47389,
            47472,
            47589,
            47393,
            47550,
            47742,
            47594,
            47813,
            47641,
            47710,
            47446,
            47650,
            47474,
            47544,
            47499,
            47553,
            47562,
            47574,
            47609,
            47635,
            47762,
            47685,
            47746,
            47824,
            47674,
            47609,
            47723,
            49132,
            47494,
            48080,
            47484,
            49155,
            47594,
            47554,
            47572,
            47445,
            47438,
            47180,
            47336,
            47331
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            189,
            3318,
            17597,
            36174,
            36946,
            19035,
            4327,
            348,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            127,
            2399,
            16416,
            34862,
            39655,
            25919,
            9037,
            1257,
            123,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            918,
            8708,
            28794,
            41925,
            39092,
            19233,
            4603,
            598,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            105,
            2471,
            13498,
            31238,
            42224,
            38937,
            20347,
            5507,
            571,
            73,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13397420199908083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016350669975508936,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06874362499729614,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48667,
            47820,
            47736,
            47390,
            47323,
            47169,
            47228,
            47385,
            47472,
            47311,
            47220,
            47308,
            47352,
            47486,
            47452,
            47334,
            47399,
            47463,
            47572,
            47311,
            49214,
            49001,
            46912,
            47485,
            47424,
            47374,
            47534,
            47208,
            47618,
            47607,
            46995,
            47190,
            47410,
            47550,
            47289,
            47245,
            47412,
            47381,
            47514,
            47770,
            47176,
            47357,
            47297,
            47432,
            47365,
            47334,
            47510,
            47319,
            47558,
            47376,
            47442,
            47411,
            47381,
            47585,
            47637,
            47420,
            47075,
            47488,
            47698,
            49584,
            47369,
            47313,
            47445
          ],
          [
            48667,
            47820,
            47736,
            47390,
            47323,
            47169,
            47228,
            47385,
            47472,
            47311,
            47220,
            47308,
            47352,
            47486,
            47452,
            47334,
            47399,
            47463,
            47572,
            47311,
            49214,
            49001,
            46912,
            47485,
            47424,
            47374,
            47534,
            47208,
            47618,
            47607,
            46995,
            47190,
            47410,
            47550,
            47289,
            47245,
            47412,
            47381,
            47514,
            47770,
            47176,
            47357,
            47297,
            47432,
            47365,
            47334,
            47510,
            47319,
            47558,
            47376,
            47442,
            47411,
            47381,
            47585,
            47637,
            47420,
            47075,
            47488,
            47698,
            49584,
            47369,
            47313,
            47445
          ],
          [
            48667,
            47820,
            47736,
            47390,
            47323,
            47169,
            47228,
            47385,
            47472,
            47311,
            47220,
            47308,
            47352,
            47486,
            47452,
            47334,
            47399,
            47463,
            47572,
            47311,
            49214,
            49001,
            46912,
            47485,
            47424,
            47374,
            47534,
            47208,
            47618,
            47607,
            46995,
            47190,
            47410,
            47550,
            47289,
            47245,
            47412,
            47381,
            47514,
            47770,
            47176,
            47357,
            47297,
            47432,
            47365,
            47334,
            47510,
            47319,
            47558,
            47376,
            47442,
            47411,
            47381,
            47585,
            47637,
            47420,
            47075,
            47488,
            47698,
            49584,
            47369,
            47313,
            47445
          ],
          [
            48667,
            47820,
            47736,
            47390,
            47323,
            47169,
            47228,
            47385,
            47472,
            47311,
            47220,
            47308,
            47352,
            47486,
            47452,
            47334,
            47399,
            47463,
            47572,
            47311,
            49214,
            49001,
            46912,
            47485,
            47424,
            47374,
            47534,
            47208,
            47618,
            47607,
            46995,
            47190,
            47410,
            47550,
            47289,
            47245,
            47412,
            47381,
            47514,
            47770,
            47176,
            47357,
            47297,
            47432,
            47365,
            47334,
            47510,
            47319,
            47558,
            47376,
            47442,
            47411,
            47381,
            47585,
            47637,
            47420,
            47075,
            47488,
            47698,
            49584,
            47369,
            47313,
            47445
          ],
          [
            48667,
            47820,
            47736,
            47390,
            47323,
            47169,
            47228,
            47385,
            47472,
            47311,
            47220,
            47308,
            47352,
            47486,
            47452,
            47334,
            47399,
            47463,
            47572,
            47311,
            49214,
            49001,
            46912,
            47485,
            47424,
            47374,
            47534,
            47208,
            47618,
            47607,
            46995,
            47190,
            47410,
            47550,
            47289,
            47245,
            47412,
            47381,
            47514,
            47770,
            47176,
            47357,
            47297,
            47432,
            47365,
            47334,
            47510,
            47319,
            47558,
            47376,
            47442,
            47411,
            47381,
            47585,
            47637,
            47420,
            47075,
            47488,
            47698,
            49584,
            47369,
            47313,
            47445
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            383,
            2437,
            11397,
            26228,
            37260,
            36646,
            26040,
            12698,
            2868,
            293,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            511,
            2965,
            11531,
            28411,
            38616,
            39020,
            29326,
            16426,
            5152,
            1015,
            83,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            0,
            0,
            16,
            554,
            3987,
            15404,
            31927,
            40045,
            35073,
            19449,
            6748,
            867,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            67,
            929,
            7350,
            22845,
            39031,
            43863,
            39176,
            26261,
            11945,
            2764,
            227,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            110,
            1283,
            8593,
            21698,
            35474,
            39746
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            447,
            3573,
            13774,
            27523,
            33939,
            28223,
            14810,
            4043,
            454,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            832,
            6719,
            19205,
            34674,
            40054,
            32721,
            18062,
            5633,
            702,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            57,
            838,
            5506,
            17745,
            32802,
            38071,
            31701,
            17219,
            5566,
            748,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            196,
            1720,
            9102,
            22440,
            36249,
            40929,
            34902,
            21999,
            8159,
            1542,
            76,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            10,
            92,
            1409,
            8276,
            20865,
            34553,
            40553,
            37288,
            25843,
            12803,
            2946,
            448,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            17,
            360,
            2541,
            11416,
            26411,
            38505,
            43615,
            38086,
            27113,
            12405,
            3903,
            906,
            122,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            41,
            883,
            6085,
            17390,
            32131
          ]
        ]
      },
      "call": {
        "duration": 0.2703718270022364,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015389139989565592,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2914118379994761,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1692275400018843,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014954729995224625,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3571289659994363,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            96,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.00350206900111516,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00801341899932595,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5368776190007338,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            6,
            255,
            11,
            255,
            0,
            21,
            0,
            255,
            0,
            255,
            255
          ],
          [
            76,
            0,
            10,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            39,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            221,
            255,
            0,
            21,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            16,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            34,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            1,
            255,
            2,
            255,
            1,
            1,
            0,
            255,
            0,
            255,
            255
          ],
          [
            71,
            0,
            6,
            0,
            9,
            0,
            255,
            145,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            131,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            8,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            90,
            0,
            2,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            106,
            255,
            99,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034804079987225123,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029273749969433993,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29610301299908315,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48230,
            47816,
            47640,
            47705,
            47666,
            47645,
            47468,
            47592,
            47626,
            47434,
            47664,
            47988,
            47652,
            47593,
            47452,
            47649,
            47687,
            47443,
            47549,
            47589,
            47525,
            47654,
            47773,
            47478,
            47502,
            47679,
            47594,
            47217,
            47455,
            47356,
            47273,
            47714,
            47879,
            47688,
            47712,
            47642,
            47719,
            47572,
            47679,
            47475,
            47696,
            47608,
            47593,
            47766,
            47900,
            47537,
            47922,
            47563,
            47464,
            47542,
            47583,
            47621,
            47762,
            47698,
            47456,
            47550,
            47567,
            47375,
            47613,
            47497,
            47438,
            47655,
            47458
          ],
          [
            48230,
            47816,
            47640,
            47705,
            47666,
            47645,
            47468,
            47592,
            47626,
            47434,
            47664,
            47988,
            47652,
            47593,
            47452,
            47649,
            47687,
            47443,
            47549,
            47589,
            47525,
            47654,
            47773,
            47478,
            47502,
            47679,
            47594,
            47217,
            47455,
            47356,
            47273,
            47714,
            47879,
            47688,
            47712,
            47642,
            47719,
            47572,
            47679,
            47475,
            47696,
            47608,
            47593,
            47766,
            47900,
            47537,
            47922,
            47563,
            47464,
            47542,
            47583,
            47621,
            47762,
            47698,
            47456,
            47550,
            47567,
            47375,
            47613,
            47497,
            47438,
            47655,
            47458
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            750,
            6861,
            24615,
            38725,
            34081,
            15056,
            3001,
            227,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            521,
            6049,
            21800,
            38274,
            38104,
            21924,
            5442,
            675,
            25,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            0,
            102,
            1962,
            13355,
            32162,
            41437,
            29449,
            10161,
            1892,
            124,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            28,
            534,
            5169,
            21180,
            38299,
            42357,
            31011,
            13000,
            2215,
            258,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            749,
            7552,
            24815,
            40545,
            43969
          ]
        ]
      },
      "call": {
        "duration": 0.1338550389991724,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016198860030272044,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06902017100219382,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48079,
            47424,
            47256,
            47311,
            47238,
            47292,
            47555,
            47200,
            47361,
            47428,
            47464,
            47273,
            47348,
            47159,
            47466,
            47491,
            47245,
            47292,
            47777,
            47387,
            47269,
            47236,
            47365,
            47315,
            47337,
            47275,
            46884,
            47259,
            47340,
            47284,
            47369,
            47116,
            47339,
            47343,
            47427,
            47506,
            47358,
            47387,
            43779,
            48904,
            47278,
            47246,
            47386,
            47253,
            46943,
            47183,
            47362,
            47399,
            47298,
            47453,
            47354,
            47314,
            47255,
            47388,
            47678,
            47359,
            47308,
            47232,
            48924,
            47370,
            47350,
            47382,
            47077
          ],
          [
            48079,
            47424,
            47256,
            47311,
            47238,
            47292,
            47555,
            47200,
            47361,
            47428,
            47464,
            47273,
            47348,
            47159,
            47466,
            47491,
            47245,
            47292,
            47777,
            47387,
            47269,
            47236,
            47365,
            47315,
            47337,
            47275,
            46884,
            47259,
            47340,
            47284,
            47369,
            47116,
            47339,
            47343,
            47427,
            47506,
            47358,
            47387,
            43779,
            48904,
            47278,
            47246,
            47386,
            47253,
            46943,
            47183,
            47362,
            47399,
            47298,
            47453,
            47354,
            47314,
            47255,
            47388,
            47678,
            47359,
            47308,
            47232,
            48924,
            47370,
            47350,
            47382,
            47077
          ],
          [
            48079,
            47424,
            47256,
            47311,
            47238,
            47292,
            47555,
            47200,
            47361,
            47428,
            47464,
            47273,
            47348,
            47159,
            47466,
            47491,
            47245,
            47292,
            47777,
            47387,
            47269,
            47236,
            47365,
            47315,
            47337,
            47275,
            46884,
            47259,
            47340,
            47284,
            47369,
            47116,
            47339,
            47343,
            47427,
            47506,
            47358,
            47387,
            43779,
            48904,
            47278,
            47246,
            47386,
            47253,
            46943,
            47183,
            47362,
            47399,
            47298,
            47453,
            47354,
            47314,
            47255,
            47388,
            47678,
            47359,
            47308,
            47232,
            48924,
            47370,
            47350,
            47382,
            47077
          ],
          [
            48079,
            47424,
            47256,
            47311,
            47238,
            47292,
            47555,
            47200,
            47361,
            47428,
            47464,
            47273,
            47348,
            47159,
            47466,
            47491,
            47245,
            47292,
            47777,
            47387,
            47269,
            47236,
            47365,
            47315,
            47337,
            47275,
            46884,
            47259,
            47340,
            47284,
            47369,
            47116,
            47339,
            47343,
            47427,
            47506,
            47358,
            47387,
            43779,
            48904,
            47278,
            47246,
            47386,
            47253,
            46943,
            47183,
            47362,
            47399,
            47298,
            47453,
            47354,
            47314,
            47255,
            47388,
            47678,
            47359,
            47308,
            47232,
            48924,
            47370,
            47350,
            47382,
            47077
          ],
          [
            48079,
            47424,
            47256,
            47311,
            47238,
            47292,
            47555,
            47200,
            47361,
            47428,
            47464,
            47273,
            47348,
            47159,
            47466,
            47491,
            47245,
            47292,
            47777,
            47387,
            47269,
            47236,
            47365,
            47315,
            47337,
            47275,
            46884,
            47259,
            47340,
            47284,
            47369,
            47116,
            47339,
            47343,
            47427,
            47506,
            47358,
            47387,
            43779,
            48904,
            47278,
            47246,
            47386,
            47253,
            46943,
            47183,
            47362,
            47399,
            47298,
            47453,
            47354,
            47314,
            47255,
            47388,
            47678,
            47359,
            47308,
            47232,
            48924,
            47370,
            47350,
            47382,
            47077
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            92,
            881,
            5371,
            16904,
            31494,
            38203,
            35051,
            25308,
            13143,
            4256,
            685,
            82,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            21,
            369,
            2480,
            10905,
            24345,
            37153,
            38984,
            32299,
            20146,
            7379,
            1724,
            153,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            17,
            300,
            2361,
            11390,
            26698,
            38561,
            41319,
            34917,
            22456,
            9443,
            2434,
            227,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            58,
            970,
            4948,
            16886,
            30330,
            39031,
            35579,
            25513,
            11198,
            2351,
            310,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            11666,
            2947,
            249,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            121,
            1698,
            8924,
            21497,
            34518,
            37351,
            28806,
            15169,
            4433,
            636,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            339,
            4635,
            15161,
            28425,
            38631,
            34463,
            22692,
            9327,
            1820,
            116,
            10,
            0,
            0,
            0,
            0
          ],
          [
            36,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            539,
            4908,
            16098,
            28819,
            39818,
            40863,
            32543,
            21021,
            7815,
            1414,
            53,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            256,
            2642,
            12815,
            25975,
            38029,
            35258,
            23696,
            10643,
            2943,
            208,
            5,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            732,
            4050,
            14583,
            27856,
            39307,
            41992,
            35177,
            23715,
            12146,
            3653,
            991,
            96,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            131,
            1387,
            6800,
            18761,
            31999,
            40359,
            40022,
            31316,
            20063,
            8909,
            2693,
            352,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.26967869299915037,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001526074000139488,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918897490017116,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703966970017063,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045954, 10011489), (411600, 411600), (40054180, 10013545))\nassert ((40045954 > 0 and 10011489 == 0\n  +10011489\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9e63d1c0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff9e48a100>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9e7434f0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045954, 10011489), (411600, 411600), (40054180, 10013545))\nE       assert ((40045954 > 0 and 10011489 == 0\nE         +10011489\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004969970999809448,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}