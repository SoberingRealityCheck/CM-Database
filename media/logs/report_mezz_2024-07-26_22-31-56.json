{
  "created": 1722033136.1433988,
  "duration": 23.272263765335083,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5051934129987785,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14842307999788318,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001345680000667926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003829916000540834,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14777269600017462,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012806390004698187,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13184288200136507,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12164022399883834,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012955189995409455,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003811765000136802,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12097888999778661,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012700789993687067,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033315439977741335,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1464315160010301,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012243570017744787,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033327150013064966,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11980934400344267,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012030569996568374,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003341624000313459,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14608383900122135,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001166395999462111,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00334204399769078,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12021390299923951,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011722769995685667,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004399927001941251,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00208516600105213,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011270949980826117,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033052329999918584,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016949780001596082,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001140535001468379,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003309283001726726,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004047090002131881,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033118.6779015,
            "msecs": 677.9015064239502,
            "relativeCreated": 7787.1434688568115,
            "thread": 281473731432480,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5046
          }
        ]
      },
      "teardown": {
        "duration": 0.0012592480015882757,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033383539994247258,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024181740009225905,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033118.6901655,
            "msecs": 690.1655197143555,
            "relativeCreated": 7799.407482147217,
            "thread": 281473731432480,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5046
          }
        ]
      },
      "teardown": {
        "duration": 0.001150375999714015,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002040825002040947,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00271458100178279,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033118.699641,
            "msecs": 699.6409893035889,
            "relativeCreated": 7808.88295173645,
            "thread": 281473731432480,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5046
          }
        ]
      },
      "teardown": {
        "duration": 0.0010868639983527828,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020732859993586317,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003447857001447119,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033118.7090652,
            "msecs": 709.0651988983154,
            "relativeCreated": 7818.307161331177,
            "thread": 281473731432480,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5046
          }
        ]
      },
      "teardown": {
        "duration": 0.0010709640009736177,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033307039993815124,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14617489100055536,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001178935999632813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003322453998407582,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12003299900243292,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011825059991679154,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1812359200011997,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14746275899960892,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001243948001501849,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01514898700042977,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12103616100284853,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012997189987800084,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8454333449990372,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            16,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            107,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            26,
            164,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035862500008079223,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029231749977043364,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8994222799992713,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            8,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            1,
            0,
            28,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            18
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            94,
            255,
            255,
            255,
            9
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            19,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            40,
            0,
            0,
            0,
            0
          ],
          [
            0,
            19,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            216,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            161,
            255,
            255,
            255,
            255,
            0,
            0,
            217,
            1,
            163,
            255
          ],
          [
            255,
            0,
            141,
            0,
            255,
            0,
            255,
            118,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003496727000310784,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002937904999271268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30274432199803414,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47922,
            47320,
            47245,
            47442,
            47157,
            47235,
            47342,
            47321,
            47207,
            47229,
            47336,
            47406,
            47291,
            47452,
            47300,
            47429,
            47299,
            47328,
            47075,
            47146,
            47342,
            47410,
            47291,
            46410,
            47298,
            49689,
            47387,
            47367,
            47391,
            47289,
            47239,
            47225,
            47305,
            47318,
            47265,
            47217,
            47372,
            47417,
            47415,
            47017,
            47215,
            47296,
            47487,
            47266,
            47281,
            47422,
            47406,
            47383,
            47461,
            47409,
            47946,
            47421,
            48865,
            47216,
            47738,
            48372,
            49430,
            48247,
            47144,
            47203,
            47172,
            47438,
            47237
          ],
          [
            47922,
            47320,
            47245,
            47442,
            47157,
            47235,
            47342,
            47321,
            47207,
            47229,
            47336,
            47406,
            47291,
            47452,
            47300,
            47429,
            47299,
            47328,
            47075,
            47146,
            47342,
            47410,
            47291,
            46410,
            47298,
            49689,
            47387,
            47367,
            47391,
            47289,
            47239,
            47225,
            47305,
            47318,
            47265,
            47217,
            47372,
            47417,
            47415,
            47017,
            47215,
            47296,
            47487,
            47266,
            47281,
            47422,
            47406,
            47383,
            47461,
            47409,
            47946,
            47421,
            48865,
            47216,
            47738,
            48372,
            49430,
            48247,
            47144,
            47203,
            47172,
            47438,
            47237
          ]
        ],
        "eTX_errcounts": [
          [
            40511,
            26334,
            8100,
            1154,
            107,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            243,
            3328,
            17848,
            35439,
            41888,
            30346,
            13977,
            1803,
            135,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            765,
            8487,
            26023,
            40452,
            37930,
            19870,
            4944,
            465,
            39,
            0,
            0,
            0
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            334,
            4017,
            17928,
            36461,
            41206,
            30450,
            13014,
            2988,
            278,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            403,
            4573,
            19392,
            36436,
            42749,
            35623,
            16214,
            3302,
            272,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13399167899842723,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016359660003217869,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06903627499923459,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47737,
            46989,
            46989,
            47189,
            47147,
            46937,
            47116,
            47017,
            47018,
            47093,
            46947,
            47072,
            47061,
            47211,
            47112,
            47073,
            47075,
            47042,
            47414,
            47085,
            47101,
            47282,
            47173,
            47120,
            46994,
            46781,
            46958,
            46977,
            47147,
            47128,
            47113,
            46922,
            47147,
            47041,
            47054,
            47113,
            47125,
            47109,
            47255,
            47138,
            47407,
            47245,
            47166,
            47075,
            46926,
            46936,
            46963,
            47001,
            47210,
            46985,
            47015,
            47071,
            46896,
            47106,
            47160,
            47020,
            47330,
            47173,
            46857,
            47276,
            49135,
            47140,
            47035
          ],
          [
            47737,
            46989,
            46989,
            47189,
            47147,
            46937,
            47116,
            47017,
            47018,
            47093,
            46947,
            47072,
            47061,
            47211,
            47112,
            47073,
            47075,
            47042,
            47414,
            47085,
            47101,
            47282,
            47173,
            47120,
            46994,
            46781,
            46958,
            46977,
            47147,
            47128,
            47113,
            46922,
            47147,
            47041,
            47054,
            47113,
            47125,
            47109,
            47255,
            47138,
            47407,
            47245,
            47166,
            47075,
            46926,
            46936,
            46963,
            47001,
            47210,
            46985,
            47015,
            47071,
            46896,
            47106,
            47160,
            47020,
            47330,
            47173,
            46857,
            47276,
            49135,
            47140,
            47035
          ],
          [
            47737,
            46989,
            46989,
            47189,
            47147,
            46937,
            47116,
            47017,
            47018,
            47093,
            46947,
            47072,
            47061,
            47211,
            47112,
            47073,
            47075,
            47042,
            47414,
            47085,
            47101,
            47282,
            47173,
            47120,
            46994,
            46781,
            46958,
            46977,
            47147,
            47128,
            47113,
            46922,
            47147,
            47041,
            47054,
            47113,
            47125,
            47109,
            47255,
            47138,
            47407,
            47245,
            47166,
            47075,
            46926,
            46936,
            46963,
            47001,
            47210,
            46985,
            47015,
            47071,
            46896,
            47106,
            47160,
            47020,
            47330,
            47173,
            46857,
            47276,
            49135,
            47140,
            47035
          ],
          [
            47737,
            46989,
            46989,
            47189,
            47147,
            46937,
            47116,
            47017,
            47018,
            47093,
            46947,
            47072,
            47061,
            47211,
            47112,
            47073,
            47075,
            47042,
            47414,
            47085,
            47101,
            47282,
            47173,
            47120,
            46994,
            46781,
            46958,
            46977,
            47147,
            47128,
            47113,
            46922,
            47147,
            47041,
            47054,
            47113,
            47125,
            47109,
            47255,
            47138,
            47407,
            47245,
            47166,
            47075,
            46926,
            46936,
            46963,
            47001,
            47210,
            46985,
            47015,
            47071,
            46896,
            47106,
            47160,
            47020,
            47330,
            47173,
            46857,
            47276,
            49135,
            47140,
            47035
          ],
          [
            47737,
            46989,
            46989,
            47189,
            47147,
            46937,
            47116,
            47017,
            47018,
            47093,
            46947,
            47072,
            47061,
            47211,
            47112,
            47073,
            47075,
            47042,
            47414,
            47085,
            47101,
            47282,
            47173,
            47120,
            46994,
            46781,
            46958,
            46977,
            47147,
            47128,
            47113,
            46922,
            47147,
            47041,
            47054,
            47113,
            47125,
            47109,
            47255,
            47138,
            47407,
            47245,
            47166,
            47075,
            46926,
            46936,
            46963,
            47001,
            47210,
            46985,
            47015,
            47071,
            46896,
            47106,
            47160,
            47020,
            47330,
            47173,
            46857,
            47276,
            49135,
            47140,
            47035
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            125,
            1331,
            5239,
            12927,
            24004,
            30914,
            31683,
            28474,
            22783,
            12672,
            3837,
            443,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            76,
            703,
            4606,
            12949,
            25734,
            32191,
            31931,
            26975,
            22461,
            16068,
            9743,
            3556,
            602,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            5,
            136,
            851,
            3276,
            10521,
            20710,
            30812,
            36739,
            34544,
            25684,
            14885,
            5537,
            870,
            66,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            581,
            3859,
            12893,
            23807,
            33471,
            37556,
            37700,
            31350,
            20474,
            10723,
            3560,
            532,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            260,
            1504,
            6458,
            16098,
            26726
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            104,
            1055,
            5356,
            16305,
            26868,
            31169,
            32011,
            25597,
            14916,
            5173,
            1187,
            81,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            158,
            1892,
            8596,
            16857,
            27890,
            32940,
            30941,
            24385,
            16182,
            8633,
            2893,
            355,
            9,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            290,
            2071,
            8925,
            19476,
            29777,
            34757,
            34848,
            27812,
            19207,
            9321,
            2074,
            219,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            606,
            3242,
            9834,
            20385,
            28869,
            33728,
            30634,
            26514,
            19874,
            11568,
            4768,
            834,
            90,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            7,
            45,
            631,
            3805,
            10825,
            20195,
            29887,
            37490,
            38763,
            31515,
            21177,
            10835,
            3958,
            852,
            74,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            61,
            840,
            4420,
            11941,
            22706,
            32883,
            39118,
            38590,
            33749,
            27061,
            18065,
            7381,
            1367,
            108,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            345,
            2118,
            7927
          ]
        ]
      },
      "call": {
        "duration": 0.2719332460001169,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa10bf390>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa10bf390> = array([12, 13, 15, 13, 11]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa109f4c0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47737, 46989, 46989, 47189, 47147, 46937, ...], [47737, 46989, 46989, 47189, 47147, 46937, ...], [..., 0, ...], [0, 0, 5, 136, 851, 3276, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 7, 45, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa10bf390>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa10bf390> = array([12, 13, 15, 13, 11]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016484170009789523,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926240169981611,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170614835999004,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014568320002581459,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3045511980017181,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            5,
            24,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            3,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            64,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003536539003107464,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029667959970538504,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5388207409996539,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            200,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            187,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            88,
            255,
            134,
            255,
            136,
            0,
            0,
            178,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            46,
            0,
            255,
            22,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            118,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            141,
            255,
            196,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            252,
            255,
            202,
            255,
            255,
            6,
            0,
            116,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            59,
            255,
            129
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034852370008593425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029164850020606536,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2958462380011042,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47911,
            50434,
            47334,
            47052,
            47210,
            47253,
            47173,
            47123,
            47255,
            47222,
            47082,
            47211,
            47199,
            47108,
            47259,
            46980,
            47185,
            47427,
            47175,
            47128,
            47100,
            47220,
            47301,
            47203,
            47270,
            47203,
            47240,
            47294,
            47321,
            47245,
            47219,
            47356,
            49026,
            47077,
            44602,
            47046,
            47600,
            47110,
            47397,
            47192,
            47238,
            47302,
            47141,
            47390,
            47262,
            47217,
            47123,
            47170,
            47122,
            47231,
            47221,
            47342,
            47220,
            47198,
            47144,
            47139,
            46957,
            47023,
            47178,
            47309,
            47222,
            47212,
            47141
          ],
          [
            47911,
            50434,
            47334,
            47052,
            47210,
            47253,
            47173,
            47123,
            47255,
            47222,
            47082,
            47211,
            47199,
            47108,
            47259,
            46980,
            47185,
            47427,
            47175,
            47128,
            47100,
            47220,
            47301,
            47203,
            47270,
            47203,
            47240,
            47294,
            47321,
            47245,
            47219,
            47356,
            49026,
            47077,
            44602,
            47046,
            47600,
            47110,
            47397,
            47192,
            47238,
            47302,
            47141,
            47390,
            47262,
            47217,
            47123,
            47170,
            47122,
            47231,
            47221,
            47342,
            47220,
            47198,
            47144,
            47139,
            46957,
            47023,
            47178,
            47309,
            47222,
            47212,
            47141
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            202,
            3400,
            17654,
            36055,
            36085,
            18243,
            4456,
            369,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            117,
            3125,
            16932,
            34698,
            39571,
            25368,
            7882,
            1068,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            922,
            8470,
            28925,
            42014,
            38442,
            18833,
            4572,
            383,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            248,
            2474,
            13732,
            31299,
            42496,
            38357,
            19417,
            4816,
            677,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13338704600027995,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001627265999559313,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06753429099990171,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47670,
            47147,
            46955,
            47056,
            47151,
            48915,
            48419,
            46883,
            47072,
            47182,
            46895,
            46930,
            47057,
            46975,
            47187,
            45076,
            46686,
            47091,
            47214,
            47030,
            46943,
            46812,
            47159,
            47110,
            47245,
            48551,
            48863,
            47141,
            47097,
            47040,
            46962,
            46624,
            47076,
            46941,
            47547,
            47591,
            47064,
            47083,
            47024,
            46735,
            47071,
            46927,
            47116,
            47126,
            46985,
            47257,
            47185,
            46948,
            47054,
            47020,
            46982,
            46746,
            47012,
            46908,
            46802,
            46854,
            47226,
            47042,
            46970,
            46952,
            47193,
            47028,
            47230
          ],
          [
            47670,
            47147,
            46955,
            47056,
            47151,
            48915,
            48419,
            46883,
            47072,
            47182,
            46895,
            46930,
            47057,
            46975,
            47187,
            45076,
            46686,
            47091,
            47214,
            47030,
            46943,
            46812,
            47159,
            47110,
            47245,
            48551,
            48863,
            47141,
            47097,
            47040,
            46962,
            46624,
            47076,
            46941,
            47547,
            47591,
            47064,
            47083,
            47024,
            46735,
            47071,
            46927,
            47116,
            47126,
            46985,
            47257,
            47185,
            46948,
            47054,
            47020,
            46982,
            46746,
            47012,
            46908,
            46802,
            46854,
            47226,
            47042,
            46970,
            46952,
            47193,
            47028,
            47230
          ],
          [
            47670,
            47147,
            46955,
            47056,
            47151,
            48915,
            48419,
            46883,
            47072,
            47182,
            46895,
            46930,
            47057,
            46975,
            47187,
            45076,
            46686,
            47091,
            47214,
            47030,
            46943,
            46812,
            47159,
            47110,
            47245,
            48551,
            48863,
            47141,
            47097,
            47040,
            46962,
            46624,
            47076,
            46941,
            47547,
            47591,
            47064,
            47083,
            47024,
            46735,
            47071,
            46927,
            47116,
            47126,
            46985,
            47257,
            47185,
            46948,
            47054,
            47020,
            46982,
            46746,
            47012,
            46908,
            46802,
            46854,
            47226,
            47042,
            46970,
            46952,
            47193,
            47028,
            47230
          ],
          [
            47670,
            47147,
            46955,
            47056,
            47151,
            48915,
            48419,
            46883,
            47072,
            47182,
            46895,
            46930,
            47057,
            46975,
            47187,
            45076,
            46686,
            47091,
            47214,
            47030,
            46943,
            46812,
            47159,
            47110,
            47245,
            48551,
            48863,
            47141,
            47097,
            47040,
            46962,
            46624,
            47076,
            46941,
            47547,
            47591,
            47064,
            47083,
            47024,
            46735,
            47071,
            46927,
            47116,
            47126,
            46985,
            47257,
            47185,
            46948,
            47054,
            47020,
            46982,
            46746,
            47012,
            46908,
            46802,
            46854,
            47226,
            47042,
            46970,
            46952,
            47193,
            47028,
            47230
          ],
          [
            47670,
            47147,
            46955,
            47056,
            47151,
            48915,
            48419,
            46883,
            47072,
            47182,
            46895,
            46930,
            47057,
            46975,
            47187,
            45076,
            46686,
            47091,
            47214,
            47030,
            46943,
            46812,
            47159,
            47110,
            47245,
            48551,
            48863,
            47141,
            47097,
            47040,
            46962,
            46624,
            47076,
            46941,
            47547,
            47591,
            47064,
            47083,
            47024,
            46735,
            47071,
            46927,
            47116,
            47126,
            46985,
            47257,
            47185,
            46948,
            47054,
            47020,
            46982,
            46746,
            47012,
            46908,
            46802,
            46854,
            47226,
            47042,
            46970,
            46952,
            47193,
            47028,
            47230
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            301,
            2478,
            11539,
            26109,
            36498,
            36446,
            24909,
            12283,
            3125,
            233,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            490,
            2900,
            12541,
            27868,
            38714,
            38402,
            28970,
            15912,
            4940,
            1115,
            130,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            18,
            443,
            4308,
            17156,
            33020,
            39668,
            34315,
            19838,
            6570,
            1204,
            65,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            98,
            1222,
            7440,
            23817,
            38599,
            44332,
            39321,
            26236,
            12205,
            2266,
            286,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            53,
            1382,
            8025,
            21629,
            35509,
            39573
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            456,
            3486,
            13912,
            26906,
            33504,
            28748,
            14176,
            3390,
            361,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            59,
            836,
            6793,
            19703,
            34732,
            39637,
            32476,
            17790,
            5498,
            746,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            894,
            5906,
            17976,
            33138,
            36537,
            31128,
            17898,
            5780,
            885,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            175,
            1855,
            8894,
            22835,
            36171,
            41230,
            34699,
            21940,
            8841,
            1708,
            134,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            85,
            1811,
            8515,
            20571,
            34080,
            40631,
            37036,
            26000,
            12735,
            3191,
            420,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            357,
            2691,
            11752,
            26715,
            38913,
            43732,
            38280,
            26224,
            12459,
            3970,
            941,
            128,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            63,
            815,
            5965,
            17143,
            32752
          ]
        ]
      },
      "call": {
        "duration": 0.2698482599989802,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014967030001571402,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29264417800004594,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1697708270003204,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001467573001718847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3484989659991697,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            91,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034770769998431206,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029069739975966513,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.541746165999939,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            4,
            255,
            0,
            39,
            0,
            255,
            0,
            255,
            255
          ],
          [
            64,
            0,
            20,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            192,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            12,
            255,
            35,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            2,
            0,
            255,
            0,
            255,
            255
          ],
          [
            51,
            0,
            3,
            0,
            2,
            0,
            255,
            129,
            255,
            255,
            255,
            1
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            138,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            59,
            0,
            1,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            66,
            255,
            56,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003464356999757001,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029572259991255123,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2962708980012394,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47616,
            47174,
            47135,
            47565,
            47450,
            47427,
            47350,
            47330,
            47371,
            47452,
            47339,
            47279,
            47421,
            47480,
            49155,
            47366,
            47794,
            41639,
            47687,
            47430,
            47561,
            47514,
            47159,
            47289,
            47134,
            47313,
            47137,
            47437,
            47118,
            47287,
            47202,
            47292,
            47226,
            47508,
            47178,
            47327,
            47105,
            47035,
            47206,
            47451,
            47517,
            47576,
            47183,
            47326,
            47275,
            47409,
            47382,
            47252,
            47229,
            45783,
            47252,
            48315,
            47252,
            52684,
            47479,
            47325,
            47277,
            47201,
            47425,
            47147,
            47271,
            46983,
            47177
          ],
          [
            47616,
            47174,
            47135,
            47565,
            47450,
            47427,
            47350,
            47330,
            47371,
            47452,
            47339,
            47279,
            47421,
            47480,
            49155,
            47366,
            47794,
            41639,
            47687,
            47430,
            47561,
            47514,
            47159,
            47289,
            47134,
            47313,
            47137,
            47437,
            47118,
            47287,
            47202,
            47292,
            47226,
            47508,
            47178,
            47327,
            47105,
            47035,
            47206,
            47451,
            47517,
            47576,
            47183,
            47326,
            47275,
            47409,
            47382,
            47252,
            47229,
            45783,
            47252,
            48315,
            47252,
            52684,
            47479,
            47325,
            47277,
            47201,
            47425,
            47147,
            47271,
            46983,
            47177
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            575,
            6728,
            24479,
            39337,
            34180,
            15222,
            2791,
            339,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            458,
            6652,
            22362,
            37970,
            38086,
            21340,
            5248,
            471,
            16,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            6,
            92,
            1850,
            15060,
            32506,
            41605,
            29139,
            9480,
            1572,
            84,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            700,
            6408,
            21971,
            38334,
            41546,
            29839,
            12206,
            2089,
            189,
            6,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            765,
            7667,
            25766,
            40138,
            42804
          ]
        ]
      },
      "call": {
        "duration": 0.1338480670019635,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001637946999835549,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06794524100041599,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47520,
            47225,
            47035,
            47317,
            47096,
            47201,
            47758,
            47257,
            47021,
            47297,
            47087,
            47201,
            46918,
            47308,
            47162,
            48887,
            48855,
            47029,
            47057,
            47152,
            47113,
            47185,
            47038,
            47218,
            46745,
            47001,
            47076,
            47398,
            47282,
            47217,
            46943,
            47109,
            47099,
            47652,
            54324,
            47256,
            46922,
            47287,
            46912,
            47176,
            47073,
            47198,
            47084,
            47268,
            46992,
            47414,
            47172,
            47319,
            47064,
            47228,
            47105,
            48963,
            48782,
            47213,
            47007,
            47219,
            46966,
            47201,
            47042,
            47178,
            47207,
            47399,
            47013
          ],
          [
            47520,
            47225,
            47035,
            47317,
            47096,
            47201,
            47758,
            47257,
            47021,
            47297,
            47087,
            47201,
            46918,
            47308,
            47162,
            48887,
            48855,
            47029,
            47057,
            47152,
            47113,
            47185,
            47038,
            47218,
            46745,
            47001,
            47076,
            47398,
            47282,
            47217,
            46943,
            47109,
            47099,
            47652,
            54324,
            47256,
            46922,
            47287,
            46912,
            47176,
            47073,
            47198,
            47084,
            47268,
            46992,
            47414,
            47172,
            47319,
            47064,
            47228,
            47105,
            48963,
            48782,
            47213,
            47007,
            47219,
            46966,
            47201,
            47042,
            47178,
            47207,
            47399,
            47013
          ],
          [
            47520,
            47225,
            47035,
            47317,
            47096,
            47201,
            47758,
            47257,
            47021,
            47297,
            47087,
            47201,
            46918,
            47308,
            47162,
            48887,
            48855,
            47029,
            47057,
            47152,
            47113,
            47185,
            47038,
            47218,
            46745,
            47001,
            47076,
            47398,
            47282,
            47217,
            46943,
            47109,
            47099,
            47652,
            54324,
            47256,
            46922,
            47287,
            46912,
            47176,
            47073,
            47198,
            47084,
            47268,
            46992,
            47414,
            47172,
            47319,
            47064,
            47228,
            47105,
            48963,
            48782,
            47213,
            47007,
            47219,
            46966,
            47201,
            47042,
            47178,
            47207,
            47399,
            47013
          ],
          [
            47520,
            47225,
            47035,
            47317,
            47096,
            47201,
            47758,
            47257,
            47021,
            47297,
            47087,
            47201,
            46918,
            47308,
            47162,
            48887,
            48855,
            47029,
            47057,
            47152,
            47113,
            47185,
            47038,
            47218,
            46745,
            47001,
            47076,
            47398,
            47282,
            47217,
            46943,
            47109,
            47099,
            47652,
            54324,
            47256,
            46922,
            47287,
            46912,
            47176,
            47073,
            47198,
            47084,
            47268,
            46992,
            47414,
            47172,
            47319,
            47064,
            47228,
            47105,
            48963,
            48782,
            47213,
            47007,
            47219,
            46966,
            47201,
            47042,
            47178,
            47207,
            47399,
            47013
          ],
          [
            47520,
            47225,
            47035,
            47317,
            47096,
            47201,
            47758,
            47257,
            47021,
            47297,
            47087,
            47201,
            46918,
            47308,
            47162,
            48887,
            48855,
            47029,
            47057,
            47152,
            47113,
            47185,
            47038,
            47218,
            46745,
            47001,
            47076,
            47398,
            47282,
            47217,
            46943,
            47109,
            47099,
            47652,
            54324,
            47256,
            46922,
            47287,
            46912,
            47176,
            47073,
            47198,
            47084,
            47268,
            46992,
            47414,
            47172,
            47319,
            47064,
            47228,
            47105,
            48963,
            48782,
            47213,
            47007,
            47219,
            46966,
            47201,
            47042,
            47178,
            47207,
            47399,
            47013
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            78,
            918,
            5177,
            16819,
            31333,
            38384,
            35176,
            25563,
            13693,
            4522,
            839,
            118,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            287,
            2616,
            10160,
            24100,
            36603,
            38774,
            32210,
            20518,
            7990,
            1704,
            80,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            285,
            2341,
            10941,
            26455,
            38930,
            41556,
            35927,
            22850,
            9271,
            2385,
            161,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            978,
            5012,
            16206,
            30103,
            38469,
            35258,
            25849,
            11788,
            2313,
            283,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10738,
            2898,
            342,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            99,
            1796,
            8812,
            21577,
            33833,
            37372,
            29560,
            15284,
            5072,
            617,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            423,
            4690,
            15165,
            29250,
            39705,
            34613,
            21878,
            9540,
            1991,
            149,
            0,
            0,
            0,
            0,
            0
          ],
          [
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            586,
            4986,
            15872,
            28578,
            39717,
            40561,
            32911,
            21203,
            8245,
            1669,
            95,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            295,
            2808,
            12948,
            27382,
            38177,
            35520,
            25158,
            11498,
            2933,
            351,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            601,
            3824,
            15188,
            27840,
            40620,
            43470,
            35040,
            23423,
            12499,
            3929,
            987,
            113,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            79,
            1217,
            7066,
            18796,
            31895,
            40642,
            40073,
            32276,
            19882,
            9409,
            2347,
            344,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27107540699944366,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014840730000287294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292808010999579,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170336010000028,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004851617999520386,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}