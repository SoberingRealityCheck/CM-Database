{
  "created": 1722033971.0262637,
  "duration": 23.561113834381104,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5060762309985876,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14853103700079373,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013320000034582336,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038234649982769042,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14796324400231242,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012567279991344549,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13220971299961093,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12179053900035797,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012815990012313705,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003833845999906771,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12107667400050559,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001302628999837907,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003395956002350431,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14679306800098857,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012783279998984654,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033923259979928844,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11984733699864591,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012018260022159666,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033659250002529006,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14694598200003384,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011777069994423073,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033931050020328257,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12000276999970083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011979270020674448,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004482039999857079,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020953069979441352,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001115905000915518,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033744459979061503,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016956979998212773,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011142249968543183,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033375749990227632,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004034400000819005,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033953.2983403,
            "msecs": 298.3403205871582,
            "relativeCreated": 7812.884330749512,
            "thread": 281473227341856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5445
          }
        ]
      },
      "teardown": {
        "duration": 0.0012347379997663666,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033825450009317137,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002398674001597101,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033953.3106627,
            "msecs": 310.66274642944336,
            "relativeCreated": 7825.206756591797,
            "thread": 281473227341856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5445
          }
        ]
      },
      "teardown": {
        "duration": 0.001167806000012206,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021886690010433085,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002690789999178378,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033953.3202543,
            "msecs": 320.2543258666992,
            "relativeCreated": 7834.798336029053,
            "thread": 281473227341856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5445
          }
        ]
      },
      "teardown": {
        "duration": 0.001059743997757323,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002125517999957083,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034333370022068266,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033953.3296947,
            "msecs": 329.6947479248047,
            "relativeCreated": 7844.238758087158,
            "thread": 281473227341856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5445
          }
        ]
      },
      "teardown": {
        "duration": 0.0010823640004673507,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033894160005729645,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14651826199769857,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011853870018967427,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033463649997429457,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12034621799830347,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011748859978979453,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17982596499859937,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14765546799753793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012499780023063067,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015179828998952871,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12116103600055794,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013017889978073072,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8463492299997597,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            11,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            96,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            12,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035720300002139993,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029093739976815414,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9132132230006391,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            5,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            214,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            91,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            24,
            255,
            255,
            255,
            14
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            41,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            76,
            0,
            0,
            0,
            0
          ],
          [
            0,
            24,
            0,
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            123,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            219,
            255,
            255,
            255,
            255,
            0,
            0,
            82,
            0,
            43,
            255
          ],
          [
            255,
            0,
            145,
            0,
            255,
            0,
            148,
            33,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          4,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034918679994007107,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029041849993518554,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30302311700143036,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48083,
            47364,
            47267,
            47036,
            98517,
            47581,
            47430,
            47317,
            47315,
            47215,
            47360,
            47368,
            47433,
            47238,
            47227,
            47252,
            47313,
            47426,
            47197,
            47212,
            47024,
            47026,
            47342,
            47417,
            47419,
            47318,
            47494,
            47239,
            47336,
            47329,
            47496,
            47477,
            47432,
            48724,
            47390,
            47844,
            47425,
            49601,
            47348,
            47413,
            47334,
            47297,
            47364,
            47293,
            47364,
            47277,
            47247,
            47279,
            47350,
            47245,
            47317,
            47412,
            47452,
            47509,
            47394,
            47282,
            47323,
            47132,
            46910,
            47245,
            47310,
            47257,
            47255
          ],
          [
            48083,
            47364,
            47267,
            47036,
            98517,
            47581,
            47430,
            47317,
            47315,
            47215,
            47360,
            47368,
            47433,
            47238,
            47227,
            47252,
            47313,
            47426,
            47197,
            47212,
            47024,
            47026,
            47342,
            47417,
            47419,
            47318,
            47494,
            47239,
            47336,
            47329,
            47496,
            47477,
            47432,
            48724,
            47390,
            47844,
            47425,
            49601,
            47348,
            47413,
            47334,
            47297,
            47364,
            47293,
            47364,
            47277,
            47247,
            47279,
            47350,
            47245,
            47317,
            47412,
            47452,
            47509,
            47394,
            47282,
            47323,
            47132,
            46910,
            47245,
            47310,
            47257,
            47255
          ]
        ],
        "eTX_errcounts": [
          [
            40186,
            26763,
            7936,
            1194,
            217,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            213,
            2953,
            15785,
            34544,
            42194,
            31026,
            14326,
            2446,
            158,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            108,
            734,
            7589,
            25400,
            40927,
            37151,
            19515,
            4984,
            607,
            22,
            0,
            0,
            0
          ],
          [
            12,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            424,
            3762,
            17039,
            35520,
            41953,
            32212,
            13782,
            3228,
            279,
            4,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            586,
            4617,
            19274,
            36242,
            42998,
            34420,
            16608,
            2944,
            289,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13409996499831323,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016135859987116419,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0690187309992325,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47945,
            47238,
            47262,
            47342,
            47018,
            47168,
            47363,
            47582,
            47434,
            46715,
            47244,
            47227,
            47100,
            47402,
            47080,
            47176,
            47093,
            47025,
            47293,
            47320,
            47101,
            47326,
            47194,
            47334,
            47170,
            47252,
            47570,
            47149,
            47226,
            47039,
            47063,
            47175,
            47203,
            47340,
            46962,
            46810,
            47275,
            47145,
            47389,
            47141,
            47211,
            47143,
            47128,
            49133,
            48783,
            47351,
            47154,
            47168,
            47335,
            47155,
            47215,
            47189,
            47191,
            47279,
            47250,
            47039,
            47229,
            47290,
            47421,
            47015,
            47232,
            47486,
            47499
          ],
          [
            47945,
            47238,
            47262,
            47342,
            47018,
            47168,
            47363,
            47582,
            47434,
            46715,
            47244,
            47227,
            47100,
            47402,
            47080,
            47176,
            47093,
            47025,
            47293,
            47320,
            47101,
            47326,
            47194,
            47334,
            47170,
            47252,
            47570,
            47149,
            47226,
            47039,
            47063,
            47175,
            47203,
            47340,
            46962,
            46810,
            47275,
            47145,
            47389,
            47141,
            47211,
            47143,
            47128,
            49133,
            48783,
            47351,
            47154,
            47168,
            47335,
            47155,
            47215,
            47189,
            47191,
            47279,
            47250,
            47039,
            47229,
            47290,
            47421,
            47015,
            47232,
            47486,
            47499
          ],
          [
            47945,
            47238,
            47262,
            47342,
            47018,
            47168,
            47363,
            47582,
            47434,
            46715,
            47244,
            47227,
            47100,
            47402,
            47080,
            47176,
            47093,
            47025,
            47293,
            47320,
            47101,
            47326,
            47194,
            47334,
            47170,
            47252,
            47570,
            47149,
            47226,
            47039,
            47063,
            47175,
            47203,
            47340,
            46962,
            46810,
            47275,
            47145,
            47389,
            47141,
            47211,
            47143,
            47128,
            49133,
            48783,
            47351,
            47154,
            47168,
            47335,
            47155,
            47215,
            47189,
            47191,
            47279,
            47250,
            47039,
            47229,
            47290,
            47421,
            47015,
            47232,
            47486,
            47499
          ],
          [
            47945,
            47238,
            47262,
            47342,
            47018,
            47168,
            47363,
            47582,
            47434,
            46715,
            47244,
            47227,
            47100,
            47402,
            47080,
            47176,
            47093,
            47025,
            47293,
            47320,
            47101,
            47326,
            47194,
            47334,
            47170,
            47252,
            47570,
            47149,
            47226,
            47039,
            47063,
            47175,
            47203,
            47340,
            46962,
            46810,
            47275,
            47145,
            47389,
            47141,
            47211,
            47143,
            47128,
            49133,
            48783,
            47351,
            47154,
            47168,
            47335,
            47155,
            47215,
            47189,
            47191,
            47279,
            47250,
            47039,
            47229,
            47290,
            47421,
            47015,
            47232,
            47486,
            47499
          ],
          [
            47945,
            47238,
            47262,
            47342,
            47018,
            47168,
            47363,
            47582,
            47434,
            46715,
            47244,
            47227,
            47100,
            47402,
            47080,
            47176,
            47093,
            47025,
            47293,
            47320,
            47101,
            47326,
            47194,
            47334,
            47170,
            47252,
            47570,
            47149,
            47226,
            47039,
            47063,
            47175,
            47203,
            47340,
            46962,
            46810,
            47275,
            47145,
            47389,
            47141,
            47211,
            47143,
            47128,
            49133,
            48783,
            47351,
            47154,
            47168,
            47335,
            47155,
            47215,
            47189,
            47191,
            47279,
            47250,
            47039,
            47229,
            47290,
            47421,
            47015,
            47232,
            47486,
            47499
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            24,
            542,
            2616,
            9553,
            20337,
            31965,
            36585,
            31943,
            19921,
            7330,
            1412,
            132,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            49,
            794,
            3488,
            10503,
            23429,
            32474,
            36552,
            30876,
            23641,
            15280,
            6628,
            1344,
            139,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            38,
            643,
            2795,
            10113,
            21586,
            33158,
            36679,
            34845,
            26196,
            15296,
            5859,
            1295,
            155,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            104,
            1245,
            4612,
            10838,
            21497,
            32485,
            41615,
            40665,
            29112,
            18404,
            6453,
            1097,
            102,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            114,
            1077,
            4853,
            12733,
            23350
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            137,
            1789,
            6545,
            17051,
            30173,
            36023,
            33053,
            23774,
            12676,
            3865,
            567,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            116,
            1169,
            6777,
            16672,
            30576,
            34395,
            31246,
            24572,
            13677,
            4261,
            526,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            314,
            2355,
            8534,
            18205,
            30971,
            37750,
            35539,
            25356,
            13079,
            3466,
            426,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            74,
            595,
            2591,
            6607,
            16145,
            31446,
            39029,
            36395,
            28459,
            17288,
            6713,
            1491,
            79,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            16,
            159,
            975,
            3639,
            9103,
            19605,
            32130,
            38004,
            37310,
            31900,
            23459,
            10649,
            2608,
            501,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            167,
            1413,
            4981,
            9777,
            18408,
            29581,
            40426,
            41328,
            35283,
            24397,
            11221,
            3870,
            876,
            96,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            70,
            655,
            3076,
            8571
          ]
        ]
      },
      "call": {
        "duration": 0.272438994001277,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff82f91750>()\n +    where <built-in method all of numpy.ndarray object at 0xffff82f91750> = array([21, 14, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff82f68580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47945, 47238, 47262, 47342, 47018, 47168, ...], [47945, 47238, 47262, 47342, 47018, 47168, ...], [... 0, ...], [0, 0, 1, 38, 643, 2795, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 16, 159, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff82f91750>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff82f91750> = array([21, 14, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016140059997269418,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29288841000015964,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170275494001544,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014698829982080497,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3024179439998989,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            23,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            239,
            68,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035050990009040106,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002913185002398677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5339800940018904,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            189,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11,
            255,
            190,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            92,
            255,
            153,
            255,
            155,
            0,
            0,
            252,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            241,
            0,
            128,
            3,
            255,
            33,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            46,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            3,
            255,
            140,
            255,
            239,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            148,
            255,
            255,
            1,
            0,
            122,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            100,
            255,
            153
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003534948999003973,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00292551500024274,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2957393739998224,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47634,
            47273,
            47545,
            47232,
            47263,
            47356,
            47456,
            47528,
            47407,
            47506,
            47396,
            47435,
            47398,
            49321,
            47344,
            47912,
            47320,
            49213,
            47380,
            47367,
            47368,
            47181,
            47388,
            47207,
            47432,
            47403,
            47299,
            47196,
            47571,
            47404,
            47456,
            47464,
            47486,
            47418,
            47403,
            47409,
            47303,
            47289,
            47385,
            47382,
            47354,
            47383,
            47403,
            47295,
            47210,
            47321,
            47359,
            47475,
            47941,
            47323,
            47686,
            47222,
            47767,
            47403,
            47304,
            47444,
            47248,
            47709,
            47775,
            47554,
            47292,
            47426,
            47222
          ],
          [
            47634,
            47273,
            47545,
            47232,
            47263,
            47356,
            47456,
            47528,
            47407,
            47506,
            47396,
            47435,
            47398,
            49321,
            47344,
            47912,
            47320,
            49213,
            47380,
            47367,
            47368,
            47181,
            47388,
            47207,
            47432,
            47403,
            47299,
            47196,
            47571,
            47404,
            47456,
            47464,
            47486,
            47418,
            47403,
            47409,
            47303,
            47289,
            47385,
            47382,
            47354,
            47383,
            47403,
            47295,
            47210,
            47321,
            47359,
            47475,
            47941,
            47323,
            47686,
            47222,
            47767,
            47403,
            47304,
            47444,
            47248,
            47709,
            47775,
            47554,
            47292,
            47426,
            47222
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            299,
            3468,
            17350,
            36082,
            36589,
            18943,
            4559,
            560,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            106,
            2429,
            16175,
            35086,
            40245,
            25592,
            8694,
            1007,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            1000,
            8113,
            28773,
            41673,
            39429,
            19320,
            4522,
            465,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            164,
            2276,
            13347,
            30815,
            42280,
            38675,
            20295,
            5365,
            631,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1339781309980026,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001606866000656737,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06893868900078814,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47791,
            48911,
            48682,
            47202,
            47026,
            47081,
            46960,
            47088,
            47038,
            46930,
            47017,
            47023,
            47020,
            46781,
            47145,
            47027,
            47011,
            47206,
            47075,
            47150,
            47029,
            47060,
            49037,
            47161,
            46777,
            47242,
            47145,
            47154,
            47135,
            46959,
            47104,
            47120,
            46918,
            46971,
            47047,
            47043,
            47075,
            47274,
            47020,
            47090,
            47159,
            47180,
            47046,
            48633,
            47051,
            47040,
            47095,
            46973,
            47109,
            46838,
            47102,
            46715,
            47148,
            47031,
            47000,
            47017,
            47004,
            47212,
            47112,
            47155,
            47052,
            47133,
            47056
          ],
          [
            47791,
            48911,
            48682,
            47202,
            47026,
            47081,
            46960,
            47088,
            47038,
            46930,
            47017,
            47023,
            47020,
            46781,
            47145,
            47027,
            47011,
            47206,
            47075,
            47150,
            47029,
            47060,
            49037,
            47161,
            46777,
            47242,
            47145,
            47154,
            47135,
            46959,
            47104,
            47120,
            46918,
            46971,
            47047,
            47043,
            47075,
            47274,
            47020,
            47090,
            47159,
            47180,
            47046,
            48633,
            47051,
            47040,
            47095,
            46973,
            47109,
            46838,
            47102,
            46715,
            47148,
            47031,
            47000,
            47017,
            47004,
            47212,
            47112,
            47155,
            47052,
            47133,
            47056
          ],
          [
            47791,
            48911,
            48682,
            47202,
            47026,
            47081,
            46960,
            47088,
            47038,
            46930,
            47017,
            47023,
            47020,
            46781,
            47145,
            47027,
            47011,
            47206,
            47075,
            47150,
            47029,
            47060,
            49037,
            47161,
            46777,
            47242,
            47145,
            47154,
            47135,
            46959,
            47104,
            47120,
            46918,
            46971,
            47047,
            47043,
            47075,
            47274,
            47020,
            47090,
            47159,
            47180,
            47046,
            48633,
            47051,
            47040,
            47095,
            46973,
            47109,
            46838,
            47102,
            46715,
            47148,
            47031,
            47000,
            47017,
            47004,
            47212,
            47112,
            47155,
            47052,
            47133,
            47056
          ],
          [
            47791,
            48911,
            48682,
            47202,
            47026,
            47081,
            46960,
            47088,
            47038,
            46930,
            47017,
            47023,
            47020,
            46781,
            47145,
            47027,
            47011,
            47206,
            47075,
            47150,
            47029,
            47060,
            49037,
            47161,
            46777,
            47242,
            47145,
            47154,
            47135,
            46959,
            47104,
            47120,
            46918,
            46971,
            47047,
            47043,
            47075,
            47274,
            47020,
            47090,
            47159,
            47180,
            47046,
            48633,
            47051,
            47040,
            47095,
            46973,
            47109,
            46838,
            47102,
            46715,
            47148,
            47031,
            47000,
            47017,
            47004,
            47212,
            47112,
            47155,
            47052,
            47133,
            47056
          ],
          [
            47791,
            48911,
            48682,
            47202,
            47026,
            47081,
            46960,
            47088,
            47038,
            46930,
            47017,
            47023,
            47020,
            46781,
            47145,
            47027,
            47011,
            47206,
            47075,
            47150,
            47029,
            47060,
            49037,
            47161,
            46777,
            47242,
            47145,
            47154,
            47135,
            46959,
            47104,
            47120,
            46918,
            46971,
            47047,
            47043,
            47075,
            47274,
            47020,
            47090,
            47159,
            47180,
            47046,
            48633,
            47051,
            47040,
            47095,
            46973,
            47109,
            46838,
            47102,
            46715,
            47148,
            47031,
            47000,
            47017,
            47004,
            47212,
            47112,
            47155,
            47052,
            47133,
            47056
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            234,
            1989,
            11287,
            27322,
            37499,
            37244,
            25608,
            11617,
            2705,
            328,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            324,
            2971,
            14131,
            30521,
            40313,
            40376,
            29236,
            15791,
            4361,
            763,
            78,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            7,
            168,
            1509,
            7455,
            20674,
            36745,
            40345,
            34396,
            21583,
            9316,
            2133,
            168,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            296,
            2109,
            8780,
            21694,
            36242,
            44077,
            41324,
            28399,
            12572,
            2534,
            252,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            53,
            600,
            2890,
            8746,
            20581,
            34560,
            38079
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            51,
            823,
            6306,
            21051,
            34063,
            38529,
            31942,
            14258,
            3191,
            323,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            459,
            5091,
            17906,
            34589,
            41421,
            34027,
            18704,
            5907,
            998,
            59,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            155,
            1577,
            9943,
            26066,
            39194,
            41900,
            33632,
            17865,
            5227,
            799,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            298,
            2091,
            9323,
            21136,
            34720,
            41580,
            36149,
            21885,
            9096,
            2217,
            264,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            19,
            345,
            2554,
            10924,
            26026,
            38180,
            39130,
            33939,
            26947,
            16435,
            5822,
            1354,
            114,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            62,
            724,
            3571,
            11999,
            24860,
            36609,
            43111,
            40562,
            29170,
            13960,
            4127,
            670,
            23,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            213,
            1691,
            7163,
            16856,
            30125
          ]
        ]
      },
      "call": {
        "duration": 0.2691225700000359,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014820629985479172,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29169633299898123,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170832997002435,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014698529994348064,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3681782130006468,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            131,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035402289977355395,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028909539978485554,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5354613769995922,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            11,
            255,
            2,
            44,
            0,
            255,
            1,
            255,
            255
          ],
          [
            81,
            0,
            10,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            35,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            246,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            2,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            5,
            255,
            25,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            6,
            2,
            0,
            255,
            1,
            255,
            255
          ],
          [
            76,
            0,
            0,
            0,
            5,
            0,
            255,
            184,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            139,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            75,
            0,
            1,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            116,
            255,
            55,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003492348001600476,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002914865002821898,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29618650400152546,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50871,
            47446,
            47342,
            47276,
            47357,
            47210,
            47230,
            47192,
            47171,
            47218,
            47183,
            47431,
            47287,
            47397,
            47126,
            47114,
            47298,
            47154,
            47283,
            47236,
            47138,
            47175,
            47925,
            47416,
            47261,
            47108,
            47301,
            47288,
            47395,
            47697,
            47394,
            47631,
            47230,
            47155,
            46971,
            47069,
            47000,
            47111,
            47237,
            47130,
            47363,
            47240,
            47258,
            47239,
            47231,
            47125,
            47198,
            47321,
            47334,
            47185,
            47312,
            47194,
            47387,
            47369,
            47207,
            47224,
            41983,
            47342,
            47265,
            47303,
            47354,
            47275,
            47703
          ],
          [
            50871,
            47446,
            47342,
            47276,
            47357,
            47210,
            47230,
            47192,
            47171,
            47218,
            47183,
            47431,
            47287,
            47397,
            47126,
            47114,
            47298,
            47154,
            47283,
            47236,
            47138,
            47175,
            47925,
            47416,
            47261,
            47108,
            47301,
            47288,
            47395,
            47697,
            47394,
            47631,
            47230,
            47155,
            46971,
            47069,
            47000,
            47111,
            47237,
            47130,
            47363,
            47240,
            47258,
            47239,
            47231,
            47125,
            47198,
            47321,
            47334,
            47185,
            47312,
            47194,
            47387,
            47369,
            47207,
            47224,
            41983,
            47342,
            47265,
            47303,
            47354,
            47275,
            47703
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            611,
            6336,
            24736,
            39387,
            34401,
            14967,
            2872,
            312,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            566,
            6225,
            21273,
            37398,
            37563,
            21323,
            5380,
            748,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            5,
            121,
            2135,
            13857,
            31905,
            40974,
            29461,
            9316,
            1557,
            132,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            581,
            5657,
            21633,
            38023,
            41663,
            30166,
            12981,
            2056,
            387,
            21,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            758,
            7443,
            25037,
            40082,
            43732
          ]
        ]
      },
      "call": {
        "duration": 0.13386286899913102,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016076459978648927,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06929260800097836,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47750,
            47181,
            47162,
            47054,
            48696,
            49412,
            47080,
            47067,
            46942,
            47099,
            47076,
            47059,
            47066,
            47127,
            46995,
            46911,
            47056,
            46817,
            46899,
            47004,
            46917,
            47127,
            47188,
            47316,
            46925,
            46984,
            46956,
            47021,
            46972,
            46871,
            47032,
            46819,
            46949,
            47130,
            46974,
            47149,
            47066,
            47000,
            47076,
            46948,
            47039,
            48796,
            47277,
            46994,
            46952,
            46975,
            47031,
            47067,
            46976,
            47182,
            47116,
            46996,
            46951,
            47071,
            46961,
            47143,
            47185,
            47929,
            47021,
            47131,
            48437,
            47514,
            47032
          ],
          [
            47750,
            47181,
            47162,
            47054,
            48696,
            49412,
            47080,
            47067,
            46942,
            47099,
            47076,
            47059,
            47066,
            47127,
            46995,
            46911,
            47056,
            46817,
            46899,
            47004,
            46917,
            47127,
            47188,
            47316,
            46925,
            46984,
            46956,
            47021,
            46972,
            46871,
            47032,
            46819,
            46949,
            47130,
            46974,
            47149,
            47066,
            47000,
            47076,
            46948,
            47039,
            48796,
            47277,
            46994,
            46952,
            46975,
            47031,
            47067,
            46976,
            47182,
            47116,
            46996,
            46951,
            47071,
            46961,
            47143,
            47185,
            47929,
            47021,
            47131,
            48437,
            47514,
            47032
          ],
          [
            47750,
            47181,
            47162,
            47054,
            48696,
            49412,
            47080,
            47067,
            46942,
            47099,
            47076,
            47059,
            47066,
            47127,
            46995,
            46911,
            47056,
            46817,
            46899,
            47004,
            46917,
            47127,
            47188,
            47316,
            46925,
            46984,
            46956,
            47021,
            46972,
            46871,
            47032,
            46819,
            46949,
            47130,
            46974,
            47149,
            47066,
            47000,
            47076,
            46948,
            47039,
            48796,
            47277,
            46994,
            46952,
            46975,
            47031,
            47067,
            46976,
            47182,
            47116,
            46996,
            46951,
            47071,
            46961,
            47143,
            47185,
            47929,
            47021,
            47131,
            48437,
            47514,
            47032
          ],
          [
            47750,
            47181,
            47162,
            47054,
            48696,
            49412,
            47080,
            47067,
            46942,
            47099,
            47076,
            47059,
            47066,
            47127,
            46995,
            46911,
            47056,
            46817,
            46899,
            47004,
            46917,
            47127,
            47188,
            47316,
            46925,
            46984,
            46956,
            47021,
            46972,
            46871,
            47032,
            46819,
            46949,
            47130,
            46974,
            47149,
            47066,
            47000,
            47076,
            46948,
            47039,
            48796,
            47277,
            46994,
            46952,
            46975,
            47031,
            47067,
            46976,
            47182,
            47116,
            46996,
            46951,
            47071,
            46961,
            47143,
            47185,
            47929,
            47021,
            47131,
            48437,
            47514,
            47032
          ],
          [
            47750,
            47181,
            47162,
            47054,
            48696,
            49412,
            47080,
            47067,
            46942,
            47099,
            47076,
            47059,
            47066,
            47127,
            46995,
            46911,
            47056,
            46817,
            46899,
            47004,
            46917,
            47127,
            47188,
            47316,
            46925,
            46984,
            46956,
            47021,
            46972,
            46871,
            47032,
            46819,
            46949,
            47130,
            46974,
            47149,
            47066,
            47000,
            47076,
            46948,
            47039,
            48796,
            47277,
            46994,
            46952,
            46975,
            47031,
            47067,
            46976,
            47182,
            47116,
            46996,
            46951,
            47071,
            46961,
            47143,
            47185,
            47929,
            47021,
            47131,
            48437,
            47514,
            47032
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            74,
            802,
            5916,
            19798,
            33444,
            39679,
            35678,
            24421,
            11795,
            3356,
            542,
            52,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            199,
            1900,
            9242,
            24080,
            36934,
            41173,
            36164,
            21804,
            8153,
            1898,
            193,
            14,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            199,
            1372,
            5028,
            12641,
            25640,
            37247,
            43181,
            38097,
            23052,
            8599,
            1889,
            222,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            28,
            463,
            2538,
            6771,
            15050,
            29652,
            40782,
            36755,
            27409,
            13319,
            4266,
            748,
            51,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            69
          ],
          [
            11110,
            3130,
            370,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            115,
            1568,
            8361,
            20303,
            32523,
            38664,
            29446,
            14927,
            5816,
            901,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            76,
            825,
            5676,
            15598,
            27701,
            35621,
            32337,
            21054,
            8127,
            1522,
            198,
            4,
            0,
            0,
            0,
            0
          ],
          [
            45,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            60,
            1054,
            6777,
            16789,
            27241,
            38172,
            40600,
            31406,
            20080,
            9207,
            2756,
            300,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            117,
            934,
            4740,
            15506,
            27240,
            35095,
            32586,
            22872,
            11175,
            3367,
            708,
            55,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            172,
            1597,
            5696,
            15882,
            27267,
            36856,
            41168,
            37259,
            24890,
            14026,
            4016,
            690,
            16,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            556,
            2701,
            7875,
            18789,
            30368,
            37307,
            36019,
            30685,
            22531,
            13186,
            5105,
            1271,
            69,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.27216601699910825,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff82ddadb0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff82ddadb0> = array([15, 12, 15, 13, 10]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff82f68580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47750, 47181, 47162, 47054, 48696, 49412, ...], [47750, 47181, 47162, 47054, 48696, 49412, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [11110, 3130, 370, 13, 0, 0, ...], [45, 2, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff82ddadb0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff82ddadb0> = array([15, 12, 15, 13, 10]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016138259998115245,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2924272399977781,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170150690999435,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004891668999334797,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}