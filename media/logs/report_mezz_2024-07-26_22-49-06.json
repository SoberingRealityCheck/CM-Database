{
  "created": 1722034165.530241,
  "duration": 23.265923023223877,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5089816459985741,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14823190000242903,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00136062100136769,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038021049986127764,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14808063700183993,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012805790029233322,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13260392200027127,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12177730900293682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012881980001111515,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037895649984420743,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117930599924875,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012490779990912415,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033457649988122284,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14657475299827638,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011980470007983968,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033398549967387225,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11993367900140584,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011784560010710265,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003315014000691008,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14626829700137023,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012140379985794425,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003348105001350632,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12003900999843609,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011819360006484203,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004381237999041332,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021000169981562067,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001157126000180142,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003322633998322999,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017252479992748704,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011027639993699268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032748739977250807,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004046430000016699,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034148.0916464,
            "msecs": 91.64643287658691,
            "relativeCreated": 7799.426317214966,
            "thread": 281473426612256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5536
          }
        ]
      },
      "teardown": {
        "duration": 0.0012141269980929792,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033324139985779766,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023927029978949577,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034148.1039863,
            "msecs": 103.98626327514648,
            "relativeCreated": 7811.766147613525,
            "thread": 281473426612256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5536
          }
        ]
      },
      "teardown": {
        "duration": 0.0011801059990830254,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020835469986195676,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027208510000491515,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034148.1134903,
            "msecs": 113.49034309387207,
            "relativeCreated": 7821.270227432251,
            "thread": 281473426612256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5536
          }
        ]
      },
      "teardown": {
        "duration": 0.001032593001582427,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002051536001090426,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003424635997362202,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034148.1229107,
            "msecs": 122.91073799133301,
            "relativeCreated": 7830.690622329712,
            "thread": 281473426612256,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5536
          }
        ]
      },
      "teardown": {
        "duration": 0.0011114039989479352,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033361639980284963,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14642255999933695,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011745859992515761,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00334558500253479,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12031123700216995,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012039270004606806,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17961122099950444,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14747249399806606,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012832789980166126,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015177848999883281,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12125061800179537,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012820480005757418,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8443484560011711,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            6,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            96,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            16,
            108,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035727799986489117,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029021449990978,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9065199840006244,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            7,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            12,
            255,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            14
          ],
          [
            230,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            217,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            33,
            255,
            255,
            255,
            16
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            66,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            132,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            140,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            185,
            0,
            130,
            255
          ],
          [
            255,
            0,
            166,
            0,
            255,
            0,
            220,
            68,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003470807001576759,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028967440011911094,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027663409993693,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48186,
            47465,
            47370,
            47423,
            47486,
            47366,
            47477,
            47418,
            49621,
            47458,
            47667,
            47441,
            50216,
            47498,
            47399,
            47443,
            47359,
            47523,
            47430,
            47479,
            47495,
            47276,
            47512,
            47614,
            47414,
            47329,
            47267,
            47428,
            47395,
            47285,
            47452,
            47360,
            47450,
            47338,
            47381,
            47502,
            47294,
            47514,
            47404,
            47303,
            47470,
            47314,
            47183,
            47289,
            47450,
            47823,
            47406,
            47730,
            47395,
            49942,
            47393,
            47375,
            47366,
            47470,
            47377,
            47480,
            47553,
            47347,
            47456,
            47356,
            47466,
            47354,
            47372
          ],
          [
            48186,
            47465,
            47370,
            47423,
            47486,
            47366,
            47477,
            47418,
            49621,
            47458,
            47667,
            47441,
            50216,
            47498,
            47399,
            47443,
            47359,
            47523,
            47430,
            47479,
            47495,
            47276,
            47512,
            47614,
            47414,
            47329,
            47267,
            47428,
            47395,
            47285,
            47452,
            47360,
            47450,
            47338,
            47381,
            47502,
            47294,
            47514,
            47404,
            47303,
            47470,
            47314,
            47183,
            47289,
            47450,
            47823,
            47406,
            47730,
            47395,
            49942,
            47393,
            47375,
            47366,
            47470,
            47377,
            47480,
            47553,
            47347,
            47456,
            47356,
            47466,
            47354,
            47372
          ]
        ],
        "eTX_errcounts": [
          [
            40743,
            26435,
            7974,
            1112,
            98,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            213,
            3459,
            15899,
            34006,
            42388,
            31211,
            14522,
            2071,
            117,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            974,
            8099,
            26420,
            40863,
            37228,
            18999,
            5356,
            574,
            8,
            1,
            0,
            0
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            332,
            4145,
            17694,
            35856,
            42425,
            31596,
            14142,
            3018,
            308,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            459,
            4334,
            19419,
            36464,
            45235,
            35501,
            16698,
            3198,
            392,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13357315300163464,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016347659984603524,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06903943199722562,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47764,
            47235,
            47115,
            47145,
            47103,
            47182,
            47177,
            47136,
            47061,
            47290,
            47368,
            47574,
            47082,
            47161,
            47066,
            47050,
            47083,
            47073,
            46979,
            47173,
            46744,
            47040,
            47017,
            47154,
            47249,
            47207,
            47067,
            47265,
            47066,
            47309,
            47192,
            47230,
            47210,
            46926,
            47163,
            46943,
            47241,
            47117,
            46925,
            47081,
            47050,
            47139,
            47054,
            47215,
            47141,
            46892,
            47182,
            47285,
            46995,
            47110,
            47370,
            47462,
            47257,
            47063,
            47158,
            47123,
            46967,
            47051,
            47192,
            47162,
            47080,
            47154,
            47219
          ],
          [
            47764,
            47235,
            47115,
            47145,
            47103,
            47182,
            47177,
            47136,
            47061,
            47290,
            47368,
            47574,
            47082,
            47161,
            47066,
            47050,
            47083,
            47073,
            46979,
            47173,
            46744,
            47040,
            47017,
            47154,
            47249,
            47207,
            47067,
            47265,
            47066,
            47309,
            47192,
            47230,
            47210,
            46926,
            47163,
            46943,
            47241,
            47117,
            46925,
            47081,
            47050,
            47139,
            47054,
            47215,
            47141,
            46892,
            47182,
            47285,
            46995,
            47110,
            47370,
            47462,
            47257,
            47063,
            47158,
            47123,
            46967,
            47051,
            47192,
            47162,
            47080,
            47154,
            47219
          ],
          [
            47764,
            47235,
            47115,
            47145,
            47103,
            47182,
            47177,
            47136,
            47061,
            47290,
            47368,
            47574,
            47082,
            47161,
            47066,
            47050,
            47083,
            47073,
            46979,
            47173,
            46744,
            47040,
            47017,
            47154,
            47249,
            47207,
            47067,
            47265,
            47066,
            47309,
            47192,
            47230,
            47210,
            46926,
            47163,
            46943,
            47241,
            47117,
            46925,
            47081,
            47050,
            47139,
            47054,
            47215,
            47141,
            46892,
            47182,
            47285,
            46995,
            47110,
            47370,
            47462,
            47257,
            47063,
            47158,
            47123,
            46967,
            47051,
            47192,
            47162,
            47080,
            47154,
            47219
          ],
          [
            47764,
            47235,
            47115,
            47145,
            47103,
            47182,
            47177,
            47136,
            47061,
            47290,
            47368,
            47574,
            47082,
            47161,
            47066,
            47050,
            47083,
            47073,
            46979,
            47173,
            46744,
            47040,
            47017,
            47154,
            47249,
            47207,
            47067,
            47265,
            47066,
            47309,
            47192,
            47230,
            47210,
            46926,
            47163,
            46943,
            47241,
            47117,
            46925,
            47081,
            47050,
            47139,
            47054,
            47215,
            47141,
            46892,
            47182,
            47285,
            46995,
            47110,
            47370,
            47462,
            47257,
            47063,
            47158,
            47123,
            46967,
            47051,
            47192,
            47162,
            47080,
            47154,
            47219
          ],
          [
            47764,
            47235,
            47115,
            47145,
            47103,
            47182,
            47177,
            47136,
            47061,
            47290,
            47368,
            47574,
            47082,
            47161,
            47066,
            47050,
            47083,
            47073,
            46979,
            47173,
            46744,
            47040,
            47017,
            47154,
            47249,
            47207,
            47067,
            47265,
            47066,
            47309,
            47192,
            47230,
            47210,
            46926,
            47163,
            46943,
            47241,
            47117,
            46925,
            47081,
            47050,
            47139,
            47054,
            47215,
            47141,
            46892,
            47182,
            47285,
            46995,
            47110,
            47370,
            47462,
            47257,
            47063,
            47158,
            47123,
            46967,
            47051,
            47192,
            47162,
            47080,
            47154,
            47219
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            139,
            1401,
            4928,
            11645,
            22514,
            31516,
            31427,
            25713,
            18722,
            12763,
            7103,
            2378,
            484,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            141,
            1589,
            5675,
            13709,
            25101,
            33781,
            37060,
            30961,
            21956,
            13027,
            6033,
            1236,
            146,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            6,
            197,
            1237,
            4184,
            9643,
            20622,
            34939,
            39175,
            35470,
            26013,
            16323,
            9351,
            3892,
            832,
            57,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            185,
            1653,
            5966,
            14724,
            25770,
            31807,
            35090,
            36287,
            29578,
            18572,
            7598,
            1974,
            144,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            50,
            537,
            2369,
            5969,
            13383,
            27166
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            85,
            922,
            4857,
            15547,
            30365,
            34952,
            32034,
            23416,
            13710,
            5775,
            1426,
            74,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            131,
            1263,
            6655,
            14907,
            28707,
            35630,
            33596,
            24365,
            12942,
            3885,
            556,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            328,
            1994,
            7827,
            19712,
            33113,
            37496,
            34144,
            26280,
            16594,
            7547,
            1977,
            307,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            462,
            2989,
            7727,
            16694,
            27214,
            35830,
            33987,
            26393,
            16760,
            7380,
            2081,
            199,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            10,
            159,
            1148,
            3489,
            7469,
            17626,
            33072,
            39470,
            36937,
            31146,
            23165,
            14131,
            8462,
            3589,
            620,
            60,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            103,
            1178,
            4860,
            12206,
            24636,
            32168,
            34775,
            37332,
            33082,
            24855,
            15354,
            8181,
            2420,
            340,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            75,
            873,
            3176,
            8314
          ]
        ]
      },
      "call": {
        "duration": 0.2713409089992638,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8ed8cc90>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8ed8cc90> = array([21, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8ed74370>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47764, 47235, 47115, 47145, 47103, 47182, ...], [47764, 47235, 47115, 47145, 47103, 47182, ...], [..., ...], [0, 0, 6, 197, 1237, 4184, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 10, 159, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8ed8cc90>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8ed8cc90> = array([21, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016214159986702725,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29344732299796306,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1707310849997157,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014556930000253487,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3058621409982152,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            209,
            73,
            12,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            33,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035104389971820638,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002906405003159307,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5347650319999957,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            71,
            255,
            118,
            255,
            126,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            145,
            0,
            143,
            3,
            255,
            46,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            52,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            13
          ],
          [
            7,
            255,
            208,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            222,
            255,
            122,
            255,
            255,
            9,
            0,
            168,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            112,
            255,
            78
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003482477000943618,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028691439983958844,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2958951079999679,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47978,
            47997,
            47434,
            47640,
            47548,
            47367,
            47553,
            47335,
            47531,
            47513,
            47449,
            47433,
            47547,
            47370,
            47442,
            47445,
            47361,
            47435,
            47382,
            46934,
            47079,
            47398,
            47376,
            47567,
            47553,
            47478,
            47589,
            47589,
            47373,
            47254,
            47338,
            47357,
            47402,
            47635,
            47809,
            47356,
            47785,
            47501,
            49867,
            47430,
            47468,
            47371,
            47287,
            47467,
            47243,
            47428,
            47217,
            47403,
            47363,
            47458,
            47412,
            47401,
            47394,
            47410,
            47425,
            47394,
            47339,
            47297,
            47397,
            47327,
            47396,
            47298,
            47271
          ],
          [
            47978,
            47997,
            47434,
            47640,
            47548,
            47367,
            47553,
            47335,
            47531,
            47513,
            47449,
            47433,
            47547,
            47370,
            47442,
            47445,
            47361,
            47435,
            47382,
            46934,
            47079,
            47398,
            47376,
            47567,
            47553,
            47478,
            47589,
            47589,
            47373,
            47254,
            47338,
            47357,
            47402,
            47635,
            47809,
            47356,
            47785,
            47501,
            49867,
            47430,
            47468,
            47371,
            47287,
            47467,
            47243,
            47428,
            47217,
            47403,
            47363,
            47458,
            47412,
            47401,
            47394,
            47410,
            47425,
            47394,
            47339,
            47297,
            47397,
            47327,
            47396,
            47298,
            47271
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            273,
            3608,
            17674,
            35152,
            36080,
            18908,
            4292,
            268,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            126,
            2751,
            17058,
            35041,
            39738,
            24848,
            8132,
            953,
            115,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            998,
            8516,
            29774,
            41983,
            38701,
            18433,
            4714,
            499,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            138,
            2548,
            13706,
            30859,
            42516,
            37998,
            19745,
            5165,
            620,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1335762419985258,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016108259987959173,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06875451499945484,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48516,
            47102,
            47151,
            47305,
            47084,
            47067,
            47259,
            47132,
            47161,
            46903,
            47064,
            47066,
            47178,
            47135,
            47089,
            47161,
            47174,
            47130,
            47287,
            47237,
            47258,
            49527,
            47077,
            47049,
            47284,
            47342,
            47085,
            47169,
            47281,
            47167,
            47070,
            46650,
            47132,
            47252,
            46921,
            47130,
            47295,
            47231,
            47299,
            47283,
            47211,
            47599,
            47131,
            47115,
            47060,
            47034,
            47283,
            47137,
            47078,
            47156,
            47265,
            47092,
            47100,
            46960,
            47237,
            47133,
            47273,
            47187,
            47178,
            46844,
            47344,
            47406,
            49486
          ],
          [
            48516,
            47102,
            47151,
            47305,
            47084,
            47067,
            47259,
            47132,
            47161,
            46903,
            47064,
            47066,
            47178,
            47135,
            47089,
            47161,
            47174,
            47130,
            47287,
            47237,
            47258,
            49527,
            47077,
            47049,
            47284,
            47342,
            47085,
            47169,
            47281,
            47167,
            47070,
            46650,
            47132,
            47252,
            46921,
            47130,
            47295,
            47231,
            47299,
            47283,
            47211,
            47599,
            47131,
            47115,
            47060,
            47034,
            47283,
            47137,
            47078,
            47156,
            47265,
            47092,
            47100,
            46960,
            47237,
            47133,
            47273,
            47187,
            47178,
            46844,
            47344,
            47406,
            49486
          ],
          [
            48516,
            47102,
            47151,
            47305,
            47084,
            47067,
            47259,
            47132,
            47161,
            46903,
            47064,
            47066,
            47178,
            47135,
            47089,
            47161,
            47174,
            47130,
            47287,
            47237,
            47258,
            49527,
            47077,
            47049,
            47284,
            47342,
            47085,
            47169,
            47281,
            47167,
            47070,
            46650,
            47132,
            47252,
            46921,
            47130,
            47295,
            47231,
            47299,
            47283,
            47211,
            47599,
            47131,
            47115,
            47060,
            47034,
            47283,
            47137,
            47078,
            47156,
            47265,
            47092,
            47100,
            46960,
            47237,
            47133,
            47273,
            47187,
            47178,
            46844,
            47344,
            47406,
            49486
          ],
          [
            48516,
            47102,
            47151,
            47305,
            47084,
            47067,
            47259,
            47132,
            47161,
            46903,
            47064,
            47066,
            47178,
            47135,
            47089,
            47161,
            47174,
            47130,
            47287,
            47237,
            47258,
            49527,
            47077,
            47049,
            47284,
            47342,
            47085,
            47169,
            47281,
            47167,
            47070,
            46650,
            47132,
            47252,
            46921,
            47130,
            47295,
            47231,
            47299,
            47283,
            47211,
            47599,
            47131,
            47115,
            47060,
            47034,
            47283,
            47137,
            47078,
            47156,
            47265,
            47092,
            47100,
            46960,
            47237,
            47133,
            47273,
            47187,
            47178,
            46844,
            47344,
            47406,
            49486
          ],
          [
            48516,
            47102,
            47151,
            47305,
            47084,
            47067,
            47259,
            47132,
            47161,
            46903,
            47064,
            47066,
            47178,
            47135,
            47089,
            47161,
            47174,
            47130,
            47287,
            47237,
            47258,
            49527,
            47077,
            47049,
            47284,
            47342,
            47085,
            47169,
            47281,
            47167,
            47070,
            46650,
            47132,
            47252,
            46921,
            47130,
            47295,
            47231,
            47299,
            47283,
            47211,
            47599,
            47131,
            47115,
            47060,
            47034,
            47283,
            47137,
            47078,
            47156,
            47265,
            47092,
            47100,
            46960,
            47237,
            47133,
            47273,
            47187,
            47178,
            46844,
            47344,
            47406,
            49486
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            33,
            562,
            3015,
            12043,
            24530,
            33745,
            34909,
            24737,
            11639,
            2742,
            293,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            18,
            616,
            3912,
            14018,
            26640,
            34952,
            37824,
            30095,
            18095,
            6936,
            1622,
            130,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            0,
            4,
            136,
            1338,
            6087,
            17618,
            32742,
            38875,
            33611,
            18618,
            6168,
            995,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            229,
            1584,
            10025,
            23592,
            36111,
            41892,
            40537,
            30716,
            16643,
            4307,
            428,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            30,
            306,
            2151,
            7341,
            18455,
            32126,
            40338
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            364,
            3714,
            14925,
            29756,
            36493,
            32810,
            18382,
            6666,
            1067,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            38,
            827,
            7453,
            21216,
            37192,
            41310,
            35631,
            22531,
            9921,
            1905,
            197,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            102,
            915,
            5640,
            19317,
            34573,
            39181,
            34384,
            20819,
            8110,
            1659,
            129,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            272,
            2752,
            12009,
            24273,
            34186,
            38562,
            35724,
            25711,
            11922,
            2963,
            244,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            151,
            1888,
            8802,
            21041,
            33022,
            38846,
            36009,
            25005,
            12485,
            3156,
            396,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            609,
            3637,
            14194,
            26209,
            35764,
            40681,
            37974,
            27599,
            13432,
            3733,
            487,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            82,
            899,
            5519,
            15814,
            32987
          ]
        ]
      },
      "call": {
        "duration": 0.2694099760010431,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015063039973028935,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29161098199983826,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1705045490016346,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014802629993937444,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.350047698000708,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            132,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035187190005672164,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002996887000335846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5349969069975486,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            5,
            255,
            0,
            52,
            0,
            255,
            0,
            255,
            255
          ],
          [
            68,
            0,
            7,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            31,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            252,
            255,
            0,
            14,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            1,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            16,
            255,
            86,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            1,
            0,
            255,
            2,
            255,
            255
          ],
          [
            73,
            0,
            0,
            0,
            2,
            0,
            255,
            210,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            73,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            77,
            0,
            6,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            142,
            255,
            97,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.003466696998657426,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028639839983952697,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29635918799976935,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48235,
            47651,
            47306,
            47486,
            47375,
            47479,
            47435,
            47363,
            47404,
            47346,
            47367,
            47174,
            47272,
            47417,
            47266,
            47295,
            47470,
            47461,
            47391,
            47563,
            47390,
            47365,
            47340,
            47436,
            47326,
            47419,
            47509,
            47470,
            47377,
            47412,
            47414,
            47527,
            47727,
            47307,
            47824,
            47549,
            49882,
            47533,
            47312,
            47438,
            47253,
            47567,
            47400,
            47555,
            47367,
            47385,
            47357,
            47625,
            47306,
            47490,
            47278,
            47562,
            47304,
            47453,
            47248,
            47601,
            47379,
            47473,
            47513,
            47600,
            47365,
            47498,
            46987
          ],
          [
            48235,
            47651,
            47306,
            47486,
            47375,
            47479,
            47435,
            47363,
            47404,
            47346,
            47367,
            47174,
            47272,
            47417,
            47266,
            47295,
            47470,
            47461,
            47391,
            47563,
            47390,
            47365,
            47340,
            47436,
            47326,
            47419,
            47509,
            47470,
            47377,
            47412,
            47414,
            47527,
            47727,
            47307,
            47824,
            47549,
            49882,
            47533,
            47312,
            47438,
            47253,
            47567,
            47400,
            47555,
            47367,
            47385,
            47357,
            47625,
            47306,
            47490,
            47278,
            47562,
            47304,
            47453,
            47248,
            47601,
            47379,
            47473,
            47513,
            47600,
            47365,
            47498,
            46987
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            596,
            7176,
            25226,
            39007,
            33957,
            14697,
            2197,
            254,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            83,
            651,
            7174,
            22838,
            38087,
            38265,
            20761,
            4888,
            651,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16
          ],
          [
            0,
            0,
            0,
            0,
            117,
            2104,
            15022,
            33774,
            40835,
            29026,
            9124,
            1332,
            117,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            748,
            6229,
            22399,
            38980,
            41312,
            31338,
            11881,
            2121,
            240,
            7,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            1038,
            8420,
            26273,
            41002,
            42905
          ]
        ]
      },
      "call": {
        "duration": 0.13358545300070546,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016097160005301703,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06943801999659627,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47745,
            47183,
            47045,
            47205,
            47112,
            46868,
            47523,
            47155,
            47157,
            47332,
            47222,
            47244,
            47262,
            47308,
            47120,
            47646,
            47144,
            47181,
            47285,
            47238,
            47142,
            47214,
            47117,
            47302,
            47150,
            47125,
            47114,
            47265,
            47297,
            47224,
            47076,
            47023,
            47244,
            47559,
            47629,
            47307,
            47129,
            47095,
            47185,
            47223,
            47130,
            47136,
            47284,
            47245,
            47131,
            47245,
            47242,
            47289,
            47351,
            47315,
            47121,
            47450,
            47201,
            48908,
            47355,
            47178,
            47067,
            47170,
            47278,
            47273,
            47153,
            47088,
            47382
          ],
          [
            47745,
            47183,
            47045,
            47205,
            47112,
            46868,
            47523,
            47155,
            47157,
            47332,
            47222,
            47244,
            47262,
            47308,
            47120,
            47646,
            47144,
            47181,
            47285,
            47238,
            47142,
            47214,
            47117,
            47302,
            47150,
            47125,
            47114,
            47265,
            47297,
            47224,
            47076,
            47023,
            47244,
            47559,
            47629,
            47307,
            47129,
            47095,
            47185,
            47223,
            47130,
            47136,
            47284,
            47245,
            47131,
            47245,
            47242,
            47289,
            47351,
            47315,
            47121,
            47450,
            47201,
            48908,
            47355,
            47178,
            47067,
            47170,
            47278,
            47273,
            47153,
            47088,
            47382
          ],
          [
            47745,
            47183,
            47045,
            47205,
            47112,
            46868,
            47523,
            47155,
            47157,
            47332,
            47222,
            47244,
            47262,
            47308,
            47120,
            47646,
            47144,
            47181,
            47285,
            47238,
            47142,
            47214,
            47117,
            47302,
            47150,
            47125,
            47114,
            47265,
            47297,
            47224,
            47076,
            47023,
            47244,
            47559,
            47629,
            47307,
            47129,
            47095,
            47185,
            47223,
            47130,
            47136,
            47284,
            47245,
            47131,
            47245,
            47242,
            47289,
            47351,
            47315,
            47121,
            47450,
            47201,
            48908,
            47355,
            47178,
            47067,
            47170,
            47278,
            47273,
            47153,
            47088,
            47382
          ],
          [
            47745,
            47183,
            47045,
            47205,
            47112,
            46868,
            47523,
            47155,
            47157,
            47332,
            47222,
            47244,
            47262,
            47308,
            47120,
            47646,
            47144,
            47181,
            47285,
            47238,
            47142,
            47214,
            47117,
            47302,
            47150,
            47125,
            47114,
            47265,
            47297,
            47224,
            47076,
            47023,
            47244,
            47559,
            47629,
            47307,
            47129,
            47095,
            47185,
            47223,
            47130,
            47136,
            47284,
            47245,
            47131,
            47245,
            47242,
            47289,
            47351,
            47315,
            47121,
            47450,
            47201,
            48908,
            47355,
            47178,
            47067,
            47170,
            47278,
            47273,
            47153,
            47088,
            47382
          ],
          [
            47745,
            47183,
            47045,
            47205,
            47112,
            46868,
            47523,
            47155,
            47157,
            47332,
            47222,
            47244,
            47262,
            47308,
            47120,
            47646,
            47144,
            47181,
            47285,
            47238,
            47142,
            47214,
            47117,
            47302,
            47150,
            47125,
            47114,
            47265,
            47297,
            47224,
            47076,
            47023,
            47244,
            47559,
            47629,
            47307,
            47129,
            47095,
            47185,
            47223,
            47130,
            47136,
            47284,
            47245,
            47131,
            47245,
            47242,
            47289,
            47351,
            47315,
            47121,
            47450,
            47201,
            48908,
            47355,
            47178,
            47067,
            47170,
            47278,
            47273,
            47153,
            47088,
            47382
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            114,
            1003,
            6339,
            18815,
            29459,
            33973,
            32169,
            24475,
            14830,
            6258,
            1467,
            166,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            557,
            3220,
            11026,
            22023,
            32108,
            35588,
            31142,
            19421,
            9971,
            3815,
            725,
            60,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            97,
            858,
            5032,
            15483,
            26684,
            33935,
            38162,
            37417,
            27338,
            13744,
            4633,
            602,
            39,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            129,
            1308,
            5465,
            15028,
            27284,
            35113,
            34271,
            25856,
            12677,
            4228,
            795,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            14379,
            5089,
            884,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            188,
            2712,
            10685,
            23380,
            34550,
            39046,
            32578,
            19268,
            7810,
            1619,
            118,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            395,
            3840,
            14968,
            28367,
            38395,
            36648,
            23136,
            9607,
            2049,
            164,
            13,
            0,
            0,
            0,
            0
          ],
          [
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            68,
            967,
            7753,
            19509,
            31193,
            38536,
            39202,
            33873,
            23762,
            12713,
            3811,
            478,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            52,
            566,
            3302,
            12743,
            25320,
            35935,
            33808,
            22919,
            10466,
            4152,
            829,
            89,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            74,
            1248,
            6111,
            17992,
            28041,
            37163,
            39264,
            35464,
            23989,
            13124,
            3370,
            623,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            177,
            1614,
            6622,
            17725,
            30170,
            38735,
            39751,
            33134,
            21946,
            12830,
            5798,
            1629,
            162,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2700726309994934,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014870129998598713,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29207029200188117,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170638171999599,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004814146999706281,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}