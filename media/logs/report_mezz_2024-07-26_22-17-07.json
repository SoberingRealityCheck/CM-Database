{
  "created": 1722032247.280684,
  "duration": 23.44792866706848,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5060939960021642,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14801548899777117,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013088390005577821,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038042050000512972,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14798761799829663,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013009790018259082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13330244199823937,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12150198000017554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012851989995397162,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003779964001296321,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12094303800040507,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001265307997527998,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003337004000059096,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14649835500313202,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001221566999447532,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033348139986628667,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11986502299987478,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012019470013910905,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003343304997542873,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14620329900208162,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011618359967542347,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033406040020054206,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12015693099965574,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001167566002550302,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004381116999866208,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020923960000800434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011195949991815723,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033024429976649117,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016950370008999016,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011239749983360525,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032998629976646043,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004030289001093479,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032229.581948,
            "msecs": 581.9480419158936,
            "relativeCreated": 7721.925497055054,
            "thread": 281473432375328,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4619
          }
        ]
      },
      "teardown": {
        "duration": 0.001246887997695012,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033488850021967664,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002416674000414787,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032229.5941885,
            "msecs": 594.1884517669678,
            "relativeCreated": 7734.165906906128,
            "thread": 281473432375328,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4619
          }
        ]
      },
      "teardown": {
        "duration": 0.001150644999142969,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020617660011339467,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027062099979957566,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032229.6036656,
            "msecs": 603.6655902862549,
            "relativeCreated": 7743.643045425415,
            "thread": 281473432375328,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4619
          }
        ]
      },
      "teardown": {
        "duration": 0.0010834439999598544,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020848059975833166,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034258970008522738,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032229.6130552,
            "msecs": 613.0552291870117,
            "relativeCreated": 7753.032684326172,
            "thread": 281473432375328,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4619
          }
        ]
      },
      "teardown": {
        "duration": 0.0010712030016293284,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033310340004391037,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14610189599989098,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011801360014942475,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033130039992101956,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1200935990018479,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001181906001875177,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17775851000260445,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14744310699825292,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012656980034080334,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015083525999216363,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12103471899899887,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012938079999003094,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8353192829999898,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            7,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            48,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            12,
            126,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035673790007422213,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028741240021190606,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8984705549992213,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            3,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            2,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            63,
            255,
            255,
            255,
            3
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            36,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            51,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            2,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            211,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            223,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            2,
            197,
            255
          ],
          [
            255,
            0,
            95,
            0,
            255,
            0,
            255,
            103,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003512867999234004,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029277049980009906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3023650489994907,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48113,
            47471,
            47420,
            47386,
            47293,
            47503,
            47416,
            47177,
            47301,
            47570,
            47551,
            47565,
            47675,
            47664,
            47457,
            47412,
            47313,
            47440,
            47415,
            47127,
            47152,
            47494,
            47521,
            47194,
            47289,
            47476,
            47424,
            47448,
            47455,
            47307,
            47564,
            47419,
            47511,
            47569,
            47487,
            47526,
            47421,
            47583,
            47625,
            47548,
            49298,
            47594,
            47714,
            47346,
            47351,
            47705,
            47633,
            47522,
            47360,
            47486,
            47456,
            47469,
            47432,
            47466,
            47353,
            47353,
            47256,
            47416,
            47286,
            47364,
            47329,
            47296,
            47348
          ],
          [
            48113,
            47471,
            47420,
            47386,
            47293,
            47503,
            47416,
            47177,
            47301,
            47570,
            47551,
            47565,
            47675,
            47664,
            47457,
            47412,
            47313,
            47440,
            47415,
            47127,
            47152,
            47494,
            47521,
            47194,
            47289,
            47476,
            47424,
            47448,
            47455,
            47307,
            47564,
            47419,
            47511,
            47569,
            47487,
            47526,
            47421,
            47583,
            47625,
            47548,
            49298,
            47594,
            47714,
            47346,
            47351,
            47705,
            47633,
            47522,
            47360,
            47486,
            47456,
            47469,
            47432,
            47466,
            47353,
            47353,
            47256,
            47416,
            47286,
            47364,
            47329,
            47296,
            47348
          ]
        ],
        "eTX_errcounts": [
          [
            40346,
            27096,
            8313,
            1625,
            80,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            156,
            3055,
            15750,
            34776,
            42757,
            31842,
            14128,
            2385,
            181,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            818,
            7412,
            25657,
            40430,
            38291,
            19339,
            5200,
            605,
            16,
            0,
            0,
            0
          ],
          [
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            271,
            4111,
            17150,
            35749,
            42017,
            31910,
            13631,
            3015,
            266,
            8,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            398,
            4105,
            19198,
            36566,
            42790,
            35654,
            17480,
            3455,
            374,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13400751800145372,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016000260002329014,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06893190100163338,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48239,
            47245,
            47052,
            47171,
            47122,
            47240,
            47309,
            47137,
            47042,
            46713,
            47130,
            47140,
            47110,
            47065,
            47237,
            47198,
            47123,
            47241,
            47154,
            48985,
            47490,
            47158,
            47041,
            47092,
            47140,
            47014,
            47158,
            47136,
            46952,
            47028,
            47111,
            47149,
            47169,
            47166,
            46819,
            47057,
            46990,
            47178,
            47245,
            47418,
            47523,
            47254,
            47105,
            47252,
            47145,
            47175,
            47003,
            47102,
            47012,
            47148,
            47125,
            47163,
            47187,
            47173,
            47295,
            47212,
            47401,
            47151,
            47103,
            47036,
            47412,
            47323,
            47140
          ],
          [
            48239,
            47245,
            47052,
            47171,
            47122,
            47240,
            47309,
            47137,
            47042,
            46713,
            47130,
            47140,
            47110,
            47065,
            47237,
            47198,
            47123,
            47241,
            47154,
            48985,
            47490,
            47158,
            47041,
            47092,
            47140,
            47014,
            47158,
            47136,
            46952,
            47028,
            47111,
            47149,
            47169,
            47166,
            46819,
            47057,
            46990,
            47178,
            47245,
            47418,
            47523,
            47254,
            47105,
            47252,
            47145,
            47175,
            47003,
            47102,
            47012,
            47148,
            47125,
            47163,
            47187,
            47173,
            47295,
            47212,
            47401,
            47151,
            47103,
            47036,
            47412,
            47323,
            47140
          ],
          [
            48239,
            47245,
            47052,
            47171,
            47122,
            47240,
            47309,
            47137,
            47042,
            46713,
            47130,
            47140,
            47110,
            47065,
            47237,
            47198,
            47123,
            47241,
            47154,
            48985,
            47490,
            47158,
            47041,
            47092,
            47140,
            47014,
            47158,
            47136,
            46952,
            47028,
            47111,
            47149,
            47169,
            47166,
            46819,
            47057,
            46990,
            47178,
            47245,
            47418,
            47523,
            47254,
            47105,
            47252,
            47145,
            47175,
            47003,
            47102,
            47012,
            47148,
            47125,
            47163,
            47187,
            47173,
            47295,
            47212,
            47401,
            47151,
            47103,
            47036,
            47412,
            47323,
            47140
          ],
          [
            48239,
            47245,
            47052,
            47171,
            47122,
            47240,
            47309,
            47137,
            47042,
            46713,
            47130,
            47140,
            47110,
            47065,
            47237,
            47198,
            47123,
            47241,
            47154,
            48985,
            47490,
            47158,
            47041,
            47092,
            47140,
            47014,
            47158,
            47136,
            46952,
            47028,
            47111,
            47149,
            47169,
            47166,
            46819,
            47057,
            46990,
            47178,
            47245,
            47418,
            47523,
            47254,
            47105,
            47252,
            47145,
            47175,
            47003,
            47102,
            47012,
            47148,
            47125,
            47163,
            47187,
            47173,
            47295,
            47212,
            47401,
            47151,
            47103,
            47036,
            47412,
            47323,
            47140
          ],
          [
            48239,
            47245,
            47052,
            47171,
            47122,
            47240,
            47309,
            47137,
            47042,
            46713,
            47130,
            47140,
            47110,
            47065,
            47237,
            47198,
            47123,
            47241,
            47154,
            48985,
            47490,
            47158,
            47041,
            47092,
            47140,
            47014,
            47158,
            47136,
            46952,
            47028,
            47111,
            47149,
            47169,
            47166,
            46819,
            47057,
            46990,
            47178,
            47245,
            47418,
            47523,
            47254,
            47105,
            47252,
            47145,
            47175,
            47003,
            47102,
            47012,
            47148,
            47125,
            47163,
            47187,
            47173,
            47295,
            47212,
            47401,
            47151,
            47103,
            47036,
            47412,
            47323,
            47140
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            147,
            1093,
            4865,
            13123,
            23848,
            30659,
            31640,
            28405,
            22888,
            13957,
            3762,
            464,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            51,
            710,
            3693,
            12581,
            25673,
            32226,
            32331,
            27403,
            22581,
            16134,
            10285,
            4048,
            716,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            8,
            70,
            686,
            3141,
            9715,
            19814,
            30426,
            36769,
            34553,
            26246,
            15514,
            5322,
            906,
            121,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            372,
            3226,
            12082,
            23048,
            32468,
            37374,
            38111,
            31544,
            22092,
            10961,
            3595,
            617,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            231,
            1317,
            5819,
            15786,
            26260
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            63,
            931,
            5743,
            15850,
            27779,
            31634,
            32283,
            25758,
            15730,
            5844,
            1059,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            163,
            1563,
            8369,
            17078,
            28011,
            33633,
            31357,
            24740,
            16586,
            9269,
            3032,
            321,
            24,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            201,
            1888,
            8368,
            18595,
            29473,
            34554,
            34248,
            29293,
            19313,
            9389,
            2298,
            145,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            392,
            2988,
            9807,
            19890,
            28755,
            34072,
            31132,
            26830,
            20427,
            12388,
            5211,
            969,
            73,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            50,
            471,
            3424,
            10336,
            20367,
            30171,
            37445,
            39219,
            31321,
            21533,
            11464,
            4103,
            879,
            97,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            836,
            4114,
            10954,
            21845,
            32495,
            38746,
            39134,
            34036,
            26925,
            18733,
            8135,
            1699,
            117,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            272,
            1914,
            7756
          ]
        ]
      },
      "call": {
        "duration": 0.27129944899934344,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8f38bdb0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8f38bdb0> = array([21, 13, 17, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8f3a2580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48239, 47245, 47052, 47171, 47122, 47240, ...], [48239, 47245, 47052, 47171, 47122, 47240, ...], [...0, 0, ...], [0, 0, 8, 70, 686, 3141, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 50, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8f38bdb0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8f38bdb0> = array([21, 13, 17, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016181160026462749,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2927376549996552,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169416007000109,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00142506200063508,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2963798079981643,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            17,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            254,
            73,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035059069996350445,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002887803999328753,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.538626749003015,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            150,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            184,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            74,
            255,
            131,
            255,
            128,
            0,
            0,
            210,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            245,
            0,
            84,
            0,
            255,
            30,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            99,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            166,
            255,
            202,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            194,
            255,
            121,
            255,
            255,
            1,
            0,
            81,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            74,
            255,
            162
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034555359998194035,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002883574001316447,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29563941000014893,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48136,
            47244,
            47347,
            47541,
            47548,
            47602,
            47339,
            47427,
            47541,
            47294,
            47675,
            47561,
            47407,
            47620,
            47486,
            47457,
            47630,
            47603,
            47440,
            47666,
            47652,
            47517,
            47539,
            47705,
            47423,
            47563,
            47509,
            47425,
            48000,
            47622,
            47521,
            47755,
            49783,
            47419,
            47432,
            47598,
            47491,
            47585,
            47604,
            47519,
            47679,
            47650,
            47396,
            47390,
            47415,
            47454,
            47391,
            47574,
            47268,
            47626,
            47521,
            47440,
            47418,
            47305,
            47367,
            47685,
            47703,
            47490,
            47656,
            47616,
            47567,
            47542,
            47620
          ],
          [
            48136,
            47244,
            47347,
            47541,
            47548,
            47602,
            47339,
            47427,
            47541,
            47294,
            47675,
            47561,
            47407,
            47620,
            47486,
            47457,
            47630,
            47603,
            47440,
            47666,
            47652,
            47517,
            47539,
            47705,
            47423,
            47563,
            47509,
            47425,
            48000,
            47622,
            47521,
            47755,
            49783,
            47419,
            47432,
            47598,
            47491,
            47585,
            47604,
            47519,
            47679,
            47650,
            47396,
            47390,
            47415,
            47454,
            47391,
            47574,
            47268,
            47626,
            47521,
            47440,
            47418,
            47305,
            47367,
            47685,
            47703,
            47490,
            47656,
            47616,
            47567,
            47542,
            47620
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            234,
            3486,
            17267,
            36266,
            36884,
            19838,
            4603,
            454,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            136,
            2496,
            15436,
            34221,
            40436,
            26676,
            8512,
            1012,
            64,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            789,
            8062,
            28392,
            41601,
            39224,
            19071,
            4961,
            525,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            176,
            2368,
            13473,
            31086,
            42223,
            38825,
            21256,
            6156,
            706,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13371471099890186,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015897949997452088,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06879476899848669,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47420,
            47297,
            47143,
            47167,
            47063,
            47060,
            47198,
            47047,
            47116,
            47189,
            47185,
            47214,
            47289,
            47255,
            47213,
            47255,
            47162,
            47243,
            47641,
            47269,
            47168,
            47183,
            47144,
            47163,
            47140,
            46904,
            47139,
            47121,
            47252,
            47178,
            47330,
            46917,
            47265,
            47271,
            47148,
            47198,
            47187,
            47303,
            47561,
            49069,
            47114,
            47046,
            47258,
            47097,
            47121,
            47251,
            47042,
            47236,
            47060,
            47099,
            46833,
            47171,
            47067,
            47061,
            47215,
            47299,
            47405,
            47198,
            47105,
            47584,
            47110,
            47154,
            47058
          ],
          [
            47420,
            47297,
            47143,
            47167,
            47063,
            47060,
            47198,
            47047,
            47116,
            47189,
            47185,
            47214,
            47289,
            47255,
            47213,
            47255,
            47162,
            47243,
            47641,
            47269,
            47168,
            47183,
            47144,
            47163,
            47140,
            46904,
            47139,
            47121,
            47252,
            47178,
            47330,
            46917,
            47265,
            47271,
            47148,
            47198,
            47187,
            47303,
            47561,
            49069,
            47114,
            47046,
            47258,
            47097,
            47121,
            47251,
            47042,
            47236,
            47060,
            47099,
            46833,
            47171,
            47067,
            47061,
            47215,
            47299,
            47405,
            47198,
            47105,
            47584,
            47110,
            47154,
            47058
          ],
          [
            47420,
            47297,
            47143,
            47167,
            47063,
            47060,
            47198,
            47047,
            47116,
            47189,
            47185,
            47214,
            47289,
            47255,
            47213,
            47255,
            47162,
            47243,
            47641,
            47269,
            47168,
            47183,
            47144,
            47163,
            47140,
            46904,
            47139,
            47121,
            47252,
            47178,
            47330,
            46917,
            47265,
            47271,
            47148,
            47198,
            47187,
            47303,
            47561,
            49069,
            47114,
            47046,
            47258,
            47097,
            47121,
            47251,
            47042,
            47236,
            47060,
            47099,
            46833,
            47171,
            47067,
            47061,
            47215,
            47299,
            47405,
            47198,
            47105,
            47584,
            47110,
            47154,
            47058
          ],
          [
            47420,
            47297,
            47143,
            47167,
            47063,
            47060,
            47198,
            47047,
            47116,
            47189,
            47185,
            47214,
            47289,
            47255,
            47213,
            47255,
            47162,
            47243,
            47641,
            47269,
            47168,
            47183,
            47144,
            47163,
            47140,
            46904,
            47139,
            47121,
            47252,
            47178,
            47330,
            46917,
            47265,
            47271,
            47148,
            47198,
            47187,
            47303,
            47561,
            49069,
            47114,
            47046,
            47258,
            47097,
            47121,
            47251,
            47042,
            47236,
            47060,
            47099,
            46833,
            47171,
            47067,
            47061,
            47215,
            47299,
            47405,
            47198,
            47105,
            47584,
            47110,
            47154,
            47058
          ],
          [
            47420,
            47297,
            47143,
            47167,
            47063,
            47060,
            47198,
            47047,
            47116,
            47189,
            47185,
            47214,
            47289,
            47255,
            47213,
            47255,
            47162,
            47243,
            47641,
            47269,
            47168,
            47183,
            47144,
            47163,
            47140,
            46904,
            47139,
            47121,
            47252,
            47178,
            47330,
            46917,
            47265,
            47271,
            47148,
            47198,
            47187,
            47303,
            47561,
            49069,
            47114,
            47046,
            47258,
            47097,
            47121,
            47251,
            47042,
            47236,
            47060,
            47099,
            46833,
            47171,
            47067,
            47061,
            47215,
            47299,
            47405,
            47198,
            47105,
            47584,
            47110,
            47154,
            47058
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            298,
            2511,
            11277,
            26020,
            36801,
            37059,
            26657,
            13159,
            3204,
            277,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            28,
            544,
            2809,
            12055,
            29611,
            38345,
            39271,
            30011,
            17230,
            4856,
            1037,
            94,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15
          ],
          [
            0,
            0,
            11,
            425,
            4057,
            15491,
            31585,
            39462,
            35088,
            19712,
            6585,
            969,
            37,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            129,
            901,
            6799,
            22704,
            38813,
            43840,
            39398,
            26833,
            12442,
            2706,
            174,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            90,
            1314,
            7299,
            20643,
            35285,
            39329
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            355,
            3317,
            13127,
            26701,
            34375,
            28749,
            14933,
            3865,
            408,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            747,
            6333,
            18696,
            35207,
            40072,
            32663,
            18262,
            6440,
            863,
            37,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            734,
            5119,
            17533,
            32635,
            38349,
            32242,
            18352,
            5889,
            946,
            73,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            151,
            1870,
            9311,
            22218,
            35703,
            41550,
            35377,
            22566,
            8439,
            1530,
            105,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            79,
            1564,
            8228,
            19812,
            33601,
            40878,
            37462,
            26209,
            12949,
            3164,
            328,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            345,
            2526,
            11242,
            25775,
            38444,
            43520,
            38804,
            27145,
            12774,
            4109,
            1009,
            104,
            4,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            680,
            5777,
            17277,
            31762
          ]
        ]
      },
      "call": {
        "duration": 0.26947447800193913,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001512994000222534,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2913462540018372,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1695251199998893,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001422961002390366,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.367516007998347,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            81,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.008441497997409897,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002886304002458928,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5340210769973055,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            5,
            255,
            0,
            24,
            0,
            255,
            0,
            255,
            255
          ],
          [
            63,
            0,
            11,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            23,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            178,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            21,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            34,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            255,
            1,
            255,
            255
          ],
          [
            58,
            0,
            0,
            0,
            0,
            0,
            255,
            97,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            100,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            84,
            0,
            8,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            113,
            255,
            70,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.0034632770002644975,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028785940012312494,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29587053499926697,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48102,
            47308,
            47401,
            47316,
            47292,
            47258,
            47541,
            47316,
            47466,
            47376,
            47484,
            47453,
            47550,
            47328,
            47394,
            47253,
            47376,
            47424,
            47410,
            47310,
            47383,
            47410,
            47492,
            47391,
            47432,
            47407,
            47389,
            47346,
            49005,
            47683,
            47829,
            47385,
            50178,
            47465,
            47380,
            47568,
            47470,
            47519,
            47407,
            47506,
            47291,
            47315,
            47324,
            47348,
            47356,
            47371,
            47422,
            47462,
            47386,
            47446,
            47376,
            47407,
            47438,
            47363,
            47423,
            47351,
            47512,
            47329,
            47326,
            47506,
            47420,
            49264,
            47464
          ],
          [
            48102,
            47308,
            47401,
            47316,
            47292,
            47258,
            47541,
            47316,
            47466,
            47376,
            47484,
            47453,
            47550,
            47328,
            47394,
            47253,
            47376,
            47424,
            47410,
            47310,
            47383,
            47410,
            47492,
            47391,
            47432,
            47407,
            47389,
            47346,
            49005,
            47683,
            47829,
            47385,
            50178,
            47465,
            47380,
            47568,
            47470,
            47519,
            47407,
            47506,
            47291,
            47315,
            47324,
            47348,
            47356,
            47371,
            47422,
            47462,
            47386,
            47446,
            47376,
            47407,
            47438,
            47363,
            47423,
            47351,
            47512,
            47329,
            47326,
            47506,
            47420,
            49264,
            47464
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            12,
            518,
            6887,
            24811,
            39645,
            34075,
            15214,
            3059,
            189,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            776,
            6663,
            22367,
            38772,
            37715,
            21694,
            5153,
            804,
            21,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            162,
            1813,
            14085,
            32828,
            40998,
            29234,
            10212,
            1742,
            127,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            617,
            6139,
            22411,
            38632,
            41270,
            30224,
            12601,
            2159,
            221,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            901,
            8103,
            24914,
            41690,
            43927
          ]
        ]
      },
      "call": {
        "duration": 0.133690590999322,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015995750000001863,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689016010001069,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47702,
            47337,
            47262,
            47352,
            47143,
            47144,
            47041,
            47389,
            47300,
            47210,
            47138,
            47324,
            47446,
            47172,
            47244,
            47341,
            47502,
            47199,
            47067,
            46695,
            47288,
            47091,
            47256,
            46987,
            47088,
            47116,
            47186,
            47316,
            47036,
            47223,
            47113,
            46864,
            47412,
            47314,
            47139,
            47222,
            47690,
            47298,
            47031,
            47057,
            47012,
            47187,
            47162,
            47189,
            46854,
            47166,
            47110,
            47303,
            47066,
            47202,
            47198,
            47173,
            47350,
            47320,
            47166,
            47182,
            47345,
            47311,
            46985,
            47098,
            47198,
            47114,
            47203
          ],
          [
            47702,
            47337,
            47262,
            47352,
            47143,
            47144,
            47041,
            47389,
            47300,
            47210,
            47138,
            47324,
            47446,
            47172,
            47244,
            47341,
            47502,
            47199,
            47067,
            46695,
            47288,
            47091,
            47256,
            46987,
            47088,
            47116,
            47186,
            47316,
            47036,
            47223,
            47113,
            46864,
            47412,
            47314,
            47139,
            47222,
            47690,
            47298,
            47031,
            47057,
            47012,
            47187,
            47162,
            47189,
            46854,
            47166,
            47110,
            47303,
            47066,
            47202,
            47198,
            47173,
            47350,
            47320,
            47166,
            47182,
            47345,
            47311,
            46985,
            47098,
            47198,
            47114,
            47203
          ],
          [
            47702,
            47337,
            47262,
            47352,
            47143,
            47144,
            47041,
            47389,
            47300,
            47210,
            47138,
            47324,
            47446,
            47172,
            47244,
            47341,
            47502,
            47199,
            47067,
            46695,
            47288,
            47091,
            47256,
            46987,
            47088,
            47116,
            47186,
            47316,
            47036,
            47223,
            47113,
            46864,
            47412,
            47314,
            47139,
            47222,
            47690,
            47298,
            47031,
            47057,
            47012,
            47187,
            47162,
            47189,
            46854,
            47166,
            47110,
            47303,
            47066,
            47202,
            47198,
            47173,
            47350,
            47320,
            47166,
            47182,
            47345,
            47311,
            46985,
            47098,
            47198,
            47114,
            47203
          ],
          [
            47702,
            47337,
            47262,
            47352,
            47143,
            47144,
            47041,
            47389,
            47300,
            47210,
            47138,
            47324,
            47446,
            47172,
            47244,
            47341,
            47502,
            47199,
            47067,
            46695,
            47288,
            47091,
            47256,
            46987,
            47088,
            47116,
            47186,
            47316,
            47036,
            47223,
            47113,
            46864,
            47412,
            47314,
            47139,
            47222,
            47690,
            47298,
            47031,
            47057,
            47012,
            47187,
            47162,
            47189,
            46854,
            47166,
            47110,
            47303,
            47066,
            47202,
            47198,
            47173,
            47350,
            47320,
            47166,
            47182,
            47345,
            47311,
            46985,
            47098,
            47198,
            47114,
            47203
          ],
          [
            47702,
            47337,
            47262,
            47352,
            47143,
            47144,
            47041,
            47389,
            47300,
            47210,
            47138,
            47324,
            47446,
            47172,
            47244,
            47341,
            47502,
            47199,
            47067,
            46695,
            47288,
            47091,
            47256,
            46987,
            47088,
            47116,
            47186,
            47316,
            47036,
            47223,
            47113,
            46864,
            47412,
            47314,
            47139,
            47222,
            47690,
            47298,
            47031,
            47057,
            47012,
            47187,
            47162,
            47189,
            46854,
            47166,
            47110,
            47303,
            47066,
            47202,
            47198,
            47173,
            47350,
            47320,
            47166,
            47182,
            47345,
            47311,
            46985,
            47098,
            47198,
            47114,
            47203
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            104,
            778,
            5211,
            16333,
            30578,
            38369,
            35203,
            25857,
            13628,
            4242,
            783,
            124,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            328,
            2197,
            10178,
            23177,
            36390,
            39010,
            32587,
            20529,
            7946,
            1829,
            104,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            344,
            2410,
            10851,
            26281,
            38638,
            41186,
            34988,
            22721,
            9800,
            2354,
            232,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            88,
            893,
            5266,
            15823,
            29817,
            38622,
            35624,
            26330,
            12456,
            2205,
            273,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11221,
            3114,
            306,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            98,
            1851,
            8833,
            21473,
            34674,
            37506,
            28795,
            15096,
            4969,
            685,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            389,
            4279,
            15034,
            27994,
            38838,
            34863,
            22380,
            9977,
            1941,
            215,
            13,
            0,
            0,
            0,
            0
          ],
          [
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            24,
            576,
            4493,
            15445,
            28635,
            39587,
            40835,
            32839,
            21064,
            8212,
            1531,
            52,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            238,
            2374,
            12622,
            26633,
            38296,
            35237,
            24061,
            11202,
            2817,
            336,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            38,
            631,
            4066,
            15019,
            27878,
            39573,
            42369,
            35480,
            24103,
            12795,
            3929,
            1094,
            120,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            102,
            1143,
            6596,
            18611,
            31769,
            40407,
            40447,
            31980,
            20681,
            9424,
            2376,
            334,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27005400100097177,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001500633003161056,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29156192899972666,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1699838000022282,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045588, 10011397), (411336, 411336), (40048596, 10012149))\nassert ((40045588 > 0 and 10011397 == 0\n  +10011397\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff8f3a2370>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff8f151100>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff8f3eb4c0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045588, 10011397), (411336, 411336), (40048596, 10012149))\nE       assert ((40045588 > 0 and 10011397 == 0\nE         +10011397\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.00494717000037781,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}