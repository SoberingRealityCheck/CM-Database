{
  "created": 1722029261.3946521,
  "duration": 34.89714336395264,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.505945745997451,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14859154499936267,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013429499995254446,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003927267000108259,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14777504700032296,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012980689971300308,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13106137399881845,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12204647199905594,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012965390014869627,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038315650017466396,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12163642399900709,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001320629999099765,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003388095003174385,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14819259599971701,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012108570008422248,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003377236000233097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12113166199924308,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011870369999087416,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003390586000023177,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14759192199926474,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011782469991885591,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003377924997039372,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12112938199788914,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012292780011193827,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004414328999700956,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021505080003407784,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011648060026345775,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003428326999710407,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017357189972244669,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011320449993945658,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033449539987486787,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004074570999364369,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029235.0512943,
            "msecs": 51.29432678222656,
            "relativeCreated": 10584.842920303345,
            "thread": 281473721843744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3958
          }
        ]
      },
      "teardown": {
        "duration": 0.0012437379991752096,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003372014998603845,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024263339983008336,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029235.0637498,
            "msecs": 63.74979019165039,
            "relativeCreated": 10597.298383712769,
            "thread": 281473721843744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3958
          }
        ]
      },
      "teardown": {
        "duration": 0.0012337479965935927,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002126837000105297,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002753700999164721,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029235.0733972,
            "msecs": 73.39715957641602,
            "relativeCreated": 10606.945753097534,
            "thread": 281473721843744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3958
          }
        ]
      },
      "teardown": {
        "duration": 0.0010676940000848845,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.012934097998368088,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0035044979995291214,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029235.0938668,
            "msecs": 93.86682510375977,
            "relativeCreated": 10627.415418624878,
            "thread": 281473721843744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3958
          }
        ]
      },
      "teardown": {
        "duration": 0.0011406559970055241,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003379064997716341,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14704666000034194,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011801660002674907,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033884250005939975,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12074969399691327,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012303279982006643,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1763901350022934,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14803728200058686,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012864889977208804,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0152355099999113,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12187369800085435,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013109690007695463,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.738816672001121,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            8,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            128,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            240,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            17,
            153,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0036631109978770837,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029247059974295553,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.904333664002479,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            1,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            12,
            255,
            11,
            255,
            0,
            0,
            0,
            0,
            0,
            38
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            55,
            255,
            255,
            255,
            4
          ],
          [
            13,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            60,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            122,
            0,
            0,
            0,
            0
          ],
          [
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            150,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            3,
            0,
            1,
            255
          ],
          [
            255,
            166,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            2,
            150,
            255
          ],
          [
            255,
            0,
            122,
            0,
            255,
            0,
            255,
            123,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003499938000459224,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002914115000749007,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031401129992446,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48370,
            47482,
            47656,
            47483,
            47479,
            47412,
            47369,
            47266,
            47608,
            47366,
            47601,
            47404,
            49211,
            47390,
            47878,
            47379,
            47450,
            47461,
            47370,
            47541,
            47429,
            47441,
            47373,
            47638,
            47392,
            47451,
            47686,
            47338,
            47308,
            47467,
            47466,
            47447,
            47710,
            47538,
            47060,
            47246,
            47540,
            47450,
            47536,
            47439,
            47563,
            49780,
            47565,
            47592,
            47688,
            47343,
            47375,
            47218,
            47436,
            47365,
            47749,
            47285,
            47381,
            47434,
            47325,
            47268,
            47652,
            47580,
            47371,
            47373,
            47373,
            47350,
            47514
          ],
          [
            48370,
            47482,
            47656,
            47483,
            47479,
            47412,
            47369,
            47266,
            47608,
            47366,
            47601,
            47404,
            49211,
            47390,
            47878,
            47379,
            47450,
            47461,
            47370,
            47541,
            47429,
            47441,
            47373,
            47638,
            47392,
            47451,
            47686,
            47338,
            47308,
            47467,
            47466,
            47447,
            47710,
            47538,
            47060,
            47246,
            47540,
            47450,
            47536,
            47439,
            47563,
            49780,
            47565,
            47592,
            47688,
            47343,
            47375,
            47218,
            47436,
            47365,
            47749,
            47285,
            47381,
            47434,
            47325,
            47268,
            47652,
            47580,
            47371,
            47373,
            47373,
            47350,
            47514
          ]
        ],
        "eTX_errcounts": [
          [
            40934,
            28360,
            9546,
            1725,
            126,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            147,
            2249,
            14234,
            32934,
            42209,
            32463,
            16169,
            2431,
            149,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            673,
            6607,
            23273,
            39694,
            38740,
            21549,
            6744,
            769,
            42,
            5,
            0,
            0
          ],
          [
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            275,
            3213,
            15937,
            34596,
            42635,
            33235,
            14772,
            3790,
            410,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            295,
            3538,
            17297,
            35290,
            42826,
            36567,
            19100,
            4027,
            461,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13504981300138752,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016294859997287858,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.07431750800242298,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48664,
            47430,
            47330,
            47375,
            47389,
            47353,
            47287,
            47309,
            47280,
            47372,
            47401,
            47432,
            47421,
            47534,
            47382,
            47284,
            47727,
            47475,
            47417,
            47325,
            47310,
            47346,
            47404,
            47375,
            47421,
            47364,
            47505,
            47433,
            47398,
            47433,
            47138,
            47389,
            47372,
            47949,
            47247,
            47410,
            47306,
            47292,
            47199,
            47042,
            48034,
            47351,
            47398,
            47423,
            47426,
            47383,
            47415,
            47339,
            47434,
            47879,
            47488,
            47374,
            47236,
            47444,
            47401,
            47402,
            47310,
            47344,
            47248,
            47421,
            47322,
            47458,
            47304
          ],
          [
            48664,
            47430,
            47330,
            47375,
            47389,
            47353,
            47287,
            47309,
            47280,
            47372,
            47401,
            47432,
            47421,
            47534,
            47382,
            47284,
            47727,
            47475,
            47417,
            47325,
            47310,
            47346,
            47404,
            47375,
            47421,
            47364,
            47505,
            47433,
            47398,
            47433,
            47138,
            47389,
            47372,
            47949,
            47247,
            47410,
            47306,
            47292,
            47199,
            47042,
            48034,
            47351,
            47398,
            47423,
            47426,
            47383,
            47415,
            47339,
            47434,
            47879,
            47488,
            47374,
            47236,
            47444,
            47401,
            47402,
            47310,
            47344,
            47248,
            47421,
            47322,
            47458,
            47304
          ],
          [
            48664,
            47430,
            47330,
            47375,
            47389,
            47353,
            47287,
            47309,
            47280,
            47372,
            47401,
            47432,
            47421,
            47534,
            47382,
            47284,
            47727,
            47475,
            47417,
            47325,
            47310,
            47346,
            47404,
            47375,
            47421,
            47364,
            47505,
            47433,
            47398,
            47433,
            47138,
            47389,
            47372,
            47949,
            47247,
            47410,
            47306,
            47292,
            47199,
            47042,
            48034,
            47351,
            47398,
            47423,
            47426,
            47383,
            47415,
            47339,
            47434,
            47879,
            47488,
            47374,
            47236,
            47444,
            47401,
            47402,
            47310,
            47344,
            47248,
            47421,
            47322,
            47458,
            47304
          ],
          [
            48664,
            47430,
            47330,
            47375,
            47389,
            47353,
            47287,
            47309,
            47280,
            47372,
            47401,
            47432,
            47421,
            47534,
            47382,
            47284,
            47727,
            47475,
            47417,
            47325,
            47310,
            47346,
            47404,
            47375,
            47421,
            47364,
            47505,
            47433,
            47398,
            47433,
            47138,
            47389,
            47372,
            47949,
            47247,
            47410,
            47306,
            47292,
            47199,
            47042,
            48034,
            47351,
            47398,
            47423,
            47426,
            47383,
            47415,
            47339,
            47434,
            47879,
            47488,
            47374,
            47236,
            47444,
            47401,
            47402,
            47310,
            47344,
            47248,
            47421,
            47322,
            47458,
            47304
          ],
          [
            48664,
            47430,
            47330,
            47375,
            47389,
            47353,
            47287,
            47309,
            47280,
            47372,
            47401,
            47432,
            47421,
            47534,
            47382,
            47284,
            47727,
            47475,
            47417,
            47325,
            47310,
            47346,
            47404,
            47375,
            47421,
            47364,
            47505,
            47433,
            47398,
            47433,
            47138,
            47389,
            47372,
            47949,
            47247,
            47410,
            47306,
            47292,
            47199,
            47042,
            48034,
            47351,
            47398,
            47423,
            47426,
            47383,
            47415,
            47339,
            47434,
            47879,
            47488,
            47374,
            47236,
            47444,
            47401,
            47402,
            47310,
            47344,
            47248,
            47421,
            47322,
            47458,
            47304
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            231,
            1777,
            7247,
            19437,
            32035,
            36627,
            33421,
            24317,
            12196,
            3530,
            672,
            126,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            26,
            589,
            3242,
            10203,
            21470,
            30938,
            35650,
            33065,
            25685,
            15232,
            6324,
            1672,
            247,
            19,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            126,
            990,
            3478,
            8176,
            19628,
            34431,
            39755,
            36870,
            28219,
            18434,
            10743,
            4567,
            1045,
            115,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            81,
            833,
            4356,
            13151,
            24826,
            31436,
            33938,
            36210,
            30382,
            19596,
            9018,
            2196,
            305,
            27,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            34,
            427,
            1875,
            4897,
            11767,
            24193
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            54,
            787,
            4028,
            12949,
            27991,
            35099,
            33660,
            25494,
            14770,
            6626,
            1612,
            138,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            78,
            927,
            4905,
            12843,
            26182,
            34946,
            34977,
            27123,
            14323,
            4563,
            734,
            58,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            206,
            1576,
            6676,
            16954,
            31847,
            37765,
            35959,
            28438,
            18557,
            8711,
            2424,
            233,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            30,
            418,
            2390,
            6904,
            14809,
            25410,
            35889,
            35400,
            28645,
            18260,
            9026,
            2796,
            242,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            11,
            146,
            887,
            3238,
            6674,
            15091,
            30897,
            39397,
            38029,
            32705,
            24852,
            15558,
            9369,
            3962,
            713,
            118,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            65,
            891,
            4178,
            10891,
            21878,
            31940,
            34885,
            37544,
            35370,
            26569,
            16983,
            8929,
            2590,
            369,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            76,
            687,
            2704,
            7052
          ]
        ]
      },
      "call": {
        "duration": 0.2740936740010511,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9b10acf0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9b10acf0> = array([21, 11, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9b0f83d0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48664, 47430, 47330, 47375, 47389, 47353, ...], [48664, 47430, 47330, 47375, 47389, 47353, ...], [...0, ...], [0, 0, 3, 126, 990, 3478, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 1, 11, 146, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9b10acf0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9b10acf0> = array([21, 11, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016590369996265508,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2937112319996231,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17037297600109,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014477719996648375,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.311478050000005,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            27,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            173,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          3,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035370190016692504,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002922575000411598,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5360029669973301,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            64,
            255,
            107,
            255,
            111,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            215,
            0,
            147,
            3,
            255,
            41,
            255,
            14
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            62,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            5,
            255,
            205,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            210,
            255,
            151,
            255,
            255,
            3,
            0,
            182,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            174,
            255,
            123
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003498078000120586,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002918915000918787,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961791469970194,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48211,
            47482,
            47590,
            47512,
            47648,
            47353,
            47707,
            47725,
            49201,
            47183,
            47623,
            47453,
            47651,
            47617,
            47497,
            47492,
            47413,
            47569,
            47649,
            47544,
            47490,
            47475,
            47372,
            47352,
            47723,
            47523,
            47699,
            47568,
            47476,
            47595,
            47501,
            47532,
            47484,
            47841,
            47505,
            49263,
            47516,
            47437,
            47640,
            47452,
            47475,
            47400,
            47600,
            47405,
            47533,
            47352,
            47415,
            47264,
            47673,
            47352,
            47527,
            47331,
            47452,
            47402,
            47701,
            47452,
            47568,
            47480,
            47740,
            47074,
            52961,
            47444,
            47503
          ],
          [
            48211,
            47482,
            47590,
            47512,
            47648,
            47353,
            47707,
            47725,
            49201,
            47183,
            47623,
            47453,
            47651,
            47617,
            47497,
            47492,
            47413,
            47569,
            47649,
            47544,
            47490,
            47475,
            47372,
            47352,
            47723,
            47523,
            47699,
            47568,
            47476,
            47595,
            47501,
            47532,
            47484,
            47841,
            47505,
            49263,
            47516,
            47437,
            47640,
            47452,
            47475,
            47400,
            47600,
            47405,
            47533,
            47352,
            47415,
            47264,
            47673,
            47352,
            47527,
            47331,
            47452,
            47402,
            47701,
            47452,
            47568,
            47480,
            47740,
            47074,
            52961,
            47444,
            47503
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            151,
            3260,
            17259,
            35704,
            37174,
            19703,
            4851,
            310,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            94,
            2436,
            15658,
            34602,
            40898,
            26494,
            8641,
            1241,
            66,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            824,
            8451,
            28945,
            41565,
            39398,
            19528,
            5133,
            458,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            160,
            2431,
            13394,
            31618,
            42174,
            39383,
            20269,
            5480,
            737,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13523659700149437,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016221370024140924,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06894249799734098,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48114,
            47618,
            47445,
            47642,
            47821,
            47258,
            47226,
            47297,
            47426,
            47339,
            47324,
            47250,
            47548,
            47558,
            47323,
            47334,
            47468,
            47389,
            47349,
            47652,
            47437,
            47348,
            47311,
            47335,
            47371,
            47273,
            47262,
            47317,
            46976,
            47379,
            47446,
            47087,
            47476,
            47340,
            47559,
            49222,
            49438,
            47361,
            47347,
            47394,
            47288,
            47255,
            47446,
            47305,
            47313,
            47379,
            47462,
            47423,
            47367,
            47523,
            47318,
            47449,
            47678,
            47303,
            47318,
            47363,
            47378,
            47287,
            47201,
            47250,
            47459,
            47471,
            47212
          ],
          [
            48114,
            47618,
            47445,
            47642,
            47821,
            47258,
            47226,
            47297,
            47426,
            47339,
            47324,
            47250,
            47548,
            47558,
            47323,
            47334,
            47468,
            47389,
            47349,
            47652,
            47437,
            47348,
            47311,
            47335,
            47371,
            47273,
            47262,
            47317,
            46976,
            47379,
            47446,
            47087,
            47476,
            47340,
            47559,
            49222,
            49438,
            47361,
            47347,
            47394,
            47288,
            47255,
            47446,
            47305,
            47313,
            47379,
            47462,
            47423,
            47367,
            47523,
            47318,
            47449,
            47678,
            47303,
            47318,
            47363,
            47378,
            47287,
            47201,
            47250,
            47459,
            47471,
            47212
          ],
          [
            48114,
            47618,
            47445,
            47642,
            47821,
            47258,
            47226,
            47297,
            47426,
            47339,
            47324,
            47250,
            47548,
            47558,
            47323,
            47334,
            47468,
            47389,
            47349,
            47652,
            47437,
            47348,
            47311,
            47335,
            47371,
            47273,
            47262,
            47317,
            46976,
            47379,
            47446,
            47087,
            47476,
            47340,
            47559,
            49222,
            49438,
            47361,
            47347,
            47394,
            47288,
            47255,
            47446,
            47305,
            47313,
            47379,
            47462,
            47423,
            47367,
            47523,
            47318,
            47449,
            47678,
            47303,
            47318,
            47363,
            47378,
            47287,
            47201,
            47250,
            47459,
            47471,
            47212
          ],
          [
            48114,
            47618,
            47445,
            47642,
            47821,
            47258,
            47226,
            47297,
            47426,
            47339,
            47324,
            47250,
            47548,
            47558,
            47323,
            47334,
            47468,
            47389,
            47349,
            47652,
            47437,
            47348,
            47311,
            47335,
            47371,
            47273,
            47262,
            47317,
            46976,
            47379,
            47446,
            47087,
            47476,
            47340,
            47559,
            49222,
            49438,
            47361,
            47347,
            47394,
            47288,
            47255,
            47446,
            47305,
            47313,
            47379,
            47462,
            47423,
            47367,
            47523,
            47318,
            47449,
            47678,
            47303,
            47318,
            47363,
            47378,
            47287,
            47201,
            47250,
            47459,
            47471,
            47212
          ],
          [
            48114,
            47618,
            47445,
            47642,
            47821,
            47258,
            47226,
            47297,
            47426,
            47339,
            47324,
            47250,
            47548,
            47558,
            47323,
            47334,
            47468,
            47389,
            47349,
            47652,
            47437,
            47348,
            47311,
            47335,
            47371,
            47273,
            47262,
            47317,
            46976,
            47379,
            47446,
            47087,
            47476,
            47340,
            47559,
            49222,
            49438,
            47361,
            47347,
            47394,
            47288,
            47255,
            47446,
            47305,
            47313,
            47379,
            47462,
            47423,
            47367,
            47523,
            47318,
            47449,
            47678,
            47303,
            47318,
            47363,
            47378,
            47287,
            47201,
            47250,
            47459,
            47471,
            47212
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            209,
            2370,
            11584,
            25399,
            34631,
            34344,
            23914,
            11498,
            3095,
            462,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            40,
            746,
            4141,
            14180,
            30343,
            38665,
            33849,
            20460,
            7403,
            1057,
            82,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50
          ],
          [
            0,
            9,
            195,
            1403,
            6405,
            17856,
            32274,
            38675,
            33905,
            19545,
            7147,
            1139,
            127,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            132,
            1649,
            9554,
            23606,
            36047,
            42496,
            42156,
            33147,
            17936,
            5581,
            292,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            225,
            1695,
            6395,
            16419,
            29519,
            37881,
            32931
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            422,
            3482,
            15120,
            30284,
            36675,
            32765,
            19098,
            7207,
            1246,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            573,
            4761,
            18362,
            33474,
            41677,
            38089,
            25660,
            11879,
            3095,
            274,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            91,
            859,
            5919,
            18783,
            33504,
            38569,
            34423,
            21064,
            9145,
            1654,
            107,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            184,
            2342,
            16676,
            31409,
            37619,
            37190,
            27557,
            15286,
            4531,
            627,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            9,
            207,
            1956,
            8529,
            20956,
            33623,
            39643,
            36511,
            25803,
            12475,
            3056,
            453,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            488,
            3777,
            14226,
            26634,
            37279,
            42818,
            38609,
            28586,
            8966,
            780,
            55,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            660,
            3910,
            14708,
            28654,
            40512
          ]
        ]
      },
      "call": {
        "duration": 0.27276314399932744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015085240011103451,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918656509973516,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703802359988913,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00145602300108294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.3156482619997405,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            66,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003535369000019273,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029357460007304326,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5384071609987586,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            4,
            255,
            0,
            79,
            0,
            255,
            0,
            255,
            255
          ],
          [
            74,
            0,
            5,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            30,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            164,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            13,
            255,
            76,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            13,
            0,
            255,
            17,
            255,
            255
          ],
          [
            58,
            0,
            2,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            77,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            109,
            0,
            14,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11,
            255,
            167,
            255,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035270289990876336,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029084140005579684,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296364881000045,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48287,
            48100,
            47635,
            47644,
            47624,
            47426,
            47463,
            47389,
            47594,
            47449,
            47533,
            47411,
            47536,
            47296,
            47410,
            47473,
            47486,
            47146,
            47188,
            47613,
            47391,
            47723,
            49577,
            47402,
            47822,
            47417,
            47383,
            47508,
            47339,
            47468,
            47245,
            47184,
            47306,
            47401,
            47426,
            47420,
            47465,
            47460,
            47465,
            47466,
            47500,
            47594,
            47648,
            47467,
            47490,
            48895,
            47474,
            47713,
            47668,
            47649,
            47508,
            47481,
            47469,
            47328,
            47515,
            47541,
            47573,
            47657,
            47447,
            47283,
            47491,
            47232,
            47250
          ],
          [
            48287,
            48100,
            47635,
            47644,
            47624,
            47426,
            47463,
            47389,
            47594,
            47449,
            47533,
            47411,
            47536,
            47296,
            47410,
            47473,
            47486,
            47146,
            47188,
            47613,
            47391,
            47723,
            49577,
            47402,
            47822,
            47417,
            47383,
            47508,
            47339,
            47468,
            47245,
            47184,
            47306,
            47401,
            47426,
            47420,
            47465,
            47460,
            47465,
            47466,
            47500,
            47594,
            47648,
            47467,
            47490,
            48895,
            47474,
            47713,
            47668,
            47649,
            47508,
            47481,
            47469,
            47328,
            47515,
            47541,
            47573,
            47657,
            47447,
            47283,
            47491,
            47232,
            47250
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            458,
            5717,
            22759,
            39053,
            35061,
            16278,
            3318,
            297,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            528,
            5805,
            21258,
            37439,
            38244,
            22388,
            6058,
            774,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26
          ],
          [
            0,
            0,
            0,
            1,
            79,
            1533,
            13479,
            31741,
            41568,
            30545,
            10652,
            1887,
            129,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            648,
            5269,
            21315,
            38009,
            42164,
            30988,
            12837,
            2161,
            186,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            37,
            739,
            7189,
            24692,
            39180,
            43453
          ]
        ]
      },
      "call": {
        "duration": 0.13576292899961118,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016607769975962583,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0693650869980047,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48346,
            47718,
            47445,
            47435,
            47411,
            47630,
            47420,
            46880,
            47270,
            47401,
            47350,
            47325,
            47435,
            47331,
            47317,
            47585,
            47504,
            47578,
            47337,
            47423,
            47584,
            47431,
            47410,
            47252,
            47209,
            47520,
            47281,
            47268,
            47371,
            47343,
            47304,
            47495,
            47162,
            47301,
            47275,
            47393,
            47218,
            47688,
            47272,
            47308,
            47246,
            47183,
            47313,
            47419,
            47344,
            47371,
            47241,
            47269,
            47316,
            47560,
            47369,
            47486,
            47376,
            47671,
            47454,
            47493,
            47041,
            47328,
            47338,
            47370,
            47433,
            47370,
            47221
          ],
          [
            48346,
            47718,
            47445,
            47435,
            47411,
            47630,
            47420,
            46880,
            47270,
            47401,
            47350,
            47325,
            47435,
            47331,
            47317,
            47585,
            47504,
            47578,
            47337,
            47423,
            47584,
            47431,
            47410,
            47252,
            47209,
            47520,
            47281,
            47268,
            47371,
            47343,
            47304,
            47495,
            47162,
            47301,
            47275,
            47393,
            47218,
            47688,
            47272,
            47308,
            47246,
            47183,
            47313,
            47419,
            47344,
            47371,
            47241,
            47269,
            47316,
            47560,
            47369,
            47486,
            47376,
            47671,
            47454,
            47493,
            47041,
            47328,
            47338,
            47370,
            47433,
            47370,
            47221
          ],
          [
            48346,
            47718,
            47445,
            47435,
            47411,
            47630,
            47420,
            46880,
            47270,
            47401,
            47350,
            47325,
            47435,
            47331,
            47317,
            47585,
            47504,
            47578,
            47337,
            47423,
            47584,
            47431,
            47410,
            47252,
            47209,
            47520,
            47281,
            47268,
            47371,
            47343,
            47304,
            47495,
            47162,
            47301,
            47275,
            47393,
            47218,
            47688,
            47272,
            47308,
            47246,
            47183,
            47313,
            47419,
            47344,
            47371,
            47241,
            47269,
            47316,
            47560,
            47369,
            47486,
            47376,
            47671,
            47454,
            47493,
            47041,
            47328,
            47338,
            47370,
            47433,
            47370,
            47221
          ],
          [
            48346,
            47718,
            47445,
            47435,
            47411,
            47630,
            47420,
            46880,
            47270,
            47401,
            47350,
            47325,
            47435,
            47331,
            47317,
            47585,
            47504,
            47578,
            47337,
            47423,
            47584,
            47431,
            47410,
            47252,
            47209,
            47520,
            47281,
            47268,
            47371,
            47343,
            47304,
            47495,
            47162,
            47301,
            47275,
            47393,
            47218,
            47688,
            47272,
            47308,
            47246,
            47183,
            47313,
            47419,
            47344,
            47371,
            47241,
            47269,
            47316,
            47560,
            47369,
            47486,
            47376,
            47671,
            47454,
            47493,
            47041,
            47328,
            47338,
            47370,
            47433,
            47370,
            47221
          ],
          [
            48346,
            47718,
            47445,
            47435,
            47411,
            47630,
            47420,
            46880,
            47270,
            47401,
            47350,
            47325,
            47435,
            47331,
            47317,
            47585,
            47504,
            47578,
            47337,
            47423,
            47584,
            47431,
            47410,
            47252,
            47209,
            47520,
            47281,
            47268,
            47371,
            47343,
            47304,
            47495,
            47162,
            47301,
            47275,
            47393,
            47218,
            47688,
            47272,
            47308,
            47246,
            47183,
            47313,
            47419,
            47344,
            47371,
            47241,
            47269,
            47316,
            47560,
            47369,
            47486,
            47376,
            47671,
            47454,
            47493,
            47041,
            47328,
            47338,
            47370,
            47433,
            47370,
            47221
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            177,
            1562,
            7835,
            16878,
            27288,
            35321,
            36405,
            29762,
            15439,
            3967,
            557,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            194,
            1955,
            8881,
            20893,
            33078,
            38105,
            34572,
            22164,
            9495,
            3068,
            531,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            21,
            540,
            4129,
            14865,
            26362,
            34078,
            38807,
            37404,
            27768,
            14971,
            6220,
            1120,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            78,
            1030,
            4960,
            14130,
            26375,
            34729,
            35656,
            28257,
            15030,
            5293,
            1107,
            92,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            15399,
            6166,
            1303,
            91,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            188,
            1776,
            9077,
            21879,
            33544,
            40084,
            33824,
            21784,
            9543,
            2176,
            267,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            288,
            3384,
            12417,
            26200,
            37590,
            36639,
            25711,
            10767,
            2622,
            276,
            3,
            0,
            0,
            0,
            0
          ],
          [
            113,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            62,
            942,
            5757,
            18590,
            30038,
            38434,
            39706,
            34726,
            25200,
            14175,
            4298,
            645,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            2,
            33,
            428,
            2600,
            11096,
            23237,
            34567,
            34779,
            24494,
            12098,
            4785,
            1203,
            77,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            1067,
            5381,
            16577,
            27935,
            36766,
            39538,
            36168,
            25976,
            14145,
            4060,
            669,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            150,
            1272,
            5443,
            15836,
            28355,
            38429,
            40716,
            34716,
            24042,
            13977,
            6496,
            2007,
            173,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27291692799917655,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015006639987404924,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2921803879980871,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170264223997947,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00493382000058773,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}