{
  "created": 1722032386.2505221,
  "duration": 23.45986580848694,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5058159200016235,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1481060609985434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013123800017638132,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037980249981046654,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477223830006551,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012872989973402582,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13173436800207128,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12147665999873425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001282197998079937,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003770242998143658,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12110504099837271,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012945290000061505,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003352034000272397,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14639479299876257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011866460008604918,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003304452999145724,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11984072300037951,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001167385998996906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003346964000229491,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14603274500041152,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011835259974759538,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033404239984520245,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11971027999970829,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011862259998451918,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0043624569989333395,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021098270008224063,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001158805000159191,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003312344000732992,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017360790006932802,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010969750001095235,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032692330023564864,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004069049999088747,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032368.5518773,
            "msecs": 551.8772602081299,
            "relativeCreated": 7732.942581176758,
            "thread": 281473196642336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4686
          }
        ]
      },
      "teardown": {
        "duration": 0.0011989470003754832,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033520949982630555,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023972029994183686,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032368.5641918,
            "msecs": 564.1918182373047,
            "relativeCreated": 7745.257139205933,
            "thread": 281473196642336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4686
          }
        ]
      },
      "teardown": {
        "duration": 0.0011796860017057043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020757759994012304,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002715300001000287,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032368.57368,
            "msecs": 573.6799240112305,
            "relativeCreated": 7754.745244979858,
            "thread": 281473196642336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4686
          }
        ]
      },
      "teardown": {
        "duration": 0.0010362829998484813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020590359999914654,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034225960007461254,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032368.5831032,
            "msecs": 583.1031799316406,
            "relativeCreated": 7764.168500900269,
            "thread": 281473196642336,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4686
          }
        ]
      },
      "teardown": {
        "duration": 0.001128414998674998,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033403939996787813,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1463631129990972,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011648059989965986,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003324583998619346,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11986013400019147,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011646259990811814,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17975034399933065,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1472430620015075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001249136999831535,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01529568999831099,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12093961700156797,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012995990000490565,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8468690600020636,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            6,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            97,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            26,
            124,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035511189998942427,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028928440005984157,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8948100839988911,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            13,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            1,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            33,
            255,
            255,
            255,
            18
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            57,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            137,
            0,
            0,
            0,
            0
          ],
          [
            0,
            3,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            173,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            205,
            255,
            255,
            255,
            255,
            0,
            0,
            152,
            0,
            102,
            255
          ],
          [
            255,
            0,
            187,
            0,
            255,
            0,
            240,
            64,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003465166999376379,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002900045001297258,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3022205960005522,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48443,
            47639,
            47557,
            47450,
            47600,
            47575,
            47589,
            47648,
            47640,
            47685,
            47694,
            47700,
            47684,
            50213,
            47556,
            47749,
            47644,
            49898,
            47544,
            47577,
            47542,
            47447,
            47506,
            47490,
            47532,
            47616,
            47720,
            47605,
            47589,
            47602,
            47780,
            47680,
            47753,
            47655,
            47772,
            47310,
            47376,
            47779,
            47621,
            47581,
            47641,
            47659,
            47680,
            47655,
            49229,
            47623,
            47646,
            47682,
            47903,
            47646,
            47584,
            47698,
            47613,
            47782,
            47724,
            47545,
            47559,
            47545,
            47441,
            47442,
            47530,
            47698,
            47578
          ],
          [
            48443,
            47639,
            47557,
            47450,
            47600,
            47575,
            47589,
            47648,
            47640,
            47685,
            47694,
            47700,
            47684,
            50213,
            47556,
            47749,
            47644,
            49898,
            47544,
            47577,
            47542,
            47447,
            47506,
            47490,
            47532,
            47616,
            47720,
            47605,
            47589,
            47602,
            47780,
            47680,
            47753,
            47655,
            47772,
            47310,
            47376,
            47779,
            47621,
            47581,
            47641,
            47659,
            47680,
            47655,
            49229,
            47623,
            47646,
            47682,
            47903,
            47646,
            47584,
            47698,
            47613,
            47782,
            47724,
            47545,
            47559,
            47545,
            47441,
            47442,
            47530,
            47698,
            47578
          ]
        ],
        "eTX_errcounts": [
          [
            40945,
            27276,
            8622,
            1357,
            133,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            192,
            3025,
            15776,
            33697,
            42650,
            31621,
            14556,
            2175,
            158,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            814,
            7419,
            26205,
            40575,
            38163,
            20027,
            5208,
            638,
            36,
            0,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            239,
            4124,
            16661,
            35656,
            42136,
            32461,
            14195,
            3599,
            443,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            397,
            4263,
            18973,
            37223,
            42989,
            35477,
            17515,
            3323,
            381,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13426423399869236,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016046460004872642,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06892632200106164,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48588,
            47546,
            47434,
            47481,
            47375,
            47352,
            47337,
            47351,
            47393,
            47477,
            47301,
            47411,
            47276,
            47414,
            47530,
            47664,
            47359,
            46603,
            47695,
            47260,
            47269,
            47551,
            47561,
            47381,
            47353,
            47435,
            47474,
            47480,
            47525,
            47791,
            47735,
            47169,
            47554,
            47690,
            47443,
            47632,
            47483,
            47282,
            47486,
            47538,
            47373,
            46967,
            47396,
            47264,
            47403,
            47427,
            47379,
            47404,
            47762,
            47470,
            47450,
            49272,
            49282,
            47423,
            47538,
            47480,
            47336,
            47481,
            47381,
            47326,
            47364,
            47409,
            47526
          ],
          [
            48588,
            47546,
            47434,
            47481,
            47375,
            47352,
            47337,
            47351,
            47393,
            47477,
            47301,
            47411,
            47276,
            47414,
            47530,
            47664,
            47359,
            46603,
            47695,
            47260,
            47269,
            47551,
            47561,
            47381,
            47353,
            47435,
            47474,
            47480,
            47525,
            47791,
            47735,
            47169,
            47554,
            47690,
            47443,
            47632,
            47483,
            47282,
            47486,
            47538,
            47373,
            46967,
            47396,
            47264,
            47403,
            47427,
            47379,
            47404,
            47762,
            47470,
            47450,
            49272,
            49282,
            47423,
            47538,
            47480,
            47336,
            47481,
            47381,
            47326,
            47364,
            47409,
            47526
          ],
          [
            48588,
            47546,
            47434,
            47481,
            47375,
            47352,
            47337,
            47351,
            47393,
            47477,
            47301,
            47411,
            47276,
            47414,
            47530,
            47664,
            47359,
            46603,
            47695,
            47260,
            47269,
            47551,
            47561,
            47381,
            47353,
            47435,
            47474,
            47480,
            47525,
            47791,
            47735,
            47169,
            47554,
            47690,
            47443,
            47632,
            47483,
            47282,
            47486,
            47538,
            47373,
            46967,
            47396,
            47264,
            47403,
            47427,
            47379,
            47404,
            47762,
            47470,
            47450,
            49272,
            49282,
            47423,
            47538,
            47480,
            47336,
            47481,
            47381,
            47326,
            47364,
            47409,
            47526
          ],
          [
            48588,
            47546,
            47434,
            47481,
            47375,
            47352,
            47337,
            47351,
            47393,
            47477,
            47301,
            47411,
            47276,
            47414,
            47530,
            47664,
            47359,
            46603,
            47695,
            47260,
            47269,
            47551,
            47561,
            47381,
            47353,
            47435,
            47474,
            47480,
            47525,
            47791,
            47735,
            47169,
            47554,
            47690,
            47443,
            47632,
            47483,
            47282,
            47486,
            47538,
            47373,
            46967,
            47396,
            47264,
            47403,
            47427,
            47379,
            47404,
            47762,
            47470,
            47450,
            49272,
            49282,
            47423,
            47538,
            47480,
            47336,
            47481,
            47381,
            47326,
            47364,
            47409,
            47526
          ],
          [
            48588,
            47546,
            47434,
            47481,
            47375,
            47352,
            47337,
            47351,
            47393,
            47477,
            47301,
            47411,
            47276,
            47414,
            47530,
            47664,
            47359,
            46603,
            47695,
            47260,
            47269,
            47551,
            47561,
            47381,
            47353,
            47435,
            47474,
            47480,
            47525,
            47791,
            47735,
            47169,
            47554,
            47690,
            47443,
            47632,
            47483,
            47282,
            47486,
            47538,
            47373,
            46967,
            47396,
            47264,
            47403,
            47427,
            47379,
            47404,
            47762,
            47470,
            47450,
            49272,
            49282,
            47423,
            47538,
            47480,
            47336,
            47481,
            47381,
            47326,
            47364,
            47409,
            47526
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            137,
            1163,
            4788,
            11597,
            22077,
            31650,
            31615,
            25807,
            19274,
            12735,
            7055,
            2557,
            410,
            27,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            138,
            1676,
            6273,
            13506,
            25099,
            33822,
            37311,
            31579,
            22494,
            13257,
            5765,
            1391,
            185,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            178,
            1299,
            3984,
            9276,
            20920,
            35516,
            39438,
            35219,
            26500,
            16466,
            9696,
            4178,
            984,
            94,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            223,
            1455,
            5650,
            14620,
            25741,
            32018,
            35063,
            36496,
            29795,
            18158,
            7877,
            1915,
            240,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            59,
            567,
            2271,
            5993,
            13188,
            26654
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            58,
            1032,
            4873,
            15312,
            30471,
            35027,
            32614,
            24244,
            13833,
            5820,
            1558,
            130,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            107,
            1173,
            6291,
            14675,
            28804,
            35831,
            34310,
            25227,
            13964,
            3980,
            642,
            38,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            286,
            2028,
            7237,
            18702,
            33407,
            37155,
            34826,
            26669,
            16743,
            7852,
            1943,
            230,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            31,
            617,
            2778,
            7700,
            16229,
            27033,
            36223,
            34958,
            26707,
            16371,
            7736,
            2165,
            229,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            6,
            121,
            1010,
            3427,
            7669,
            17052,
            32932,
            39355,
            37163,
            31459,
            23862,
            14755,
            8390,
            3544,
            625,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            75,
            1014,
            4580,
            12061,
            23882,
            32039,
            35232,
            37326,
            33711,
            24883,
            16167,
            8323,
            2399,
            350,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            106,
            866,
            2927,
            8095
          ]
        ]
      },
      "call": {
        "duration": 0.273422025002219,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff81274870>()\n +    where <built-in method all of numpy.ndarray object at 0xffff81274870> = array([21, 12, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff81252580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48588, 47546, 47434, 47481, 47375, 47352, ...], [48588, 47546, 47434, 47481, 47375, 47352, ...], [...0, ...], [0, 0, 3, 178, 1299, 3984, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 1, 6, 121, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff81274870>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff81274870> = array([21, 12, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016092959995148703,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2925242300007085,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169604321999941,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001449423001758987,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2924590500006161,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            32,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            58,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003495136999845272,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002876673999708146,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5340022659984243,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            13,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            50,
            255,
            95,
            255,
            87,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            201,
            0,
            180,
            5,
            255,
            63,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            52,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            11,
            255,
            241,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            218,
            255,
            142,
            255,
            255,
            10,
            0,
            157,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            2,
            255,
            150,
            255,
            109
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035239089993410744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00288693399852491,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29551115700087394,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48275,
            47611,
            47664,
            47636,
            47537,
            47627,
            47700,
            47548,
            47776,
            47799,
            47609,
            47637,
            47694,
            47622,
            47900,
            47800,
            47653,
            47754,
            47663,
            49480,
            47822,
            47304,
            47245,
            47498,
            47596,
            47423,
            47794,
            47610,
            47666,
            47559,
            47632,
            47666,
            47670,
            47777,
            47613,
            47650,
            47671,
            47613,
            47815,
            47674,
            47595,
            47638,
            47791,
            47533,
            47829,
            47585,
            49156,
            47590,
            47938,
            47715,
            47780,
            47617,
            47502,
            47697,
            47614,
            47728,
            47938,
            47795,
            47607,
            47789,
            47540,
            47649,
            47856
          ],
          [
            48275,
            47611,
            47664,
            47636,
            47537,
            47627,
            47700,
            47548,
            47776,
            47799,
            47609,
            47637,
            47694,
            47622,
            47900,
            47800,
            47653,
            47754,
            47663,
            49480,
            47822,
            47304,
            47245,
            47498,
            47596,
            47423,
            47794,
            47610,
            47666,
            47559,
            47632,
            47666,
            47670,
            47777,
            47613,
            47650,
            47671,
            47613,
            47815,
            47674,
            47595,
            47638,
            47791,
            47533,
            47829,
            47585,
            49156,
            47590,
            47938,
            47715,
            47780,
            47617,
            47502,
            47697,
            47614,
            47728,
            47938,
            47795,
            47607,
            47789,
            47540,
            47649,
            47856
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            290,
            3798,
            17483,
            35700,
            36758,
            19803,
            4887,
            618,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            124,
            2479,
            15909,
            34831,
            40555,
            26748,
            8757,
            1087,
            94,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            834,
            7819,
            28616,
            41531,
            39229,
            19945,
            5119,
            421,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            134,
            2226,
            12469,
            30545,
            42189,
            39633,
            21636,
            5905,
            601,
            62,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13429240400000708,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015936050003801938,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06860273399797734,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48131,
            47862,
            49349,
            49307,
            47293,
            47646,
            47449,
            47567,
            47284,
            47515,
            47425,
            47596,
            47362,
            47506,
            47473,
            47872,
            47633,
            47458,
            47570,
            47503,
            47637,
            47585,
            47387,
            47371,
            47451,
            47712,
            47441,
            47431,
            47330,
            47548,
            47743,
            47610,
            47567,
            47511,
            47350,
            47382,
            48022,
            47433,
            47367,
            47422,
            47700,
            47565,
            47170,
            47365,
            47217,
            47680,
            47519,
            47601,
            47369,
            47380,
            47750,
            47577,
            50091,
            49484,
            47443,
            47803,
            47579,
            47426,
            47497,
            46993,
            47762,
            47566,
            47354
          ],
          [
            48131,
            47862,
            49349,
            49307,
            47293,
            47646,
            47449,
            47567,
            47284,
            47515,
            47425,
            47596,
            47362,
            47506,
            47473,
            47872,
            47633,
            47458,
            47570,
            47503,
            47637,
            47585,
            47387,
            47371,
            47451,
            47712,
            47441,
            47431,
            47330,
            47548,
            47743,
            47610,
            47567,
            47511,
            47350,
            47382,
            48022,
            47433,
            47367,
            47422,
            47700,
            47565,
            47170,
            47365,
            47217,
            47680,
            47519,
            47601,
            47369,
            47380,
            47750,
            47577,
            50091,
            49484,
            47443,
            47803,
            47579,
            47426,
            47497,
            46993,
            47762,
            47566,
            47354
          ],
          [
            48131,
            47862,
            49349,
            49307,
            47293,
            47646,
            47449,
            47567,
            47284,
            47515,
            47425,
            47596,
            47362,
            47506,
            47473,
            47872,
            47633,
            47458,
            47570,
            47503,
            47637,
            47585,
            47387,
            47371,
            47451,
            47712,
            47441,
            47431,
            47330,
            47548,
            47743,
            47610,
            47567,
            47511,
            47350,
            47382,
            48022,
            47433,
            47367,
            47422,
            47700,
            47565,
            47170,
            47365,
            47217,
            47680,
            47519,
            47601,
            47369,
            47380,
            47750,
            47577,
            50091,
            49484,
            47443,
            47803,
            47579,
            47426,
            47497,
            46993,
            47762,
            47566,
            47354
          ],
          [
            48131,
            47862,
            49349,
            49307,
            47293,
            47646,
            47449,
            47567,
            47284,
            47515,
            47425,
            47596,
            47362,
            47506,
            47473,
            47872,
            47633,
            47458,
            47570,
            47503,
            47637,
            47585,
            47387,
            47371,
            47451,
            47712,
            47441,
            47431,
            47330,
            47548,
            47743,
            47610,
            47567,
            47511,
            47350,
            47382,
            48022,
            47433,
            47367,
            47422,
            47700,
            47565,
            47170,
            47365,
            47217,
            47680,
            47519,
            47601,
            47369,
            47380,
            47750,
            47577,
            50091,
            49484,
            47443,
            47803,
            47579,
            47426,
            47497,
            46993,
            47762,
            47566,
            47354
          ],
          [
            48131,
            47862,
            49349,
            49307,
            47293,
            47646,
            47449,
            47567,
            47284,
            47515,
            47425,
            47596,
            47362,
            47506,
            47473,
            47872,
            47633,
            47458,
            47570,
            47503,
            47637,
            47585,
            47387,
            47371,
            47451,
            47712,
            47441,
            47431,
            47330,
            47548,
            47743,
            47610,
            47567,
            47511,
            47350,
            47382,
            48022,
            47433,
            47367,
            47422,
            47700,
            47565,
            47170,
            47365,
            47217,
            47680,
            47519,
            47601,
            47369,
            47380,
            47750,
            47577,
            50091,
            49484,
            47443,
            47803,
            47579,
            47426,
            47497,
            46993,
            47762,
            47566,
            47354
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            515,
            2764,
            12318,
            24952,
            34167,
            35281,
            26079,
            12266,
            3253,
            325,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            47,
            491,
            3667,
            13541,
            26790,
            35269,
            38182,
            30595,
            18773,
            7472,
            2069,
            178,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22
          ],
          [
            0,
            4,
            173,
            1378,
            5831,
            17037,
            32033,
            39262,
            34417,
            19675,
            7170,
            928,
            78,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            129,
            1689,
            9526,
            23556,
            35955,
            42273,
            40722,
            32714,
            17696,
            5053,
            535,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            305,
            1953,
            6918,
            18596,
            32123,
            38289
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            478,
            3467,
            15223,
            28963,
            36784,
            33336,
            19485,
            7013,
            1211,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            840,
            7352,
            20845,
            36935,
            41734,
            36266,
            23591,
            10071,
            2369,
            228,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            68,
            1004,
            5646,
            18973,
            33477,
            39354,
            34569,
            22461,
            8901,
            1507,
            114,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            217,
            2426,
            11551,
            23799,
            33536,
            38514,
            35888,
            26540,
            13110,
            3633,
            379,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            188,
            1781,
            7955,
            20721,
            32876,
            39189,
            36951,
            25653,
            12721,
            3392,
            629,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            20,
            543,
            3456,
            13728,
            25960,
            35474,
            41435,
            38528,
            28893,
            14223,
            4481,
            628,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            51,
            824,
            5340,
            15874,
            30905
          ]
        ]
      },
      "call": {
        "duration": 0.27224551900144434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001480622999224579,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2913264540002274,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689723580020654,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001484162999986438,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3585824699985096,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            92,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          4,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003488807000394445,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002880213996832026,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5362961169994378,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            3,
            255,
            2,
            70,
            0,
            255,
            1,
            255,
            255
          ],
          [
            65,
            0,
            18,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            35,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            207,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            1,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            19,
            255,
            62,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            2,
            0,
            255,
            7,
            255,
            255
          ],
          [
            42,
            0,
            6,
            0,
            7,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            78,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            100,
            0,
            21,
            0,
            37,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            143,
            255,
            65,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035227679982199334,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028668030026892666,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2981430250001722,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47965,
            54314,
            47644,
            47635,
            47603,
            47596,
            47649,
            47544,
            47572,
            47652,
            47795,
            47560,
            47556,
            47568,
            47765,
            47573,
            47618,
            47548,
            47583,
            47653,
            47706,
            47801,
            47613,
            47663,
            47656,
            47594,
            47736,
            47676,
            47593,
            47556,
            49574,
            47747,
            48086,
            47731,
            47812,
            47689,
            47586,
            47503,
            47606,
            47704,
            47503,
            47718,
            47583,
            47509,
            47561,
            47667,
            47706,
            47657,
            47564,
            47628,
            47336,
            47413,
            47622,
            47657,
            47567,
            47621,
            47626,
            47664,
            47616,
            49619,
            47634,
            48091,
            47658
          ],
          [
            47965,
            54314,
            47644,
            47635,
            47603,
            47596,
            47649,
            47544,
            47572,
            47652,
            47795,
            47560,
            47556,
            47568,
            47765,
            47573,
            47618,
            47548,
            47583,
            47653,
            47706,
            47801,
            47613,
            47663,
            47656,
            47594,
            47736,
            47676,
            47593,
            47556,
            49574,
            47747,
            48086,
            47731,
            47812,
            47689,
            47586,
            47503,
            47606,
            47704,
            47503,
            47718,
            47583,
            47509,
            47561,
            47667,
            47706,
            47657,
            47564,
            47628,
            47336,
            47413,
            47622,
            47657,
            47567,
            47621,
            47626,
            47664,
            47616,
            49619,
            47634,
            48091,
            47658
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            511,
            6691,
            23639,
            39969,
            34804,
            15427,
            3112,
            354,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            618,
            6139,
            21185,
            37564,
            37984,
            22269,
            5243,
            586,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            0,
            0,
            195,
            1992,
            13618,
            32701,
            40486,
            30286,
            10508,
            1761,
            160,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            468,
            5610,
            21247,
            38624,
            42393,
            31442,
            13288,
            2237,
            228,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            743,
            8124,
            25774,
            41117,
            44148
          ]
        ]
      },
      "call": {
        "duration": 0.13437175500075682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015792949998285621,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689934930014715,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48031,
            47343,
            47444,
            47351,
            47445,
            47233,
            47328,
            47491,
            47773,
            47679,
            47403,
            47499,
            47559,
            47447,
            47944,
            47453,
            47250,
            47447,
            47472,
            47658,
            47177,
            47280,
            47530,
            47486,
            47021,
            47448,
            47447,
            47544,
            47447,
            47930,
            49712,
            47521,
            47353,
            47435,
            47336,
            47366,
            47392,
            47408,
            47285,
            47379,
            47470,
            47531,
            47470,
            47481,
            47383,
            47450,
            47400,
            47812,
            47176,
            47318,
            47338,
            47361,
            47362,
            47296,
            47266,
            47474,
            47269,
            47472,
            47317,
            47517,
            47437,
            47470,
            47456
          ],
          [
            48031,
            47343,
            47444,
            47351,
            47445,
            47233,
            47328,
            47491,
            47773,
            47679,
            47403,
            47499,
            47559,
            47447,
            47944,
            47453,
            47250,
            47447,
            47472,
            47658,
            47177,
            47280,
            47530,
            47486,
            47021,
            47448,
            47447,
            47544,
            47447,
            47930,
            49712,
            47521,
            47353,
            47435,
            47336,
            47366,
            47392,
            47408,
            47285,
            47379,
            47470,
            47531,
            47470,
            47481,
            47383,
            47450,
            47400,
            47812,
            47176,
            47318,
            47338,
            47361,
            47362,
            47296,
            47266,
            47474,
            47269,
            47472,
            47317,
            47517,
            47437,
            47470,
            47456
          ],
          [
            48031,
            47343,
            47444,
            47351,
            47445,
            47233,
            47328,
            47491,
            47773,
            47679,
            47403,
            47499,
            47559,
            47447,
            47944,
            47453,
            47250,
            47447,
            47472,
            47658,
            47177,
            47280,
            47530,
            47486,
            47021,
            47448,
            47447,
            47544,
            47447,
            47930,
            49712,
            47521,
            47353,
            47435,
            47336,
            47366,
            47392,
            47408,
            47285,
            47379,
            47470,
            47531,
            47470,
            47481,
            47383,
            47450,
            47400,
            47812,
            47176,
            47318,
            47338,
            47361,
            47362,
            47296,
            47266,
            47474,
            47269,
            47472,
            47317,
            47517,
            47437,
            47470,
            47456
          ],
          [
            48031,
            47343,
            47444,
            47351,
            47445,
            47233,
            47328,
            47491,
            47773,
            47679,
            47403,
            47499,
            47559,
            47447,
            47944,
            47453,
            47250,
            47447,
            47472,
            47658,
            47177,
            47280,
            47530,
            47486,
            47021,
            47448,
            47447,
            47544,
            47447,
            47930,
            49712,
            47521,
            47353,
            47435,
            47336,
            47366,
            47392,
            47408,
            47285,
            47379,
            47470,
            47531,
            47470,
            47481,
            47383,
            47450,
            47400,
            47812,
            47176,
            47318,
            47338,
            47361,
            47362,
            47296,
            47266,
            47474,
            47269,
            47472,
            47317,
            47517,
            47437,
            47470,
            47456
          ],
          [
            48031,
            47343,
            47444,
            47351,
            47445,
            47233,
            47328,
            47491,
            47773,
            47679,
            47403,
            47499,
            47559,
            47447,
            47944,
            47453,
            47250,
            47447,
            47472,
            47658,
            47177,
            47280,
            47530,
            47486,
            47021,
            47448,
            47447,
            47544,
            47447,
            47930,
            49712,
            47521,
            47353,
            47435,
            47336,
            47366,
            47392,
            47408,
            47285,
            47379,
            47470,
            47531,
            47470,
            47481,
            47383,
            47450,
            47400,
            47812,
            47176,
            47318,
            47338,
            47361,
            47362,
            47296,
            47266,
            47474,
            47269,
            47472,
            47317,
            47517,
            47437,
            47470,
            47456
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            92,
            1159,
            6463,
            18090,
            29451,
            33779,
            33336,
            25190,
            15058,
            6812,
            1439,
            141,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            470,
            3070,
            10630,
            21171,
            31771,
            35675,
            31308,
            20342,
            10322,
            4364,
            857,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            60,
            575,
            4728,
            14963,
            26368,
            33759,
            39115,
            37550,
            27647,
            14534,
            4866,
            854,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            136,
            1264,
            4999,
            14277,
            26595,
            35235,
            34757,
            26954,
            13957,
            4629,
            934,
            86,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            15090,
            5908,
            1162,
            82,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            186,
            2040,
            10877,
            23113,
            34291,
            39850,
            33401,
            20604,
            8586,
            2193,
            129,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            375,
            3912,
            13804,
            27787,
            38029,
            35755,
            24627,
            10699,
            2325,
            217,
            10,
            0,
            0,
            0,
            0
          ],
          [
            76,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            83,
            1069,
            6705,
            19277,
            30591,
            38305,
            39586,
            34423,
            24880,
            13213,
            4066,
            399,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            541,
            2932,
            12364,
            24412,
            35333,
            34626,
            23620,
            11407,
            4449,
            946,
            67,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            101,
            1071,
            5749,
            17037,
            28451,
            36438,
            39015,
            35657,
            24708,
            13836,
            3734,
            641,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            3,
            147,
            1488,
            6297,
            16921,
            29730,
            38701,
            40328,
            33739,
            23107,
            13393,
            6468,
            1958,
            183,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2720753860012337,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00147906299753231,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29170995199820027,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17511418399954,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40046464, 10011616), (411369, 411369), (40048702, 10012175))\nassert ((40046464 > 0 and 10011616 == 0\n  +10011616\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff81252370>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff81001310>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff8131b4f0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40046464, 10011616), (411369, 411369), (40048702, 10012175))\nE       assert ((40046464 > 0 and 10011616 == 0\nE         +10011616\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004957220000505913,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}