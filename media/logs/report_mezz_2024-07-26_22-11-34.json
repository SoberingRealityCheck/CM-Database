{
  "created": 1722031913.9243965,
  "duration": 23.17092227935791,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5043204169996898,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1481239109998569,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001329508999333484,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003791394003201276,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14846216899968567,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012939279986312613,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13298296499851858,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1216554630009341,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012887990014860407,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037904039963905234,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12138740699811024,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013066489991615526,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033551849992363714,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14675339099994744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001191747000120813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003348943999299081,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12005411799691501,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012051869998686016,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003358664998813765,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14635846199962543,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011706559998856392,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033339740002702456,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12004508799873292,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011677160000544973,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0043955179971817415,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021217079993220977,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011497750019771047,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00333151399900089,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017215879997820593,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011386450023564976,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003331664000143064,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004065810000611236,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031896.4934635,
            "msecs": 493.46351623535156,
            "relativeCreated": 7710.914850234985,
            "thread": 281473376481312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4460
          }
        ]
      },
      "teardown": {
        "duration": 0.0012521680000645574,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038878169980307575,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002509586000087438,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031896.506613,
            "msecs": 506.61301612854004,
            "relativeCreated": 7724.064350128174,
            "thread": 281473376481312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4460
          }
        ]
      },
      "teardown": {
        "duration": 0.001173595999716781,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020821360012632795,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002719619998970302,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031896.5161698,
            "msecs": 516.1697864532471,
            "relativeCreated": 7733.621120452881,
            "thread": 281473376481312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4460
          }
        ]
      },
      "teardown": {
        "duration": 0.0011013840012310538,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021004670015827287,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003457966999121709,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031896.5257263,
            "msecs": 525.726318359375,
            "relativeCreated": 7743.177652359009,
            "thread": 281473376481312,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4460
          }
        ]
      },
      "teardown": {
        "duration": 0.0010769630025606602,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003393705002963543,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14657905700005358,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001200176000565989,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003303492998384172,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12008126799992169,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011782760011556093,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1782646809988364,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14770522199978586,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012636280007427558,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015213578000839334,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117764199865633,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001254208000318613,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8371587449983053,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            3,
            9,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            83,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            21,
            155,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003583130001061363,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028590339970833156,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9051047819993983,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            6,
            0,
            2,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            29
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            76,
            255,
            255,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            5,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            23,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            63,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            237,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            3,
            0,
            2,
            255
          ],
          [
            255,
            193,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            2,
            189,
            255
          ],
          [
            255,
            0,
            105,
            0,
            255,
            0,
            255,
            75,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.00351835800029221,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028626639978028834,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3025257320005039,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47711,
            47279,
            47272,
            47246,
            47180,
            47205,
            47242,
            47403,
            47286,
            47297,
            47014,
            47047,
            47518,
            47373,
            47069,
            47059,
            47231,
            47393,
            47214,
            47273,
            47362,
            47259,
            47356,
            49093,
            47238,
            47614,
            47303,
            49289,
            47325,
            47345,
            47409,
            47302,
            47534,
            47331,
            47390,
            47316,
            47257,
            47332,
            47382,
            47234,
            47142,
            47230,
            47288,
            47197,
            47333,
            47314,
            47284,
            47315,
            47254,
            47349,
            47431,
            47408,
            47515,
            47257,
            47188,
            47227,
            47325,
            47280,
            48797,
            47338,
            47521,
            46841,
            47390
          ],
          [
            47711,
            47279,
            47272,
            47246,
            47180,
            47205,
            47242,
            47403,
            47286,
            47297,
            47014,
            47047,
            47518,
            47373,
            47069,
            47059,
            47231,
            47393,
            47214,
            47273,
            47362,
            47259,
            47356,
            49093,
            47238,
            47614,
            47303,
            49289,
            47325,
            47345,
            47409,
            47302,
            47534,
            47331,
            47390,
            47316,
            47257,
            47332,
            47382,
            47234,
            47142,
            47230,
            47288,
            47197,
            47333,
            47314,
            47284,
            47315,
            47254,
            47349,
            47431,
            47408,
            47515,
            47257,
            47188,
            47227,
            47325,
            47280,
            48797,
            47338,
            47521,
            46841,
            47390
          ]
        ],
        "eTX_errcounts": [
          [
            39731,
            26258,
            7916,
            1247,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            267,
            2993,
            15933,
            34495,
            44159,
            31401,
            14547,
            2023,
            145,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            752,
            7581,
            25194,
            40456,
            37505,
            19832,
            5102,
            632,
            10,
            2,
            0,
            0
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            337,
            4024,
            17232,
            36038,
            42001,
            33005,
            13787,
            3138,
            256,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            349,
            4443,
            19438,
            36253,
            42690,
            35190,
            17037,
            3400,
            269,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13376805200095987,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016021859992179088,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06912351599748945,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47903,
            47342,
            47131,
            47178,
            48556,
            47196,
            46916,
            47123,
            47093,
            47069,
            47164,
            47313,
            47097,
            47124,
            47119,
            47177,
            47097,
            47239,
            47424,
            47247,
            46962,
            47609,
            47085,
            47111,
            47139,
            47113,
            47143,
            47311,
            46969,
            46924,
            47202,
            46913,
            47104,
            47170,
            47189,
            47341,
            47098,
            47305,
            47635,
            47637,
            47145,
            47183,
            47045,
            47189,
            47332,
            47164,
            47071,
            47545,
            47156,
            47213,
            47107,
            47324,
            47139,
            47215,
            46922,
            47199,
            47590,
            47211,
            47122,
            47279,
            46989,
            47251,
            47120
          ],
          [
            47903,
            47342,
            47131,
            47178,
            48556,
            47196,
            46916,
            47123,
            47093,
            47069,
            47164,
            47313,
            47097,
            47124,
            47119,
            47177,
            47097,
            47239,
            47424,
            47247,
            46962,
            47609,
            47085,
            47111,
            47139,
            47113,
            47143,
            47311,
            46969,
            46924,
            47202,
            46913,
            47104,
            47170,
            47189,
            47341,
            47098,
            47305,
            47635,
            47637,
            47145,
            47183,
            47045,
            47189,
            47332,
            47164,
            47071,
            47545,
            47156,
            47213,
            47107,
            47324,
            47139,
            47215,
            46922,
            47199,
            47590,
            47211,
            47122,
            47279,
            46989,
            47251,
            47120
          ],
          [
            47903,
            47342,
            47131,
            47178,
            48556,
            47196,
            46916,
            47123,
            47093,
            47069,
            47164,
            47313,
            47097,
            47124,
            47119,
            47177,
            47097,
            47239,
            47424,
            47247,
            46962,
            47609,
            47085,
            47111,
            47139,
            47113,
            47143,
            47311,
            46969,
            46924,
            47202,
            46913,
            47104,
            47170,
            47189,
            47341,
            47098,
            47305,
            47635,
            47637,
            47145,
            47183,
            47045,
            47189,
            47332,
            47164,
            47071,
            47545,
            47156,
            47213,
            47107,
            47324,
            47139,
            47215,
            46922,
            47199,
            47590,
            47211,
            47122,
            47279,
            46989,
            47251,
            47120
          ],
          [
            47903,
            47342,
            47131,
            47178,
            48556,
            47196,
            46916,
            47123,
            47093,
            47069,
            47164,
            47313,
            47097,
            47124,
            47119,
            47177,
            47097,
            47239,
            47424,
            47247,
            46962,
            47609,
            47085,
            47111,
            47139,
            47113,
            47143,
            47311,
            46969,
            46924,
            47202,
            46913,
            47104,
            47170,
            47189,
            47341,
            47098,
            47305,
            47635,
            47637,
            47145,
            47183,
            47045,
            47189,
            47332,
            47164,
            47071,
            47545,
            47156,
            47213,
            47107,
            47324,
            47139,
            47215,
            46922,
            47199,
            47590,
            47211,
            47122,
            47279,
            46989,
            47251,
            47120
          ],
          [
            47903,
            47342,
            47131,
            47178,
            48556,
            47196,
            46916,
            47123,
            47093,
            47069,
            47164,
            47313,
            47097,
            47124,
            47119,
            47177,
            47097,
            47239,
            47424,
            47247,
            46962,
            47609,
            47085,
            47111,
            47139,
            47113,
            47143,
            47311,
            46969,
            46924,
            47202,
            46913,
            47104,
            47170,
            47189,
            47341,
            47098,
            47305,
            47635,
            47637,
            47145,
            47183,
            47045,
            47189,
            47332,
            47164,
            47071,
            47545,
            47156,
            47213,
            47107,
            47324,
            47139,
            47215,
            46922,
            47199,
            47590,
            47211,
            47122,
            47279,
            46989,
            47251,
            47120
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            49,
            632,
            3968,
            13066,
            25509,
            35103,
            36725,
            28078,
            17603,
            8616,
            2251,
            265,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            74,
            1176,
            6108,
            14879,
            24219,
            31644,
            36238,
            33442,
            25900,
            12872,
            3560,
            398,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            5,
            109,
            830,
            3333,
            10544,
            20798,
            30689,
            37116,
            34294,
            25972,
            15788,
            5752,
            914,
            111,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            54,
            651,
            4301,
            13037,
            23774,
            33695,
            37962,
            37873,
            31524,
            20812,
            10942,
            3997,
            722,
            81,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            230,
            1552,
            6217,
            15968,
            26505
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            63,
            929,
            6069,
            16936,
            27476,
            31670,
            32698,
            24981,
            15253,
            6221,
            1370,
            112,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            218,
            1527,
            8461,
            17026,
            28284,
            34004,
            30782,
            24111,
            15936,
            8809,
            3025,
            369,
            24,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            267,
            2322,
            8760,
            19377,
            29845,
            34675,
            33893,
            27909,
            19191,
            9664,
            2173,
            177,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            49,
            552,
            3366,
            9996,
            20758,
            28967,
            34257,
            30987,
            26321,
            19771,
            11290,
            4904,
            720,
            87,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            50,
            566,
            3596,
            10384,
            20387,
            30868,
            38352,
            39417,
            31398,
            21322,
            10718,
            3803,
            748,
            77,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            78,
            979,
            4502,
            11644,
            22691,
            33271,
            39613,
            39558,
            33725,
            26782,
            17946,
            7731,
            1402,
            115,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            353,
            2092,
            8115
          ]
        ]
      },
      "call": {
        "duration": 0.2732619419984985,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff8bdd9570>()\n +    where <built-in method all of numpy.ndarray object at 0xffff8bdd9570> = array([22, 13, 17, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8be4f550>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47903, 47342, 47131, 47178, 48556, 47196, ...], [47903, 47342, 47131, 47178, 48556, 47196, ...], [..., 0, ...], [0, 0, 5, 109, 830, 3333, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 50, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff8bdd9570>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff8bdd9570> = array([22, 13, 17, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016228860004048329,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926543430003221,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169245813998714,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001436311998986639,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2953553139996075,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            26,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            67,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034794470011547673,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028806939990317915,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5395108090015128,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            123,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            159,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            85,
            255,
            195,
            255,
            152,
            0,
            0,
            195,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            224,
            0,
            47,
            0,
            255,
            13,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            101,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            255,
            134,
            255,
            160,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            243,
            255,
            209,
            255,
            255,
            1,
            0,
            102,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            74,
            255,
            119
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          6,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034742570023809094,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028851639981439803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29574648199923104,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47851,
            47468,
            47367,
            47282,
            47189,
            47403,
            47296,
            47318,
            47463,
            47458,
            47270,
            47385,
            47369,
            47407,
            47345,
            47437,
            47442,
            47327,
            47452,
            49255,
            47269,
            47799,
            47591,
            47694,
            47334,
            47264,
            47392,
            47231,
            47405,
            47335,
            47461,
            47213,
            47330,
            47198,
            47380,
            47214,
            47449,
            47394,
            47445,
            47369,
            47441,
            47189,
            47245,
            47515,
            47405,
            47342,
            47481,
            47412,
            47507,
            47222,
            47241,
            47500,
            47706,
            47338,
            49054,
            47482,
            47369,
            47334,
            47449,
            47449,
            47280,
            47283,
            47316
          ],
          [
            47851,
            47468,
            47367,
            47282,
            47189,
            47403,
            47296,
            47318,
            47463,
            47458,
            47270,
            47385,
            47369,
            47407,
            47345,
            47437,
            47442,
            47327,
            47452,
            49255,
            47269,
            47799,
            47591,
            47694,
            47334,
            47264,
            47392,
            47231,
            47405,
            47335,
            47461,
            47213,
            47330,
            47198,
            47380,
            47214,
            47449,
            47394,
            47445,
            47369,
            47441,
            47189,
            47245,
            47515,
            47405,
            47342,
            47481,
            47412,
            47507,
            47222,
            47241,
            47500,
            47706,
            47338,
            49054,
            47482,
            47369,
            47334,
            47449,
            47449,
            47280,
            47283,
            47316
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            237,
            3502,
            18903,
            35727,
            37036,
            18779,
            4059,
            470,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            130,
            2676,
            16086,
            34472,
            40447,
            25269,
            7762,
            874,
            65,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            36,
            876,
            8745,
            29373,
            41708,
            38502,
            18340,
            4509,
            508,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            227,
            2374,
            13295,
            31121,
            42833,
            39000,
            20260,
            5367,
            782,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13396674700197764,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016024860015022568,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06874772800074425,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47629,
            46971,
            47202,
            47259,
            49410,
            46927,
            47128,
            47210,
            47008,
            47111,
            47213,
            47037,
            47070,
            47126,
            47086,
            47074,
            47401,
            47138,
            47138,
            46971,
            46758,
            47483,
            47174,
            46794,
            46979,
            47201,
            46944,
            46948,
            47446,
            46976,
            47038,
            47274,
            47103,
            47125,
            47247,
            47149,
            47174,
            47302,
            47665,
            46901,
            47232,
            47127,
            47021,
            47144,
            46832,
            46952,
            47230,
            47127,
            47045,
            47439,
            47263,
            47134,
            47299,
            47205,
            47147,
            48896,
            48809,
            46922,
            46795,
            47127,
            47309,
            47139,
            47037
          ],
          [
            47629,
            46971,
            47202,
            47259,
            49410,
            46927,
            47128,
            47210,
            47008,
            47111,
            47213,
            47037,
            47070,
            47126,
            47086,
            47074,
            47401,
            47138,
            47138,
            46971,
            46758,
            47483,
            47174,
            46794,
            46979,
            47201,
            46944,
            46948,
            47446,
            46976,
            47038,
            47274,
            47103,
            47125,
            47247,
            47149,
            47174,
            47302,
            47665,
            46901,
            47232,
            47127,
            47021,
            47144,
            46832,
            46952,
            47230,
            47127,
            47045,
            47439,
            47263,
            47134,
            47299,
            47205,
            47147,
            48896,
            48809,
            46922,
            46795,
            47127,
            47309,
            47139,
            47037
          ],
          [
            47629,
            46971,
            47202,
            47259,
            49410,
            46927,
            47128,
            47210,
            47008,
            47111,
            47213,
            47037,
            47070,
            47126,
            47086,
            47074,
            47401,
            47138,
            47138,
            46971,
            46758,
            47483,
            47174,
            46794,
            46979,
            47201,
            46944,
            46948,
            47446,
            46976,
            47038,
            47274,
            47103,
            47125,
            47247,
            47149,
            47174,
            47302,
            47665,
            46901,
            47232,
            47127,
            47021,
            47144,
            46832,
            46952,
            47230,
            47127,
            47045,
            47439,
            47263,
            47134,
            47299,
            47205,
            47147,
            48896,
            48809,
            46922,
            46795,
            47127,
            47309,
            47139,
            47037
          ],
          [
            47629,
            46971,
            47202,
            47259,
            49410,
            46927,
            47128,
            47210,
            47008,
            47111,
            47213,
            47037,
            47070,
            47126,
            47086,
            47074,
            47401,
            47138,
            47138,
            46971,
            46758,
            47483,
            47174,
            46794,
            46979,
            47201,
            46944,
            46948,
            47446,
            46976,
            47038,
            47274,
            47103,
            47125,
            47247,
            47149,
            47174,
            47302,
            47665,
            46901,
            47232,
            47127,
            47021,
            47144,
            46832,
            46952,
            47230,
            47127,
            47045,
            47439,
            47263,
            47134,
            47299,
            47205,
            47147,
            48896,
            48809,
            46922,
            46795,
            47127,
            47309,
            47139,
            47037
          ],
          [
            47629,
            46971,
            47202,
            47259,
            49410,
            46927,
            47128,
            47210,
            47008,
            47111,
            47213,
            47037,
            47070,
            47126,
            47086,
            47074,
            47401,
            47138,
            47138,
            46971,
            46758,
            47483,
            47174,
            46794,
            46979,
            47201,
            46944,
            46948,
            47446,
            46976,
            47038,
            47274,
            47103,
            47125,
            47247,
            47149,
            47174,
            47302,
            47665,
            46901,
            47232,
            47127,
            47021,
            47144,
            46832,
            46952,
            47230,
            47127,
            47045,
            47439,
            47263,
            47134,
            47299,
            47205,
            47147,
            48896,
            48809,
            46922,
            46795,
            47127,
            47309,
            47139,
            47037
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            354,
            2410,
            10341,
            23579,
            34311,
            34204,
            24039,
            11876,
            3528,
            580,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            619,
            3721,
            13271,
            26272,
            36048,
            37209,
            27062,
            14491,
            3691,
            432,
            27,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            1,
            62,
            579,
            5117,
            15917,
            31969,
            39510,
            34910,
            19829,
            6640,
            1178,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            63,
            1195,
            8164,
            22999,
            38135,
            43722,
            39053,
            26462,
            12172,
            2953,
            241,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            122,
            1328,
            7266,
            21562,
            35553,
            39165
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            477,
            3418,
            13266,
            27091,
            33899,
            28638,
            14112,
            3897,
            414,
            19,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            47,
            851,
            6544,
            19050,
            34965,
            39702,
            32226,
            18622,
            5994,
            709,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            56,
            774,
            5590,
            17078,
            32383,
            37842,
            32482,
            18146,
            5945,
            748,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            225,
            1959,
            8973,
            22215,
            36230,
            40947,
            34858,
            22085,
            8251,
            1653,
            125,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            1,
            113,
            1328,
            7879,
            20736,
            34115,
            40675,
            37725,
            27198,
            12703,
            2849,
            438,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            330,
            2386,
            10759,
            25963,
            38887,
            43990,
            38581,
            26869,
            12013,
            4154,
            929,
            132,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            44,
            704,
            5904,
            18014,
            32450
          ]
        ]
      },
      "call": {
        "duration": 0.27164487700065365,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014904330018907785,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2914091950005968,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169138532000943,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014715630022692494,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3523932729985972,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            90,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034959479999088217,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028635640010179486,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5403733880011714,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            7,
            255,
            2,
            12,
            0,
            255,
            0,
            255,
            255
          ],
          [
            58,
            0,
            8,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            31,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            172,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            11,
            255,
            39,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            3,
            255,
            5,
            255,
            6,
            5,
            0,
            255,
            2,
            255,
            255
          ],
          [
            57,
            0,
            3,
            0,
            3,
            0,
            255,
            102,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            108,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            102,
            0,
            4,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            106,
            255,
            64,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003489077000267571,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002886244001274463,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961623810006131,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47973,
            47546,
            47359,
            47369,
            47249,
            47405,
            47527,
            47414,
            47133,
            47293,
            47392,
            47477,
            47266,
            47669,
            47431,
            48035,
            47380,
            47389,
            47399,
            47164,
            47323,
            47296,
            47236,
            47124,
            47392,
            47031,
            47286,
            47451,
            47429,
            47296,
            47351,
            47222,
            47299,
            47506,
            47361,
            47165,
            47595,
            47411,
            47342,
            47449,
            47372,
            47293,
            47467,
            47354,
            47482,
            47552,
            49095,
            47462,
            47774,
            47409,
            47319,
            47564,
            47340,
            47277,
            47204,
            47429,
            47331,
            47500,
            47062,
            47105,
            47333,
            47409,
            47266
          ],
          [
            47973,
            47546,
            47359,
            47369,
            47249,
            47405,
            47527,
            47414,
            47133,
            47293,
            47392,
            47477,
            47266,
            47669,
            47431,
            48035,
            47380,
            47389,
            47399,
            47164,
            47323,
            47296,
            47236,
            47124,
            47392,
            47031,
            47286,
            47451,
            47429,
            47296,
            47351,
            47222,
            47299,
            47506,
            47361,
            47165,
            47595,
            47411,
            47342,
            47449,
            47372,
            47293,
            47467,
            47354,
            47482,
            47552,
            49095,
            47462,
            47774,
            47409,
            47319,
            47564,
            47340,
            47277,
            47204,
            47429,
            47331,
            47500,
            47062,
            47105,
            47333,
            47409,
            47266
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            28,
            751,
            6768,
            23811,
            39370,
            34678,
            15524,
            3191,
            315,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            559,
            6119,
            21132,
            38329,
            38138,
            21709,
            5504,
            678,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            1,
            128,
            2115,
            13953,
            32672,
            41029,
            28996,
            9136,
            1589,
            178,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            519,
            5732,
            21841,
            38372,
            41268,
            30511,
            12147,
            2007,
            242,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            771,
            7644,
            24620,
            39953,
            43763
          ]
        ]
      },
      "call": {
        "duration": 0.1337900130019989,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016016750014387071,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06895899200026179,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47868,
            47375,
            47360,
            46768,
            47087,
            47055,
            47006,
            47240,
            47160,
            47100,
            47213,
            46967,
            47074,
            46846,
            47282,
            47224,
            47191,
            47312,
            48891,
            48724,
            47298,
            47084,
            47130,
            47015,
            47004,
            47104,
            47147,
            47157,
            46986,
            47093,
            47086,
            47277,
            47293,
            47115,
            47244,
            47234,
            47138,
            47485,
            47118,
            47135,
            47187,
            47015,
            47244,
            47103,
            47128,
            46978,
            47333,
            47136,
            47174,
            47218,
            47147,
            47131,
            47295,
            46922,
            47422,
            47226,
            47027,
            47153,
            47069,
            47167,
            47224,
            46996,
            47236
          ],
          [
            47868,
            47375,
            47360,
            46768,
            47087,
            47055,
            47006,
            47240,
            47160,
            47100,
            47213,
            46967,
            47074,
            46846,
            47282,
            47224,
            47191,
            47312,
            48891,
            48724,
            47298,
            47084,
            47130,
            47015,
            47004,
            47104,
            47147,
            47157,
            46986,
            47093,
            47086,
            47277,
            47293,
            47115,
            47244,
            47234,
            47138,
            47485,
            47118,
            47135,
            47187,
            47015,
            47244,
            47103,
            47128,
            46978,
            47333,
            47136,
            47174,
            47218,
            47147,
            47131,
            47295,
            46922,
            47422,
            47226,
            47027,
            47153,
            47069,
            47167,
            47224,
            46996,
            47236
          ],
          [
            47868,
            47375,
            47360,
            46768,
            47087,
            47055,
            47006,
            47240,
            47160,
            47100,
            47213,
            46967,
            47074,
            46846,
            47282,
            47224,
            47191,
            47312,
            48891,
            48724,
            47298,
            47084,
            47130,
            47015,
            47004,
            47104,
            47147,
            47157,
            46986,
            47093,
            47086,
            47277,
            47293,
            47115,
            47244,
            47234,
            47138,
            47485,
            47118,
            47135,
            47187,
            47015,
            47244,
            47103,
            47128,
            46978,
            47333,
            47136,
            47174,
            47218,
            47147,
            47131,
            47295,
            46922,
            47422,
            47226,
            47027,
            47153,
            47069,
            47167,
            47224,
            46996,
            47236
          ],
          [
            47868,
            47375,
            47360,
            46768,
            47087,
            47055,
            47006,
            47240,
            47160,
            47100,
            47213,
            46967,
            47074,
            46846,
            47282,
            47224,
            47191,
            47312,
            48891,
            48724,
            47298,
            47084,
            47130,
            47015,
            47004,
            47104,
            47147,
            47157,
            46986,
            47093,
            47086,
            47277,
            47293,
            47115,
            47244,
            47234,
            47138,
            47485,
            47118,
            47135,
            47187,
            47015,
            47244,
            47103,
            47128,
            46978,
            47333,
            47136,
            47174,
            47218,
            47147,
            47131,
            47295,
            46922,
            47422,
            47226,
            47027,
            47153,
            47069,
            47167,
            47224,
            46996,
            47236
          ],
          [
            47868,
            47375,
            47360,
            46768,
            47087,
            47055,
            47006,
            47240,
            47160,
            47100,
            47213,
            46967,
            47074,
            46846,
            47282,
            47224,
            47191,
            47312,
            48891,
            48724,
            47298,
            47084,
            47130,
            47015,
            47004,
            47104,
            47147,
            47157,
            46986,
            47093,
            47086,
            47277,
            47293,
            47115,
            47244,
            47234,
            47138,
            47485,
            47118,
            47135,
            47187,
            47015,
            47244,
            47103,
            47128,
            46978,
            47333,
            47136,
            47174,
            47218,
            47147,
            47131,
            47295,
            46922,
            47422,
            47226,
            47027,
            47153,
            47069,
            47167,
            47224,
            46996,
            47236
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            121,
            1053,
            5891,
            17244,
            29135,
            35189,
            32363,
            22689,
            10913,
            3112,
            333,
            30,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            172,
            2062,
            10012,
            24780,
            36733,
            38772,
            30482,
            17390,
            7195,
            2321,
            360,
            13,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            309,
            2635,
            11823,
            26355,
            38395,
            41232,
            34215,
            22053,
            10378,
            2828,
            244,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            59,
            782,
            5403,
            16610,
            29603,
            37930,
            35360,
            25854,
            12804,
            2587,
            224,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            11256,
            3208,
            428,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            109,
            1541,
            8769,
            22316,
            34259,
            37803,
            29388,
            16323,
            5184,
            650,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            412,
            4512,
            15202,
            28048,
            38922,
            34031,
            21894,
            9581,
            1989,
            185,
            2,
            0,
            0,
            0,
            0
          ],
          [
            50,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            39,
            601,
            5241,
            16300,
            28935,
            39707,
            40647,
            32068,
            21594,
            8692,
            1657,
            185,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            197,
            2488,
            12511,
            26804,
            38130,
            35455,
            23919,
            11221,
            2974,
            263,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            659,
            4069,
            14948,
            27864,
            39350,
            42100,
            35602,
            24561,
            12880,
            3861,
            1021,
            128,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            130,
            1130,
            6378,
            18441,
            31622,
            40972,
            40670,
            32183,
            20187,
            9298,
            2355,
            283,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2716812070029846,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001477113000873942,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29182716500145034,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169078620001528,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004820116999326274,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}