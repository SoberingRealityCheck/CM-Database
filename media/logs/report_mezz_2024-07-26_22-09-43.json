{
  "created": 1722031802.8087165,
  "duration": 23.50090003013611,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5067895620013587,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1492884769977536,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013206900002842303,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003757464000955224,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1489112790004583,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012854679989686701,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13302115600163233,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12265010500050266,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001306558999203844,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037631330014846753,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12168945400117082,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001251387999218423,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033394339989172295,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14732271400134778,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001185116998385638,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003343993997987127,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12054921900198678,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011961570016865153,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033306739969702903,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14708543900269433,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011639660006039776,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003344295000715647,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1206845520027855,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012067759998899419,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004336296002293238,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002115556999342516,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011490249999042135,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033242540011997335,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016866679980012123,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001110683999286266,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00330658399980166,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040058990016405005,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031785.0669582,
            "msecs": 66.95818901062012,
            "relativeCreated": 7729.438066482544,
            "thread": 281473812918304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4409
          }
        ]
      },
      "teardown": {
        "duration": 0.0012264280012459494,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033247040009882767,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023837929984438233,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031785.0792165,
            "msecs": 79.21648025512695,
            "relativeCreated": 7741.696357727051,
            "thread": 281473812918304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4409
          }
        ]
      },
      "teardown": {
        "duration": 0.0012001459981547669,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002036775000306079,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026546989975031465,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031785.0886347,
            "msecs": 88.63472938537598,
            "relativeCreated": 7751.1146068573,
            "thread": 281473812918304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4409
          }
        ]
      },
      "teardown": {
        "duration": 0.001063372998032719,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020822570004384033,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003402105998247862,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031785.0980687,
            "msecs": 98.0687141418457,
            "relativeCreated": 7760.5485916137695,
            "thread": 281473812918304,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4409
          }
        ]
      },
      "teardown": {
        "duration": 0.0010956849982903805,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003307032999146031,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1471377300003951,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001157156002591364,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003305173002445372,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12126389399782056,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001215656997374026,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17976066400296986,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14837819799868157,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012589479993039276,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015157956997427391,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12174936600058572,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012819280018447898,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8483820840010594,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            16,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            79,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            18,
            126,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003565339997294359,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002890743999159895,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9127098319986544,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            25,
            0,
            1,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            15,
            255,
            11,
            255,
            0,
            0,
            0,
            0,
            0,
            15
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            47,
            255,
            255,
            255,
            6
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            27,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            49,
            0,
            0,
            0,
            0
          ],
          [
            0,
            16,
            0,
            1,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            206,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            150,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            2,
            187,
            255
          ],
          [
            255,
            0,
            135,
            0,
            255,
            0,
            255,
            100,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034787869990395848,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028941040000063367,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031794769995031,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48183,
            47517,
            47432,
            47312,
            47290,
            47551,
            47290,
            47396,
            47102,
            47242,
            47343,
            47553,
            47426,
            47538,
            47489,
            47440,
            47513,
            47517,
            47393,
            47408,
            47589,
            47357,
            47545,
            48067,
            47469,
            47812,
            47428,
            47649,
            47417,
            47439,
            47445,
            47548,
            47502,
            47269,
            47586,
            47479,
            47315,
            47357,
            47473,
            47248,
            47451,
            47394,
            47497,
            47509,
            47512,
            47379,
            47452,
            47372,
            47429,
            47340,
            47461,
            47426,
            47532,
            47436,
            47493,
            47589,
            49527,
            47426,
            47496,
            47197,
            52189,
            47381,
            47535
          ],
          [
            48183,
            47517,
            47432,
            47312,
            47290,
            47551,
            47290,
            47396,
            47102,
            47242,
            47343,
            47553,
            47426,
            47538,
            47489,
            47440,
            47513,
            47517,
            47393,
            47408,
            47589,
            47357,
            47545,
            48067,
            47469,
            47812,
            47428,
            47649,
            47417,
            47439,
            47445,
            47548,
            47502,
            47269,
            47586,
            47479,
            47315,
            47357,
            47473,
            47248,
            47451,
            47394,
            47497,
            47509,
            47512,
            47379,
            47452,
            47372,
            47429,
            47340,
            47461,
            47426,
            47532,
            47436,
            47493,
            47589,
            49527,
            47426,
            47496,
            47197,
            52189,
            47381,
            47535
          ]
        ],
        "eTX_errcounts": [
          [
            40923,
            27019,
            8544,
            1267,
            113,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            222,
            2890,
            15307,
            33832,
            42831,
            32258,
            14812,
            2314,
            191,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            812,
            7457,
            25802,
            40008,
            37571,
            20571,
            5692,
            624,
            40,
            0,
            0,
            0
          ],
          [
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            298,
            3643,
            16951,
            35680,
            42652,
            32085,
            13360,
            3289,
            297,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            15,
            463,
            4107,
            18185,
            36131,
            43112,
            35232,
            16959,
            3335,
            317,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13392303599903244,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016084560011222493,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06918009699802496,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47917,
            47429,
            47430,
            47468,
            47290,
            47378,
            47150,
            47388,
            47400,
            47236,
            47523,
            47290,
            47459,
            47357,
            47113,
            47208,
            47378,
            47361,
            47658,
            47334,
            47252,
            47488,
            47213,
            47254,
            47403,
            47310,
            47225,
            47310,
            47052,
            47361,
            47199,
            46982,
            47265,
            47123,
            47272,
            47482,
            47534,
            47267,
            47329,
            44323,
            49252,
            47324,
            47206,
            47238,
            47133,
            47234,
            47207,
            47405,
            47223,
            47245,
            47319,
            47104,
            47436,
            47094,
            47466,
            47278,
            47590,
            47452,
            47273,
            47324,
            47252,
            47190,
            47411
          ],
          [
            47917,
            47429,
            47430,
            47468,
            47290,
            47378,
            47150,
            47388,
            47400,
            47236,
            47523,
            47290,
            47459,
            47357,
            47113,
            47208,
            47378,
            47361,
            47658,
            47334,
            47252,
            47488,
            47213,
            47254,
            47403,
            47310,
            47225,
            47310,
            47052,
            47361,
            47199,
            46982,
            47265,
            47123,
            47272,
            47482,
            47534,
            47267,
            47329,
            44323,
            49252,
            47324,
            47206,
            47238,
            47133,
            47234,
            47207,
            47405,
            47223,
            47245,
            47319,
            47104,
            47436,
            47094,
            47466,
            47278,
            47590,
            47452,
            47273,
            47324,
            47252,
            47190,
            47411
          ],
          [
            47917,
            47429,
            47430,
            47468,
            47290,
            47378,
            47150,
            47388,
            47400,
            47236,
            47523,
            47290,
            47459,
            47357,
            47113,
            47208,
            47378,
            47361,
            47658,
            47334,
            47252,
            47488,
            47213,
            47254,
            47403,
            47310,
            47225,
            47310,
            47052,
            47361,
            47199,
            46982,
            47265,
            47123,
            47272,
            47482,
            47534,
            47267,
            47329,
            44323,
            49252,
            47324,
            47206,
            47238,
            47133,
            47234,
            47207,
            47405,
            47223,
            47245,
            47319,
            47104,
            47436,
            47094,
            47466,
            47278,
            47590,
            47452,
            47273,
            47324,
            47252,
            47190,
            47411
          ],
          [
            47917,
            47429,
            47430,
            47468,
            47290,
            47378,
            47150,
            47388,
            47400,
            47236,
            47523,
            47290,
            47459,
            47357,
            47113,
            47208,
            47378,
            47361,
            47658,
            47334,
            47252,
            47488,
            47213,
            47254,
            47403,
            47310,
            47225,
            47310,
            47052,
            47361,
            47199,
            46982,
            47265,
            47123,
            47272,
            47482,
            47534,
            47267,
            47329,
            44323,
            49252,
            47324,
            47206,
            47238,
            47133,
            47234,
            47207,
            47405,
            47223,
            47245,
            47319,
            47104,
            47436,
            47094,
            47466,
            47278,
            47590,
            47452,
            47273,
            47324,
            47252,
            47190,
            47411
          ],
          [
            47917,
            47429,
            47430,
            47468,
            47290,
            47378,
            47150,
            47388,
            47400,
            47236,
            47523,
            47290,
            47459,
            47357,
            47113,
            47208,
            47378,
            47361,
            47658,
            47334,
            47252,
            47488,
            47213,
            47254,
            47403,
            47310,
            47225,
            47310,
            47052,
            47361,
            47199,
            46982,
            47265,
            47123,
            47272,
            47482,
            47534,
            47267,
            47329,
            44323,
            49252,
            47324,
            47206,
            47238,
            47133,
            47234,
            47207,
            47405,
            47223,
            47245,
            47319,
            47104,
            47436,
            47094,
            47466,
            47278,
            47590,
            47452,
            47273,
            47324,
            47252,
            47190,
            47411
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            99,
            1165,
            5108,
            12892,
            23117,
            30831,
            31980,
            28838,
            23407,
            13206,
            3916,
            554,
            34,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            51,
            682,
            3832,
            12577,
            24825,
            31964,
            32441,
            27519,
            22715,
            16315,
            10543,
            3936,
            726,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            2,
            103,
            755,
            3194,
            10128,
            20406,
            30642,
            36745,
            35341,
            26220,
            15694,
            5791,
            1170,
            83,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            442,
            3491,
            11981,
            23812,
            33336,
            37816,
            38209,
            31643,
            20241,
            11844,
            4085,
            656,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            213,
            1198,
            5844,
            15034,
            26579
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            87,
            878,
            5433,
            15860,
            26840,
            31597,
            32169,
            26053,
            15597,
            5813,
            1075,
            107,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            191,
            1727,
            7934,
            16814,
            28446,
            33373,
            31383,
            25218,
            16493,
            8740,
            3146,
            455,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            2,
            309,
            1911,
            8396,
            19058,
            29552,
            34531,
            35116,
            28339,
            19762,
            9792,
            2413,
            175,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            28,
            491,
            2862,
            9065,
            20047,
            28682,
            34117,
            31301,
            26958,
            20663,
            12149,
            5338,
            1003,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            49,
            666,
            3696,
            10529,
            20024,
            30250,
            37469,
            39045,
            31899,
            22017,
            11096,
            4115,
            1010,
            56,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            73,
            848,
            4259,
            11156,
            21652,
            32031,
            38804,
            36353,
            35763,
            27746,
            18398,
            8127,
            1591,
            94,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            17,
            337,
            2027,
            7882
          ]
        ]
      },
      "call": {
        "duration": 0.2728549239982385,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa5e16cf0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa5e16cf0> = array([21, 14, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa5dd9610>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47917, 47429, 47430, 47468, 47290, 47378, ...], [47917, 47429, 47430, 47468, 47290, 47378, ...], [..., 0, ...], [0, 0, 2, 103, 755, 3194, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 49, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa5e16cf0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa5e16cf0> = array([21, 14, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001611215000593802,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2931333339984121,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1707999979989836,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014451919996645302,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3054214380026679,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            9,
            48,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            36,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            233,
            54,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003497117999359034,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002902445001382148,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5360512520019256,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            125,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            4,
            255,
            146,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            109,
            255,
            175,
            255,
            193,
            0,
            0,
            186,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            218,
            0,
            48,
            1,
            255,
            10,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            113,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            255,
            115,
            255,
            164,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            235,
            255,
            184,
            255,
            255,
            4,
            0,
            144,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            81,
            255,
            83
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          6,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034558370025479235,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002883454002585495,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29607513900191407,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48179,
            47596,
            47598,
            47644,
            49364,
            47647,
            47935,
            47444,
            49901,
            47680,
            47593,
            47656,
            47480,
            47500,
            47479,
            47434,
            47499,
            47716,
            47145,
            47231,
            47518,
            47740,
            47315,
            47448,
            47517,
            47536,
            47627,
            47398,
            47603,
            47632,
            47614,
            47594,
            47561,
            47631,
            47570,
            47514,
            47229,
            52676,
            47715,
            47895,
            47484,
            47644,
            47503,
            47168,
            47274,
            47357,
            47590,
            47467,
            47660,
            47526,
            47719,
            47502,
            47632,
            47655,
            47599,
            47542,
            47585,
            47545,
            47455,
            47355,
            47225,
            47677,
            47989
          ],
          [
            48179,
            47596,
            47598,
            47644,
            49364,
            47647,
            47935,
            47444,
            49901,
            47680,
            47593,
            47656,
            47480,
            47500,
            47479,
            47434,
            47499,
            47716,
            47145,
            47231,
            47518,
            47740,
            47315,
            47448,
            47517,
            47536,
            47627,
            47398,
            47603,
            47632,
            47614,
            47594,
            47561,
            47631,
            47570,
            47514,
            47229,
            52676,
            47715,
            47895,
            47484,
            47644,
            47503,
            47168,
            47274,
            47357,
            47590,
            47467,
            47660,
            47526,
            47719,
            47502,
            47632,
            47655,
            47599,
            47542,
            47585,
            47545,
            47455,
            47355,
            47225,
            47677,
            47989
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            278,
            3564,
            17512,
            35265,
            37244,
            20067,
            4743,
            376,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            139,
            2735,
            16085,
            34435,
            40656,
            26236,
            8999,
            1085,
            108,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            889,
            7863,
            28796,
            41302,
            38676,
            19054,
            4344,
            495,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            161,
            2551,
            13417,
            30953,
            42331,
            38421,
            20069,
            5500,
            526,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13437958599752164,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001622766001673881,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06897279300028458,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48054,
            47307,
            46975,
            47451,
            47364,
            47387,
            47681,
            47430,
            47103,
            47140,
            47048,
            47276,
            47216,
            47186,
            47269,
            47230,
            47168,
            46906,
            47198,
            47409,
            47007,
            47392,
            47367,
            47322,
            47240,
            49423,
            48780,
            47197,
            47112,
            47150,
            47139,
            47232,
            47225,
            47250,
            47112,
            47407,
            47135,
            47226,
            47398,
            47306,
            47383,
            47351,
            46964,
            47451,
            47348,
            47928,
            49573,
            47219,
            47170,
            47177,
            47121,
            47227,
            47027,
            47233,
            47258,
            47204,
            47214,
            47377,
            47343,
            47244,
            47216,
            47235,
            47189
          ],
          [
            48054,
            47307,
            46975,
            47451,
            47364,
            47387,
            47681,
            47430,
            47103,
            47140,
            47048,
            47276,
            47216,
            47186,
            47269,
            47230,
            47168,
            46906,
            47198,
            47409,
            47007,
            47392,
            47367,
            47322,
            47240,
            49423,
            48780,
            47197,
            47112,
            47150,
            47139,
            47232,
            47225,
            47250,
            47112,
            47407,
            47135,
            47226,
            47398,
            47306,
            47383,
            47351,
            46964,
            47451,
            47348,
            47928,
            49573,
            47219,
            47170,
            47177,
            47121,
            47227,
            47027,
            47233,
            47258,
            47204,
            47214,
            47377,
            47343,
            47244,
            47216,
            47235,
            47189
          ],
          [
            48054,
            47307,
            46975,
            47451,
            47364,
            47387,
            47681,
            47430,
            47103,
            47140,
            47048,
            47276,
            47216,
            47186,
            47269,
            47230,
            47168,
            46906,
            47198,
            47409,
            47007,
            47392,
            47367,
            47322,
            47240,
            49423,
            48780,
            47197,
            47112,
            47150,
            47139,
            47232,
            47225,
            47250,
            47112,
            47407,
            47135,
            47226,
            47398,
            47306,
            47383,
            47351,
            46964,
            47451,
            47348,
            47928,
            49573,
            47219,
            47170,
            47177,
            47121,
            47227,
            47027,
            47233,
            47258,
            47204,
            47214,
            47377,
            47343,
            47244,
            47216,
            47235,
            47189
          ],
          [
            48054,
            47307,
            46975,
            47451,
            47364,
            47387,
            47681,
            47430,
            47103,
            47140,
            47048,
            47276,
            47216,
            47186,
            47269,
            47230,
            47168,
            46906,
            47198,
            47409,
            47007,
            47392,
            47367,
            47322,
            47240,
            49423,
            48780,
            47197,
            47112,
            47150,
            47139,
            47232,
            47225,
            47250,
            47112,
            47407,
            47135,
            47226,
            47398,
            47306,
            47383,
            47351,
            46964,
            47451,
            47348,
            47928,
            49573,
            47219,
            47170,
            47177,
            47121,
            47227,
            47027,
            47233,
            47258,
            47204,
            47214,
            47377,
            47343,
            47244,
            47216,
            47235,
            47189
          ],
          [
            48054,
            47307,
            46975,
            47451,
            47364,
            47387,
            47681,
            47430,
            47103,
            47140,
            47048,
            47276,
            47216,
            47186,
            47269,
            47230,
            47168,
            46906,
            47198,
            47409,
            47007,
            47392,
            47367,
            47322,
            47240,
            49423,
            48780,
            47197,
            47112,
            47150,
            47139,
            47232,
            47225,
            47250,
            47112,
            47407,
            47135,
            47226,
            47398,
            47306,
            47383,
            47351,
            46964,
            47451,
            47348,
            47928,
            49573,
            47219,
            47170,
            47177,
            47121,
            47227,
            47027,
            47233,
            47258,
            47204,
            47214,
            47377,
            47343,
            47244,
            47216,
            47235,
            47189
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            328,
            2317,
            11017,
            25509,
            36471,
            36657,
            26274,
            13279,
            2560,
            293,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            409,
            2772,
            12516,
            28345,
            38851,
            39360,
            29340,
            16777,
            5322,
            1176,
            124,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12
          ],
          [
            0,
            0,
            10,
            432,
            4092,
            15556,
            31403,
            40402,
            34836,
            19774,
            6438,
            833,
            32,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            67,
            1005,
            7233,
            23181,
            39149,
            43731,
            39580,
            27565,
            12428,
            2578,
            278,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            94,
            1253,
            7239,
            21071,
            35675,
            39380
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            424,
            3560,
            13108,
            27199,
            33740,
            28897,
            14201,
            3932,
            412,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            678,
            6333,
            19233,
            34534,
            40418,
            34216,
            18348,
            6057,
            817,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            746,
            4741,
            17040,
            32886,
            38291,
            32222,
            17585,
            5612,
            696,
            77,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            194,
            2023,
            9179,
            22538,
            36519,
            41205,
            35276,
            22904,
            8804,
            1814,
            140,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            77,
            1427,
            7907,
            20788,
            33866,
            40463,
            37440,
            26393,
            13252,
            3352,
            470,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            33,
            343,
            2573,
            11309,
            25641,
            38693,
            43568,
            38693,
            26616,
            12616,
            3971,
            955,
            99,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            39,
            626,
            5868,
            17388,
            32145
          ]
        ]
      },
      "call": {
        "duration": 0.2699185480014421,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014880640010233037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2919501969990961,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170618914999068,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001473182001063833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3582236020010896,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            105,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034933669994643424,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029267149984661955,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5368006690005132,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            4,
            255,
            0,
            21,
            0,
            255,
            0,
            255,
            255
          ],
          [
            62,
            0,
            17,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            23,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            212,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            15,
            255,
            36,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            1,
            0,
            255,
            2,
            255,
            255
          ],
          [
            45,
            0,
            0,
            0,
            0,
            0,
            255,
            130,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            95,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            75,
            0,
            3,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            101,
            255,
            65,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035290090017952025,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002886154001316754,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2965991910023149,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47691,
            47316,
            47647,
            47515,
            47435,
            47395,
            47520,
            47543,
            47399,
            47326,
            47314,
            47602,
            47498,
            47457,
            47466,
            47575,
            47521,
            47552,
            47685,
            47568,
            47226,
            47123,
            47592,
            47903,
            47394,
            47761,
            47465,
            47581,
            47385,
            47415,
            47556,
            47459,
            47467,
            47407,
            47515,
            47460,
            47622,
            47492,
            47650,
            47533,
            47645,
            47414,
            47412,
            47574,
            47332,
            47297,
            47602,
            47510,
            47561,
            47517,
            47441,
            47420,
            51727,
            47495,
            47788,
            47651,
            49744,
            47657,
            47470,
            47513,
            47354,
            58643,
            47247
          ],
          [
            47691,
            47316,
            47647,
            47515,
            47435,
            47395,
            47520,
            47543,
            47399,
            47326,
            47314,
            47602,
            47498,
            47457,
            47466,
            47575,
            47521,
            47552,
            47685,
            47568,
            47226,
            47123,
            47592,
            47903,
            47394,
            47761,
            47465,
            47581,
            47385,
            47415,
            47556,
            47459,
            47467,
            47407,
            47515,
            47460,
            47622,
            47492,
            47650,
            47533,
            47645,
            47414,
            47412,
            47574,
            47332,
            47297,
            47602,
            47510,
            47561,
            47517,
            47441,
            47420,
            51727,
            47495,
            47788,
            47651,
            49744,
            47657,
            47470,
            47513,
            47354,
            58643,
            47247
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            609,
            6922,
            24458,
            38678,
            34579,
            15959,
            3094,
            295,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            661,
            6293,
            22189,
            38103,
            38200,
            21813,
            5404,
            601,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            98,
            1657,
            13982,
            32835,
            41173,
            28805,
            10387,
            1622,
            161,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            523,
            5718,
            21923,
            38539,
            41366,
            30112,
            12333,
            1896,
            264,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53,
            655,
            7531,
            24952,
            49613,
            43632
          ]
        ]
      },
      "call": {
        "duration": 0.13440868700126885,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015954959999362472,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06959146699955454,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50334,
            47519,
            47259,
            47146,
            47276,
            47242,
            47275,
            46866,
            47180,
            47244,
            47235,
            47460,
            47245,
            47232,
            47426,
            47149,
            47197,
            47509,
            47511,
            47806,
            47317,
            47228,
            47303,
            47212,
            46816,
            47064,
            47348,
            47131,
            47151,
            47270,
            47235,
            46818,
            47245,
            47217,
            47397,
            47267,
            47194,
            47385,
            49066,
            48820,
            47257,
            47399,
            47356,
            47300,
            47241,
            47185,
            47212,
            47376,
            47214,
            46930,
            47333,
            47207,
            47302,
            47398,
            47400,
            47390,
            47200,
            47447,
            47831,
            47385,
            47287,
            47266,
            47470
          ],
          [
            50334,
            47519,
            47259,
            47146,
            47276,
            47242,
            47275,
            46866,
            47180,
            47244,
            47235,
            47460,
            47245,
            47232,
            47426,
            47149,
            47197,
            47509,
            47511,
            47806,
            47317,
            47228,
            47303,
            47212,
            46816,
            47064,
            47348,
            47131,
            47151,
            47270,
            47235,
            46818,
            47245,
            47217,
            47397,
            47267,
            47194,
            47385,
            49066,
            48820,
            47257,
            47399,
            47356,
            47300,
            47241,
            47185,
            47212,
            47376,
            47214,
            46930,
            47333,
            47207,
            47302,
            47398,
            47400,
            47390,
            47200,
            47447,
            47831,
            47385,
            47287,
            47266,
            47470
          ],
          [
            50334,
            47519,
            47259,
            47146,
            47276,
            47242,
            47275,
            46866,
            47180,
            47244,
            47235,
            47460,
            47245,
            47232,
            47426,
            47149,
            47197,
            47509,
            47511,
            47806,
            47317,
            47228,
            47303,
            47212,
            46816,
            47064,
            47348,
            47131,
            47151,
            47270,
            47235,
            46818,
            47245,
            47217,
            47397,
            47267,
            47194,
            47385,
            49066,
            48820,
            47257,
            47399,
            47356,
            47300,
            47241,
            47185,
            47212,
            47376,
            47214,
            46930,
            47333,
            47207,
            47302,
            47398,
            47400,
            47390,
            47200,
            47447,
            47831,
            47385,
            47287,
            47266,
            47470
          ],
          [
            50334,
            47519,
            47259,
            47146,
            47276,
            47242,
            47275,
            46866,
            47180,
            47244,
            47235,
            47460,
            47245,
            47232,
            47426,
            47149,
            47197,
            47509,
            47511,
            47806,
            47317,
            47228,
            47303,
            47212,
            46816,
            47064,
            47348,
            47131,
            47151,
            47270,
            47235,
            46818,
            47245,
            47217,
            47397,
            47267,
            47194,
            47385,
            49066,
            48820,
            47257,
            47399,
            47356,
            47300,
            47241,
            47185,
            47212,
            47376,
            47214,
            46930,
            47333,
            47207,
            47302,
            47398,
            47400,
            47390,
            47200,
            47447,
            47831,
            47385,
            47287,
            47266,
            47470
          ],
          [
            50334,
            47519,
            47259,
            47146,
            47276,
            47242,
            47275,
            46866,
            47180,
            47244,
            47235,
            47460,
            47245,
            47232,
            47426,
            47149,
            47197,
            47509,
            47511,
            47806,
            47317,
            47228,
            47303,
            47212,
            46816,
            47064,
            47348,
            47131,
            47151,
            47270,
            47235,
            46818,
            47245,
            47217,
            47397,
            47267,
            47194,
            47385,
            49066,
            48820,
            47257,
            47399,
            47356,
            47300,
            47241,
            47185,
            47212,
            47376,
            47214,
            46930,
            47333,
            47207,
            47302,
            47398,
            47400,
            47390,
            47200,
            47447,
            47831,
            47385,
            47287,
            47266,
            47470
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            94,
            965,
            5129,
            16435,
            30408,
            38213,
            35538,
            26105,
            13664,
            4369,
            894,
            129,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            242,
            2285,
            9845,
            23213,
            36429,
            39056,
            32768,
            21436,
            8434,
            1874,
            138,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            21,
            250,
            2274,
            10895,
            26847,
            38786,
            41486,
            34695,
            21940,
            9458,
            2440,
            318,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            55,
            803,
            5379,
            16449,
            29934,
            39096,
            35653,
            25951,
            12308,
            2735,
            305,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            12032,
            3541,
            348,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            104,
            1657,
            8419,
            21598,
            33674,
            37565,
            29278,
            16252,
            4976,
            683,
            30,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            383,
            4092,
            14331,
            27279,
            38891,
            35260,
            22931,
            9931,
            2030,
            121,
            7,
            0,
            0,
            0,
            0
          ],
          [
            31,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            506,
            4621,
            14954,
            28479,
            39416,
            40896,
            32454,
            20925,
            8597,
            1525,
            142,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            27,
            203,
            2445,
            12442,
            26252,
            37189,
            36276,
            24590,
            11098,
            2876,
            270,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            26,
            499,
            3941,
            15133,
            27781,
            39075,
            41967,
            35618,
            23941,
            13722,
            3977,
            1146,
            114,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            157,
            1054,
            6158,
            18510,
            31830,
            40807,
            40667,
            32515,
            20713,
            9293,
            2643,
            442,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27017160399918794,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001513563998742029,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29253613999753725,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1717455300022266,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40046180, 10011545), (410983, 410983), (40048116, 10012029))\nassert ((40046180 > 0 and 10011545 == 0\n  +10011545\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffffa5dd92e0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffffa5bbf220>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffffa5e97910>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40046180, 10011545), (410983, 410983), (40048116, 10012029))\nE       assert ((40046180 > 0 and 10011545 == 0\nE         +10011545\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004983350998372771,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}