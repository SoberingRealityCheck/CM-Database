{
  "created": 1722033191.896371,
  "duration": 23.50042748451233,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5101778450007259,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14844021099997917,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001328638998529641,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038141949989949353,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482742469997902,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012680379986704793,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13225095099915052,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12187624000216601,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00126773800002411,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038060949991631787,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12133187799918232,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012812679997296073,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003364424999745097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467030519997934,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011787260009441525,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003347383997606812,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11994044699895312,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011684659984894097,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033538939969730563,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14649229700080468,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011963670003751758,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033370640012435615,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11989787600032287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001172575997770764,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004394947998662246,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002069266000034986,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011285350010439288,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033363740003551356,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017379089986206964,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010810739986482076,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033065239986171946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040506299992557615,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033174.1929755,
            "msecs": 192.97552108764648,
            "relativeCreated": 7768.247127532959,
            "thread": 281472989360160,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5072
          }
        ]
      },
      "teardown": {
        "duration": 0.001217486998939421,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033646349984337576,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002408813001238741,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033174.2052543,
            "msecs": 205.25431632995605,
            "relativeCreated": 7780.525922775269,
            "thread": 281472989360160,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5072
          }
        ]
      },
      "teardown": {
        "duration": 0.0011613860006036703,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020644660035031848,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027388810012780596,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033174.2147486,
            "msecs": 214.74862098693848,
            "relativeCreated": 7790.020227432251,
            "thread": 281472989360160,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5072
          }
        ]
      },
      "teardown": {
        "duration": 0.00106451399915386,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020671960010076873,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003409965996979736,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033174.2241883,
            "msecs": 224.18832778930664,
            "relativeCreated": 7799.459934234619,
            "thread": 281472989360160,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5072
          }
        ]
      },
      "teardown": {
        "duration": 0.0010868940007640049,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003341204999742331,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14630023300196626,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012048870012222324,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033329549987684004,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12013923099948443,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001176686000690097,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.18111687800046639,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1474987300025532,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001249136999831535,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01517493799838121,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12141314900145517,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001292909000767395,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8407091709996166,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            14,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            94,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            24,
            162,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035513590009941254,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028888540000480134,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.892784092000511,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            22,
            0,
            1,
            0,
            0
          ],
          [
            0,
            12,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            193,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            157,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            25,
            255,
            255,
            255,
            21
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            82,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            92,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            99,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            231,
            255,
            255,
            255,
            255,
            0,
            0,
            127,
            3,
            84,
            255
          ],
          [
            255,
            0,
            138,
            0,
            255,
            0,
            170,
            37,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003479926999716554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028734039988194127,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30284245499933604,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48187,
            47587,
            47455,
            47501,
            47336,
            47497,
            47286,
            47503,
            47484,
            47435,
            47460,
            47593,
            47487,
            47624,
            47416,
            49030,
            47224,
            47754,
            47380,
            47545,
            47401,
            47234,
            47122,
            47398,
            47467,
            47443,
            47292,
            47375,
            47326,
            47406,
            47497,
            47544,
            47609,
            47442,
            47404,
            47296,
            47325,
            47313,
            47390,
            47295,
            47469,
            47350,
            47350,
            47470,
            47448,
            47360,
            47346,
            47461,
            47393,
            47497,
            47465,
            47528,
            47508,
            47481,
            49271,
            47544,
            47744,
            47490,
            47591,
            47504,
            47680,
            47513,
            47323
          ],
          [
            48187,
            47587,
            47455,
            47501,
            47336,
            47497,
            47286,
            47503,
            47484,
            47435,
            47460,
            47593,
            47487,
            47624,
            47416,
            49030,
            47224,
            47754,
            47380,
            47545,
            47401,
            47234,
            47122,
            47398,
            47467,
            47443,
            47292,
            47375,
            47326,
            47406,
            47497,
            47544,
            47609,
            47442,
            47404,
            47296,
            47325,
            47313,
            47390,
            47295,
            47469,
            47350,
            47350,
            47470,
            47448,
            47360,
            47346,
            47461,
            47393,
            47497,
            47465,
            47528,
            47508,
            47481,
            49271,
            47544,
            47744,
            47490,
            47591,
            47504,
            47680,
            47513,
            47323
          ]
        ],
        "eTX_errcounts": [
          [
            40154,
            26615,
            7874,
            1198,
            85,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            189,
            3097,
            16204,
            33985,
            42484,
            31461,
            13868,
            2435,
            109,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            867,
            7453,
            25502,
            42058,
            37547,
            19365,
            5139,
            592,
            40,
            0,
            0,
            0
          ],
          [
            10,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            339,
            3955,
            17778,
            36275,
            42063,
            31452,
            13701,
            2981,
            348,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            413,
            4166,
            18630,
            36709,
            42710,
            35477,
            17020,
            3136,
            405,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1333564149972517,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016084550006780773,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06887214100061101,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47991,
            47276,
            47111,
            47198,
            48706,
            47471,
            47212,
            47101,
            47058,
            47085,
            46737,
            47103,
            46977,
            47073,
            47064,
            47014,
            46969,
            47111,
            46853,
            47153,
            47161,
            47066,
            47077,
            47104,
            47072,
            47189,
            47482,
            47000,
            46923,
            47015,
            47128,
            47080,
            47169,
            47017,
            46953,
            46742,
            47198,
            47133,
            46957,
            46939,
            47150,
            47217,
            47135,
            47135,
            47118,
            47106,
            47114,
            47551,
            47155,
            46961,
            46858,
            47128,
            47035,
            47093,
            46980,
            47055,
            47064,
            46994,
            46959,
            47102,
            46837,
            47106,
            47232
          ],
          [
            47991,
            47276,
            47111,
            47198,
            48706,
            47471,
            47212,
            47101,
            47058,
            47085,
            46737,
            47103,
            46977,
            47073,
            47064,
            47014,
            46969,
            47111,
            46853,
            47153,
            47161,
            47066,
            47077,
            47104,
            47072,
            47189,
            47482,
            47000,
            46923,
            47015,
            47128,
            47080,
            47169,
            47017,
            46953,
            46742,
            47198,
            47133,
            46957,
            46939,
            47150,
            47217,
            47135,
            47135,
            47118,
            47106,
            47114,
            47551,
            47155,
            46961,
            46858,
            47128,
            47035,
            47093,
            46980,
            47055,
            47064,
            46994,
            46959,
            47102,
            46837,
            47106,
            47232
          ],
          [
            47991,
            47276,
            47111,
            47198,
            48706,
            47471,
            47212,
            47101,
            47058,
            47085,
            46737,
            47103,
            46977,
            47073,
            47064,
            47014,
            46969,
            47111,
            46853,
            47153,
            47161,
            47066,
            47077,
            47104,
            47072,
            47189,
            47482,
            47000,
            46923,
            47015,
            47128,
            47080,
            47169,
            47017,
            46953,
            46742,
            47198,
            47133,
            46957,
            46939,
            47150,
            47217,
            47135,
            47135,
            47118,
            47106,
            47114,
            47551,
            47155,
            46961,
            46858,
            47128,
            47035,
            47093,
            46980,
            47055,
            47064,
            46994,
            46959,
            47102,
            46837,
            47106,
            47232
          ],
          [
            47991,
            47276,
            47111,
            47198,
            48706,
            47471,
            47212,
            47101,
            47058,
            47085,
            46737,
            47103,
            46977,
            47073,
            47064,
            47014,
            46969,
            47111,
            46853,
            47153,
            47161,
            47066,
            47077,
            47104,
            47072,
            47189,
            47482,
            47000,
            46923,
            47015,
            47128,
            47080,
            47169,
            47017,
            46953,
            46742,
            47198,
            47133,
            46957,
            46939,
            47150,
            47217,
            47135,
            47135,
            47118,
            47106,
            47114,
            47551,
            47155,
            46961,
            46858,
            47128,
            47035,
            47093,
            46980,
            47055,
            47064,
            46994,
            46959,
            47102,
            46837,
            47106,
            47232
          ],
          [
            47991,
            47276,
            47111,
            47198,
            48706,
            47471,
            47212,
            47101,
            47058,
            47085,
            46737,
            47103,
            46977,
            47073,
            47064,
            47014,
            46969,
            47111,
            46853,
            47153,
            47161,
            47066,
            47077,
            47104,
            47072,
            47189,
            47482,
            47000,
            46923,
            47015,
            47128,
            47080,
            47169,
            47017,
            46953,
            46742,
            47198,
            47133,
            46957,
            46939,
            47150,
            47217,
            47135,
            47135,
            47118,
            47106,
            47114,
            47551,
            47155,
            46961,
            46858,
            47128,
            47035,
            47093,
            46980,
            47055,
            47064,
            46994,
            46959,
            47102,
            46837,
            47106,
            47232
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            7,
            73,
            1071,
            5070,
            13900,
            24505,
            31199,
            32323,
            27508,
            19655,
            10395,
            2915,
            290,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            189,
            1850,
            5507,
            12087,
            24572,
            35041,
            38780,
            31605,
            21207,
            9975,
            3041,
            443,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            48,
            585,
            3338,
            11014,
            21558,
            32533,
            36002,
            33969,
            26262,
            14867,
            5831,
            1290,
            127,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            171,
            1562,
            5083,
            11325,
            20417,
            32221,
            41149,
            39493,
            28506,
            17878,
            6979,
            1030,
            82,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            143,
            1383,
            5522,
            13659,
            23525
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            173,
            1613,
            7065,
            17084,
            30143,
            35590,
            32218,
            23315,
            12420,
            3825,
            658,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            134,
            1321,
            6744,
            16965,
            31056,
            34321,
            30858,
            24117,
            13695,
            3956,
            684,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            344,
            2412,
            8850,
            18725,
            30820,
            37980,
            34684,
            25319,
            13372,
            3341,
            457,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            59,
            610,
            2609,
            6647,
            15978,
            29938,
            38105,
            35932,
            28607,
            17676,
            6945,
            1455,
            87,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            1,
            121,
            947,
            3527,
            9573,
            20095,
            31930,
            38127,
            36898,
            31659,
            22695,
            10262,
            2779,
            426,
            35,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            138,
            1414,
            4715,
            10118,
            18213,
            29733,
            39971,
            41053,
            34809,
            23794,
            11637,
            3996,
            808,
            82,
            7,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            62,
            662,
            3016,
            8233
          ]
        ]
      },
      "call": {
        "duration": 0.2706783190005808,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff74c96990>()\n +    where <built-in method all of numpy.ndarray object at 0xffff74c96990> = array([21, 13, 19, 22, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff74c6f100>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47991, 47276, 47111, 47198, 48706, 47471, ...], [47991, 47276, 47111, 47198, 48706, 47471, ...], [..., 0, ...], [0, 0, 1, 48, 585, 3338, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 1, 121, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff74c96990>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff74c96990> = array([21, 13, 19, 22, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016119659994728863,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29271197900015977,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170215617003123,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014319020010589156,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3015609419999237,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            6,
            15,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            34,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            212,
            83,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034734170003503095,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002896534999308642,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5399616670001706,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            186,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            74,
            255,
            131,
            255,
            130,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            105,
            2,
            255,
            20,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            69,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            12,
            255,
            178,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            208,
            255,
            148,
            255,
            255,
            10,
            0,
            214,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            2,
            255,
            98,
            255,
            90
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034770769998431206,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002869112999178469,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29575161700267927,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48298,
            47586,
            47368,
            47403,
            47401,
            47514,
            47472,
            47466,
            47305,
            47270,
            47418,
            47392,
            47487,
            47534,
            47696,
            47964,
            47731,
            47972,
            47311,
            47469,
            47494,
            47403,
            47533,
            47126,
            47427,
            47455,
            47371,
            47370,
            47440,
            47265,
            47235,
            47410,
            47426,
            47498,
            47630,
            47523,
            47625,
            47593,
            47589,
            47445,
            47513,
            47407,
            47307,
            47535,
            47282,
            47492,
            47528,
            47416,
            47216,
            47124,
            50254,
            47317,
            47494,
            47569,
            47665,
            47660,
            47476,
            47512,
            47375,
            47471,
            47123,
            47333,
            47262
          ],
          [
            48298,
            47586,
            47368,
            47403,
            47401,
            47514,
            47472,
            47466,
            47305,
            47270,
            47418,
            47392,
            47487,
            47534,
            47696,
            47964,
            47731,
            47972,
            47311,
            47469,
            47494,
            47403,
            47533,
            47126,
            47427,
            47455,
            47371,
            47370,
            47440,
            47265,
            47235,
            47410,
            47426,
            47498,
            47630,
            47523,
            47625,
            47593,
            47589,
            47445,
            47513,
            47407,
            47307,
            47535,
            47282,
            47492,
            47528,
            47416,
            47216,
            47124,
            50254,
            47317,
            47494,
            47569,
            47665,
            47660,
            47476,
            47512,
            47375,
            47471,
            47123,
            47333,
            47262
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            16,
            274,
            3860,
            18284,
            36957,
            36099,
            18212,
            4057,
            362,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            209,
            2992,
            16789,
            35277,
            39904,
            24761,
            8293,
            1005,
            53,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            1088,
            8673,
            29853,
            42313,
            39218,
            18594,
            4341,
            356,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            179,
            2497,
            14024,
            31475,
            42497,
            38567,
            19984,
            5096,
            565,
            40,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1336198509998212,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016031459999794606,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06866171699948609,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48027,
            47167,
            47281,
            47260,
            49061,
            47417,
            47428,
            47249,
            47374,
            47159,
            47137,
            47081,
            47304,
            47085,
            47350,
            47230,
            47261,
            47030,
            47411,
            47021,
            47486,
            47256,
            47272,
            47277,
            47163,
            47181,
            47278,
            47081,
            47198,
            47063,
            47461,
            46924,
            47139,
            47056,
            47281,
            47114,
            47262,
            47162,
            47355,
            47346,
            47181,
            47172,
            47503,
            47229,
            47386,
            49086,
            47566,
            47147,
            47007,
            47141,
            47277,
            47172,
            47247,
            47117,
            47323,
            47100,
            47229,
            47213,
            47195,
            47268,
            47382,
            47115,
            47226
          ],
          [
            48027,
            47167,
            47281,
            47260,
            49061,
            47417,
            47428,
            47249,
            47374,
            47159,
            47137,
            47081,
            47304,
            47085,
            47350,
            47230,
            47261,
            47030,
            47411,
            47021,
            47486,
            47256,
            47272,
            47277,
            47163,
            47181,
            47278,
            47081,
            47198,
            47063,
            47461,
            46924,
            47139,
            47056,
            47281,
            47114,
            47262,
            47162,
            47355,
            47346,
            47181,
            47172,
            47503,
            47229,
            47386,
            49086,
            47566,
            47147,
            47007,
            47141,
            47277,
            47172,
            47247,
            47117,
            47323,
            47100,
            47229,
            47213,
            47195,
            47268,
            47382,
            47115,
            47226
          ],
          [
            48027,
            47167,
            47281,
            47260,
            49061,
            47417,
            47428,
            47249,
            47374,
            47159,
            47137,
            47081,
            47304,
            47085,
            47350,
            47230,
            47261,
            47030,
            47411,
            47021,
            47486,
            47256,
            47272,
            47277,
            47163,
            47181,
            47278,
            47081,
            47198,
            47063,
            47461,
            46924,
            47139,
            47056,
            47281,
            47114,
            47262,
            47162,
            47355,
            47346,
            47181,
            47172,
            47503,
            47229,
            47386,
            49086,
            47566,
            47147,
            47007,
            47141,
            47277,
            47172,
            47247,
            47117,
            47323,
            47100,
            47229,
            47213,
            47195,
            47268,
            47382,
            47115,
            47226
          ],
          [
            48027,
            47167,
            47281,
            47260,
            49061,
            47417,
            47428,
            47249,
            47374,
            47159,
            47137,
            47081,
            47304,
            47085,
            47350,
            47230,
            47261,
            47030,
            47411,
            47021,
            47486,
            47256,
            47272,
            47277,
            47163,
            47181,
            47278,
            47081,
            47198,
            47063,
            47461,
            46924,
            47139,
            47056,
            47281,
            47114,
            47262,
            47162,
            47355,
            47346,
            47181,
            47172,
            47503,
            47229,
            47386,
            49086,
            47566,
            47147,
            47007,
            47141,
            47277,
            47172,
            47247,
            47117,
            47323,
            47100,
            47229,
            47213,
            47195,
            47268,
            47382,
            47115,
            47226
          ],
          [
            48027,
            47167,
            47281,
            47260,
            49061,
            47417,
            47428,
            47249,
            47374,
            47159,
            47137,
            47081,
            47304,
            47085,
            47350,
            47230,
            47261,
            47030,
            47411,
            47021,
            47486,
            47256,
            47272,
            47277,
            47163,
            47181,
            47278,
            47081,
            47198,
            47063,
            47461,
            46924,
            47139,
            47056,
            47281,
            47114,
            47262,
            47162,
            47355,
            47346,
            47181,
            47172,
            47503,
            47229,
            47386,
            49086,
            47566,
            47147,
            47007,
            47141,
            47277,
            47172,
            47247,
            47117,
            47323,
            47100,
            47229,
            47213,
            47195,
            47268,
            47382,
            47115,
            47226
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            71,
            649,
            4824,
            16085,
            28632,
            34084,
            32760,
            24930,
            14622,
            5208,
            991,
            84,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            108,
            1044,
            4220,
            12407,
            24876,
            36977,
            39165,
            28333,
            14745,
            3299,
            494,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31
          ],
          [
            0,
            1,
            144,
            1732,
            7894,
            21011,
            36883,
            40323,
            34542,
            21524,
            9616,
            2248,
            207,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            345,
            2281,
            8468,
            21388,
            35454,
            44006,
            40979,
            27596,
            12695,
            2852,
            261,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            38,
            570,
            3117,
            8788,
            20237,
            34396,
            37866
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            52,
            953,
            6660,
            21499,
            33964,
            38351,
            31174,
            14625,
            3607,
            313,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            470,
            5248,
            17546,
            35260,
            42844,
            34309,
            18939,
            5857,
            1019,
            105,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            221,
            1699,
            9986,
            26186,
            39229,
            41693,
            33727,
            17399,
            5035,
            578,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            259,
            2248,
            8852,
            21075,
            34876,
            41785,
            35241,
            22423,
            9713,
            2069,
            239,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            14,
            230,
            2362,
            11048,
            26712,
            38842,
            39540,
            33862,
            26804,
            16454,
            5934,
            1426,
            108,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            648,
            3653,
            11238,
            25062,
            36388,
            42961,
            40470,
            29083,
            14217,
            4366,
            694,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            220,
            1572,
            7036,
            17215,
            29933
          ]
        ]
      },
      "call": {
        "duration": 0.2693784200018854,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014933429993106984,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29151624299993273,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1700139219974517,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001439251998817781,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3574437239985855,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            91,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            232,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035200390011596028,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00287922400093521,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5383471209970594,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            7,
            255,
            1,
            31,
            0,
            255,
            0,
            255,
            255
          ],
          [
            48,
            0,
            8,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            44,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            4,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            10,
            255,
            40,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            3,
            255,
            2,
            255,
            8,
            3,
            0,
            255,
            3,
            255,
            255
          ],
          [
            75,
            0,
            0,
            0,
            9,
            0,
            255,
            150,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            92,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            77,
            0,
            3,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            90,
            255,
            40,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034668469997996,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00289161500040791,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2962093369969807,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47950,
            47538,
            47502,
            47643,
            47567,
            47481,
            47447,
            47355,
            47174,
            47479,
            47349,
            47383,
            47443,
            47419,
            49143,
            47179,
            44343,
            47504,
            47489,
            47394,
            49305,
            47327,
            47270,
            47391,
            47251,
            47368,
            47357,
            47553,
            47333,
            47380,
            47265,
            47478,
            47326,
            47394,
            47281,
            47347,
            47314,
            47450,
            47441,
            47535,
            47515,
            47281,
            47226,
            47310,
            47367,
            47369,
            47481,
            47456,
            47472,
            47285,
            47332,
            47423,
            47467,
            47456,
            47400,
            48947,
            47586,
            47865,
            47460,
            49629,
            47543,
            47239,
            47341
          ],
          [
            47950,
            47538,
            47502,
            47643,
            47567,
            47481,
            47447,
            47355,
            47174,
            47479,
            47349,
            47383,
            47443,
            47419,
            49143,
            47179,
            44343,
            47504,
            47489,
            47394,
            49305,
            47327,
            47270,
            47391,
            47251,
            47368,
            47357,
            47553,
            47333,
            47380,
            47265,
            47478,
            47326,
            47394,
            47281,
            47347,
            47314,
            47450,
            47441,
            47535,
            47515,
            47281,
            47226,
            47310,
            47367,
            47369,
            47481,
            47456,
            47472,
            47285,
            47332,
            47423,
            47467,
            47456,
            47400,
            48947,
            47586,
            47865,
            47460,
            49629,
            47543,
            47239,
            47341
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            792,
            7544,
            25224,
            39415,
            33460,
            15014,
            2894,
            242,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            671,
            6742,
            22951,
            38563,
            37631,
            20994,
            4828,
            643,
            18,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            0,
            0,
            0,
            130,
            1949,
            14107,
            33052,
            40595,
            28826,
            9578,
            1446,
            133,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            620,
            5944,
            22175,
            38720,
            41662,
            29671,
            12115,
            2214,
            166,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            30,
            758,
            7945,
            25478,
            40175,
            43489
          ]
        ]
      },
      "call": {
        "duration": 0.1333059240023431,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016146960006153677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06905976599955466,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47967,
            47197,
            47217,
            47182,
            47039,
            47001,
            47038,
            47048,
            47158,
            47294,
            47237,
            47121,
            47063,
            47094,
            48894,
            48664,
            46951,
            47076,
            47084,
            47125,
            47110,
            47057,
            47071,
            47108,
            47205,
            46999,
            46992,
            47095,
            47104,
            47271,
            47051,
            46815,
            46916,
            47189,
            47252,
            47391,
            47160,
            47059,
            47035,
            47001,
            46999,
            47036,
            47061,
            47144,
            47119,
            47237,
            47051,
            47251,
            47037,
            47218,
            47169,
            47101,
            47098,
            47201,
            47158,
            49064,
            47385,
            47214,
            47099,
            47207,
            46986,
            47019,
            47161
          ],
          [
            47967,
            47197,
            47217,
            47182,
            47039,
            47001,
            47038,
            47048,
            47158,
            47294,
            47237,
            47121,
            47063,
            47094,
            48894,
            48664,
            46951,
            47076,
            47084,
            47125,
            47110,
            47057,
            47071,
            47108,
            47205,
            46999,
            46992,
            47095,
            47104,
            47271,
            47051,
            46815,
            46916,
            47189,
            47252,
            47391,
            47160,
            47059,
            47035,
            47001,
            46999,
            47036,
            47061,
            47144,
            47119,
            47237,
            47051,
            47251,
            47037,
            47218,
            47169,
            47101,
            47098,
            47201,
            47158,
            49064,
            47385,
            47214,
            47099,
            47207,
            46986,
            47019,
            47161
          ],
          [
            47967,
            47197,
            47217,
            47182,
            47039,
            47001,
            47038,
            47048,
            47158,
            47294,
            47237,
            47121,
            47063,
            47094,
            48894,
            48664,
            46951,
            47076,
            47084,
            47125,
            47110,
            47057,
            47071,
            47108,
            47205,
            46999,
            46992,
            47095,
            47104,
            47271,
            47051,
            46815,
            46916,
            47189,
            47252,
            47391,
            47160,
            47059,
            47035,
            47001,
            46999,
            47036,
            47061,
            47144,
            47119,
            47237,
            47051,
            47251,
            47037,
            47218,
            47169,
            47101,
            47098,
            47201,
            47158,
            49064,
            47385,
            47214,
            47099,
            47207,
            46986,
            47019,
            47161
          ],
          [
            47967,
            47197,
            47217,
            47182,
            47039,
            47001,
            47038,
            47048,
            47158,
            47294,
            47237,
            47121,
            47063,
            47094,
            48894,
            48664,
            46951,
            47076,
            47084,
            47125,
            47110,
            47057,
            47071,
            47108,
            47205,
            46999,
            46992,
            47095,
            47104,
            47271,
            47051,
            46815,
            46916,
            47189,
            47252,
            47391,
            47160,
            47059,
            47035,
            47001,
            46999,
            47036,
            47061,
            47144,
            47119,
            47237,
            47051,
            47251,
            47037,
            47218,
            47169,
            47101,
            47098,
            47201,
            47158,
            49064,
            47385,
            47214,
            47099,
            47207,
            46986,
            47019,
            47161
          ],
          [
            47967,
            47197,
            47217,
            47182,
            47039,
            47001,
            47038,
            47048,
            47158,
            47294,
            47237,
            47121,
            47063,
            47094,
            48894,
            48664,
            46951,
            47076,
            47084,
            47125,
            47110,
            47057,
            47071,
            47108,
            47205,
            46999,
            46992,
            47095,
            47104,
            47271,
            47051,
            46815,
            46916,
            47189,
            47252,
            47391,
            47160,
            47059,
            47035,
            47001,
            46999,
            47036,
            47061,
            47144,
            47119,
            47237,
            47051,
            47251,
            47037,
            47218,
            47169,
            47101,
            47098,
            47201,
            47158,
            49064,
            47385,
            47214,
            47099,
            47207,
            46986,
            47019,
            47161
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            252,
            1943,
            7136,
            15194,
            27756,
            37261,
            35133,
            23906,
            11389,
            2937,
            343,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            83,
            870,
            4304,
            12898,
            24829,
            33015,
            32719,
            27881,
            19484,
            10151,
            3861,
            562,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            297,
            1681,
            5320,
            12618,
            25760,
            37271,
            44963,
            39357,
            22478,
            8843,
            2022,
            208,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            26,
            479,
            2936,
            7091,
            15176,
            29664,
            39216,
            35914,
            26733,
            13342,
            4175,
            766,
            29,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            94
          ],
          [
            11345,
            3100,
            264,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            97,
            1326,
            8276,
            20815,
            32750,
            38833,
            29788,
            14957,
            5551,
            845,
            35,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            86,
            980,
            5809,
            15725,
            28462,
            35538,
            32530,
            20728,
            8219,
            1543,
            198,
            3,
            0,
            0,
            0,
            0
          ],
          [
            60,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            66,
            1006,
            5784,
            16849,
            27848,
            38510,
            40527,
            31500,
            20565,
            9547,
            2790,
            338,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            125,
            940,
            4998,
            15561,
            27769,
            34914,
            32428,
            22782,
            11154,
            3461,
            615,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            126,
            1465,
            6275,
            16548,
            28739,
            38062,
            40593,
            37355,
            25452,
            13931,
            4132,
            666,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            53,
            562,
            2699,
            8429,
            18753,
            30496,
            37318,
            35881,
            30293,
            21879,
            12763,
            5032,
            1306,
            87,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2694299909999245,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015096930001163855,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29183346900026663,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1716322479987866,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045718, 10011430), (411062, 411062), (40048229, 10012058))\nassert ((40045718 > 0 and 10011430 == 0\n  +10011430\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff74c6f340>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff74a0b280>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff74d75520>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045718, 10011430), (411062, 411062), (40048229, 10012058))\nE       assert ((40045718 > 0 and 10011430 == 0\nE         +10011430\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004960490001394646,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}