{
  "created": 1722032885.927252,
  "duration": 23.48016047477722,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5038608440008829,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14843538100103615,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013293890006025322,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037901640025665984,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14812067299862974,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012638680018426385,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13202375599939842,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12291618299786933,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001275629001611378,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037841339981241617,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12176910700145527,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012745780004479457,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033395840000594035,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14758099199752905,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012049169999954756,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033415340003557503,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12072895400342532,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001172725998912938,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033040929993148893,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14740644799894653,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011793569974543061,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033103040004789364,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12093853999977,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011557760008145124,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004387866996694356,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020974670005671214,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011205850023543462,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032895440017455257,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017043379993992858,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011279350001132116,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033057729997381102,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004044900000735652,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032868.229946,
            "msecs": 229.94589805603027,
            "relativeCreated": 7760.712385177612,
            "thread": 281473236123680,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4927
          }
        ]
      },
      "teardown": {
        "duration": 0.0012660280008276459,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003357944999152096,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024303850004798733,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032868.2422278,
            "msecs": 242.22779273986816,
            "relativeCreated": 7772.99427986145,
            "thread": 281473236123680,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4927
          }
        ]
      },
      "teardown": {
        "duration": 0.0011483359994599596,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020676159983850084,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026856900003622286,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032868.2517476,
            "msecs": 251.74760818481445,
            "relativeCreated": 7782.5140953063965,
            "thread": 281473236123680,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4927
          }
        ]
      },
      "teardown": {
        "duration": 0.0010957450031128246,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002092306000122335,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003429825999774039,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032868.2611907,
            "msecs": 261.19065284729004,
            "relativeCreated": 7791.957139968872,
            "thread": 281473236123680,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4927
          }
        ]
      },
      "teardown": {
        "duration": 0.0010681140011001844,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033359240005665924,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1466863720015681,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011811270014732145,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033221539997612126,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12044973799856962,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001172185999166686,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17963451399918995,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14781862699965131,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012406179994286504,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015128977000131272,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12134528800015687,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012915589977637865,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.832521177999297,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            7,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            109,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            27,
            163,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003538519002177054,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0033446249981352594,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8928118719995837,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            10,
            0,
            4,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            234,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            172,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            24,
            255,
            255,
            255,
            14
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            25,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            94,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            202,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            176,
            255,
            255,
            255,
            255,
            0,
            0,
            117,
            1,
            64,
            255
          ],
          [
            255,
            0,
            108,
            0,
            255,
            0,
            255,
            71,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034491769984015264,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002891013999033021,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3021687290020054,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48450,
            47661,
            47487,
            47501,
            47520,
            47526,
            47648,
            48001,
            47563,
            47827,
            47546,
            47608,
            47574,
            47429,
            47535,
            47445,
            47547,
            47656,
            47660,
            47605,
            47665,
            47262,
            47304,
            47539,
            47553,
            47476,
            47553,
            47554,
            47502,
            47578,
            47631,
            47474,
            47538,
            47656,
            47434,
            47406,
            48017,
            47510,
            47943,
            47527,
            47717,
            47361,
            47405,
            47574,
            47417,
            47612,
            47348,
            47487,
            47473,
            47502,
            47283,
            47603,
            47409,
            47656,
            47489,
            47564,
            47595,
            47518,
            47695,
            47589,
            47522,
            47544,
            47565
          ],
          [
            48450,
            47661,
            47487,
            47501,
            47520,
            47526,
            47648,
            48001,
            47563,
            47827,
            47546,
            47608,
            47574,
            47429,
            47535,
            47445,
            47547,
            47656,
            47660,
            47605,
            47665,
            47262,
            47304,
            47539,
            47553,
            47476,
            47553,
            47554,
            47502,
            47578,
            47631,
            47474,
            47538,
            47656,
            47434,
            47406,
            48017,
            47510,
            47943,
            47527,
            47717,
            47361,
            47405,
            47574,
            47417,
            47612,
            47348,
            47487,
            47473,
            47502,
            47283,
            47603,
            47409,
            47656,
            47489,
            47564,
            47595,
            47518,
            47695,
            47589,
            47522,
            47544,
            47565
          ]
        ],
        "eTX_errcounts": [
          [
            40243,
            26174,
            8185,
            1094,
            101,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            167,
            3285,
            15930,
            34522,
            42668,
            31233,
            14292,
            2150,
            146,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            899,
            8154,
            26156,
            40504,
            36869,
            18683,
            5149,
            630,
            20,
            2,
            0,
            0
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            336,
            4104,
            17620,
            35911,
            41603,
            31347,
            13162,
            3196,
            336,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            15,
            301,
            4581,
            19989,
            37166,
            42738,
            34937,
            16252,
            3620,
            379,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13453748200117843,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016074660015874542,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06883491099870298,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47892,
            47418,
            47124,
            47898,
            47444,
            47205,
            47150,
            47231,
            47458,
            47549,
            46948,
            47553,
            47400,
            47594,
            47535,
            47359,
            47224,
            47292,
            47448,
            47469,
            47250,
            47397,
            47285,
            47557,
            47261,
            47481,
            47250,
            47437,
            47782,
            47343,
            47459,
            47540,
            47307,
            47574,
            47036,
            47288,
            47255,
            47274,
            47439,
            47270,
            47323,
            47267,
            47244,
            47557,
            47326,
            47454,
            47340,
            47422,
            47898,
            47401,
            47496,
            47454,
            47379,
            47546,
            47361,
            47411,
            47449,
            47372,
            47505,
            47082,
            47543,
            47393,
            47580
          ],
          [
            47892,
            47418,
            47124,
            47898,
            47444,
            47205,
            47150,
            47231,
            47458,
            47549,
            46948,
            47553,
            47400,
            47594,
            47535,
            47359,
            47224,
            47292,
            47448,
            47469,
            47250,
            47397,
            47285,
            47557,
            47261,
            47481,
            47250,
            47437,
            47782,
            47343,
            47459,
            47540,
            47307,
            47574,
            47036,
            47288,
            47255,
            47274,
            47439,
            47270,
            47323,
            47267,
            47244,
            47557,
            47326,
            47454,
            47340,
            47422,
            47898,
            47401,
            47496,
            47454,
            47379,
            47546,
            47361,
            47411,
            47449,
            47372,
            47505,
            47082,
            47543,
            47393,
            47580
          ],
          [
            47892,
            47418,
            47124,
            47898,
            47444,
            47205,
            47150,
            47231,
            47458,
            47549,
            46948,
            47553,
            47400,
            47594,
            47535,
            47359,
            47224,
            47292,
            47448,
            47469,
            47250,
            47397,
            47285,
            47557,
            47261,
            47481,
            47250,
            47437,
            47782,
            47343,
            47459,
            47540,
            47307,
            47574,
            47036,
            47288,
            47255,
            47274,
            47439,
            47270,
            47323,
            47267,
            47244,
            47557,
            47326,
            47454,
            47340,
            47422,
            47898,
            47401,
            47496,
            47454,
            47379,
            47546,
            47361,
            47411,
            47449,
            47372,
            47505,
            47082,
            47543,
            47393,
            47580
          ],
          [
            47892,
            47418,
            47124,
            47898,
            47444,
            47205,
            47150,
            47231,
            47458,
            47549,
            46948,
            47553,
            47400,
            47594,
            47535,
            47359,
            47224,
            47292,
            47448,
            47469,
            47250,
            47397,
            47285,
            47557,
            47261,
            47481,
            47250,
            47437,
            47782,
            47343,
            47459,
            47540,
            47307,
            47574,
            47036,
            47288,
            47255,
            47274,
            47439,
            47270,
            47323,
            47267,
            47244,
            47557,
            47326,
            47454,
            47340,
            47422,
            47898,
            47401,
            47496,
            47454,
            47379,
            47546,
            47361,
            47411,
            47449,
            47372,
            47505,
            47082,
            47543,
            47393,
            47580
          ],
          [
            47892,
            47418,
            47124,
            47898,
            47444,
            47205,
            47150,
            47231,
            47458,
            47549,
            46948,
            47553,
            47400,
            47594,
            47535,
            47359,
            47224,
            47292,
            47448,
            47469,
            47250,
            47397,
            47285,
            47557,
            47261,
            47481,
            47250,
            47437,
            47782,
            47343,
            47459,
            47540,
            47307,
            47574,
            47036,
            47288,
            47255,
            47274,
            47439,
            47270,
            47323,
            47267,
            47244,
            47557,
            47326,
            47454,
            47340,
            47422,
            47898,
            47401,
            47496,
            47454,
            47379,
            47546,
            47361,
            47411,
            47449,
            47372,
            47505,
            47082,
            47543,
            47393,
            47580
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            28,
            561,
            4248,
            14695,
            28701,
            35677,
            35262,
            27035,
            18117,
            9887,
            2981,
            402,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            32,
            913,
            5458,
            15589,
            28283,
            34706,
            37029,
            29630,
            21730,
            11460,
            4080,
            660,
            73,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            268,
            2542,
            11260,
            23550,
            33631,
            38601,
            34166,
            23530,
            12645,
            4573,
            857,
            121,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            348,
            4025,
            14163,
            26374,
            35224,
            39670,
            34936,
            25405,
            18004,
            9134,
            2247,
            267,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            52,
            886,
            4896,
            14494,
            25891
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            154,
            1380,
            7920,
            20367,
            30919,
            33583,
            29732,
            21238,
            10696,
            3028,
            388,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            143,
            1427,
            10234,
            21917,
            33572,
            35605,
            31309,
            23971,
            16227,
            6236,
            1291,
            109,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            150,
            1746,
            10320,
            22510,
            31431,
            34381,
            31490,
            23064,
            13586,
            4833,
            1085,
            61,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            238,
            2197,
            8776,
            21925,
            31043,
            33961,
            30870,
            24225,
            17194,
            8294,
            2568,
            411,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            54,
            343,
            3235,
            10776,
            21822,
            31527,
            39901,
            39993,
            29982,
            20437,
            10666,
            3172,
            301,
            11,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            534,
            3743,
            12808,
            24348,
            34672,
            40575,
            36270,
            27716,
            20084,
            11433,
            4821,
            1810,
            492,
            49,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            203,
            1536,
            7304
          ]
        ]
      },
      "call": {
        "duration": 0.274029183001403,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff83813cf0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff83813cf0> = array([21, 13, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff83802460>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47892, 47418, 47124, 47898, 47444, 47205, ...], [47892, 47418, 47124, 47898, 47444, 47205, ...], [... 0, 0, ...], [0, 0, 0, 4, 268, 2542, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 54, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff83813cf0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff83813cf0> = array([21, 13, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016332359991793055,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29258402599953115,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1688154859984934,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014798129996052012,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2939795929996762,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            15,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            255,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            28,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            181,
            39,
            3,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003493187999993097,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002900044997659279,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5332889780002006,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            142,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            12,
            255,
            187,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            90,
            255,
            120,
            255,
            127,
            0,
            0,
            151,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            56,
            0,
            255,
            22,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            94,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            3,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            157,
            255,
            134,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            235,
            255,
            255,
            0,
            0,
            78,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            61,
            255,
            141
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          6,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034614169999258593,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028986049983359408,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29557887199916877,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48069,
            47605,
            47625,
            47679,
            47494,
            47795,
            47848,
            47300,
            47664,
            47612,
            47559,
            47545,
            47403,
            47813,
            47425,
            47477,
            47490,
            47643,
            47470,
            47610,
            47399,
            47584,
            47393,
            47630,
            47333,
            47726,
            47561,
            47573,
            47539,
            47518,
            47530,
            47680,
            47567,
            47530,
            47628,
            49373,
            47616,
            47996,
            47650,
            49986,
            47563,
            47618,
            47485,
            47655,
            47563,
            47498,
            47642,
            47470,
            47449,
            47653,
            47559,
            47438,
            47413,
            47658,
            47503,
            47691,
            47565,
            47453,
            47306,
            47582,
            47492,
            47753,
            47482
          ],
          [
            48069,
            47605,
            47625,
            47679,
            47494,
            47795,
            47848,
            47300,
            47664,
            47612,
            47559,
            47545,
            47403,
            47813,
            47425,
            47477,
            47490,
            47643,
            47470,
            47610,
            47399,
            47584,
            47393,
            47630,
            47333,
            47726,
            47561,
            47573,
            47539,
            47518,
            47530,
            47680,
            47567,
            47530,
            47628,
            49373,
            47616,
            47996,
            47650,
            49986,
            47563,
            47618,
            47485,
            47655,
            47563,
            47498,
            47642,
            47470,
            47449,
            47653,
            47559,
            47438,
            47413,
            47658,
            47503,
            47691,
            47565,
            47453,
            47306,
            47582,
            47492,
            47753,
            47482
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            167,
            3717,
            18301,
            36332,
            36167,
            18236,
            4393,
            355,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            220,
            3007,
            17411,
            35647,
            39843,
            24711,
            7928,
            945,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            1027,
            8975,
            30523,
            41931,
            39164,
            18700,
            4353,
            387,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            266,
            2677,
            14601,
            31659,
            42727,
            38445,
            19718,
            4633,
            617,
            49,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1342886560014449,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016094159982458223,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0687465590017382,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47924,
            47513,
            47326,
            47169,
            47562,
            47280,
            47370,
            49466,
            49306,
            47320,
            47255,
            47202,
            47213,
            47516,
            47361,
            47302,
            47473,
            47439,
            47583,
            47410,
            47307,
            47492,
            47451,
            47471,
            47247,
            47671,
            47702,
            46951,
            47140,
            47364,
            46897,
            47295,
            47142,
            47407,
            47235,
            47222,
            47334,
            47500,
            47410,
            47352,
            47361,
            47567,
            47338,
            47576,
            47769,
            49945,
            47225,
            47315,
            47346,
            47476,
            47159,
            47249,
            46963,
            47375,
            47299,
            47350,
            47302,
            47537,
            47505,
            47410,
            47511,
            47528,
            49046
          ],
          [
            47924,
            47513,
            47326,
            47169,
            47562,
            47280,
            47370,
            49466,
            49306,
            47320,
            47255,
            47202,
            47213,
            47516,
            47361,
            47302,
            47473,
            47439,
            47583,
            47410,
            47307,
            47492,
            47451,
            47471,
            47247,
            47671,
            47702,
            46951,
            47140,
            47364,
            46897,
            47295,
            47142,
            47407,
            47235,
            47222,
            47334,
            47500,
            47410,
            47352,
            47361,
            47567,
            47338,
            47576,
            47769,
            49945,
            47225,
            47315,
            47346,
            47476,
            47159,
            47249,
            46963,
            47375,
            47299,
            47350,
            47302,
            47537,
            47505,
            47410,
            47511,
            47528,
            49046
          ],
          [
            47924,
            47513,
            47326,
            47169,
            47562,
            47280,
            47370,
            49466,
            49306,
            47320,
            47255,
            47202,
            47213,
            47516,
            47361,
            47302,
            47473,
            47439,
            47583,
            47410,
            47307,
            47492,
            47451,
            47471,
            47247,
            47671,
            47702,
            46951,
            47140,
            47364,
            46897,
            47295,
            47142,
            47407,
            47235,
            47222,
            47334,
            47500,
            47410,
            47352,
            47361,
            47567,
            47338,
            47576,
            47769,
            49945,
            47225,
            47315,
            47346,
            47476,
            47159,
            47249,
            46963,
            47375,
            47299,
            47350,
            47302,
            47537,
            47505,
            47410,
            47511,
            47528,
            49046
          ],
          [
            47924,
            47513,
            47326,
            47169,
            47562,
            47280,
            47370,
            49466,
            49306,
            47320,
            47255,
            47202,
            47213,
            47516,
            47361,
            47302,
            47473,
            47439,
            47583,
            47410,
            47307,
            47492,
            47451,
            47471,
            47247,
            47671,
            47702,
            46951,
            47140,
            47364,
            46897,
            47295,
            47142,
            47407,
            47235,
            47222,
            47334,
            47500,
            47410,
            47352,
            47361,
            47567,
            47338,
            47576,
            47769,
            49945,
            47225,
            47315,
            47346,
            47476,
            47159,
            47249,
            46963,
            47375,
            47299,
            47350,
            47302,
            47537,
            47505,
            47410,
            47511,
            47528,
            49046
          ],
          [
            47924,
            47513,
            47326,
            47169,
            47562,
            47280,
            47370,
            49466,
            49306,
            47320,
            47255,
            47202,
            47213,
            47516,
            47361,
            47302,
            47473,
            47439,
            47583,
            47410,
            47307,
            47492,
            47451,
            47471,
            47247,
            47671,
            47702,
            46951,
            47140,
            47364,
            46897,
            47295,
            47142,
            47407,
            47235,
            47222,
            47334,
            47500,
            47410,
            47352,
            47361,
            47567,
            47338,
            47576,
            47769,
            49945,
            47225,
            47315,
            47346,
            47476,
            47159,
            47249,
            46963,
            47375,
            47299,
            47350,
            47302,
            47537,
            47505,
            47410,
            47511,
            47528,
            49046
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            34,
            443,
            3447,
            12157,
            23509,
            35860,
            37821,
            26238,
            10887,
            2373,
            219,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            97,
            1147,
            3997,
            11725,
            25626,
            38823,
            40023,
            27318,
            12468,
            3072,
            561,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            0,
            6,
            26,
            784,
            5306,
            14587,
            29434,
            40769,
            37928,
            19803,
            6090,
            755,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            287,
            1988,
            7785,
            19301,
            34862,
            42887,
            39610,
            26290,
            12841,
            2640,
            243,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            172,
            1947,
            9059,
            21665,
            35888,
            42898
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            673,
            4830,
            15013,
            27619,
            37589,
            31464,
            16299,
            4063,
            439,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            561,
            5352,
            17316,
            36276,
            44274,
            34219,
            18787,
            5757,
            748,
            45,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            74,
            1132,
            6180,
            16876,
            30654,
            38930,
            32002,
            17657,
            5005,
            420,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            205,
            1938,
            7197,
            18919,
            34570,
            42472,
            35911,
            22168,
            7849,
            1352,
            58,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            223,
            2143,
            8459,
            20605,
            32835,
            41011,
            38780,
            25907,
            10485,
            1483,
            188,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            81,
            863,
            3704,
            11140,
            23592,
            35894,
            42723,
            38646,
            24570,
            9962,
            2374,
            415,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            156,
            1864,
            10018,
            20629,
            35030
          ]
        ]
      },
      "call": {
        "duration": 0.27089084399995045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014821229997323826,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29131745800259523,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168949259001238,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00144558299871278,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3784586820002005,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            105,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003496397999697365,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002965175997815095,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5342341189971194,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            5,
            255,
            17,
            255,
            4,
            30,
            0,
            255,
            0,
            255,
            255
          ],
          [
            96,
            0,
            36,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            43,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            16,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            27,
            255,
            0,
            0,
            0,
            0,
            0,
            247
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            4,
            255,
            6,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            71,
            0,
            0,
            0,
            3,
            0,
            255,
            121,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            104,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            46,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            70,
            255,
            34,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034760569978971034,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028807239978050347,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29599606199917616,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48305,
            47741,
            47668,
            47724,
            47686,
            47754,
            47684,
            47621,
            47962,
            47742,
            49960,
            47827,
            47655,
            47756,
            47686,
            47724,
            47763,
            47852,
            47728,
            47753,
            47747,
            47732,
            47337,
            48193,
            48153,
            47735,
            47816,
            47626,
            47832,
            47725,
            47769,
            49334,
            47713,
            47823,
            47568,
            50331,
            47703,
            47438,
            47594,
            47635,
            47768,
            47614,
            47650,
            47452,
            47657,
            47529,
            47699,
            47502,
            47546,
            47653,
            47738,
            47696,
            47661,
            47695,
            47689,
            48010,
            47771,
            47716,
            49227,
            47745,
            48056,
            47786,
            50106
          ],
          [
            48305,
            47741,
            47668,
            47724,
            47686,
            47754,
            47684,
            47621,
            47962,
            47742,
            49960,
            47827,
            47655,
            47756,
            47686,
            47724,
            47763,
            47852,
            47728,
            47753,
            47747,
            47732,
            47337,
            48193,
            48153,
            47735,
            47816,
            47626,
            47832,
            47725,
            47769,
            49334,
            47713,
            47823,
            47568,
            50331,
            47703,
            47438,
            47594,
            47635,
            47768,
            47614,
            47650,
            47452,
            47657,
            47529,
            47699,
            47502,
            47546,
            47653,
            47738,
            47696,
            47661,
            47695,
            47689,
            48010,
            47771,
            47716,
            49227,
            47745,
            48056,
            47786,
            50106
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            629,
            8254,
            25178,
            40377,
            34491,
            14849,
            3144,
            217,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            36,
            626,
            6916,
            22480,
            38352,
            38421,
            21007,
            5284,
            611,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            6,
            106,
            2062,
            14157,
            33369,
            41505,
            29180,
            10319,
            1469,
            115,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            916,
            6358,
            22491,
            38714,
            44103,
            29839,
            12078,
            1896,
            199,
            9,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50,
            660,
            8124,
            25788,
            40530,
            45762
          ]
        ]
      },
      "call": {
        "duration": 0.13495692099968437,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016062059985415544,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06902814400018542,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48341,
            47520,
            47347,
            49081,
            49205,
            47243,
            47292,
            47276,
            47016,
            47342,
            46929,
            47214,
            47071,
            47367,
            47423,
            47385,
            47241,
            47414,
            47363,
            47374,
            47267,
            47703,
            47217,
            47171,
            47494,
            47221,
            47293,
            47273,
            47083,
            47497,
            47187,
            47089,
            47314,
            47416,
            47454,
            47067,
            47351,
            47390,
            47572,
            47441,
            47244,
            47249,
            47293,
            47396,
            47329,
            47273,
            47113,
            47268,
            47346,
            47438,
            47303,
            47203,
            47466,
            47302,
            47518,
            49208,
            48876,
            47248,
            47076,
            47168,
            47222,
            47234,
            47304
          ],
          [
            48341,
            47520,
            47347,
            49081,
            49205,
            47243,
            47292,
            47276,
            47016,
            47342,
            46929,
            47214,
            47071,
            47367,
            47423,
            47385,
            47241,
            47414,
            47363,
            47374,
            47267,
            47703,
            47217,
            47171,
            47494,
            47221,
            47293,
            47273,
            47083,
            47497,
            47187,
            47089,
            47314,
            47416,
            47454,
            47067,
            47351,
            47390,
            47572,
            47441,
            47244,
            47249,
            47293,
            47396,
            47329,
            47273,
            47113,
            47268,
            47346,
            47438,
            47303,
            47203,
            47466,
            47302,
            47518,
            49208,
            48876,
            47248,
            47076,
            47168,
            47222,
            47234,
            47304
          ],
          [
            48341,
            47520,
            47347,
            49081,
            49205,
            47243,
            47292,
            47276,
            47016,
            47342,
            46929,
            47214,
            47071,
            47367,
            47423,
            47385,
            47241,
            47414,
            47363,
            47374,
            47267,
            47703,
            47217,
            47171,
            47494,
            47221,
            47293,
            47273,
            47083,
            47497,
            47187,
            47089,
            47314,
            47416,
            47454,
            47067,
            47351,
            47390,
            47572,
            47441,
            47244,
            47249,
            47293,
            47396,
            47329,
            47273,
            47113,
            47268,
            47346,
            47438,
            47303,
            47203,
            47466,
            47302,
            47518,
            49208,
            48876,
            47248,
            47076,
            47168,
            47222,
            47234,
            47304
          ],
          [
            48341,
            47520,
            47347,
            49081,
            49205,
            47243,
            47292,
            47276,
            47016,
            47342,
            46929,
            47214,
            47071,
            47367,
            47423,
            47385,
            47241,
            47414,
            47363,
            47374,
            47267,
            47703,
            47217,
            47171,
            47494,
            47221,
            47293,
            47273,
            47083,
            47497,
            47187,
            47089,
            47314,
            47416,
            47454,
            47067,
            47351,
            47390,
            47572,
            47441,
            47244,
            47249,
            47293,
            47396,
            47329,
            47273,
            47113,
            47268,
            47346,
            47438,
            47303,
            47203,
            47466,
            47302,
            47518,
            49208,
            48876,
            47248,
            47076,
            47168,
            47222,
            47234,
            47304
          ],
          [
            48341,
            47520,
            47347,
            49081,
            49205,
            47243,
            47292,
            47276,
            47016,
            47342,
            46929,
            47214,
            47071,
            47367,
            47423,
            47385,
            47241,
            47414,
            47363,
            47374,
            47267,
            47703,
            47217,
            47171,
            47494,
            47221,
            47293,
            47273,
            47083,
            47497,
            47187,
            47089,
            47314,
            47416,
            47454,
            47067,
            47351,
            47390,
            47572,
            47441,
            47244,
            47249,
            47293,
            47396,
            47329,
            47273,
            47113,
            47268,
            47346,
            47438,
            47303,
            47203,
            47466,
            47302,
            47518,
            49208,
            48876,
            47248,
            47076,
            47168,
            47222,
            47234,
            47304
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            368,
            2288,
            6956,
            16047,
            28732,
            37309,
            34268,
            21005,
            8272,
            1861,
            319,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            626,
            4887,
            14614,
            25281,
            35838,
            39617,
            33251,
            20208,
            7430,
            1511,
            157,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            240,
            1619,
            4899,
            10754,
            21797,
            34766,
            41568,
            35508,
            21492,
            9065,
            1796,
            130,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            143,
            1277,
            6863,
            16925,
            29867,
            40817,
            39760,
            29269,
            11118,
            2116,
            194,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            11414,
            3057,
            175,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            172,
            1544,
            7424,
            19231,
            33275,
            38659,
            30350,
            15062,
            4598,
            638,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            120,
            1651,
            8884,
            18287,
            29103,
            39081,
            33853,
            21108,
            7540,
            1074,
            82,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            100,
            990,
            4833,
            13488,
            26460,
            39923,
            42558,
            34135,
            20746,
            7196,
            1670,
            163,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            129,
            1200,
            6655,
            17276,
            27876,
            38203,
            35692,
            22525,
            8517,
            1662,
            141,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            246,
            1913,
            6591,
            15667,
            25113,
            36086,
            40509,
            35401,
            21213,
            8965,
            2275,
            362,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            336,
            3180,
            11025,
            20899,
            32555,
            40644,
            42400,
            36973,
            23159,
            9001,
            2006,
            162,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27170734199899016,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014836529990134295,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917163170022832,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1700039930001367,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045835, 10011459), (410924, 410924), (40048684, 10012171))\nassert ((40045835 > 0 and 10011459 == 0\n  +10011459\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff83802160>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff835553a0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff838c6640>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045835, 10011459), (410924, 410924), (40048684, 10012171))\nE       assert ((40045835 > 0 and 10011459 == 0\nE         +10011459\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.0049268900002061855,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}