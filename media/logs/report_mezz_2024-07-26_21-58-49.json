{
  "created": 1722031148.9713464,
  "duration": 23.155198097229004,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5049612340008025,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14914514400152257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013222189991211053,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003863575999275781,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1487771550018806,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013085989994578995,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13275397899997188,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12234941700080526,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013433700005407445,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038476160007121507,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12187567699947977,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012734679985442199,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037279429998307023,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.147478606999357,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011903070007974748,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033999460029008333,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12049114600085886,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012498879987106193,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003390466001292225,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14714130999709596,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012055170009261928,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034052859991788864,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12076607199924183,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012155969998275395,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004423209000378847,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021163080018595792,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011870969974552281,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00339478599926224,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017673699985607527,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011077749986725394,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033446550005464815,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004047720998642035,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031131.5441315,
            "msecs": 544.1315174102783,
            "relativeCreated": 7701.41863822937,
            "thread": 281473322999840,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4267
          }
        ]
      },
      "teardown": {
        "duration": 0.0012117869991925545,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003423677000682801,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023898839972389396,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031131.5565076,
            "msecs": 556.5075874328613,
            "relativeCreated": 7713.794708251953,
            "thread": 281473322999840,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4267
          }
        ]
      },
      "teardown": {
        "duration": 0.0011972369975410402,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002137098003004212,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002746562000538688,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031131.5661056,
            "msecs": 566.1056041717529,
            "relativeCreated": 7723.392724990845,
            "thread": 281473322999840,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4267
          }
        ]
      },
      "teardown": {
        "duration": 0.0010443240025779232,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021087470013299026,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034404469988658093,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031131.5756319,
            "msecs": 575.631856918335,
            "relativeCreated": 7732.918977737427,
            "thread": 281473322999840,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4267
          }
        ]
      },
      "teardown": {
        "duration": 0.001092954000341706,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033957449995796196,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14726617199994507,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012002960029349197,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033968860007007606,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12096884600032354,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011994570013484918,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17489315700004227,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1484746290007024,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012596980013768189,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015212108999548946,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12187393700151006,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012835490015277173,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8347226000005321,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            9,
            17,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            245,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            125,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            186,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            21,
            157,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035838500007230323,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002950715999759268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9027537490001123,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            34,
            0,
            3,
            0,
            33,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            13,
            255,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            24
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            54,
            255,
            255,
            255,
            9
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            36,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            113,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            0,
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            160,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            183,
            255,
            255,
            255,
            255,
            0,
            0,
            209,
            1,
            117,
            255
          ],
          [
            255,
            0,
            117,
            0,
            255,
            0,
            255,
            93,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.00351697899895953,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00295323599857511,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027497670009325,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48177,
            47601,
            47008,
            47040,
            47536,
            47642,
            47314,
            47458,
            47349,
            50038,
            47552,
            47432,
            47449,
            47459,
            47458,
            47292,
            47400,
            47243,
            47311,
            47216,
            47426,
            47359,
            47333,
            47336,
            47316,
            47262,
            47285,
            47330,
            47294,
            47319,
            47496,
            47330,
            47413,
            47460,
            47476,
            47221,
            47274,
            47329,
            47141,
            47261,
            47563,
            47296,
            48987,
            47018,
            49444,
            47229,
            47669,
            47272,
            49518,
            47355,
            47459,
            47449,
            47458,
            47408,
            47329,
            47267,
            47063,
            47291,
            47218,
            47293,
            47323,
            47193,
            47138
          ],
          [
            48177,
            47601,
            47008,
            47040,
            47536,
            47642,
            47314,
            47458,
            47349,
            50038,
            47552,
            47432,
            47449,
            47459,
            47458,
            47292,
            47400,
            47243,
            47311,
            47216,
            47426,
            47359,
            47333,
            47336,
            47316,
            47262,
            47285,
            47330,
            47294,
            47319,
            47496,
            47330,
            47413,
            47460,
            47476,
            47221,
            47274,
            47329,
            47141,
            47261,
            47563,
            47296,
            48987,
            47018,
            49444,
            47229,
            47669,
            47272,
            49518,
            47355,
            47459,
            47449,
            47458,
            47408,
            47329,
            47267,
            47063,
            47291,
            47218,
            47293,
            47323,
            47193,
            47138
          ]
        ],
        "eTX_errcounts": [
          [
            41311,
            30033,
            10584,
            2279,
            154,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            126,
            2056,
            12593,
            31116,
            42318,
            34552,
            18036,
            3158,
            259,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            622,
            5304,
            21737,
            39076,
            39373,
            23082,
            6846,
            955,
            64,
            1,
            0,
            0
          ],
          [
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            183,
            2286,
            13671,
            33165,
            42048,
            34418,
            16840,
            4062,
            525,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            209,
            2769,
            15403,
            35056,
            42571,
            38039,
            21281,
            4883,
            520,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1333924520004075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016292170002998319,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06934564500261331,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48254,
            47252,
            47128,
            47161,
            47293,
            47202,
            47384,
            46993,
            47101,
            47144,
            46860,
            47241,
            47163,
            47093,
            47254,
            47113,
            47247,
            47035,
            47440,
            47260,
            46709,
            47271,
            46903,
            47174,
            47265,
            47126,
            47355,
            47005,
            47031,
            47006,
            47292,
            47422,
            47189,
            47090,
            47355,
            47197,
            47337,
            49167,
            48573,
            47147,
            47045,
            47328,
            46978,
            47037,
            47065,
            46744,
            47327,
            47095,
            47030,
            47154,
            47184,
            47281,
            47070,
            47105,
            47202,
            47078,
            47262,
            47396,
            47082,
            46923,
            47170,
            47183,
            47024
          ],
          [
            48254,
            47252,
            47128,
            47161,
            47293,
            47202,
            47384,
            46993,
            47101,
            47144,
            46860,
            47241,
            47163,
            47093,
            47254,
            47113,
            47247,
            47035,
            47440,
            47260,
            46709,
            47271,
            46903,
            47174,
            47265,
            47126,
            47355,
            47005,
            47031,
            47006,
            47292,
            47422,
            47189,
            47090,
            47355,
            47197,
            47337,
            49167,
            48573,
            47147,
            47045,
            47328,
            46978,
            47037,
            47065,
            46744,
            47327,
            47095,
            47030,
            47154,
            47184,
            47281,
            47070,
            47105,
            47202,
            47078,
            47262,
            47396,
            47082,
            46923,
            47170,
            47183,
            47024
          ],
          [
            48254,
            47252,
            47128,
            47161,
            47293,
            47202,
            47384,
            46993,
            47101,
            47144,
            46860,
            47241,
            47163,
            47093,
            47254,
            47113,
            47247,
            47035,
            47440,
            47260,
            46709,
            47271,
            46903,
            47174,
            47265,
            47126,
            47355,
            47005,
            47031,
            47006,
            47292,
            47422,
            47189,
            47090,
            47355,
            47197,
            47337,
            49167,
            48573,
            47147,
            47045,
            47328,
            46978,
            47037,
            47065,
            46744,
            47327,
            47095,
            47030,
            47154,
            47184,
            47281,
            47070,
            47105,
            47202,
            47078,
            47262,
            47396,
            47082,
            46923,
            47170,
            47183,
            47024
          ],
          [
            48254,
            47252,
            47128,
            47161,
            47293,
            47202,
            47384,
            46993,
            47101,
            47144,
            46860,
            47241,
            47163,
            47093,
            47254,
            47113,
            47247,
            47035,
            47440,
            47260,
            46709,
            47271,
            46903,
            47174,
            47265,
            47126,
            47355,
            47005,
            47031,
            47006,
            47292,
            47422,
            47189,
            47090,
            47355,
            47197,
            47337,
            49167,
            48573,
            47147,
            47045,
            47328,
            46978,
            47037,
            47065,
            46744,
            47327,
            47095,
            47030,
            47154,
            47184,
            47281,
            47070,
            47105,
            47202,
            47078,
            47262,
            47396,
            47082,
            46923,
            47170,
            47183,
            47024
          ],
          [
            48254,
            47252,
            47128,
            47161,
            47293,
            47202,
            47384,
            46993,
            47101,
            47144,
            46860,
            47241,
            47163,
            47093,
            47254,
            47113,
            47247,
            47035,
            47440,
            47260,
            46709,
            47271,
            46903,
            47174,
            47265,
            47126,
            47355,
            47005,
            47031,
            47006,
            47292,
            47422,
            47189,
            47090,
            47355,
            47197,
            47337,
            49167,
            48573,
            47147,
            47045,
            47328,
            46978,
            47037,
            47065,
            46744,
            47327,
            47095,
            47030,
            47154,
            47184,
            47281,
            47070,
            47105,
            47202,
            47078,
            47262,
            47396,
            47082,
            46923,
            47170,
            47183,
            47024
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            229,
            1822,
            6956,
            18662,
            30709,
            36392,
            33330,
            24873,
            12410,
            3780,
            781,
            106,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            21,
            531,
            2841,
            9268,
            20127,
            30130,
            35215,
            32656,
            25735,
            15314,
            5883,
            1392,
            253,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            99,
            756,
            3183,
            8166,
            18301,
            33533,
            39417,
            36517,
            28800,
            18702,
            10806,
            4846,
            1319,
            109,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            65,
            747,
            3893,
            11873,
            24022,
            30870,
            33827,
            37703,
            31656,
            20326,
            9234,
            2735,
            301,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            329,
            1709,
            4942,
            10514,
            23040
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            77,
            578,
            3525,
            12615,
            27320,
            34066,
            33556,
            25809,
            15045,
            7027,
            1835,
            217,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            648,
            4925,
            11901,
            25273,
            35199,
            34792,
            26628,
            15521,
            5126,
            967,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            205,
            1371,
            6309,
            16001,
            31074,
            37663,
            36126,
            28667,
            18685,
            9066,
            2535,
            281,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            305,
            2092,
            6256,
            13853,
            24095,
            35250,
            35468,
            28876,
            17963,
            8917,
            2814,
            354,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            102,
            846,
            2873,
            6420,
            14901,
            29973,
            39112,
            38004,
            32631,
            25250,
            16145,
            9334,
            4313,
            917,
            82,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            63,
            687,
            3401,
            9258,
            21268,
            32610,
            35758,
            37615,
            35109,
            27685,
            17438,
            9687,
            2786,
            480,
            48,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            55,
            631,
            2177,
            6507
          ]
        ]
      },
      "call": {
        "duration": 0.2718203379990882,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff88af0870>()\n +    where <built-in method all of numpy.ndarray object at 0xffff88af0870> = array([22, 13, 19, 20, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff88aa24c0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48254, 47252, 47128, 47161, 47293, 47202, ...], [48254, 47252, 47128, 47161, 47293, 47202, ...], [..., 0, ...], [0, 0, 4, 99, 756, 3183, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 102, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff88af0870>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff88af0870> = array([22, 13, 19, 20, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016195870011870284,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2929926489996433,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1690982319996692,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014747729983355384,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2942489749984816,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            9,
            39,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            57,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003523008999763988,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002916785000707023,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5403128209982242,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            15,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            74,
            255,
            118,
            255,
            99,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            251,
            0,
            145,
            0,
            161,
            8,
            255,
            56,
            255,
            13
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            56,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            8,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            107,
            255,
            69,
            255,
            255,
            19,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            3,
            255,
            255,
            255,
            48
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003488987000309862,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029439049976645038,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2960400270021637,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47974,
            47379,
            47393,
            47219,
            47346,
            47232,
            47451,
            47341,
            47468,
            47394,
            47415,
            47275,
            47341,
            47477,
            47519,
            47348,
            47388,
            49358,
            47313,
            47654,
            47373,
            47394,
            47319,
            47069,
            47184,
            47375,
            47414,
            47189,
            47301,
            47312,
            47343,
            47287,
            47251,
            47325,
            47344,
            47323,
            47512,
            47449,
            47259,
            47317,
            47386,
            47325,
            47419,
            47404,
            47309,
            47265,
            47302,
            47353,
            47303,
            47264,
            47265,
            47358,
            47303,
            47352,
            47486,
            47335,
            48889,
            47394,
            47491,
            47369,
            49089,
            47287,
            47198
          ],
          [
            47974,
            47379,
            47393,
            47219,
            47346,
            47232,
            47451,
            47341,
            47468,
            47394,
            47415,
            47275,
            47341,
            47477,
            47519,
            47348,
            47388,
            49358,
            47313,
            47654,
            47373,
            47394,
            47319,
            47069,
            47184,
            47375,
            47414,
            47189,
            47301,
            47312,
            47343,
            47287,
            47251,
            47325,
            47344,
            47323,
            47512,
            47449,
            47259,
            47317,
            47386,
            47325,
            47419,
            47404,
            47309,
            47265,
            47302,
            47353,
            47303,
            47264,
            47265,
            47358,
            47303,
            47352,
            47486,
            47335,
            48889,
            47394,
            47491,
            47369,
            49089,
            47287,
            47198
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            145,
            2767,
            14508,
            34001,
            38702,
            22604,
            5928,
            595,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            125,
            1944,
            13780,
            33181,
            40534,
            28861,
            11403,
            1523,
            93,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            626,
            6001,
            25495,
            40131,
            42226,
            21942,
            6308,
            644,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            129,
            1647,
            11267,
            28459,
            41932,
            40472,
            23707,
            7462,
            918,
            62,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1332881999987876,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016164059998118319,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06916939199800254,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47938,
            47223,
            47179,
            47284,
            47444,
            47238,
            47058,
            47350,
            47231,
            47099,
            47187,
            46974,
            47086,
            47213,
            46929,
            47251,
            47131,
            47280,
            47109,
            47346,
            47100,
            47231,
            47193,
            47409,
            47459,
            49353,
            47101,
            47323,
            47112,
            47103,
            46820,
            47008,
            47432,
            47160,
            47068,
            47306,
            46761,
            47253,
            47118,
            47455,
            47155,
            47150,
            47331,
            47752,
            47628,
            47058,
            47090,
            47407,
            47097,
            47140,
            47030,
            47321,
            47088,
            46952,
            47020,
            47242,
            47153,
            47384,
            47220,
            47403,
            47133,
            46983,
            47082
          ],
          [
            47938,
            47223,
            47179,
            47284,
            47444,
            47238,
            47058,
            47350,
            47231,
            47099,
            47187,
            46974,
            47086,
            47213,
            46929,
            47251,
            47131,
            47280,
            47109,
            47346,
            47100,
            47231,
            47193,
            47409,
            47459,
            49353,
            47101,
            47323,
            47112,
            47103,
            46820,
            47008,
            47432,
            47160,
            47068,
            47306,
            46761,
            47253,
            47118,
            47455,
            47155,
            47150,
            47331,
            47752,
            47628,
            47058,
            47090,
            47407,
            47097,
            47140,
            47030,
            47321,
            47088,
            46952,
            47020,
            47242,
            47153,
            47384,
            47220,
            47403,
            47133,
            46983,
            47082
          ],
          [
            47938,
            47223,
            47179,
            47284,
            47444,
            47238,
            47058,
            47350,
            47231,
            47099,
            47187,
            46974,
            47086,
            47213,
            46929,
            47251,
            47131,
            47280,
            47109,
            47346,
            47100,
            47231,
            47193,
            47409,
            47459,
            49353,
            47101,
            47323,
            47112,
            47103,
            46820,
            47008,
            47432,
            47160,
            47068,
            47306,
            46761,
            47253,
            47118,
            47455,
            47155,
            47150,
            47331,
            47752,
            47628,
            47058,
            47090,
            47407,
            47097,
            47140,
            47030,
            47321,
            47088,
            46952,
            47020,
            47242,
            47153,
            47384,
            47220,
            47403,
            47133,
            46983,
            47082
          ],
          [
            47938,
            47223,
            47179,
            47284,
            47444,
            47238,
            47058,
            47350,
            47231,
            47099,
            47187,
            46974,
            47086,
            47213,
            46929,
            47251,
            47131,
            47280,
            47109,
            47346,
            47100,
            47231,
            47193,
            47409,
            47459,
            49353,
            47101,
            47323,
            47112,
            47103,
            46820,
            47008,
            47432,
            47160,
            47068,
            47306,
            46761,
            47253,
            47118,
            47455,
            47155,
            47150,
            47331,
            47752,
            47628,
            47058,
            47090,
            47407,
            47097,
            47140,
            47030,
            47321,
            47088,
            46952,
            47020,
            47242,
            47153,
            47384,
            47220,
            47403,
            47133,
            46983,
            47082
          ],
          [
            47938,
            47223,
            47179,
            47284,
            47444,
            47238,
            47058,
            47350,
            47231,
            47099,
            47187,
            46974,
            47086,
            47213,
            46929,
            47251,
            47131,
            47280,
            47109,
            47346,
            47100,
            47231,
            47193,
            47409,
            47459,
            49353,
            47101,
            47323,
            47112,
            47103,
            46820,
            47008,
            47432,
            47160,
            47068,
            47306,
            46761,
            47253,
            47118,
            47455,
            47155,
            47150,
            47331,
            47752,
            47628,
            47058,
            47090,
            47407,
            47097,
            47140,
            47030,
            47321,
            47088,
            46952,
            47020,
            47242,
            47153,
            47384,
            47220,
            47403,
            47133,
            46983,
            47082
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            113,
            1432,
            9128,
            22495,
            32731,
            35304,
            26619,
            14109,
            4367,
            778,
            52,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            14,
            443,
            2906,
            11929,
            23157,
            33400,
            39245,
            34105,
            22793,
            7356,
            1493,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            96,
            1027,
            4664,
            14585,
            29644,
            38615,
            35970,
            22663,
            9057,
            2108,
            156,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            94,
            1059,
            7782,
            20944,
            33526,
            41287,
            41793,
            33388,
            21037,
            6848,
            1199,
            107,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            241,
            1560,
            5766,
            15570,
            28848,
            37333
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            204,
            2307,
            11718,
            26861,
            36193,
            34663,
            21788,
            9076,
            2126,
            104,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            505,
            5049,
            16885,
            34608,
            41315,
            37871,
            26945,
            13049,
            3297,
            431,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            57,
            678,
            4355,
            14886,
            31026,
            38086,
            35808,
            24324,
            10925,
            2531,
            264,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            109,
            1732,
            9115,
            20496,
            31432,
            38197,
            37720,
            29680,
            16175,
            5055,
            664,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            91,
            1272,
            6281,
            17686,
            30515,
            38543,
            38072,
            28668,
            15023,
            4487,
            868,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            283,
            2497,
            11276,
            23419,
            33477,
            39824,
            39777,
            30772,
            16696,
            5972,
            904,
            42,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            36,
            507,
            3791,
            12738,
            27697
          ]
        ]
      },
      "call": {
        "duration": 0.2699345559994981,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015319240010285284,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29164804900210584,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1692120840016287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014622330018028151,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3559127090011316,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            84,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035121190012432635,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002947175998997409,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.540998517000844,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            10,
            255,
            17,
            255,
            1,
            115,
            0,
            255,
            0,
            255,
            255
          ],
          [
            62,
            0,
            3,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            26,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            146,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            32,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            60,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            3,
            8,
            0,
            255,
            4,
            255,
            255
          ],
          [
            53,
            0,
            2,
            0,
            4,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            55,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            113,
            0,
            5,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            158,
            255,
            107,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034849379990191665,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029348749994824175,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29642475599757745,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48016,
            47380,
            47242,
            47346,
            47494,
            47409,
            47553,
            47492,
            47293,
            47444,
            47289,
            47351,
            47437,
            47391,
            47242,
            47283,
            47548,
            47449,
            47528,
            47424,
            47334,
            47255,
            47284,
            49777,
            47399,
            47735,
            47232,
            49611,
            47517,
            47351,
            47449,
            47564,
            47391,
            47466,
            47249,
            47376,
            47611,
            47274,
            47388,
            46892,
            47059,
            47271,
            47388,
            47265,
            47234,
            47234,
            47366,
            47252,
            47351,
            47525,
            47481,
            47341,
            47444,
            47260,
            47392,
            47542,
            47377,
            47411,
            47732,
            47349,
            47505,
            47389,
            49495
          ],
          [
            48016,
            47380,
            47242,
            47346,
            47494,
            47409,
            47553,
            47492,
            47293,
            47444,
            47289,
            47351,
            47437,
            47391,
            47242,
            47283,
            47548,
            47449,
            47528,
            47424,
            47334,
            47255,
            47284,
            49777,
            47399,
            47735,
            47232,
            49611,
            47517,
            47351,
            47449,
            47564,
            47391,
            47466,
            47249,
            47376,
            47611,
            47274,
            47388,
            46892,
            47059,
            47271,
            47388,
            47265,
            47234,
            47234,
            47366,
            47252,
            47351,
            47525,
            47481,
            47341,
            47444,
            47260,
            47392,
            47542,
            47377,
            47411,
            47732,
            47349,
            47505,
            47389,
            49495
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            384,
            5204,
            21184,
            38253,
            36565,
            17825,
            3959,
            385,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            387,
            4402,
            19044,
            36411,
            39660,
            24756,
            6940,
            977,
            76,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            3,
            43,
            1205,
            11254,
            29556,
            41136,
            32479,
            12277,
            2250,
            199,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            403,
            4407,
            18432,
            36282,
            41611,
            33393,
            15186,
            2833,
            326,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            652,
            5141,
            20985,
            37975,
            45648
          ]
        ]
      },
      "call": {
        "duration": 0.1336578090013063,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001614725999388611,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0693040350015508,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50351,
            52783,
            48323,
            47339,
            47115,
            47210,
            47315,
            47148,
            47004,
            47192,
            46973,
            47014,
            47086,
            47215,
            47081,
            47094,
            47105,
            47241,
            47177,
            46956,
            47109,
            47112,
            47119,
            47200,
            47070,
            47105,
            47473,
            47135,
            47024,
            46995,
            47076,
            46969,
            47140,
            47279,
            47285,
            47254,
            47211,
            46993,
            47483,
            47282,
            47026,
            46988,
            47049,
            46914,
            47050,
            47163,
            47166,
            47169,
            47040,
            47128,
            47180,
            47079,
            47106,
            47165,
            47208,
            47206,
            47018,
            47200,
            47538,
            47147,
            47182,
            47108,
            47188
          ],
          [
            50351,
            52783,
            48323,
            47339,
            47115,
            47210,
            47315,
            47148,
            47004,
            47192,
            46973,
            47014,
            47086,
            47215,
            47081,
            47094,
            47105,
            47241,
            47177,
            46956,
            47109,
            47112,
            47119,
            47200,
            47070,
            47105,
            47473,
            47135,
            47024,
            46995,
            47076,
            46969,
            47140,
            47279,
            47285,
            47254,
            47211,
            46993,
            47483,
            47282,
            47026,
            46988,
            47049,
            46914,
            47050,
            47163,
            47166,
            47169,
            47040,
            47128,
            47180,
            47079,
            47106,
            47165,
            47208,
            47206,
            47018,
            47200,
            47538,
            47147,
            47182,
            47108,
            47188
          ],
          [
            50351,
            52783,
            48323,
            47339,
            47115,
            47210,
            47315,
            47148,
            47004,
            47192,
            46973,
            47014,
            47086,
            47215,
            47081,
            47094,
            47105,
            47241,
            47177,
            46956,
            47109,
            47112,
            47119,
            47200,
            47070,
            47105,
            47473,
            47135,
            47024,
            46995,
            47076,
            46969,
            47140,
            47279,
            47285,
            47254,
            47211,
            46993,
            47483,
            47282,
            47026,
            46988,
            47049,
            46914,
            47050,
            47163,
            47166,
            47169,
            47040,
            47128,
            47180,
            47079,
            47106,
            47165,
            47208,
            47206,
            47018,
            47200,
            47538,
            47147,
            47182,
            47108,
            47188
          ],
          [
            50351,
            52783,
            48323,
            47339,
            47115,
            47210,
            47315,
            47148,
            47004,
            47192,
            46973,
            47014,
            47086,
            47215,
            47081,
            47094,
            47105,
            47241,
            47177,
            46956,
            47109,
            47112,
            47119,
            47200,
            47070,
            47105,
            47473,
            47135,
            47024,
            46995,
            47076,
            46969,
            47140,
            47279,
            47285,
            47254,
            47211,
            46993,
            47483,
            47282,
            47026,
            46988,
            47049,
            46914,
            47050,
            47163,
            47166,
            47169,
            47040,
            47128,
            47180,
            47079,
            47106,
            47165,
            47208,
            47206,
            47018,
            47200,
            47538,
            47147,
            47182,
            47108,
            47188
          ],
          [
            50351,
            52783,
            48323,
            47339,
            47115,
            47210,
            47315,
            47148,
            47004,
            47192,
            46973,
            47014,
            47086,
            47215,
            47081,
            47094,
            47105,
            47241,
            47177,
            46956,
            47109,
            47112,
            47119,
            47200,
            47070,
            47105,
            47473,
            47135,
            47024,
            46995,
            47076,
            46969,
            47140,
            47279,
            47285,
            47254,
            47211,
            46993,
            47483,
            47282,
            47026,
            46988,
            47049,
            46914,
            47050,
            47163,
            47166,
            47169,
            47040,
            47128,
            47180,
            47079,
            47106,
            47165,
            47208,
            47206,
            47018,
            47200,
            47538,
            47147,
            47182,
            47108,
            47188
          ]
        ],
        "eTX_errcounts": [
          [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            103,
            1251,
            6244,
            16215,
            25779,
            34440,
            36471,
            29911,
            17000,
            4668,
            595,
            72,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            154,
            1491,
            7704,
            19240,
            31992,
            37700,
            34947,
            23100,
            10221,
            3386,
            543,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            11,
            295,
            3223,
            12701,
            24061,
            33455,
            38247,
            37834,
            28739,
            16550,
            6711,
            1305,
            62,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            68,
            951,
            4134,
            12948,
            24835,
            33801,
            35349,
            28758,
            15654,
            5583,
            1278,
            129,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            17979,
            8369,
            1725,
            82,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            104,
            1321,
            8335,
            19991,
            32662,
            39461,
            35058,
            23539,
            10402,
            2629,
            214,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            148,
            2652,
            10702,
            24567,
            36473,
            36968,
            26865,
            12170,
            3237,
            404,
            37,
            0,
            0,
            0,
            0
          ],
          [
            187,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            632,
            5369,
            16708,
            28782,
            37422,
            39465,
            35381,
            26796,
            14574,
            5198,
            715,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            295,
            2115,
            10135,
            21914,
            33544,
            35054,
            25290,
            13132,
            5336,
            1313,
            120,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            731,
            4043,
            15409,
            26146,
            35381,
            39015,
            36956,
            26667,
            15304,
            4625,
            891,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            117,
            969,
            4722,
            14550,
            26985,
            37552,
            40754,
            35595,
            25430,
            14598,
            7297,
            2513,
            223,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27103372100100387,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015303340005630162,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292210742001771,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168449946999317,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004857618998357793,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}