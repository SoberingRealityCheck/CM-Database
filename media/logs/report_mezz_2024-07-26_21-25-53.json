{
  "created": 1722029181.4367657,
  "duration": 34.90056300163269,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.508039133001148,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.148188276001747,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013190989993745461,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037866550010221545,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14746099999683793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012661180007853545,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13154843500160496,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12173446599990712,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012567880003189202,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037773550029669423,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12102338999829954,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001262218996998854,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0035492890019668266,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14772767499744077,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011903660015377682,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003352724001160823,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12074609299816075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011529260009410791,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003338684000482317,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14733400600016466,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011701159965014085,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00330334399768617,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12865852999675553,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001189497001178097,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0043962680028926115,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002123717000358738,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001102914997318294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003278713000327116,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017236880012205802,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011282650011708029,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003295064001576975,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004062660998897627,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029155.1059268,
            "msecs": 105.9267520904541,
            "relativeCreated": 10598.314046859741,
            "thread": 281472952672288,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3935
          }
        ]
      },
      "teardown": {
        "duration": 0.0012669280004047323,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033449539987486787,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002424564001557883,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029155.1181946,
            "msecs": 118.194580078125,
            "relativeCreated": 10610.581874847412,
            "thread": 281472952672288,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3935
          }
        ]
      },
      "teardown": {
        "duration": 0.0011555060009413864,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020500950013229158,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002741791002335958,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029155.1276875,
            "msecs": 127.68745422363281,
            "relativeCreated": 10620.07474899292,
            "thread": 281472952672288,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3935
          }
        ]
      },
      "teardown": {
        "duration": 0.0010937049992207903,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020836669973505195,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003454066998529015,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029155.1370988,
            "msecs": 137.0987892150879,
            "relativeCreated": 10629.486083984375,
            "thread": 281472952672288,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 3935
          }
        ]
      },
      "teardown": {
        "duration": 0.0010715039970818907,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003334574001200963,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14668425299896626,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011774659978982527,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003309253999759676,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12054376900050556,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011717960005626082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1762805420003133,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14800158199795987,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012732279974443372,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015201788999547716,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12153865200161817,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00126293799985433,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.738764680998429,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            230,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            95,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            180,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            16,
            111,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003597860999434488,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028906850020575803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8965798399985943,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            44,
            0,
            3,
            0,
            60,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            23,
            255,
            22,
            255,
            0,
            0,
            0,
            0,
            0,
            73
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            3,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            144,
            255,
            255,
            255,
            3
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            16,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            31,
            0,
            0,
            0,
            0
          ],
          [
            0,
            37,
            0,
            1,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            2,
            0,
            5,
            255
          ],
          [
            255,
            146,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            4,
            255,
            255
          ],
          [
            255,
            0,
            72,
            0,
            255,
            0,
            255,
            244,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034831379998649936,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002883454999391688,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031508820022282,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48211,
            47565,
            47445,
            47440,
            47359,
            47611,
            47281,
            47529,
            47323,
            47507,
            47436,
            47430,
            47528,
            47442,
            47529,
            47473,
            47441,
            47395,
            47506,
            47458,
            47535,
            47469,
            47430,
            49910,
            47425,
            47748,
            47515,
            49456,
            47084,
            47563,
            47476,
            47414,
            47513,
            47254,
            47372,
            47244,
            47452,
            47409,
            47527,
            47387,
            47467,
            47353,
            47401,
            47412,
            47546,
            47416,
            47507,
            47551,
            47360,
            47430,
            47395,
            47470,
            47433,
            47439,
            47436,
            47549,
            47540,
            47423,
            47749,
            47500,
            47524,
            47485,
            47373
          ],
          [
            48211,
            47565,
            47445,
            47440,
            47359,
            47611,
            47281,
            47529,
            47323,
            47507,
            47436,
            47430,
            47528,
            47442,
            47529,
            47473,
            47441,
            47395,
            47506,
            47458,
            47535,
            47469,
            47430,
            49910,
            47425,
            47748,
            47515,
            49456,
            47084,
            47563,
            47476,
            47414,
            47513,
            47254,
            47372,
            47244,
            47452,
            47409,
            47527,
            47387,
            47467,
            47353,
            47401,
            47412,
            47546,
            47416,
            47507,
            47551,
            47360,
            47430,
            47395,
            47470,
            47433,
            47439,
            47436,
            47549,
            47540,
            47423,
            47749,
            47500,
            47524,
            47485,
            47373
          ]
        ],
        "eTX_errcounts": [
          [
            41212,
            29817,
            10896,
            2245,
            170,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            126,
            2059,
            13154,
            31539,
            44420,
            34740,
            17374,
            2909,
            274,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            400,
            5489,
            22099,
            38825,
            40046,
            24005,
            7344,
            1012,
            72,
            0,
            0,
            0
          ],
          [
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            163,
            2693,
            14218,
            32788,
            42408,
            36926,
            17155,
            4007,
            522,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            174,
            2729,
            15568,
            33956,
            42322,
            38363,
            21260,
            4825,
            547,
            17,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1491316760002519,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016425970025011338,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.07415658399986569,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47916,
            47678,
            49002,
            49084,
            47410,
            47227,
            47319,
            47484,
            46978,
            47444,
            47454,
            47320,
            47414,
            47310,
            47380,
            47469,
            47303,
            47353,
            47281,
            47761,
            47578,
            47262,
            47407,
            47431,
            47312,
            47364,
            47226,
            47333,
            47369,
            47415,
            47616,
            47259,
            47313,
            47057,
            47486,
            47414,
            47438,
            47482,
            47231,
            47339,
            47487,
            47372,
            47242,
            47366,
            47192,
            47523,
            47405,
            47491,
            47425,
            47331,
            47473,
            47390,
            47391,
            48788,
            47452,
            47360,
            47235,
            46984,
            47514,
            47253,
            47247,
            47427,
            47205
          ],
          [
            47916,
            47678,
            49002,
            49084,
            47410,
            47227,
            47319,
            47484,
            46978,
            47444,
            47454,
            47320,
            47414,
            47310,
            47380,
            47469,
            47303,
            47353,
            47281,
            47761,
            47578,
            47262,
            47407,
            47431,
            47312,
            47364,
            47226,
            47333,
            47369,
            47415,
            47616,
            47259,
            47313,
            47057,
            47486,
            47414,
            47438,
            47482,
            47231,
            47339,
            47487,
            47372,
            47242,
            47366,
            47192,
            47523,
            47405,
            47491,
            47425,
            47331,
            47473,
            47390,
            47391,
            48788,
            47452,
            47360,
            47235,
            46984,
            47514,
            47253,
            47247,
            47427,
            47205
          ],
          [
            47916,
            47678,
            49002,
            49084,
            47410,
            47227,
            47319,
            47484,
            46978,
            47444,
            47454,
            47320,
            47414,
            47310,
            47380,
            47469,
            47303,
            47353,
            47281,
            47761,
            47578,
            47262,
            47407,
            47431,
            47312,
            47364,
            47226,
            47333,
            47369,
            47415,
            47616,
            47259,
            47313,
            47057,
            47486,
            47414,
            47438,
            47482,
            47231,
            47339,
            47487,
            47372,
            47242,
            47366,
            47192,
            47523,
            47405,
            47491,
            47425,
            47331,
            47473,
            47390,
            47391,
            48788,
            47452,
            47360,
            47235,
            46984,
            47514,
            47253,
            47247,
            47427,
            47205
          ],
          [
            47916,
            47678,
            49002,
            49084,
            47410,
            47227,
            47319,
            47484,
            46978,
            47444,
            47454,
            47320,
            47414,
            47310,
            47380,
            47469,
            47303,
            47353,
            47281,
            47761,
            47578,
            47262,
            47407,
            47431,
            47312,
            47364,
            47226,
            47333,
            47369,
            47415,
            47616,
            47259,
            47313,
            47057,
            47486,
            47414,
            47438,
            47482,
            47231,
            47339,
            47487,
            47372,
            47242,
            47366,
            47192,
            47523,
            47405,
            47491,
            47425,
            47331,
            47473,
            47390,
            47391,
            48788,
            47452,
            47360,
            47235,
            46984,
            47514,
            47253,
            47247,
            47427,
            47205
          ],
          [
            47916,
            47678,
            49002,
            49084,
            47410,
            47227,
            47319,
            47484,
            46978,
            47444,
            47454,
            47320,
            47414,
            47310,
            47380,
            47469,
            47303,
            47353,
            47281,
            47761,
            47578,
            47262,
            47407,
            47431,
            47312,
            47364,
            47226,
            47333,
            47369,
            47415,
            47616,
            47259,
            47313,
            47057,
            47486,
            47414,
            47438,
            47482,
            47231,
            47339,
            47487,
            47372,
            47242,
            47366,
            47192,
            47523,
            47405,
            47491,
            47425,
            47331,
            47473,
            47390,
            47391,
            48788,
            47452,
            47360,
            47235,
            46984,
            47514,
            47253,
            47247,
            47427,
            47205
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            511,
            2982,
            9904,
            20041,
            29274,
            32223,
            30408,
            25800,
            17533,
            6511,
            1057,
            86,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            23,
            347,
            2160,
            8337,
            20865,
            30213,
            33648,
            29164,
            25040,
            19043,
            12684,
            5969,
            1616,
            145,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            50,
            422,
            1784,
            7136,
            16129,
            27110,
            35841,
            37038,
            29719,
            20410,
            8779,
            2408,
            175,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            158,
            1938,
            8759,
            19641,
            29642,
            36818,
            38928,
            34314,
            25761,
            14470,
            6473,
            1327,
            170,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            84,
            671,
            3672,
            11082,
            21727
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            394,
            3201,
            11552,
            23333,
            30462,
            33005,
            28688,
            19125,
            8799,
            2586,
            293,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            74,
            760,
            5136,
            13032,
            24102,
            32452,
            33251,
            27848,
            19920,
            11835,
            4986,
            886,
            85,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            83,
            1082,
            5646,
            14140,
            25522,
            33617,
            35737,
            31707,
            23418,
            13448,
            4052,
            437,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            206,
            1570,
            6549,
            16374,
            25638,
            33072,
            33465,
            29159,
            23348,
            15223,
            8045,
            2180,
            194,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            19,
            224,
            1922,
            7333,
            16601,
            27177,
            35597,
            39081,
            34795,
            25825,
            14911,
            6718,
            1707,
            215,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            30,
            425,
            2770,
            8208,
            18207,
            29251,
            37082,
            39581,
            36711,
            30384,
            22487,
            12514,
            3549,
            327,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            105,
            963,
            4466
          ]
        ]
      },
      "call": {
        "duration": 0.27390233000187436,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6d346990>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6d346990> = array([21, 13, 17, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6d35f580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47916, 47678, 49002, 49084, 47410, 47227, ...], [47916, 47678, 49002, 49084, 47410, 47227, ...], [...0, 0, ...], [0, 0, 1, 50, 422, 1784, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 19, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6d346990>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6d346990> = array([21, 13, 17, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016122959968924988,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2929732459997467,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170703493000474,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001453503002267098,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.312444490999042,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            17,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            240,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            102,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035005979989364278,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028815339974244125,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5379051599993545,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            19,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            89,
            255,
            111,
            255,
            117,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            242,
            0,
            78,
            0,
            255,
            22,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            83,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            5,
            255,
            172,
            255,
            200,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            238,
            255,
            177,
            255,
            255,
            1,
            0,
            144,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            98,
            255,
            100
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034680480021052063,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002877815000829287,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29659999599971343,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50849,
            47474,
            47568,
            47463,
            47543,
            47557,
            47570,
            47553,
            47607,
            47500,
            47608,
            47410,
            47507,
            47529,
            47661,
            47733,
            47571,
            47647,
            47710,
            47725,
            47660,
            47663,
            47613,
            47622,
            47588,
            49377,
            47548,
            47421,
            47618,
            47407,
            47680,
            47481,
            47619,
            47516,
            47546,
            47595,
            47672,
            47295,
            47690,
            47553,
            47639,
            47592,
            47802,
            47585,
            47423,
            47331,
            47338,
            47618,
            49554,
            47450,
            47866,
            47547,
            49952,
            47511,
            47470,
            47538,
            47377,
            47488,
            47787,
            47548,
            47580,
            47516,
            47450
          ],
          [
            50849,
            47474,
            47568,
            47463,
            47543,
            47557,
            47570,
            47553,
            47607,
            47500,
            47608,
            47410,
            47507,
            47529,
            47661,
            47733,
            47571,
            47647,
            47710,
            47725,
            47660,
            47663,
            47613,
            47622,
            47588,
            49377,
            47548,
            47421,
            47618,
            47407,
            47680,
            47481,
            47619,
            47516,
            47546,
            47595,
            47672,
            47295,
            47690,
            47553,
            47639,
            47592,
            47802,
            47585,
            47423,
            47331,
            47338,
            47618,
            49554,
            47450,
            47866,
            47547,
            49952,
            47511,
            47470,
            47538,
            47377,
            47488,
            47787,
            47548,
            47580,
            47516,
            47450
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            85,
            2584,
            15417,
            34723,
            37975,
            22029,
            5939,
            724,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            77,
            1585,
            13688,
            32967,
            42827,
            29102,
            11035,
            1726,
            161,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            609,
            6675,
            26369,
            40944,
            40632,
            21741,
            6735,
            720,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            121,
            1847,
            11317,
            28433,
            41869,
            40339,
            23853,
            7123,
            905,
            58,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13486563799961004,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001605186000233516,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0688453250004386,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48023,
            48032,
            47534,
            47335,
            47466,
            47473,
            47566,
            47397,
            47434,
            47464,
            47521,
            47525,
            47398,
            47432,
            47481,
            47497,
            48804,
            47839,
            47546,
            47473,
            47292,
            47069,
            47496,
            47395,
            47467,
            47432,
            47379,
            47422,
            47537,
            47575,
            47535,
            50322,
            47584,
            47511,
            47386,
            47570,
            47398,
            47573,
            47487,
            47382,
            47651,
            47374,
            47481,
            47449,
            47418,
            47490,
            51149,
            47446,
            47368,
            47362,
            47365,
            47512,
            47242,
            47329,
            47632,
            47452,
            47306,
            47274,
            47274,
            47523,
            47685,
            47564,
            47395
          ],
          [
            48023,
            48032,
            47534,
            47335,
            47466,
            47473,
            47566,
            47397,
            47434,
            47464,
            47521,
            47525,
            47398,
            47432,
            47481,
            47497,
            48804,
            47839,
            47546,
            47473,
            47292,
            47069,
            47496,
            47395,
            47467,
            47432,
            47379,
            47422,
            47537,
            47575,
            47535,
            50322,
            47584,
            47511,
            47386,
            47570,
            47398,
            47573,
            47487,
            47382,
            47651,
            47374,
            47481,
            47449,
            47418,
            47490,
            51149,
            47446,
            47368,
            47362,
            47365,
            47512,
            47242,
            47329,
            47632,
            47452,
            47306,
            47274,
            47274,
            47523,
            47685,
            47564,
            47395
          ],
          [
            48023,
            48032,
            47534,
            47335,
            47466,
            47473,
            47566,
            47397,
            47434,
            47464,
            47521,
            47525,
            47398,
            47432,
            47481,
            47497,
            48804,
            47839,
            47546,
            47473,
            47292,
            47069,
            47496,
            47395,
            47467,
            47432,
            47379,
            47422,
            47537,
            47575,
            47535,
            50322,
            47584,
            47511,
            47386,
            47570,
            47398,
            47573,
            47487,
            47382,
            47651,
            47374,
            47481,
            47449,
            47418,
            47490,
            51149,
            47446,
            47368,
            47362,
            47365,
            47512,
            47242,
            47329,
            47632,
            47452,
            47306,
            47274,
            47274,
            47523,
            47685,
            47564,
            47395
          ],
          [
            48023,
            48032,
            47534,
            47335,
            47466,
            47473,
            47566,
            47397,
            47434,
            47464,
            47521,
            47525,
            47398,
            47432,
            47481,
            47497,
            48804,
            47839,
            47546,
            47473,
            47292,
            47069,
            47496,
            47395,
            47467,
            47432,
            47379,
            47422,
            47537,
            47575,
            47535,
            50322,
            47584,
            47511,
            47386,
            47570,
            47398,
            47573,
            47487,
            47382,
            47651,
            47374,
            47481,
            47449,
            47418,
            47490,
            51149,
            47446,
            47368,
            47362,
            47365,
            47512,
            47242,
            47329,
            47632,
            47452,
            47306,
            47274,
            47274,
            47523,
            47685,
            47564,
            47395
          ],
          [
            48023,
            48032,
            47534,
            47335,
            47466,
            47473,
            47566,
            47397,
            47434,
            47464,
            47521,
            47525,
            47398,
            47432,
            47481,
            47497,
            48804,
            47839,
            47546,
            47473,
            47292,
            47069,
            47496,
            47395,
            47467,
            47432,
            47379,
            47422,
            47537,
            47575,
            47535,
            50322,
            47584,
            47511,
            47386,
            47570,
            47398,
            47573,
            47487,
            47382,
            47651,
            47374,
            47481,
            47449,
            47418,
            47490,
            51149,
            47446,
            47368,
            47362,
            47365,
            47512,
            47242,
            47329,
            47632,
            47452,
            47306,
            47274,
            47274,
            47523,
            47685,
            47564,
            47395
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            192,
            1529,
            8106,
            22016,
            35856,
            38211,
            29684,
            16453,
            4852,
            663,
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            229,
            1635,
            9019,
            23844,
            37054,
            39910,
            33073,
            20518,
            7106,
            638,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            76
          ],
          [
            0,
            0,
            5,
            253,
            2707,
            12003,
            28547,
            38895,
            37366,
            23754,
            9374,
            1746,
            115,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            473,
            4786,
            18480,
            36649,
            43895,
            41788,
            30270,
            15893,
            4245,
            541,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            367,
            3574,
            13642,
            28306,
            39852,
            36198
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            272,
            2177,
            10803,
            23605,
            33924,
            31330,
            17624,
            5765,
            828,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            533,
            4383,
            15605,
            32303,
            39371,
            28406,
            10938,
            2470,
            224,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            481,
            3613,
            14247,
            29691,
            38499,
            35682,
            22001,
            8521,
            1341,
            101,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            75,
            1123,
            6354,
            18330,
            33305,
            41277,
            37910,
            26309,
            5561,
            556,
            9,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            51,
            905,
            6039,
            17417,
            31207,
            40287,
            39636,
            30091,
            16044,
            4309,
            796,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            187,
            1584,
            8793,
            22828,
            36003,
            43796,
            41324,
            30286,
            15754,
            5835,
            1467,
            241,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            243,
            2215,
            10774,
            24788,
            38238
          ]
        ]
      },
      "call": {
        "duration": 0.2740219730003446,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015177040004346054,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29181351000079303,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170098139999027,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014772029971936718,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.313046485000086,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            76,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034659779994399287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002869264000764815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5377541369998653,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            6,
            255,
            1,
            65,
            0,
            255,
            0,
            255,
            255
          ],
          [
            55,
            0,
            6,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            133,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            24,
            0,
            2,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            12,
            255,
            51,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            3,
            3,
            0,
            255,
            4,
            255,
            255
          ],
          [
            31,
            0,
            1,
            0,
            5,
            0,
            255,
            185,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            46,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            87,
            0,
            3,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            190,
            255,
            116,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034840980006265454,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028788640011043753,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29634354999870993,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48369,
            47413,
            47467,
            47384,
            47456,
            47583,
            47618,
            47534,
            47522,
            47588,
            47594,
            47535,
            47435,
            47487,
            47398,
            47534,
            47329,
            47558,
            47473,
            47459,
            47382,
            47374,
            47293,
            47362,
            47316,
            47420,
            47606,
            47429,
            47395,
            47549,
            47610,
            47549,
            47357,
            47585,
            47431,
            49469,
            47669,
            47789,
            47234,
            53441,
            47609,
            47501,
            47537,
            47478,
            47453,
            47230,
            47436,
            47401,
            47570,
            47366,
            47525,
            47308,
            47426,
            47455,
            47653,
            47432,
            47543,
            47548,
            47573,
            47623,
            47547,
            47635,
            47631
          ],
          [
            48369,
            47413,
            47467,
            47384,
            47456,
            47583,
            47618,
            47534,
            47522,
            47588,
            47594,
            47535,
            47435,
            47487,
            47398,
            47534,
            47329,
            47558,
            47473,
            47459,
            47382,
            47374,
            47293,
            47362,
            47316,
            47420,
            47606,
            47429,
            47395,
            47549,
            47610,
            47549,
            47357,
            47585,
            47431,
            49469,
            47669,
            47789,
            47234,
            53441,
            47609,
            47501,
            47537,
            47478,
            47453,
            47230,
            47436,
            47401,
            47570,
            47366,
            47525,
            47308,
            47426,
            47455,
            47653,
            47432,
            47543,
            47548,
            47573,
            47623,
            47547,
            47635,
            47631
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            393,
            4976,
            21149,
            37738,
            36562,
            17958,
            4254,
            608,
            22,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            425,
            4304,
            17874,
            40483,
            39239,
            24351,
            6614,
            1033,
            49,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            110,
            1306,
            11741,
            30010,
            41730,
            32607,
            12494,
            2332,
            245,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            351,
            4436,
            18497,
            36522,
            43386,
            33406,
            15564,
            2897,
            499,
            43,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            516,
            5670,
            22460,
            38595,
            44427
          ]
        ]
      },
      "call": {
        "duration": 0.1344761699983792,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016042860006564297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06931756599806249,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47983,
            47449,
            47266,
            47431,
            47362,
            47395,
            47460,
            47155,
            47002,
            47244,
            47181,
            47191,
            47210,
            47052,
            47262,
            47306,
            47011,
            47227,
            47129,
            47277,
            47359,
            47121,
            49161,
            48932,
            47189,
            47326,
            47075,
            47051,
            47204,
            47131,
            47023,
            47347,
            47217,
            47112,
            47259,
            47345,
            47324,
            47316,
            47323,
            47358,
            47374,
            47580,
            47052,
            47114,
            47201,
            47065,
            47063,
            47128,
            47110,
            47082,
            47246,
            47018,
            47213,
            47176,
            47315,
            47239,
            47149,
            47350,
            47488,
            47282,
            47174,
            47077,
            47171
          ],
          [
            47983,
            47449,
            47266,
            47431,
            47362,
            47395,
            47460,
            47155,
            47002,
            47244,
            47181,
            47191,
            47210,
            47052,
            47262,
            47306,
            47011,
            47227,
            47129,
            47277,
            47359,
            47121,
            49161,
            48932,
            47189,
            47326,
            47075,
            47051,
            47204,
            47131,
            47023,
            47347,
            47217,
            47112,
            47259,
            47345,
            47324,
            47316,
            47323,
            47358,
            47374,
            47580,
            47052,
            47114,
            47201,
            47065,
            47063,
            47128,
            47110,
            47082,
            47246,
            47018,
            47213,
            47176,
            47315,
            47239,
            47149,
            47350,
            47488,
            47282,
            47174,
            47077,
            47171
          ],
          [
            47983,
            47449,
            47266,
            47431,
            47362,
            47395,
            47460,
            47155,
            47002,
            47244,
            47181,
            47191,
            47210,
            47052,
            47262,
            47306,
            47011,
            47227,
            47129,
            47277,
            47359,
            47121,
            49161,
            48932,
            47189,
            47326,
            47075,
            47051,
            47204,
            47131,
            47023,
            47347,
            47217,
            47112,
            47259,
            47345,
            47324,
            47316,
            47323,
            47358,
            47374,
            47580,
            47052,
            47114,
            47201,
            47065,
            47063,
            47128,
            47110,
            47082,
            47246,
            47018,
            47213,
            47176,
            47315,
            47239,
            47149,
            47350,
            47488,
            47282,
            47174,
            47077,
            47171
          ],
          [
            47983,
            47449,
            47266,
            47431,
            47362,
            47395,
            47460,
            47155,
            47002,
            47244,
            47181,
            47191,
            47210,
            47052,
            47262,
            47306,
            47011,
            47227,
            47129,
            47277,
            47359,
            47121,
            49161,
            48932,
            47189,
            47326,
            47075,
            47051,
            47204,
            47131,
            47023,
            47347,
            47217,
            47112,
            47259,
            47345,
            47324,
            47316,
            47323,
            47358,
            47374,
            47580,
            47052,
            47114,
            47201,
            47065,
            47063,
            47128,
            47110,
            47082,
            47246,
            47018,
            47213,
            47176,
            47315,
            47239,
            47149,
            47350,
            47488,
            47282,
            47174,
            47077,
            47171
          ],
          [
            47983,
            47449,
            47266,
            47431,
            47362,
            47395,
            47460,
            47155,
            47002,
            47244,
            47181,
            47191,
            47210,
            47052,
            47262,
            47306,
            47011,
            47227,
            47129,
            47277,
            47359,
            47121,
            49161,
            48932,
            47189,
            47326,
            47075,
            47051,
            47204,
            47131,
            47023,
            47347,
            47217,
            47112,
            47259,
            47345,
            47324,
            47316,
            47323,
            47358,
            47374,
            47580,
            47052,
            47114,
            47201,
            47065,
            47063,
            47128,
            47110,
            47082,
            47246,
            47018,
            47213,
            47176,
            47315,
            47239,
            47149,
            47350,
            47488,
            47282,
            47174,
            47077,
            47171
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            41,
            533,
            3409,
            13199,
            27448,
            37338,
            37189,
            30155,
            17392,
            6267,
            1419,
            193,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            160,
            1598,
            7623,
            20247,
            33876,
            38763,
            35515,
            24628,
            10595,
            3188,
            310,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            5,
            117,
            1446,
            7558,
            22172,
            36111,
            41934,
            37930,
            25791,
            12637,
            3924,
            509,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            493,
            3501,
            13048,
            26574,
            37374,
            37818,
            29878,
            16188,
            4216,
            523,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            15031,
            5267,
            650,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            85,
            949,
            7182,
            18759,
            31741,
            38482,
            31748,
            19080,
            7631,
            1428,
            37,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            193,
            2730,
            11983,
            25132,
            36953,
            36846,
            25902,
            12324,
            3217,
            291,
            34,
            0,
            0,
            0,
            0
          ],
          [
            50,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            223,
            3170,
            12370,
            25389,
            37657,
            42836,
            36360,
            24990,
            11685,
            2432,
            205,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            130,
            1445,
            9307,
            22970,
            35786,
            37193,
            27071,
            14282,
            4645,
            584,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            268,
            2639,
            11617,
            24158,
            36757,
            42046,
            38028,
            26973,
            16122,
            5509,
            1600,
            240,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            64,
            677,
            4522,
            15257,
            28774,
            38747,
            41217,
            34816,
            23285,
            11920,
            4126,
            790,
            32,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27143480499944417,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001511613001639489,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918818519974593,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1702169429991045,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004820837999432115,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}