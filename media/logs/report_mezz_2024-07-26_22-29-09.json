{
  "created": 1722032969.4127822,
  "duration": 23.479499340057373,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5067914589999418,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1483876499987673,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013574709992099088,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038378959980036598,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1484361299990269,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012957889994140714,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13218443900041166,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12182442899938906,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012620380002772436,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003810474998317659,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12087460800103145,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012728080000670161,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033557550013938453,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14625262199842837,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012249270002939738,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033543449972057715,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1196593099994061,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011764769988076296,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033525750004628208,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14602725700024166,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011896769974555355,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033616639993852004,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12009951100117178,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012038969980494585,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004393087998323608,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020883170000161044,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001159676001407206,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033422840024286415,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017614590033190325,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010795740017783828,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033422249980503693,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004050809999171179,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032951.7005246,
            "msecs": 700.5245685577393,
            "relativeCreated": 7741.38069152832,
            "thread": 281472967733280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4968
          }
        ]
      },
      "teardown": {
        "duration": 0.0011862559986184351,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003377234999788925,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002396454001427628,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032951.713282,
            "msecs": 713.2821083068848,
            "relativeCreated": 7754.138231277466,
            "thread": 281472967733280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4968
          }
        ]
      },
      "teardown": {
        "duration": 0.0011594050010899082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002062905001366744,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027189009997528046,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032951.7232172,
            "msecs": 723.217248916626,
            "relativeCreated": 7764.073371887207,
            "thread": 281472967733280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4968
          }
        ]
      },
      "teardown": {
        "duration": 0.0010889339973800816,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020977960011805408,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003430845998082077,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032951.7331944,
            "msecs": 733.1943511962891,
            "relativeCreated": 7774.05047416687,
            "thread": 281472967733280,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4968
          }
        ]
      },
      "teardown": {
        "duration": 0.0010634339996613562,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003369224999914877,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.146248511999147,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013792200006719213,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037000720003561582,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12004418899960001,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012205169987282716,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17965896500027156,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1473810079987743,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001284478999878047,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015147516001889016,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12099266000222997,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001263927999389125,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8494308439985616,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            11,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            73,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            19,
            143,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035644389972731005,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002874304002034478,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9042331870005,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            204,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            172,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            25,
            255,
            255,
            255,
            11
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            91,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            135,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            108,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            226,
            255,
            255,
            255,
            255,
            0,
            0,
            83,
            0,
            45,
            255
          ],
          [
            255,
            0,
            174,
            0,
            255,
            0,
            157,
            41,
            255,
            255,
            255,
            8
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034581769978103694,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028906839979754295,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30271030100266216,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48198,
            47569,
            47029,
            47325,
            47343,
            47440,
            47451,
            47503,
            47332,
            47474,
            47522,
            47428,
            47473,
            47369,
            47394,
            47643,
            47347,
            47453,
            47307,
            47317,
            47293,
            47512,
            47413,
            47357,
            47379,
            47650,
            47364,
            47485,
            47086,
            53187,
            47549,
            48049,
            47496,
            49132,
            47088,
            47442,
            47538,
            47389,
            47437,
            47024,
            47147,
            47349,
            47388,
            47294,
            47501,
            47461,
            47396,
            47265,
            47465,
            47332,
            47471,
            47316,
            47378,
            47245,
            47483,
            47523,
            47366,
            47538,
            47400,
            47328,
            47384,
            47338,
            47340
          ],
          [
            48198,
            47569,
            47029,
            47325,
            47343,
            47440,
            47451,
            47503,
            47332,
            47474,
            47522,
            47428,
            47473,
            47369,
            47394,
            47643,
            47347,
            47453,
            47307,
            47317,
            47293,
            47512,
            47413,
            47357,
            47379,
            47650,
            47364,
            47485,
            47086,
            53187,
            47549,
            48049,
            47496,
            49132,
            47088,
            47442,
            47538,
            47389,
            47437,
            47024,
            47147,
            47349,
            47388,
            47294,
            47501,
            47461,
            47396,
            47265,
            47465,
            47332,
            47471,
            47316,
            47378,
            47245,
            47483,
            47523,
            47366,
            47538,
            47400,
            47328,
            47384,
            47338,
            47340
          ]
        ],
        "eTX_errcounts": [
          [
            39870,
            26177,
            7769,
            1147,
            85,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            222,
            3139,
            16893,
            35400,
            42168,
            30533,
            15264,
            1948,
            111,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            1200,
            8168,
            26210,
            40335,
            36841,
            18856,
            4513,
            510,
            11,
            0,
            0,
            0
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            387,
            3990,
            17962,
            36892,
            42112,
            31252,
            12557,
            2746,
            275,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            411,
            4716,
            19968,
            36984,
            42504,
            34798,
            16564,
            3082,
            419,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13352300900078262,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001616975998331327,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06923871899925871,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47826,
            47392,
            47414,
            47488,
            47156,
            48917,
            47850,
            47194,
            47000,
            47277,
            47313,
            47178,
            47217,
            46866,
            47188,
            47223,
            47257,
            47170,
            47266,
            47291,
            47425,
            47313,
            47344,
            47285,
            47226,
            47596,
            48889,
            46823,
            47274,
            47130,
            46839,
            47318,
            47304,
            47212,
            47216,
            47307,
            47165,
            47226,
            46964,
            47415,
            47396,
            47263,
            47297,
            47240,
            47243,
            47671,
            47195,
            47279,
            47083,
            47247,
            47077,
            47349,
            47069,
            47174,
            47206,
            47134,
            47229,
            47160,
            47261,
            47315,
            47192,
            47315,
            47293
          ],
          [
            47826,
            47392,
            47414,
            47488,
            47156,
            48917,
            47850,
            47194,
            47000,
            47277,
            47313,
            47178,
            47217,
            46866,
            47188,
            47223,
            47257,
            47170,
            47266,
            47291,
            47425,
            47313,
            47344,
            47285,
            47226,
            47596,
            48889,
            46823,
            47274,
            47130,
            46839,
            47318,
            47304,
            47212,
            47216,
            47307,
            47165,
            47226,
            46964,
            47415,
            47396,
            47263,
            47297,
            47240,
            47243,
            47671,
            47195,
            47279,
            47083,
            47247,
            47077,
            47349,
            47069,
            47174,
            47206,
            47134,
            47229,
            47160,
            47261,
            47315,
            47192,
            47315,
            47293
          ],
          [
            47826,
            47392,
            47414,
            47488,
            47156,
            48917,
            47850,
            47194,
            47000,
            47277,
            47313,
            47178,
            47217,
            46866,
            47188,
            47223,
            47257,
            47170,
            47266,
            47291,
            47425,
            47313,
            47344,
            47285,
            47226,
            47596,
            48889,
            46823,
            47274,
            47130,
            46839,
            47318,
            47304,
            47212,
            47216,
            47307,
            47165,
            47226,
            46964,
            47415,
            47396,
            47263,
            47297,
            47240,
            47243,
            47671,
            47195,
            47279,
            47083,
            47247,
            47077,
            47349,
            47069,
            47174,
            47206,
            47134,
            47229,
            47160,
            47261,
            47315,
            47192,
            47315,
            47293
          ],
          [
            47826,
            47392,
            47414,
            47488,
            47156,
            48917,
            47850,
            47194,
            47000,
            47277,
            47313,
            47178,
            47217,
            46866,
            47188,
            47223,
            47257,
            47170,
            47266,
            47291,
            47425,
            47313,
            47344,
            47285,
            47226,
            47596,
            48889,
            46823,
            47274,
            47130,
            46839,
            47318,
            47304,
            47212,
            47216,
            47307,
            47165,
            47226,
            46964,
            47415,
            47396,
            47263,
            47297,
            47240,
            47243,
            47671,
            47195,
            47279,
            47083,
            47247,
            47077,
            47349,
            47069,
            47174,
            47206,
            47134,
            47229,
            47160,
            47261,
            47315,
            47192,
            47315,
            47293
          ],
          [
            47826,
            47392,
            47414,
            47488,
            47156,
            48917,
            47850,
            47194,
            47000,
            47277,
            47313,
            47178,
            47217,
            46866,
            47188,
            47223,
            47257,
            47170,
            47266,
            47291,
            47425,
            47313,
            47344,
            47285,
            47226,
            47596,
            48889,
            46823,
            47274,
            47130,
            46839,
            47318,
            47304,
            47212,
            47216,
            47307,
            47165,
            47226,
            46964,
            47415,
            47396,
            47263,
            47297,
            47240,
            47243,
            47671,
            47195,
            47279,
            47083,
            47247,
            47077,
            47349,
            47069,
            47174,
            47206,
            47134,
            47229,
            47160,
            47261,
            47315,
            47192,
            47315,
            47293
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            68,
            1169,
            5248,
            13630,
            24960,
            31227,
            32320,
            27777,
            19832,
            10199,
            2872,
            286,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            217,
            1922,
            5714,
            12862,
            25274,
            35828,
            39676,
            31794,
            21523,
            10063,
            2516,
            350,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            41,
            639,
            3381,
            11494,
            21663,
            32322,
            35827,
            34359,
            25890,
            15245,
            6136,
            1131,
            109,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            153,
            1559,
            5468,
            11547,
            21153,
            32246,
            40587,
            38849,
            28085,
            18067,
            6215,
            919,
            65,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            175,
            1444,
            5700,
            13570,
            23634
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            129,
            1689,
            6848,
            17576,
            30625,
            35848,
            32209,
            23534,
            12636,
            4005,
            688,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            131,
            1208,
            7130,
            17657,
            31296,
            34872,
            30656,
            23942,
            13591,
            3898,
            670,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            9,
            375,
            2481,
            9042,
            18834,
            30190,
            38058,
            35199,
            25627,
            13348,
            3238,
            425,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            85,
            644,
            2871,
            7251,
            16744,
            30432,
            38228,
            35986,
            28638,
            17504,
            6526,
            1381,
            162,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            11,
            160,
            1096,
            3607,
            9051,
            19900,
            32539,
            38058,
            36977,
            31323,
            22546,
            10076,
            3098,
            501,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            168,
            1480,
            4977,
            10182,
            17890,
            30391,
            39965,
            41358,
            34388,
            22715,
            11085,
            3655,
            756,
            86,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            73,
            723,
            3031,
            8454
          ]
        ]
      },
      "call": {
        "duration": 0.27169705200140015,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff73866cf0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff73866cf0> = array([22, 12, 19, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff7384c3d0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47826, 47392, 47414, 47488, 47156, 48917, ...], [47826, 47392, 47414, 47488, 47156, 48917, ...], [... 0, ...], [0, 0, 3, 41, 639, 3381, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 11, 160, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff73866cf0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff73866cf0> = array([22, 12, 19, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001607404999958817,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29262032699989504,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170230347001052,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014432420030061621,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3079747539995878,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            190,
            75,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035458379970805254,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028846540008089505,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5335928849999618,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            239,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            6,
            255,
            177,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            120,
            255,
            131,
            255,
            129,
            0,
            0,
            214,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            110,
            3,
            255,
            28,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            80,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            1,
            255,
            136,
            255,
            172,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            228,
            255,
            118,
            255,
            255,
            2,
            0,
            108,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            82,
            255,
            127
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034576670004753396,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028708840000035707,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956167029988137,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47994,
            47363,
            47380,
            47535,
            47281,
            47285,
            46991,
            47055,
            47255,
            47342,
            47355,
            47375,
            47372,
            47263,
            47500,
            47433,
            47399,
            47519,
            47511,
            47589,
            47644,
            47539,
            47536,
            47424,
            47344,
            49157,
            47427,
            47764,
            47355,
            49886,
            47675,
            47366,
            47408,
            47275,
            47484,
            47417,
            47480,
            47278,
            47530,
            47533,
            47485,
            47473,
            47506,
            47321,
            47552,
            47312,
            47400,
            47385,
            47438,
            47361,
            47422,
            47306,
            47407,
            47412,
            47390,
            47372,
            47426,
            47052,
            47214,
            47659,
            49463,
            47574,
            47683
          ],
          [
            47994,
            47363,
            47380,
            47535,
            47281,
            47285,
            46991,
            47055,
            47255,
            47342,
            47355,
            47375,
            47372,
            47263,
            47500,
            47433,
            47399,
            47519,
            47511,
            47589,
            47644,
            47539,
            47536,
            47424,
            47344,
            49157,
            47427,
            47764,
            47355,
            49886,
            47675,
            47366,
            47408,
            47275,
            47484,
            47417,
            47480,
            47278,
            47530,
            47533,
            47485,
            47473,
            47506,
            47321,
            47552,
            47312,
            47400,
            47385,
            47438,
            47361,
            47422,
            47306,
            47407,
            47412,
            47390,
            47372,
            47426,
            47052,
            47214,
            47659,
            49463,
            47574,
            47683
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            309,
            4412,
            19028,
            37172,
            35574,
            18013,
            3712,
            298,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            279,
            3581,
            17864,
            35857,
            40298,
            24224,
            8412,
            933,
            99,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            10,
            1008,
            9659,
            29930,
            42256,
            37877,
            17814,
            4212,
            339,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            230,
            2840,
            14904,
            32176,
            42664,
            37661,
            18878,
            4439,
            438,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13365531200179248,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016021260016714223,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06864227600090089,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47974,
            47435,
            47340,
            46945,
            47525,
            47417,
            47404,
            47408,
            47885,
            47029,
            47238,
            47327,
            47102,
            47314,
            47131,
            47254,
            47188,
            47242,
            47509,
            47313,
            47205,
            47406,
            47310,
            47283,
            47319,
            47085,
            47192,
            49108,
            47356,
            47450,
            47260,
            46991,
            47216,
            47271,
            47183,
            47058,
            47194,
            47265,
            47230,
            47269,
            47254,
            47216,
            47318,
            46994,
            47304,
            47286,
            47163,
            49121,
            47613,
            47250,
            47008,
            47288,
            46918,
            47197,
            47252,
            47228,
            47109,
            47213,
            47187,
            47180,
            47256,
            47254,
            47403
          ],
          [
            47974,
            47435,
            47340,
            46945,
            47525,
            47417,
            47404,
            47408,
            47885,
            47029,
            47238,
            47327,
            47102,
            47314,
            47131,
            47254,
            47188,
            47242,
            47509,
            47313,
            47205,
            47406,
            47310,
            47283,
            47319,
            47085,
            47192,
            49108,
            47356,
            47450,
            47260,
            46991,
            47216,
            47271,
            47183,
            47058,
            47194,
            47265,
            47230,
            47269,
            47254,
            47216,
            47318,
            46994,
            47304,
            47286,
            47163,
            49121,
            47613,
            47250,
            47008,
            47288,
            46918,
            47197,
            47252,
            47228,
            47109,
            47213,
            47187,
            47180,
            47256,
            47254,
            47403
          ],
          [
            47974,
            47435,
            47340,
            46945,
            47525,
            47417,
            47404,
            47408,
            47885,
            47029,
            47238,
            47327,
            47102,
            47314,
            47131,
            47254,
            47188,
            47242,
            47509,
            47313,
            47205,
            47406,
            47310,
            47283,
            47319,
            47085,
            47192,
            49108,
            47356,
            47450,
            47260,
            46991,
            47216,
            47271,
            47183,
            47058,
            47194,
            47265,
            47230,
            47269,
            47254,
            47216,
            47318,
            46994,
            47304,
            47286,
            47163,
            49121,
            47613,
            47250,
            47008,
            47288,
            46918,
            47197,
            47252,
            47228,
            47109,
            47213,
            47187,
            47180,
            47256,
            47254,
            47403
          ],
          [
            47974,
            47435,
            47340,
            46945,
            47525,
            47417,
            47404,
            47408,
            47885,
            47029,
            47238,
            47327,
            47102,
            47314,
            47131,
            47254,
            47188,
            47242,
            47509,
            47313,
            47205,
            47406,
            47310,
            47283,
            47319,
            47085,
            47192,
            49108,
            47356,
            47450,
            47260,
            46991,
            47216,
            47271,
            47183,
            47058,
            47194,
            47265,
            47230,
            47269,
            47254,
            47216,
            47318,
            46994,
            47304,
            47286,
            47163,
            49121,
            47613,
            47250,
            47008,
            47288,
            46918,
            47197,
            47252,
            47228,
            47109,
            47213,
            47187,
            47180,
            47256,
            47254,
            47403
          ],
          [
            47974,
            47435,
            47340,
            46945,
            47525,
            47417,
            47404,
            47408,
            47885,
            47029,
            47238,
            47327,
            47102,
            47314,
            47131,
            47254,
            47188,
            47242,
            47509,
            47313,
            47205,
            47406,
            47310,
            47283,
            47319,
            47085,
            47192,
            49108,
            47356,
            47450,
            47260,
            46991,
            47216,
            47271,
            47183,
            47058,
            47194,
            47265,
            47230,
            47269,
            47254,
            47216,
            47318,
            46994,
            47304,
            47286,
            47163,
            49121,
            47613,
            47250,
            47008,
            47288,
            46918,
            47197,
            47252,
            47228,
            47109,
            47213,
            47187,
            47180,
            47256,
            47254,
            47403
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            42,
            828,
            4708,
            16652,
            28682,
            34435,
            32800,
            24604,
            14688,
            5394,
            948,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            99,
            988,
            4210,
            12527,
            25372,
            37050,
            39064,
            28451,
            14673,
            3838,
            409,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34
          ],
          [
            0,
            3,
            164,
            1657,
            8104,
            21174,
            37321,
            40285,
            35295,
            21527,
            9031,
            2102,
            232,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            457,
            2553,
            9090,
            21786,
            36385,
            43630,
            41271,
            28152,
            12904,
            2628,
            237,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            586,
            3212,
            8954,
            20592,
            34935,
            37683
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            1009,
            6774,
            20995,
            33808,
            38504,
            31084,
            14400,
            3536,
            297,
            9,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            496,
            5253,
            16804,
            34356,
            41246,
            33899,
            19214,
            6184,
            810,
            45,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            186,
            1935,
            10152,
            26576,
            38975,
            41573,
            34159,
            17686,
            5226,
            663,
            28,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            238,
            2258,
            9114,
            21424,
            34748,
            41647,
            35723,
            23319,
            9099,
            2128,
            275,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            290,
            2264,
            11865,
            26803,
            39146,
            39058,
            33851,
            26737,
            16291,
            5744,
            1370,
            119,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            64,
            670,
            3565,
            12201,
            24790,
            36173,
            43073,
            40418,
            29061,
            13919,
            4504,
            696,
            57,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            207,
            1632,
            7263,
            17791,
            30513
          ]
        ]
      },
      "call": {
        "duration": 0.26975756799947703,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014857530004519504,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2913503990021127,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170436301999871,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014394319987331983,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3480372550002357,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            76,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035368690005270764,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028853740004706196,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5346272480019252,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            4,
            255,
            6,
            36,
            0,
            255,
            0,
            255,
            255
          ],
          [
            59,
            0,
            11,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            33,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            240,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            1,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            3,
            255,
            27,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            2,
            255,
            1,
            5,
            0,
            255,
            5,
            255,
            255
          ],
          [
            42,
            0,
            3,
            0,
            8,
            0,
            255,
            237,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            75,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            65,
            0,
            3,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            74,
            255,
            48,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034624370018718764,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002842233003320871,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2962830180003948,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48204,
            48027,
            47517,
            48121,
            47722,
            50509,
            47638,
            47439,
            47597,
            47651,
            47618,
            47535,
            47643,
            47408,
            47455,
            47385,
            47507,
            47256,
            47233,
            47366,
            47484,
            47632,
            47574,
            47533,
            47554,
            47528,
            47486,
            47682,
            47706,
            47472,
            47399,
            47603,
            47472,
            47535,
            49169,
            47646,
            48121,
            47529,
            49333,
            47611,
            47561,
            47579,
            47429,
            47461,
            47445,
            47578,
            47506,
            47705,
            47557,
            47496,
            47545,
            47599,
            47487,
            47460,
            47408,
            47539,
            47611,
            47611,
            47617,
            47618,
            47530,
            47653,
            47672
          ],
          [
            48204,
            48027,
            47517,
            48121,
            47722,
            50509,
            47638,
            47439,
            47597,
            47651,
            47618,
            47535,
            47643,
            47408,
            47455,
            47385,
            47507,
            47256,
            47233,
            47366,
            47484,
            47632,
            47574,
            47533,
            47554,
            47528,
            47486,
            47682,
            47706,
            47472,
            47399,
            47603,
            47472,
            47535,
            49169,
            47646,
            48121,
            47529,
            49333,
            47611,
            47561,
            47579,
            47429,
            47461,
            47445,
            47578,
            47506,
            47705,
            47557,
            47496,
            47545,
            47599,
            47487,
            47460,
            47408,
            47539,
            47611,
            47611,
            47617,
            47618,
            47530,
            47653,
            47672
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            768,
            6900,
            25827,
            39429,
            33646,
            14385,
            2806,
            246,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            655,
            6168,
            22842,
            38635,
            38019,
            22150,
            5235,
            566,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            0,
            0,
            1,
            195,
            2377,
            15170,
            32964,
            40844,
            28640,
            9035,
            1530,
            125,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            648,
            5967,
            22327,
            39689,
            42099,
            30961,
            11744,
            2348,
            193,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            804,
            7961,
            26260,
            40504,
            43365
          ]
        ]
      },
      "call": {
        "duration": 0.13377720399876125,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016008649981813505,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689110819985217,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48092,
            47151,
            47161,
            47176,
            47362,
            47176,
            47381,
            47348,
            47358,
            47233,
            47030,
            47257,
            47385,
            47180,
            46995,
            47284,
            47374,
            47124,
            47644,
            47215,
            47271,
            47283,
            47155,
            47204,
            47205,
            47285,
            47417,
            47359,
            47211,
            47202,
            47141,
            47542,
            47256,
            47634,
            47159,
            47166,
            49164,
            49359,
            46912,
            47219,
            47241,
            47291,
            47275,
            47149,
            47139,
            47047,
            47246,
            47324,
            47253,
            47364,
            47249,
            47412,
            47519,
            47231,
            47266,
            49134,
            47905,
            47384,
            47043,
            47168,
            47056,
            47359,
            47261
          ],
          [
            48092,
            47151,
            47161,
            47176,
            47362,
            47176,
            47381,
            47348,
            47358,
            47233,
            47030,
            47257,
            47385,
            47180,
            46995,
            47284,
            47374,
            47124,
            47644,
            47215,
            47271,
            47283,
            47155,
            47204,
            47205,
            47285,
            47417,
            47359,
            47211,
            47202,
            47141,
            47542,
            47256,
            47634,
            47159,
            47166,
            49164,
            49359,
            46912,
            47219,
            47241,
            47291,
            47275,
            47149,
            47139,
            47047,
            47246,
            47324,
            47253,
            47364,
            47249,
            47412,
            47519,
            47231,
            47266,
            49134,
            47905,
            47384,
            47043,
            47168,
            47056,
            47359,
            47261
          ],
          [
            48092,
            47151,
            47161,
            47176,
            47362,
            47176,
            47381,
            47348,
            47358,
            47233,
            47030,
            47257,
            47385,
            47180,
            46995,
            47284,
            47374,
            47124,
            47644,
            47215,
            47271,
            47283,
            47155,
            47204,
            47205,
            47285,
            47417,
            47359,
            47211,
            47202,
            47141,
            47542,
            47256,
            47634,
            47159,
            47166,
            49164,
            49359,
            46912,
            47219,
            47241,
            47291,
            47275,
            47149,
            47139,
            47047,
            47246,
            47324,
            47253,
            47364,
            47249,
            47412,
            47519,
            47231,
            47266,
            49134,
            47905,
            47384,
            47043,
            47168,
            47056,
            47359,
            47261
          ],
          [
            48092,
            47151,
            47161,
            47176,
            47362,
            47176,
            47381,
            47348,
            47358,
            47233,
            47030,
            47257,
            47385,
            47180,
            46995,
            47284,
            47374,
            47124,
            47644,
            47215,
            47271,
            47283,
            47155,
            47204,
            47205,
            47285,
            47417,
            47359,
            47211,
            47202,
            47141,
            47542,
            47256,
            47634,
            47159,
            47166,
            49164,
            49359,
            46912,
            47219,
            47241,
            47291,
            47275,
            47149,
            47139,
            47047,
            47246,
            47324,
            47253,
            47364,
            47249,
            47412,
            47519,
            47231,
            47266,
            49134,
            47905,
            47384,
            47043,
            47168,
            47056,
            47359,
            47261
          ],
          [
            48092,
            47151,
            47161,
            47176,
            47362,
            47176,
            47381,
            47348,
            47358,
            47233,
            47030,
            47257,
            47385,
            47180,
            46995,
            47284,
            47374,
            47124,
            47644,
            47215,
            47271,
            47283,
            47155,
            47204,
            47205,
            47285,
            47417,
            47359,
            47211,
            47202,
            47141,
            47542,
            47256,
            47634,
            47159,
            47166,
            49164,
            49359,
            46912,
            47219,
            47241,
            47291,
            47275,
            47149,
            47139,
            47047,
            47246,
            47324,
            47253,
            47364,
            47249,
            47412,
            47519,
            47231,
            47266,
            49134,
            47905,
            47384,
            47043,
            47168,
            47056,
            47359,
            47261
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            226,
            1788,
            6704,
            16015,
            27374,
            37241,
            35231,
            24184,
            11965,
            2804,
            327,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            114,
            834,
            4060,
            13287,
            23474,
            32577,
            33227,
            28313,
            19711,
            11048,
            4154,
            599,
            97,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            247,
            1732,
            5061,
            12675,
            25276,
            36905,
            42871,
            37877,
            23090,
            9025,
            1853,
            147,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            28,
            554,
            2953,
            6973,
            15475,
            29492,
            39007,
            35902,
            26481,
            13722,
            3913,
            812,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            65
          ],
          [
            11350,
            3171,
            322,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            69,
            1514,
            8546,
            20136,
            32680,
            39059,
            30676,
            16001,
            5742,
            889,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            54,
            794,
            5331,
            15357,
            27553,
            35512,
            32877,
            22053,
            9171,
            1875,
            155,
            17,
            0,
            0,
            0,
            0
          ],
          [
            59,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            35,
            798,
            6363,
            16271,
            27140,
            38601,
            40214,
            32011,
            20574,
            10046,
            3005,
            406,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            117,
            1059,
            4285,
            14688,
            26854,
            35147,
            32822,
            24072,
            11575,
            3417,
            769,
            62,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            126,
            1537,
            5788,
            16341,
            27259,
            36901,
            41098,
            37818,
            25403,
            14353,
            4477,
            737,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            44,
            563,
            2707,
            7947,
            18648,
            30650,
            37577,
            36197,
            30021,
            23076,
            13628,
            5596,
            1324,
            60,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2704420339978242,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015546949980489444,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917022459987493,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.171691709998413,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045747, 10011437), (411174, 411174), (40048377, 10012095))\nassert ((40045747 > 0 and 10011437 == 0\n  +10011437\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff7384c6d0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff735a2910>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff738e7160>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045747, 10011437), (411174, 411174), (40048377, 10012095))\nE       assert ((40045747 > 0 and 10011437 == 0\nE         +10011437\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004943809999531368,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}