{
  "created": 1722032525.2196136,
  "duration": 23.427096366882324,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5078254919972096,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1483820100002049,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001367069999105297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038281750021269545,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479756209992047,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012936890016135294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.131684148000204,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1215337220019137,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012955189995409455,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038136849980219267,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12082969699986279,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001266867999220267,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033588749975024257,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14630506300090929,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012157170021964703,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033568939979886636,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11983583499750239,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011982569994870573,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00335725499826367,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14606607800305937,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001521604001027299,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034887469992099795,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11984648499856121,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011594650022743735,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004420028999447823,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021244979980110656,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001108854998165043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033736650002538227,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017110879998654127,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011218750005355105,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033174740019603632,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004024499001388904,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032507.5421922,
            "msecs": 542.1922206878662,
            "relativeCreated": 7742.409706115723,
            "thread": 281473647087648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4755
          }
        ]
      },
      "teardown": {
        "duration": 0.001207527002407005,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003360914997756481,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024128040022333153,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032507.5544262,
            "msecs": 554.4261932373047,
            "relativeCreated": 7754.643678665161,
            "thread": 281473647087648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4755
          }
        ]
      },
      "teardown": {
        "duration": 0.0011512759992911015,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002072505998512497,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026976899971487,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032507.5639882,
            "msecs": 563.988208770752,
            "relativeCreated": 7764.205694198608,
            "thread": 281473647087648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4755
          }
        ]
      },
      "teardown": {
        "duration": 0.0010504130004846957,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020891570020467043,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00344107699856977,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032507.5734055,
            "msecs": 573.4055042266846,
            "relativeCreated": 7773.622989654541,
            "thread": 281473647087648,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4755
          }
        ]
      },
      "teardown": {
        "duration": 0.0010589340017759241,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033502639998914674,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14626870199936093,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011767760006478056,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003342644002259476,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12014508100037347,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011804670029960107,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1745463409970398,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14748510999925202,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001257567997527076,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015185497999482322,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12108827300107805,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012753889968735166,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8504981480000424,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            7,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            98,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            19,
            143,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003557358999387361,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029603459988720715,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.901800853000168,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            10,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            1,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            181,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            123,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            12,
            255,
            255,
            255,
            3
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            61,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            108,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            93,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            197,
            255,
            255,
            255,
            255,
            0,
            0,
            96,
            0,
            66,
            255
          ],
          [
            255,
            0,
            119,
            0,
            255,
            0,
            213,
            60,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035183280015189666,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029495159978978336,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031016289969557,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48524,
            47559,
            47666,
            47644,
            47679,
            47692,
            47725,
            47862,
            47811,
            47728,
            47851,
            47650,
            47812,
            47760,
            47753,
            47558,
            47715,
            47662,
            47722,
            47684,
            47627,
            47605,
            47591,
            47662,
            49380,
            47715,
            47947,
            47756,
            49734,
            47673,
            47907,
            47765,
            47457,
            47493,
            47773,
            47595,
            47434,
            47744,
            47581,
            47776,
            47609,
            47571,
            47645,
            47659,
            47578,
            47667,
            47645,
            47738,
            47635,
            47758,
            47800,
            47711,
            47704,
            47715,
            47881,
            47662,
            47530,
            47871,
            47564,
            47600,
            47748,
            47770,
            47557
          ],
          [
            48524,
            47559,
            47666,
            47644,
            47679,
            47692,
            47725,
            47862,
            47811,
            47728,
            47851,
            47650,
            47812,
            47760,
            47753,
            47558,
            47715,
            47662,
            47722,
            47684,
            47627,
            47605,
            47591,
            47662,
            49380,
            47715,
            47947,
            47756,
            49734,
            47673,
            47907,
            47765,
            47457,
            47493,
            47773,
            47595,
            47434,
            47744,
            47581,
            47776,
            47609,
            47571,
            47645,
            47659,
            47578,
            47667,
            47645,
            47738,
            47635,
            47758,
            47800,
            47711,
            47704,
            47715,
            47881,
            47662,
            47530,
            47871,
            47564,
            47600,
            47748,
            47770,
            47557
          ]
        ],
        "eTX_errcounts": [
          [
            41014,
            26339,
            8734,
            1267,
            111,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            202,
            3264,
            15917,
            35340,
            42523,
            32908,
            13946,
            2106,
            159,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            41,
            715,
            7994,
            25594,
            40701,
            38281,
            19493,
            5149,
            491,
            14,
            0,
            0,
            0
          ],
          [
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            364,
            3954,
            17724,
            35738,
            42453,
            32143,
            13910,
            3324,
            313,
            16,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            315,
            4160,
            19355,
            36489,
            43237,
            35631,
            17057,
            3709,
            335,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13408705100300722,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016434970020782202,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907437599875266,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47954,
            47295,
            47263,
            47356,
            47220,
            47273,
            47274,
            47538,
            47373,
            47340,
            47369,
            47323,
            47515,
            47442,
            47832,
            49349,
            47393,
            47263,
            47415,
            47361,
            47325,
            47200,
            47318,
            47506,
            47223,
            47205,
            47203,
            47427,
            47268,
            47252,
            47181,
            47151,
            47367,
            47426,
            47260,
            47693,
            47423,
            47263,
            47149,
            47279,
            46882,
            47229,
            47376,
            47258,
            47276,
            47172,
            47204,
            47447,
            47469,
            47197,
            47282,
            47434,
            47364,
            47495,
            47204,
            49227,
            47556,
            47224,
            47303,
            47481,
            47186,
            47303,
            47344
          ],
          [
            47954,
            47295,
            47263,
            47356,
            47220,
            47273,
            47274,
            47538,
            47373,
            47340,
            47369,
            47323,
            47515,
            47442,
            47832,
            49349,
            47393,
            47263,
            47415,
            47361,
            47325,
            47200,
            47318,
            47506,
            47223,
            47205,
            47203,
            47427,
            47268,
            47252,
            47181,
            47151,
            47367,
            47426,
            47260,
            47693,
            47423,
            47263,
            47149,
            47279,
            46882,
            47229,
            47376,
            47258,
            47276,
            47172,
            47204,
            47447,
            47469,
            47197,
            47282,
            47434,
            47364,
            47495,
            47204,
            49227,
            47556,
            47224,
            47303,
            47481,
            47186,
            47303,
            47344
          ],
          [
            47954,
            47295,
            47263,
            47356,
            47220,
            47273,
            47274,
            47538,
            47373,
            47340,
            47369,
            47323,
            47515,
            47442,
            47832,
            49349,
            47393,
            47263,
            47415,
            47361,
            47325,
            47200,
            47318,
            47506,
            47223,
            47205,
            47203,
            47427,
            47268,
            47252,
            47181,
            47151,
            47367,
            47426,
            47260,
            47693,
            47423,
            47263,
            47149,
            47279,
            46882,
            47229,
            47376,
            47258,
            47276,
            47172,
            47204,
            47447,
            47469,
            47197,
            47282,
            47434,
            47364,
            47495,
            47204,
            49227,
            47556,
            47224,
            47303,
            47481,
            47186,
            47303,
            47344
          ],
          [
            47954,
            47295,
            47263,
            47356,
            47220,
            47273,
            47274,
            47538,
            47373,
            47340,
            47369,
            47323,
            47515,
            47442,
            47832,
            49349,
            47393,
            47263,
            47415,
            47361,
            47325,
            47200,
            47318,
            47506,
            47223,
            47205,
            47203,
            47427,
            47268,
            47252,
            47181,
            47151,
            47367,
            47426,
            47260,
            47693,
            47423,
            47263,
            47149,
            47279,
            46882,
            47229,
            47376,
            47258,
            47276,
            47172,
            47204,
            47447,
            47469,
            47197,
            47282,
            47434,
            47364,
            47495,
            47204,
            49227,
            47556,
            47224,
            47303,
            47481,
            47186,
            47303,
            47344
          ],
          [
            47954,
            47295,
            47263,
            47356,
            47220,
            47273,
            47274,
            47538,
            47373,
            47340,
            47369,
            47323,
            47515,
            47442,
            47832,
            49349,
            47393,
            47263,
            47415,
            47361,
            47325,
            47200,
            47318,
            47506,
            47223,
            47205,
            47203,
            47427,
            47268,
            47252,
            47181,
            47151,
            47367,
            47426,
            47260,
            47693,
            47423,
            47263,
            47149,
            47279,
            46882,
            47229,
            47376,
            47258,
            47276,
            47172,
            47204,
            47447,
            47469,
            47197,
            47282,
            47434,
            47364,
            47495,
            47204,
            49227,
            47556,
            47224,
            47303,
            47481,
            47186,
            47303,
            47344
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            71,
            954,
            5080,
            13922,
            24196,
            32331,
            32510,
            28231,
            20326,
            10701,
            2808,
            350,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            17,
            227,
            1789,
            5440,
            12366,
            24083,
            35293,
            39633,
            32528,
            21474,
            10232,
            2957,
            471,
            33,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            39,
            570,
            3112,
            10303,
            21736,
            32832,
            36190,
            34564,
            27014,
            15297,
            6061,
            1529,
            213,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            151,
            1431,
            5073,
            11121,
            20016,
            31882,
            40928,
            39164,
            28787,
            18175,
            6464,
            1212,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            169,
            1196,
            5555,
            12763,
            23395
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            174,
            1699,
            6611,
            16891,
            29848,
            35954,
            32570,
            23845,
            13485,
            4023,
            664,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            141,
            1187,
            6642,
            17123,
            31246,
            34974,
            31179,
            24200,
            14372,
            4340,
            576,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            331,
            2547,
            8346,
            18669,
            31040,
            37888,
            35802,
            26159,
            13492,
            3695,
            455,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            50,
            557,
            2650,
            6426,
            15756,
            29477,
            38341,
            36051,
            28613,
            17860,
            6927,
            1360,
            113,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            127,
            857,
            3519,
            9410,
            20442,
            32234,
            38343,
            37337,
            31780,
            24187,
            11404,
            2862,
            491,
            23,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            163,
            1340,
            4665,
            10004,
            18119,
            30140,
            40119,
            41500,
            34532,
            23820,
            11660,
            4011,
            824,
            75,
            10,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            45,
            657,
            2747,
            8279
          ]
        ]
      },
      "call": {
        "duration": 0.27086648299882654,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9c000e10>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9c000e10> = array([21, 14, 19, 22, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9c0675b0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47954, 47295, 47263, 47356, 47220, 47273, ...], [47954, 47295, 47263, 47356, 47220, 47273, ...], [..., 0, ...], [0, 0, 0, 39, 570, 3112, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 127, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9c000e10>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9c000e10> = array([21, 14, 19, 22, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016249559994321316,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2929235139999946,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1710135440007434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00145602300108294,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3074901529980707,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            16,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            77,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034896180004579946,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002921585000876803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5407861439998669,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            196,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            13,
            255,
            195,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            67,
            255,
            122,
            255,
            145,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            226,
            0,
            125,
            1,
            255,
            34,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            83,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            2,
            255,
            207,
            255,
            245,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            187,
            255,
            255,
            15,
            0,
            208,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            77,
            255,
            118
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003468287002760917,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029574059990409296,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29609125400020275,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48114,
            47761,
            47791,
            47730,
            47771,
            47815,
            47673,
            47898,
            47674,
            47229,
            47345,
            47632,
            47710,
            47674,
            47968,
            47477,
            47725,
            47691,
            47560,
            47652,
            47770,
            47703,
            47778,
            47996,
            47775,
            47671,
            47930,
            47785,
            47815,
            47749,
            47816,
            47713,
            47694,
            47541,
            47816,
            47705,
            47389,
            47937,
            47749,
            47811,
            47674,
            47724,
            47426,
            47812,
            47660,
            47469,
            47771,
            47902,
            47755,
            47708,
            47731,
            47674,
            47722,
            47756,
            47650,
            47689,
            47717,
            47884,
            47716,
            47257,
            47241,
            47787,
            47751
          ],
          [
            48114,
            47761,
            47791,
            47730,
            47771,
            47815,
            47673,
            47898,
            47674,
            47229,
            47345,
            47632,
            47710,
            47674,
            47968,
            47477,
            47725,
            47691,
            47560,
            47652,
            47770,
            47703,
            47778,
            47996,
            47775,
            47671,
            47930,
            47785,
            47815,
            47749,
            47816,
            47713,
            47694,
            47541,
            47816,
            47705,
            47389,
            47937,
            47749,
            47811,
            47674,
            47724,
            47426,
            47812,
            47660,
            47469,
            47771,
            47902,
            47755,
            47708,
            47731,
            47674,
            47722,
            47756,
            47650,
            47689,
            47717,
            47884,
            47716,
            47257,
            47241,
            47787,
            47751
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            213,
            3391,
            18159,
            36140,
            37144,
            19482,
            4378,
            480,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            128,
            2522,
            15760,
            34711,
            40461,
            26140,
            8562,
            905,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            849,
            8417,
            28694,
            41790,
            38974,
            19639,
            5008,
            594,
            8,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            171,
            2215,
            13132,
            30994,
            42975,
            39721,
            20668,
            5673,
            598,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13419310400058748,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016168859983736183,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06879623900022125,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48220,
            47528,
            47373,
            47410,
            46794,
            47503,
            47439,
            47492,
            47423,
            47524,
            47522,
            47498,
            47504,
            47420,
            47484,
            47819,
            49634,
            47240,
            47464,
            47476,
            47354,
            47490,
            47596,
            47387,
            47326,
            47365,
            47303,
            47558,
            47227,
            47120,
            47516,
            47482,
            47518,
            47507,
            47490,
            49310,
            49172,
            47289,
            47310,
            47565,
            47314,
            47274,
            47411,
            47344,
            47580,
            47528,
            47174,
            47472,
            47386,
            47300,
            47319,
            47625,
            47306,
            47405,
            47334,
            49143,
            49640,
            47398,
            47292,
            47301,
            47355,
            47294,
            47365
          ],
          [
            48220,
            47528,
            47373,
            47410,
            46794,
            47503,
            47439,
            47492,
            47423,
            47524,
            47522,
            47498,
            47504,
            47420,
            47484,
            47819,
            49634,
            47240,
            47464,
            47476,
            47354,
            47490,
            47596,
            47387,
            47326,
            47365,
            47303,
            47558,
            47227,
            47120,
            47516,
            47482,
            47518,
            47507,
            47490,
            49310,
            49172,
            47289,
            47310,
            47565,
            47314,
            47274,
            47411,
            47344,
            47580,
            47528,
            47174,
            47472,
            47386,
            47300,
            47319,
            47625,
            47306,
            47405,
            47334,
            49143,
            49640,
            47398,
            47292,
            47301,
            47355,
            47294,
            47365
          ],
          [
            48220,
            47528,
            47373,
            47410,
            46794,
            47503,
            47439,
            47492,
            47423,
            47524,
            47522,
            47498,
            47504,
            47420,
            47484,
            47819,
            49634,
            47240,
            47464,
            47476,
            47354,
            47490,
            47596,
            47387,
            47326,
            47365,
            47303,
            47558,
            47227,
            47120,
            47516,
            47482,
            47518,
            47507,
            47490,
            49310,
            49172,
            47289,
            47310,
            47565,
            47314,
            47274,
            47411,
            47344,
            47580,
            47528,
            47174,
            47472,
            47386,
            47300,
            47319,
            47625,
            47306,
            47405,
            47334,
            49143,
            49640,
            47398,
            47292,
            47301,
            47355,
            47294,
            47365
          ],
          [
            48220,
            47528,
            47373,
            47410,
            46794,
            47503,
            47439,
            47492,
            47423,
            47524,
            47522,
            47498,
            47504,
            47420,
            47484,
            47819,
            49634,
            47240,
            47464,
            47476,
            47354,
            47490,
            47596,
            47387,
            47326,
            47365,
            47303,
            47558,
            47227,
            47120,
            47516,
            47482,
            47518,
            47507,
            47490,
            49310,
            49172,
            47289,
            47310,
            47565,
            47314,
            47274,
            47411,
            47344,
            47580,
            47528,
            47174,
            47472,
            47386,
            47300,
            47319,
            47625,
            47306,
            47405,
            47334,
            49143,
            49640,
            47398,
            47292,
            47301,
            47355,
            47294,
            47365
          ],
          [
            48220,
            47528,
            47373,
            47410,
            46794,
            47503,
            47439,
            47492,
            47423,
            47524,
            47522,
            47498,
            47504,
            47420,
            47484,
            47819,
            49634,
            47240,
            47464,
            47476,
            47354,
            47490,
            47596,
            47387,
            47326,
            47365,
            47303,
            47558,
            47227,
            47120,
            47516,
            47482,
            47518,
            47507,
            47490,
            49310,
            49172,
            47289,
            47310,
            47565,
            47314,
            47274,
            47411,
            47344,
            47580,
            47528,
            47174,
            47472,
            47386,
            47300,
            47319,
            47625,
            47306,
            47405,
            47334,
            49143,
            49640,
            47398,
            47292,
            47301,
            47355,
            47294,
            47365
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            41,
            662,
            4586,
            16796,
            28546,
            34343,
            33029,
            25078,
            15255,
            5235,
            922,
            83,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            64,
            1070,
            4210,
            12341,
            24881,
            36690,
            39523,
            28607,
            14481,
            3606,
            539,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34
          ],
          [
            0,
            7,
            166,
            1789,
            7948,
            21109,
            36510,
            40345,
            34525,
            21963,
            9731,
            2162,
            232,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            351,
            2334,
            8706,
            21789,
            35226,
            44216,
            43339,
            29430,
            12620,
            2679,
            330,
            4,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            580,
            3099,
            8614,
            20641,
            34649,
            37663
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            62,
            998,
            6880,
            22561,
            33880,
            38439,
            31883,
            14545,
            3825,
            311,
            4,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            445,
            5377,
            17749,
            35370,
            41469,
            33703,
            18895,
            6370,
            1196,
            96,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            159,
            1772,
            9848,
            26213,
            39378,
            42216,
            35244,
            17719,
            4996,
            688,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            217,
            2040,
            8787,
            20665,
            34580,
            41518,
            35592,
            22753,
            9731,
            2261,
            149,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            17,
            232,
            2558,
            11059,
            26453,
            38825,
            39661,
            34365,
            26754,
            16851,
            5941,
            1449,
            95,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            665,
            3614,
            11413,
            24871,
            37981,
            44709,
            40858,
            29368,
            14675,
            4743,
            621,
            62,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            215,
            1509,
            7125,
            17120,
            30187
          ]
        ]
      },
      "call": {
        "duration": 0.2698055389992078,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001521874000900425,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29151051200096845,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170520032999775,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014373619997058995,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3451337909973518,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            112,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034849669973482378,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029365850023168605,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5417995380012144,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            4,
            255,
            1,
            42,
            0,
            255,
            0,
            255,
            255
          ],
          [
            79,
            0,
            10,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            27,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            254,
            255,
            0,
            9,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            10,
            255,
            54,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            3,
            12,
            0,
            255,
            10,
            255,
            255
          ],
          [
            67,
            0,
            3,
            0,
            9,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            93,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            59,
            0,
            5,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            114,
            255,
            34,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034628569992491975,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029253650027385447,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29641565100246225,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47832,
            47516,
            47523,
            47675,
            47262,
            47307,
            47788,
            47616,
            47758,
            47665,
            47607,
            47570,
            47579,
            49339,
            47445,
            47806,
            47472,
            50117,
            47531,
            47475,
            47581,
            47449,
            47612,
            47634,
            47432,
            47430,
            47433,
            47505,
            47664,
            47460,
            47579,
            47450,
            47497,
            47479,
            47368,
            47395,
            47503,
            47548,
            47666,
            47664,
            47522,
            47524,
            47469,
            47723,
            47528,
            47404,
            49160,
            47569,
            47971,
            47440,
            49684,
            47488,
            47509,
            47476,
            47341,
            47197,
            47447,
            47549,
            47521,
            47635,
            47410,
            47402,
            47412
          ],
          [
            47832,
            47516,
            47523,
            47675,
            47262,
            47307,
            47788,
            47616,
            47758,
            47665,
            47607,
            47570,
            47579,
            49339,
            47445,
            47806,
            47472,
            50117,
            47531,
            47475,
            47581,
            47449,
            47612,
            47634,
            47432,
            47430,
            47433,
            47505,
            47664,
            47460,
            47579,
            47450,
            47497,
            47479,
            47368,
            47395,
            47503,
            47548,
            47666,
            47664,
            47522,
            47524,
            47469,
            47723,
            47528,
            47404,
            49160,
            47569,
            47971,
            47440,
            49684,
            47488,
            47509,
            47476,
            47341,
            47197,
            47447,
            47549,
            47521,
            47635,
            47410,
            47402,
            47412
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            585,
            7014,
            24532,
            39246,
            35018,
            14947,
            2857,
            373,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            543,
            6342,
            22299,
            38622,
            38158,
            21011,
            4976,
            677,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            140,
            2021,
            13972,
            33324,
            41202,
            29146,
            9964,
            1509,
            143,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            693,
            6089,
            21836,
            38652,
            41849,
            31117,
            12997,
            2184,
            242,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            917,
            8235,
            25905,
            40540,
            43452
          ]
        ]
      },
      "call": {
        "duration": 0.13396041800297098,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016023649986891542,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06910005700046895,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48225,
            47929,
            47988,
            47432,
            47473,
            47766,
            47289,
            47563,
            47327,
            47506,
            47458,
            47586,
            47184,
            47523,
            47545,
            47720,
            47334,
            47511,
            47433,
            47348,
            47751,
            47657,
            47220,
            47507,
            47426,
            47333,
            46928,
            47453,
            47256,
            47453,
            47305,
            47429,
            47233,
            47521,
            47343,
            47503,
            47292,
            47527,
            47534,
            47641,
            47199,
            47428,
            47171,
            47259,
            47210,
            47383,
            47275,
            47505,
            47415,
            47469,
            47348,
            47264,
            47292,
            47410,
            47477,
            47366,
            47391,
            47519,
            47577,
            47555,
            47159,
            47350,
            47336
          ],
          [
            48225,
            47929,
            47988,
            47432,
            47473,
            47766,
            47289,
            47563,
            47327,
            47506,
            47458,
            47586,
            47184,
            47523,
            47545,
            47720,
            47334,
            47511,
            47433,
            47348,
            47751,
            47657,
            47220,
            47507,
            47426,
            47333,
            46928,
            47453,
            47256,
            47453,
            47305,
            47429,
            47233,
            47521,
            47343,
            47503,
            47292,
            47527,
            47534,
            47641,
            47199,
            47428,
            47171,
            47259,
            47210,
            47383,
            47275,
            47505,
            47415,
            47469,
            47348,
            47264,
            47292,
            47410,
            47477,
            47366,
            47391,
            47519,
            47577,
            47555,
            47159,
            47350,
            47336
          ],
          [
            48225,
            47929,
            47988,
            47432,
            47473,
            47766,
            47289,
            47563,
            47327,
            47506,
            47458,
            47586,
            47184,
            47523,
            47545,
            47720,
            47334,
            47511,
            47433,
            47348,
            47751,
            47657,
            47220,
            47507,
            47426,
            47333,
            46928,
            47453,
            47256,
            47453,
            47305,
            47429,
            47233,
            47521,
            47343,
            47503,
            47292,
            47527,
            47534,
            47641,
            47199,
            47428,
            47171,
            47259,
            47210,
            47383,
            47275,
            47505,
            47415,
            47469,
            47348,
            47264,
            47292,
            47410,
            47477,
            47366,
            47391,
            47519,
            47577,
            47555,
            47159,
            47350,
            47336
          ],
          [
            48225,
            47929,
            47988,
            47432,
            47473,
            47766,
            47289,
            47563,
            47327,
            47506,
            47458,
            47586,
            47184,
            47523,
            47545,
            47720,
            47334,
            47511,
            47433,
            47348,
            47751,
            47657,
            47220,
            47507,
            47426,
            47333,
            46928,
            47453,
            47256,
            47453,
            47305,
            47429,
            47233,
            47521,
            47343,
            47503,
            47292,
            47527,
            47534,
            47641,
            47199,
            47428,
            47171,
            47259,
            47210,
            47383,
            47275,
            47505,
            47415,
            47469,
            47348,
            47264,
            47292,
            47410,
            47477,
            47366,
            47391,
            47519,
            47577,
            47555,
            47159,
            47350,
            47336
          ],
          [
            48225,
            47929,
            47988,
            47432,
            47473,
            47766,
            47289,
            47563,
            47327,
            47506,
            47458,
            47586,
            47184,
            47523,
            47545,
            47720,
            47334,
            47511,
            47433,
            47348,
            47751,
            47657,
            47220,
            47507,
            47426,
            47333,
            46928,
            47453,
            47256,
            47453,
            47305,
            47429,
            47233,
            47521,
            47343,
            47503,
            47292,
            47527,
            47534,
            47641,
            47199,
            47428,
            47171,
            47259,
            47210,
            47383,
            47275,
            47505,
            47415,
            47469,
            47348,
            47264,
            47292,
            47410,
            47477,
            47366,
            47391,
            47519,
            47577,
            47555,
            47159,
            47350,
            47336
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            292,
            1855,
            6871,
            14963,
            26495,
            37516,
            35798,
            24517,
            13006,
            2975,
            331,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            71,
            734,
            3743,
            12597,
            23783,
            32631,
            33609,
            28677,
            19934,
            11134,
            4181,
            695,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            194,
            1555,
            5205,
            12329,
            24389,
            36584,
            43198,
            38769,
            23931,
            9370,
            2247,
            223,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            472,
            2674,
            6759,
            15056,
            27978,
            39388,
            36297,
            28038,
            14801,
            4312,
            913,
            91,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            85
          ],
          [
            11536,
            3344,
            307,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            73,
            1463,
            8456,
            19623,
            32787,
            39285,
            30621,
            16317,
            5961,
            887,
            56,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            67,
            772,
            5273,
            15391,
            27380,
            35754,
            32782,
            22082,
            8671,
            1714,
            174,
            9,
            0,
            0,
            0,
            0
          ],
          [
            67,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            60,
            1000,
            5650,
            15868,
            27563,
            38929,
            40776,
            32842,
            21080,
            9911,
            3054,
            478,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            89,
            899,
            4526,
            14026,
            27015,
            35148,
            33002,
            24470,
            11781,
            3890,
            667,
            51,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            136,
            1477,
            5548,
            15595,
            26968,
            36650,
            41027,
            37892,
            26549,
            15173,
            4643,
            729,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            34,
            504,
            2601,
            7319,
            17480,
            30299,
            37003,
            36522,
            30767,
            22726,
            13596,
            5327,
            1362,
            116,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.27185797600031947,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9bde26f0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9bde26f0> = array([18, 14, 15, 14, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9c0675b0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48225, 47929, 47988, 47432, 47473, 47766, ...], [48225, 47929, 47988, 47432, 47473, 47766, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [11536, 3344, 307, 31, 0, 0, ...], [67, 4, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9bde26f0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9bde26f0> = array([18, 14, 15, 14, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001606596000783611,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2925119649989938,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1705248030011717,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004893739002000075,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}