{
  "created": 1722034444.6522322,
  "duration": 23.56054449081421,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.508862153001246,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482977209998353,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012928190008096863,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038882370026840363,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14787102199989022,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012291570019442588,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13212604000000283,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12174322799910442,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012516580027295277,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038827459975436796,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12112338499719044,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012691779993474483,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034042959996440914,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14656932300204062,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011499850006657653,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003410146000533132,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1200620509989676,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012016170003334992,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034443170006852597,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14636222800254473,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011361260003468487,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003436456998315407,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1199547079995682,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001136186001531314,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004474929999560118,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002097827000397956,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001087194999854546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003399616001843242,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016993580029520672,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00110039399805828,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003400035999220563,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004026089998660609,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034426.941696,
            "msecs": 941.6959285736084,
            "relativeCreated": 7819.881200790405,
            "thread": 281472880185376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5671
          }
        ]
      },
      "teardown": {
        "duration": 0.001221566999447532,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034566469985293224,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024049140010902192,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034426.9540246,
            "msecs": 954.0245532989502,
            "relativeCreated": 7832.209825515747,
            "thread": 281472880185376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5671
          }
        ]
      },
      "teardown": {
        "duration": 0.00112361599894939,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021568680022028275,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002709210999455536,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034426.963583,
            "msecs": 963.5829925537109,
            "relativeCreated": 7841.768264770508,
            "thread": 281472880185376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5671
          }
        ]
      },
      "teardown": {
        "duration": 0.00105680400156416,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002183778997277841,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034337260003667325,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034426.973072,
            "msecs": 973.0720520019531,
            "relativeCreated": 7851.25732421875,
            "thread": 281472880185376,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5671
          }
        ]
      },
      "teardown": {
        "duration": 0.0010352030003559776,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034303069987799972,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14661909399728756,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011550849994819146,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003426196999498643,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12028414599990356,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011565260028874036,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17950840900084586,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14773121899997932,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012264279976079706,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015300071001547622,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12125487699813675,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012597280001500621,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8455458130010811,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            1,
            8,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            52,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            23,
            155,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.003545239000231959,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029110850009601563,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8977533369979938,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            4,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            13
          ],
          [
            243,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            217,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            27,
            255,
            255,
            255,
            5
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            44,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            56,
            0,
            0,
            0,
            0
          ],
          [
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            239,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            173,
            255,
            255,
            255,
            255,
            0,
            0,
            100,
            0,
            72,
            255
          ],
          [
            255,
            0,
            122,
            0,
            255,
            0,
            255,
            45,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034934580035042018,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002932114999566693,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30304900700139115,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48099,
            47323,
            47300,
            47413,
            47485,
            47386,
            47193,
            47270,
            47367,
            47351,
            47501,
            47437,
            47204,
            47223,
            47232,
            47297,
            49569,
            47420,
            47715,
            47128,
            47180,
            47119,
            51663,
            47499,
            47238,
            47339,
            47234,
            47208,
            47325,
            47382,
            47113,
            47225,
            47302,
            47426,
            47409,
            47397,
            47237,
            47336,
            47304,
            47488,
            47432,
            47517,
            47236,
            47401,
            47394,
            47375,
            47509,
            47411,
            47218,
            47298,
            47384,
            47310,
            47414,
            47394,
            47429,
            48938,
            47275,
            47575,
            47538,
            47748,
            47357,
            49575,
            47367
          ],
          [
            48099,
            47323,
            47300,
            47413,
            47485,
            47386,
            47193,
            47270,
            47367,
            47351,
            47501,
            47437,
            47204,
            47223,
            47232,
            47297,
            49569,
            47420,
            47715,
            47128,
            47180,
            47119,
            51663,
            47499,
            47238,
            47339,
            47234,
            47208,
            47325,
            47382,
            47113,
            47225,
            47302,
            47426,
            47409,
            47397,
            47237,
            47336,
            47304,
            47488,
            47432,
            47517,
            47236,
            47401,
            47394,
            47375,
            47509,
            47411,
            47218,
            47298,
            47384,
            47310,
            47414,
            47394,
            47429,
            48938,
            47275,
            47575,
            47538,
            47748,
            47357,
            49575,
            47367
          ]
        ],
        "eTX_errcounts": [
          [
            40186,
            26388,
            8429,
            1343,
            108,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            219,
            2852,
            16268,
            34338,
            42217,
            31566,
            14735,
            2269,
            97,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            54,
            767,
            7905,
            25216,
            40177,
            38754,
            19762,
            5187,
            599,
            30,
            1,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            297,
            3835,
            17382,
            35459,
            45573,
            31594,
            13171,
            3405,
            336,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            416,
            4488,
            19197,
            36137,
            42591,
            35530,
            16631,
            3462,
            335,
            6,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13336065800103825,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016142759996000677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06906790200082469,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47583,
            47206,
            47087,
            47083,
            47091,
            47295,
            47264,
            47201,
            47416,
            46975,
            47271,
            47152,
            47148,
            48998,
            48744,
            47109,
            47214,
            47268,
            47056,
            46995,
            46987,
            47245,
            47134,
            47147,
            47049,
            47352,
            47135,
            47183,
            47134,
            47219,
            47155,
            47136,
            47278,
            47594,
            47198,
            47115,
            47076,
            47170,
            47156,
            47188,
            47141,
            47215,
            47342,
            47109,
            47055,
            47210,
            47154,
            47242,
            47297,
            47269,
            47212,
            47221,
            47217,
            47299,
            46991,
            47188,
            47066,
            47238,
            46804,
            47221,
            47081,
            47337,
            47077
          ],
          [
            47583,
            47206,
            47087,
            47083,
            47091,
            47295,
            47264,
            47201,
            47416,
            46975,
            47271,
            47152,
            47148,
            48998,
            48744,
            47109,
            47214,
            47268,
            47056,
            46995,
            46987,
            47245,
            47134,
            47147,
            47049,
            47352,
            47135,
            47183,
            47134,
            47219,
            47155,
            47136,
            47278,
            47594,
            47198,
            47115,
            47076,
            47170,
            47156,
            47188,
            47141,
            47215,
            47342,
            47109,
            47055,
            47210,
            47154,
            47242,
            47297,
            47269,
            47212,
            47221,
            47217,
            47299,
            46991,
            47188,
            47066,
            47238,
            46804,
            47221,
            47081,
            47337,
            47077
          ],
          [
            47583,
            47206,
            47087,
            47083,
            47091,
            47295,
            47264,
            47201,
            47416,
            46975,
            47271,
            47152,
            47148,
            48998,
            48744,
            47109,
            47214,
            47268,
            47056,
            46995,
            46987,
            47245,
            47134,
            47147,
            47049,
            47352,
            47135,
            47183,
            47134,
            47219,
            47155,
            47136,
            47278,
            47594,
            47198,
            47115,
            47076,
            47170,
            47156,
            47188,
            47141,
            47215,
            47342,
            47109,
            47055,
            47210,
            47154,
            47242,
            47297,
            47269,
            47212,
            47221,
            47217,
            47299,
            46991,
            47188,
            47066,
            47238,
            46804,
            47221,
            47081,
            47337,
            47077
          ],
          [
            47583,
            47206,
            47087,
            47083,
            47091,
            47295,
            47264,
            47201,
            47416,
            46975,
            47271,
            47152,
            47148,
            48998,
            48744,
            47109,
            47214,
            47268,
            47056,
            46995,
            46987,
            47245,
            47134,
            47147,
            47049,
            47352,
            47135,
            47183,
            47134,
            47219,
            47155,
            47136,
            47278,
            47594,
            47198,
            47115,
            47076,
            47170,
            47156,
            47188,
            47141,
            47215,
            47342,
            47109,
            47055,
            47210,
            47154,
            47242,
            47297,
            47269,
            47212,
            47221,
            47217,
            47299,
            46991,
            47188,
            47066,
            47238,
            46804,
            47221,
            47081,
            47337,
            47077
          ],
          [
            47583,
            47206,
            47087,
            47083,
            47091,
            47295,
            47264,
            47201,
            47416,
            46975,
            47271,
            47152,
            47148,
            48998,
            48744,
            47109,
            47214,
            47268,
            47056,
            46995,
            46987,
            47245,
            47134,
            47147,
            47049,
            47352,
            47135,
            47183,
            47134,
            47219,
            47155,
            47136,
            47278,
            47594,
            47198,
            47115,
            47076,
            47170,
            47156,
            47188,
            47141,
            47215,
            47342,
            47109,
            47055,
            47210,
            47154,
            47242,
            47297,
            47269,
            47212,
            47221,
            47217,
            47299,
            46991,
            47188,
            47066,
            47238,
            46804,
            47221,
            47081,
            47337,
            47077
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            552,
            3909,
            14436,
            28608,
            35327,
            35478,
            27989,
            18279,
            9627,
            2826,
            398,
            29,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            746,
            4892,
            14704,
            27418,
            34622,
            36604,
            30358,
            21955,
            12435,
            3907,
            774,
            104,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            157,
            2027,
            10726,
            22890,
            33453,
            38212,
            34045,
            23442,
            12822,
            4679,
            1031,
            125,
            9,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            5,
            336,
            3438,
            13647,
            26086,
            34845,
            39398,
            35940,
            25519,
            18413,
            9316,
            2645,
            258,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            703,
            4703,
            13771,
            24875
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            114,
            1025,
            7409,
            19737,
            30580,
            33392,
            30114,
            21269,
            11187,
            3235,
            600,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            116,
            1305,
            8662,
            21058,
            32663,
            35572,
            31263,
            24373,
            16531,
            6725,
            1602,
            105,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            113,
            1561,
            9421,
            21425,
            30497,
            33739,
            30958,
            22634,
            13624,
            5275,
            1033,
            76,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            201,
            1833,
            8407,
            21270,
            30478,
            34002,
            31011,
            24972,
            17019,
            8438,
            2901,
            380,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            16,
            352,
            2603,
            10573,
            21754,
            31874,
            39219,
            39737,
            31220,
            21363,
            10864,
            3594,
            500,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            21,
            657,
            3693,
            12590,
            23990,
            33796,
            40426,
            36646,
            27916,
            20217,
            11724,
            4822,
            1903,
            528,
            77,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            189,
            1451,
            6852
          ]
        ]
      },
      "call": {
        "duration": 0.27186742200137815,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6e26e1b0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6e26e1b0> = array([22, 14, 18, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6e4584f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47583, 47206, 47087, 47083, 47091, 47295, ...], [47583, 47206, 47087, 47083, 47091, 47295, ...], [... 0, 0, ...], [0, 0, 0, 5, 157, 2027, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 16, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6e26e1b0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6e26e1b0> = array([22, 14, 18, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016348270000889897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29273741699944367,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170621821998793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014282720003393479,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3056094759995176,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            199,
            47,
            4,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034718269998847973,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002895844998420216,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5397275629984506,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            179,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            1,
            255,
            113,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            96,
            255,
            138,
            255,
            151,
            0,
            0,
            236,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            245,
            0,
            67,
            1,
            255,
            13,
            255,
            13
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            87,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            1,
            255,
            78,
            255,
            141,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            211,
            255,
            180,
            255,
            255,
            1,
            0,
            131,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            52,
            255,
            129
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003430697001022054,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028929039981449023,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296306567001011,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47732,
            47385,
            47313,
            47250,
            47315,
            47306,
            47268,
            47171,
            49052,
            47452,
            47743,
            47312,
            49493,
            47365,
            47322,
            47354,
            47280,
            47228,
            47447,
            47240,
            47175,
            47302,
            47336,
            47264,
            47253,
            47292,
            47216,
            47200,
            47371,
            47325,
            47348,
            47399,
            47330,
            47419,
            47355,
            47293,
            47257,
            47281,
            47364,
            47194,
            47154,
            47425,
            47287,
            47400,
            46980,
            46953,
            47039,
            52516,
            47518,
            47456,
            47372,
            49452,
            47197,
            47314,
            47215,
            47294,
            47341,
            47307,
            47366,
            47199,
            47362,
            47175,
            47314
          ],
          [
            47732,
            47385,
            47313,
            47250,
            47315,
            47306,
            47268,
            47171,
            49052,
            47452,
            47743,
            47312,
            49493,
            47365,
            47322,
            47354,
            47280,
            47228,
            47447,
            47240,
            47175,
            47302,
            47336,
            47264,
            47253,
            47292,
            47216,
            47200,
            47371,
            47325,
            47348,
            47399,
            47330,
            47419,
            47355,
            47293,
            47257,
            47281,
            47364,
            47194,
            47154,
            47425,
            47287,
            47400,
            46980,
            46953,
            47039,
            52516,
            47518,
            47456,
            47372,
            49452,
            47197,
            47314,
            47215,
            47294,
            47341,
            47307,
            47366,
            47199,
            47362,
            47175,
            47314
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            370,
            3796,
            17923,
            36243,
            36326,
            19081,
            4321,
            270,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            159,
            3054,
            16422,
            39020,
            39982,
            24673,
            8217,
            980,
            39,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            55,
            1001,
            8049,
            29662,
            41792,
            38488,
            18188,
            4331,
            481,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            221,
            2769,
            13801,
            31465,
            42434,
            38072,
            19898,
            5148,
            616,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13324095500138355,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016161059975274839,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06884889800130622,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47786,
            47246,
            47071,
            47295,
            47180,
            47079,
            47102,
            47124,
            47086,
            47221,
            47106,
            47268,
            47169,
            47562,
            47090,
            47155,
            46965,
            46938,
            47304,
            47029,
            47207,
            47012,
            46705,
            47056,
            47209,
            47192,
            47026,
            47343,
            47037,
            47087,
            47176,
            47218,
            47147,
            48748,
            48913,
            47079,
            47120,
            47055,
            46982,
            47207,
            46897,
            47004,
            47044,
            47021,
            47129,
            46933,
            47069,
            46844,
            47114,
            47211,
            47128,
            47262,
            47143,
            47108,
            47365,
            47301,
            47042,
            47050,
            46940,
            46994,
            47018,
            47025,
            46994
          ],
          [
            47786,
            47246,
            47071,
            47295,
            47180,
            47079,
            47102,
            47124,
            47086,
            47221,
            47106,
            47268,
            47169,
            47562,
            47090,
            47155,
            46965,
            46938,
            47304,
            47029,
            47207,
            47012,
            46705,
            47056,
            47209,
            47192,
            47026,
            47343,
            47037,
            47087,
            47176,
            47218,
            47147,
            48748,
            48913,
            47079,
            47120,
            47055,
            46982,
            47207,
            46897,
            47004,
            47044,
            47021,
            47129,
            46933,
            47069,
            46844,
            47114,
            47211,
            47128,
            47262,
            47143,
            47108,
            47365,
            47301,
            47042,
            47050,
            46940,
            46994,
            47018,
            47025,
            46994
          ],
          [
            47786,
            47246,
            47071,
            47295,
            47180,
            47079,
            47102,
            47124,
            47086,
            47221,
            47106,
            47268,
            47169,
            47562,
            47090,
            47155,
            46965,
            46938,
            47304,
            47029,
            47207,
            47012,
            46705,
            47056,
            47209,
            47192,
            47026,
            47343,
            47037,
            47087,
            47176,
            47218,
            47147,
            48748,
            48913,
            47079,
            47120,
            47055,
            46982,
            47207,
            46897,
            47004,
            47044,
            47021,
            47129,
            46933,
            47069,
            46844,
            47114,
            47211,
            47128,
            47262,
            47143,
            47108,
            47365,
            47301,
            47042,
            47050,
            46940,
            46994,
            47018,
            47025,
            46994
          ],
          [
            47786,
            47246,
            47071,
            47295,
            47180,
            47079,
            47102,
            47124,
            47086,
            47221,
            47106,
            47268,
            47169,
            47562,
            47090,
            47155,
            46965,
            46938,
            47304,
            47029,
            47207,
            47012,
            46705,
            47056,
            47209,
            47192,
            47026,
            47343,
            47037,
            47087,
            47176,
            47218,
            47147,
            48748,
            48913,
            47079,
            47120,
            47055,
            46982,
            47207,
            46897,
            47004,
            47044,
            47021,
            47129,
            46933,
            47069,
            46844,
            47114,
            47211,
            47128,
            47262,
            47143,
            47108,
            47365,
            47301,
            47042,
            47050,
            46940,
            46994,
            47018,
            47025,
            46994
          ],
          [
            47786,
            47246,
            47071,
            47295,
            47180,
            47079,
            47102,
            47124,
            47086,
            47221,
            47106,
            47268,
            47169,
            47562,
            47090,
            47155,
            46965,
            46938,
            47304,
            47029,
            47207,
            47012,
            46705,
            47056,
            47209,
            47192,
            47026,
            47343,
            47037,
            47087,
            47176,
            47218,
            47147,
            48748,
            48913,
            47079,
            47120,
            47055,
            46982,
            47207,
            46897,
            47004,
            47044,
            47021,
            47129,
            46933,
            47069,
            46844,
            47114,
            47211,
            47128,
            47262,
            47143,
            47108,
            47365,
            47301,
            47042,
            47050,
            46940,
            46994,
            47018,
            47025,
            46994
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            394,
            3235,
            11394,
            23044,
            35463,
            37072,
            26117,
            11106,
            2332,
            192,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            107,
            1002,
            3896,
            11353,
            24903,
            37928,
            39990,
            26803,
            12372,
            3098,
            610,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            27,
            645,
            4938,
            14027,
            28894,
            38855,
            36325,
            19893,
            5919,
            650,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            310,
            1843,
            7294,
            18928,
            35331,
            44510,
            40167,
            27303,
            13305,
            2564,
            223,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            109,
            1899,
            8808,
            21186,
            35597,
            41204
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            758,
            4490,
            14550,
            27686,
            37863,
            31661,
            16046,
            4113,
            430,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            47,
            476,
            5172,
            16883,
            35171,
            41057,
            34088,
            19081,
            6110,
            797,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            80,
            969,
            5588,
            16241,
            31046,
            39324,
            32073,
            17212,
            4784,
            457,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            6,
            207,
            1713,
            6628,
            18389,
            34213,
            41945,
            35392,
            21887,
            7702,
            1382,
            102,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            143,
            1841,
            8407,
            19213,
            31551,
            40861,
            39009,
            27214,
            10583,
            1472,
            139,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            49,
            739,
            3411,
            11006,
            23896,
            35137,
            42601,
            38710,
            24651,
            10069,
            2495,
            372,
            17,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            151,
            1662,
            9278,
            19820,
            32500
          ]
        ]
      },
      "call": {
        "duration": 0.2694975480007997,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014703330016345717,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29156661100205383,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1702359529990645,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001415072001691442,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3522363070005667,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            122,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0034609069989528507,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002898334998462815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5404092069984472,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            10,
            255,
            1,
            29,
            0,
            255,
            0,
            255,
            255
          ],
          [
            69,
            0,
            13,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            39,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            253,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            2,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            29,
            255,
            0,
            0,
            0,
            0,
            0,
            222
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            2,
            0,
            255,
            0,
            255,
            255
          ],
          [
            106,
            0,
            4,
            0,
            7,
            0,
            255,
            121,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            93,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            89,
            0,
            3,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            39,
            255,
            27,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003459257000940852,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028837840000051074,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961896839988185,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48008,
            47372,
            47348,
            47177,
            47290,
            47456,
            47438,
            47387,
            47288,
            47355,
            47361,
            47405,
            47453,
            47001,
            46996,
            47297,
            47579,
            47469,
            47378,
            47397,
            47468,
            47248,
            47311,
            47034,
            47046,
            47423,
            47261,
            47285,
            47287,
            47384,
            47391,
            47286,
            49415,
            47297,
            47543,
            47323,
            47734,
            47406,
            49173,
            47404,
            47540,
            47405,
            47221,
            47244,
            47263,
            47492,
            47178,
            47268,
            47269,
            47343,
            47231,
            47248,
            47330,
            47342,
            47291,
            47313,
            47295,
            47333,
            47383,
            47488,
            47373,
            47337,
            47503
          ],
          [
            48008,
            47372,
            47348,
            47177,
            47290,
            47456,
            47438,
            47387,
            47288,
            47355,
            47361,
            47405,
            47453,
            47001,
            46996,
            47297,
            47579,
            47469,
            47378,
            47397,
            47468,
            47248,
            47311,
            47034,
            47046,
            47423,
            47261,
            47285,
            47287,
            47384,
            47391,
            47286,
            49415,
            47297,
            47543,
            47323,
            47734,
            47406,
            49173,
            47404,
            47540,
            47405,
            47221,
            47244,
            47263,
            47492,
            47178,
            47268,
            47269,
            47343,
            47231,
            47248,
            47330,
            47342,
            47291,
            47313,
            47295,
            47333,
            47383,
            47488,
            47373,
            47337,
            47503
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            707,
            6886,
            24777,
            39284,
            33543,
            14884,
            2823,
            264,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            638,
            6448,
            23657,
            38364,
            37396,
            20968,
            4494,
            654,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            7,
            124,
            2301,
            14529,
            32575,
            40685,
            29317,
            9440,
            1741,
            113,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            684,
            6098,
            22481,
            38737,
            41565,
            30199,
            11881,
            2113,
            279,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            856,
            8350,
            26453,
            40501,
            44089
          ]
        ]
      },
      "call": {
        "duration": 0.13304076100030215,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015838250001252163,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06914500400307588,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47917,
            47024,
            46952,
            47025,
            47039,
            47009,
            46635,
            47148,
            47119,
            47163,
            47092,
            47030,
            47193,
            47162,
            47235,
            47142,
            47247,
            47192,
            47173,
            47038,
            47585,
            47076,
            47143,
            47132,
            47021,
            47138,
            47081,
            46983,
            47371,
            47145,
            46972,
            46789,
            47083,
            47071,
            47078,
            47203,
            47250,
            47259,
            47039,
            47084,
            47099,
            47460,
            47171,
            47051,
            47088,
            47078,
            47060,
            47079,
            47046,
            47043,
            47052,
            47240,
            47186,
            46966,
            47046,
            47070,
            46771,
            47150,
            47230,
            47117,
            47283,
            47114,
            47505
          ],
          [
            47917,
            47024,
            46952,
            47025,
            47039,
            47009,
            46635,
            47148,
            47119,
            47163,
            47092,
            47030,
            47193,
            47162,
            47235,
            47142,
            47247,
            47192,
            47173,
            47038,
            47585,
            47076,
            47143,
            47132,
            47021,
            47138,
            47081,
            46983,
            47371,
            47145,
            46972,
            46789,
            47083,
            47071,
            47078,
            47203,
            47250,
            47259,
            47039,
            47084,
            47099,
            47460,
            47171,
            47051,
            47088,
            47078,
            47060,
            47079,
            47046,
            47043,
            47052,
            47240,
            47186,
            46966,
            47046,
            47070,
            46771,
            47150,
            47230,
            47117,
            47283,
            47114,
            47505
          ],
          [
            47917,
            47024,
            46952,
            47025,
            47039,
            47009,
            46635,
            47148,
            47119,
            47163,
            47092,
            47030,
            47193,
            47162,
            47235,
            47142,
            47247,
            47192,
            47173,
            47038,
            47585,
            47076,
            47143,
            47132,
            47021,
            47138,
            47081,
            46983,
            47371,
            47145,
            46972,
            46789,
            47083,
            47071,
            47078,
            47203,
            47250,
            47259,
            47039,
            47084,
            47099,
            47460,
            47171,
            47051,
            47088,
            47078,
            47060,
            47079,
            47046,
            47043,
            47052,
            47240,
            47186,
            46966,
            47046,
            47070,
            46771,
            47150,
            47230,
            47117,
            47283,
            47114,
            47505
          ],
          [
            47917,
            47024,
            46952,
            47025,
            47039,
            47009,
            46635,
            47148,
            47119,
            47163,
            47092,
            47030,
            47193,
            47162,
            47235,
            47142,
            47247,
            47192,
            47173,
            47038,
            47585,
            47076,
            47143,
            47132,
            47021,
            47138,
            47081,
            46983,
            47371,
            47145,
            46972,
            46789,
            47083,
            47071,
            47078,
            47203,
            47250,
            47259,
            47039,
            47084,
            47099,
            47460,
            47171,
            47051,
            47088,
            47078,
            47060,
            47079,
            47046,
            47043,
            47052,
            47240,
            47186,
            46966,
            47046,
            47070,
            46771,
            47150,
            47230,
            47117,
            47283,
            47114,
            47505
          ],
          [
            47917,
            47024,
            46952,
            47025,
            47039,
            47009,
            46635,
            47148,
            47119,
            47163,
            47092,
            47030,
            47193,
            47162,
            47235,
            47142,
            47247,
            47192,
            47173,
            47038,
            47585,
            47076,
            47143,
            47132,
            47021,
            47138,
            47081,
            46983,
            47371,
            47145,
            46972,
            46789,
            47083,
            47071,
            47078,
            47203,
            47250,
            47259,
            47039,
            47084,
            47099,
            47460,
            47171,
            47051,
            47088,
            47078,
            47060,
            47079,
            47046,
            47043,
            47052,
            47240,
            47186,
            46966,
            47046,
            47070,
            46771,
            47150,
            47230,
            47117,
            47283,
            47114,
            47505
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            408,
            2213,
            6997,
            15661,
            27865,
            38027,
            34411,
            21215,
            8862,
            2108,
            376,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            666,
            4400,
            14391,
            25359,
            35283,
            39374,
            33578,
            19719,
            7176,
            1583,
            189,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            249,
            1629,
            5009,
            10966,
            21965,
            34831,
            41273,
            35620,
            22119,
            8941,
            2032,
            203,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            156,
            1262,
            6797,
            16154,
            28592,
            40405,
            39764,
            28851,
            11674,
            2333,
            273,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34
          ],
          [
            12171,
            3341,
            297,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            115,
            1477,
            7551,
            19049,
            32311,
            38763,
            30736,
            15554,
            5035,
            858,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            121,
            1583,
            8770,
            18557,
            29306,
            38455,
            34345,
            21930,
            8012,
            1222,
            94,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            105,
            975,
            4756,
            13129,
            26179,
            38788,
            42558,
            34461,
            22208,
            8477,
            1725,
            204,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            107,
            1275,
            6787,
            17031,
            27359,
            37909,
            35874,
            22606,
            8903,
            2131,
            164,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            239,
            2095,
            6620,
            15848,
            25721,
            35953,
            40635,
            35301,
            21634,
            9533,
            2250,
            416,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            268,
            2964,
            10227,
            20517,
            31967,
            40241,
            42347,
            36553,
            23056,
            9413,
            1980,
            285,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2690062570000009,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001455903002351988,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29189865900116274,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1716819849971216,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40046716, 10011679), (411342, 411342), (40046490, 10011623))\nassert ((40046716 > 0 and 10011679 == 0\n  +10011679\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff6e458100>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff6e2a5040>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff6e56e430>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40046716, 10011679), (411342, 411342), (40046490, 10011623))\nE       assert ((40046716 > 0 and 10011679 == 0\nE         +10011679\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005050042997027049,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}