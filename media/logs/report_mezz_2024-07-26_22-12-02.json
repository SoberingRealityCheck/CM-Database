{
  "created": 1722031941.6243975,
  "duration": 23.215827703475952,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5095702940016054,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14889045800009626,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013550399999076035,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003834266000922071,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14859522200276842,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012903889983135741,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13422223199813743,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12192363999929512,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00127304799752892,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038349259993992746,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12133331700169947,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012836389978474472,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003362744999321876,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1469975069994689,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012397479986248072,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003362445000675507,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12018477099991287,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011899470009666402,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003359505000844365,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14650549599900842,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001208066998515278,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003405076000490226,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12023346099886112,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012202469988551456,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004401817997859325,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002146097998775076,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011725459989975207,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003359323996846797,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001714927999273641,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011255650024395436,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003337124002428027,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040350300005229656,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031924.1953673,
            "msecs": 195.36733627319336,
            "relativeCreated": 7760.409593582153,
            "thread": 281473857196064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4473
          }
        ]
      },
      "teardown": {
        "duration": 0.00122957699932158,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003335563997097779,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002392613001575228,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031924.207689,
            "msecs": 207.6890468597412,
            "relativeCreated": 7772.731304168701,
            "thread": 281473857196064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4473
          }
        ]
      },
      "teardown": {
        "duration": 0.0012321869980951305,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002091196998662781,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027156599971931428,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031924.2172177,
            "msecs": 217.21768379211426,
            "relativeCreated": 7782.259941101074,
            "thread": 281473857196064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4473
          }
        ]
      },
      "teardown": {
        "duration": 0.0010682930005714297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020812660004594363,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034385269973427057,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031924.2267253,
            "msecs": 226.72533988952637,
            "relativeCreated": 7791.767597198486,
            "thread": 281473857196064,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4473
          }
        ]
      },
      "teardown": {
        "duration": 0.001130125001509441,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033571950007171836,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14687876400057576,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012045559997204691,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003354283999215113,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12043110599915963,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012279269976716023,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17952863900063676,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479116869995778,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012700480001512915,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01522632899650489,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12134756600062246,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012707089990726672,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8346298979995481,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            17,
            1,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            88,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            25,
            138,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035473689968057442,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002913455002271803,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9061801269999705,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            11,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            12
          ],
          [
            252,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            27,
            255,
            255,
            255,
            10
          ],
          [
            14,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            84,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            110,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            124,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            229,
            255,
            255,
            255,
            255,
            0,
            0,
            175,
            0,
            110,
            255
          ],
          [
            255,
            0,
            200,
            0,
            255,
            0,
            223,
            69,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035073479994025547,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029238949973660056,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3024588609987404,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48301,
            47360,
            47363,
            47421,
            47579,
            47368,
            47498,
            47355,
            47482,
            47381,
            47451,
            47413,
            47429,
            47324,
            47563,
            47355,
            47549,
            47088,
            47200,
            47427,
            47405,
            47370,
            47523,
            47437,
            47540,
            47390,
            47491,
            47449,
            49586,
            47405,
            47763,
            47455,
            49572,
            47452,
            47403,
            47534,
            47370,
            47452,
            47379,
            47561,
            47388,
            47412,
            47333,
            47443,
            47388,
            47450,
            47365,
            47374,
            47340,
            47351,
            47388,
            47506,
            47295,
            47445,
            47383,
            47339,
            47537,
            47384,
            47367,
            47335,
            47459,
            47556,
            47445
          ],
          [
            48301,
            47360,
            47363,
            47421,
            47579,
            47368,
            47498,
            47355,
            47482,
            47381,
            47451,
            47413,
            47429,
            47324,
            47563,
            47355,
            47549,
            47088,
            47200,
            47427,
            47405,
            47370,
            47523,
            47437,
            47540,
            47390,
            47491,
            47449,
            49586,
            47405,
            47763,
            47455,
            49572,
            47452,
            47403,
            47534,
            47370,
            47452,
            47379,
            47561,
            47388,
            47412,
            47333,
            47443,
            47388,
            47450,
            47365,
            47374,
            47340,
            47351,
            47388,
            47506,
            47295,
            47445,
            47383,
            47339,
            47537,
            47384,
            47367,
            47335,
            47459,
            47556,
            47445
          ]
        ],
        "eTX_errcounts": [
          [
            40495,
            26459,
            8222,
            1251,
            84,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            187,
            3123,
            16100,
            33990,
            41891,
            32319,
            14428,
            2146,
            119,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            64,
            675,
            6987,
            24923,
            39928,
            37244,
            19554,
            5616,
            628,
            28,
            0,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            399,
            4036,
            17157,
            35823,
            42179,
            31790,
            13799,
            2958,
            341,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            370,
            3990,
            18371,
            35777,
            42726,
            35655,
            16918,
            3375,
            392,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13369509100084542,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001607015001354739,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907371499983128,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47840,
            47303,
            47338,
            47746,
            47213,
            47242,
            47194,
            47394,
            46957,
            47471,
            47367,
            47290,
            47370,
            47617,
            49140,
            47623,
            47212,
            47158,
            47402,
            47205,
            47273,
            47203,
            47169,
            47419,
            47091,
            47256,
            47187,
            47309,
            47311,
            47576,
            47185,
            47139,
            47346,
            47310,
            47616,
            47296,
            47328,
            47404,
            47441,
            47326,
            47214,
            47267,
            47380,
            47433,
            47319,
            47363,
            47337,
            47426,
            47302,
            47452,
            47247,
            47270,
            47330,
            47757,
            47259,
            47453,
            47196,
            47022,
            47385,
            47218,
            47201,
            47288,
            47293
          ],
          [
            47840,
            47303,
            47338,
            47746,
            47213,
            47242,
            47194,
            47394,
            46957,
            47471,
            47367,
            47290,
            47370,
            47617,
            49140,
            47623,
            47212,
            47158,
            47402,
            47205,
            47273,
            47203,
            47169,
            47419,
            47091,
            47256,
            47187,
            47309,
            47311,
            47576,
            47185,
            47139,
            47346,
            47310,
            47616,
            47296,
            47328,
            47404,
            47441,
            47326,
            47214,
            47267,
            47380,
            47433,
            47319,
            47363,
            47337,
            47426,
            47302,
            47452,
            47247,
            47270,
            47330,
            47757,
            47259,
            47453,
            47196,
            47022,
            47385,
            47218,
            47201,
            47288,
            47293
          ],
          [
            47840,
            47303,
            47338,
            47746,
            47213,
            47242,
            47194,
            47394,
            46957,
            47471,
            47367,
            47290,
            47370,
            47617,
            49140,
            47623,
            47212,
            47158,
            47402,
            47205,
            47273,
            47203,
            47169,
            47419,
            47091,
            47256,
            47187,
            47309,
            47311,
            47576,
            47185,
            47139,
            47346,
            47310,
            47616,
            47296,
            47328,
            47404,
            47441,
            47326,
            47214,
            47267,
            47380,
            47433,
            47319,
            47363,
            47337,
            47426,
            47302,
            47452,
            47247,
            47270,
            47330,
            47757,
            47259,
            47453,
            47196,
            47022,
            47385,
            47218,
            47201,
            47288,
            47293
          ],
          [
            47840,
            47303,
            47338,
            47746,
            47213,
            47242,
            47194,
            47394,
            46957,
            47471,
            47367,
            47290,
            47370,
            47617,
            49140,
            47623,
            47212,
            47158,
            47402,
            47205,
            47273,
            47203,
            47169,
            47419,
            47091,
            47256,
            47187,
            47309,
            47311,
            47576,
            47185,
            47139,
            47346,
            47310,
            47616,
            47296,
            47328,
            47404,
            47441,
            47326,
            47214,
            47267,
            47380,
            47433,
            47319,
            47363,
            47337,
            47426,
            47302,
            47452,
            47247,
            47270,
            47330,
            47757,
            47259,
            47453,
            47196,
            47022,
            47385,
            47218,
            47201,
            47288,
            47293
          ],
          [
            47840,
            47303,
            47338,
            47746,
            47213,
            47242,
            47194,
            47394,
            46957,
            47471,
            47367,
            47290,
            47370,
            47617,
            49140,
            47623,
            47212,
            47158,
            47402,
            47205,
            47273,
            47203,
            47169,
            47419,
            47091,
            47256,
            47187,
            47309,
            47311,
            47576,
            47185,
            47139,
            47346,
            47310,
            47616,
            47296,
            47328,
            47404,
            47441,
            47326,
            47214,
            47267,
            47380,
            47433,
            47319,
            47363,
            47337,
            47426,
            47302,
            47452,
            47247,
            47270,
            47330,
            47757,
            47259,
            47453,
            47196,
            47022,
            47385,
            47218,
            47201,
            47288,
            47293
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            115,
            1265,
            5155,
            11986,
            23983,
            32086,
            31473,
            26105,
            19214,
            13011,
            7164,
            2325,
            522,
            42,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            146,
            1559,
            5815,
            13440,
            25236,
            33430,
            37009,
            31444,
            22402,
            13226,
            5671,
            1297,
            141,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            16,
            168,
            1189,
            4377,
            9856,
            20919,
            35341,
            39425,
            35443,
            26103,
            16172,
            9536,
            3936,
            809,
            87,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            176,
            1541,
            5985,
            14580,
            25958,
            31948,
            35426,
            36604,
            30242,
            18509,
            7795,
            1927,
            199,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            41,
            617,
            2252,
            5940,
            13406,
            26526
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            92,
            1090,
            4849,
            15177,
            30291,
            35313,
            32143,
            23977,
            13540,
            5995,
            1608,
            116,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            130,
            1290,
            6265,
            14754,
            28972,
            36002,
            33816,
            24483,
            13413,
            3712,
            518,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            361,
            2199,
            8563,
            19291,
            33429,
            37717,
            34371,
            26420,
            16964,
            7590,
            2096,
            268,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            487,
            2873,
            7921,
            16499,
            27493,
            36176,
            34634,
            26484,
            16125,
            7523,
            1996,
            220,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            9,
            183,
            1084,
            3391,
            7843,
            17619,
            32671,
            39486,
            37087,
            31300,
            23752,
            14398,
            8410,
            3463,
            623,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            103,
            985,
            4519,
            12403,
            25112,
            32133,
            35149,
            37481,
            33561,
            24830,
            15983,
            8277,
            2332,
            290,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            86,
            852,
            3074,
            7982
          ]
        ]
      },
      "call": {
        "duration": 0.27215107699885266,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa884b630>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa884b630> = array([21, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa88123d0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47840, 47303, 47338, 47746, 47213, 47242, ...], [47840, 47303, 47338, 47746, 47213, 47242, ...], [..., ...], [0, 0, 16, 168, 1189, 4377, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 9, 183, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa884b630>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa884b630> = array([21, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001613496002391912,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926839840001776,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168949826998869,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014606730001105461,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2930261229994358,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            22,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            227,
            58,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003533568000420928,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002957585998956347,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5355031389990472,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            222,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            13,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            113,
            255,
            146,
            255,
            154,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            210,
            0,
            146,
            1,
            255,
            40,
            255,
            5
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            65,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            7,
            255,
            220,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            194,
            255,
            133,
            255,
            255,
            8,
            0,
            168,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            98,
            255,
            88
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035005979989364278,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002933855001174379,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2957927720017324,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48076,
            47361,
            47378,
            47119,
            47139,
            47578,
            47466,
            47496,
            47386,
            47442,
            47444,
            47379,
            47485,
            47623,
            47681,
            47482,
            47763,
            47530,
            49698,
            47457,
            47364,
            47432,
            47366,
            47414,
            47319,
            47493,
            47367,
            47598,
            47333,
            47314,
            47325,
            47452,
            47374,
            47510,
            47374,
            47372,
            47337,
            47495,
            47321,
            47426,
            47467,
            47288,
            47424,
            47515,
            47344,
            47317,
            47350,
            47388,
            47446,
            47431,
            47402,
            49232,
            47383,
            47686,
            47310,
            52335,
            47405,
            47422,
            47582,
            47278,
            47437,
            47394,
            47287
          ],
          [
            48076,
            47361,
            47378,
            47119,
            47139,
            47578,
            47466,
            47496,
            47386,
            47442,
            47444,
            47379,
            47485,
            47623,
            47681,
            47482,
            47763,
            47530,
            49698,
            47457,
            47364,
            47432,
            47366,
            47414,
            47319,
            47493,
            47367,
            47598,
            47333,
            47314,
            47325,
            47452,
            47374,
            47510,
            47374,
            47372,
            47337,
            47495,
            47321,
            47426,
            47467,
            47288,
            47424,
            47515,
            47344,
            47317,
            47350,
            47388,
            47446,
            47431,
            47402,
            49232,
            47383,
            47686,
            47310,
            52335,
            47405,
            47422,
            47582,
            47278,
            47437,
            47394,
            47287
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            245,
            3982,
            18092,
            36143,
            36307,
            18703,
            4145,
            431,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            209,
            2520,
            16907,
            35085,
            40267,
            25560,
            8144,
            1075,
            56,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            897,
            8889,
            28496,
            41676,
            38611,
            19316,
            4529,
            394,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            136,
            2207,
            13703,
            31267,
            42713,
            38117,
            20069,
            5658,
            645,
            46,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13346336600079667,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016199459969357122,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06886194099934073,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47758,
            46987,
            47170,
            47425,
            47371,
            47246,
            47486,
            47173,
            47357,
            47585,
            47390,
            47260,
            47582,
            47440,
            47438,
            47488,
            47366,
            47241,
            47231,
            47305,
            47127,
            47414,
            47116,
            47316,
            47393,
            47209,
            46928,
            47349,
            47506,
            47256,
            47301,
            47252,
            47458,
            49229,
            49106,
            47209,
            47476,
            47240,
            47366,
            47400,
            47277,
            47184,
            47311,
            47206,
            47365,
            47353,
            47128,
            47268,
            47529,
            47267,
            47257,
            47085,
            47377,
            47549,
            47566,
            47185,
            47282,
            47337,
            47140,
            47177,
            47543,
            47201,
            47216
          ],
          [
            47758,
            46987,
            47170,
            47425,
            47371,
            47246,
            47486,
            47173,
            47357,
            47585,
            47390,
            47260,
            47582,
            47440,
            47438,
            47488,
            47366,
            47241,
            47231,
            47305,
            47127,
            47414,
            47116,
            47316,
            47393,
            47209,
            46928,
            47349,
            47506,
            47256,
            47301,
            47252,
            47458,
            49229,
            49106,
            47209,
            47476,
            47240,
            47366,
            47400,
            47277,
            47184,
            47311,
            47206,
            47365,
            47353,
            47128,
            47268,
            47529,
            47267,
            47257,
            47085,
            47377,
            47549,
            47566,
            47185,
            47282,
            47337,
            47140,
            47177,
            47543,
            47201,
            47216
          ],
          [
            47758,
            46987,
            47170,
            47425,
            47371,
            47246,
            47486,
            47173,
            47357,
            47585,
            47390,
            47260,
            47582,
            47440,
            47438,
            47488,
            47366,
            47241,
            47231,
            47305,
            47127,
            47414,
            47116,
            47316,
            47393,
            47209,
            46928,
            47349,
            47506,
            47256,
            47301,
            47252,
            47458,
            49229,
            49106,
            47209,
            47476,
            47240,
            47366,
            47400,
            47277,
            47184,
            47311,
            47206,
            47365,
            47353,
            47128,
            47268,
            47529,
            47267,
            47257,
            47085,
            47377,
            47549,
            47566,
            47185,
            47282,
            47337,
            47140,
            47177,
            47543,
            47201,
            47216
          ],
          [
            47758,
            46987,
            47170,
            47425,
            47371,
            47246,
            47486,
            47173,
            47357,
            47585,
            47390,
            47260,
            47582,
            47440,
            47438,
            47488,
            47366,
            47241,
            47231,
            47305,
            47127,
            47414,
            47116,
            47316,
            47393,
            47209,
            46928,
            47349,
            47506,
            47256,
            47301,
            47252,
            47458,
            49229,
            49106,
            47209,
            47476,
            47240,
            47366,
            47400,
            47277,
            47184,
            47311,
            47206,
            47365,
            47353,
            47128,
            47268,
            47529,
            47267,
            47257,
            47085,
            47377,
            47549,
            47566,
            47185,
            47282,
            47337,
            47140,
            47177,
            47543,
            47201,
            47216
          ],
          [
            47758,
            46987,
            47170,
            47425,
            47371,
            47246,
            47486,
            47173,
            47357,
            47585,
            47390,
            47260,
            47582,
            47440,
            47438,
            47488,
            47366,
            47241,
            47231,
            47305,
            47127,
            47414,
            47116,
            47316,
            47393,
            47209,
            46928,
            47349,
            47506,
            47256,
            47301,
            47252,
            47458,
            49229,
            49106,
            47209,
            47476,
            47240,
            47366,
            47400,
            47277,
            47184,
            47311,
            47206,
            47365,
            47353,
            47128,
            47268,
            47529,
            47267,
            47257,
            47085,
            47377,
            47549,
            47566,
            47185,
            47282,
            47337,
            47140,
            47177,
            47543,
            47201,
            47216
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            42,
            570,
            3369,
            13121,
            25800,
            34155,
            35096,
            24879,
            11325,
            2656,
            259,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            49,
            602,
            3907,
            14514,
            27165,
            35044,
            37392,
            29676,
            18528,
            7299,
            1824,
            144,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16
          ],
          [
            0,
            6,
            214,
            1555,
            6558,
            17896,
            32648,
            39031,
            34306,
            19067,
            6001,
            926,
            36,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            128,
            1931,
            10303,
            24003,
            37511,
            44009,
            40749,
            31445,
            17604,
            4563,
            420,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            358,
            2232,
            7720,
            18948,
            32469,
            38020
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            446,
            3844,
            15983,
            30400,
            36333,
            32677,
            18497,
            6800,
            1138,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            78,
            1017,
            7849,
            21267,
            37107,
            41376,
            35662,
            22453,
            9859,
            2072,
            176,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            88,
            1112,
            6386,
            19852,
            34636,
            39096,
            33966,
            20576,
            8069,
            1622,
            73,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            288,
            2980,
            12325,
            24574,
            33821,
            38582,
            35850,
            26258,
            12781,
            3084,
            265,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            13,
            202,
            2059,
            8567,
            20925,
            32632,
            39393,
            35838,
            24417,
            11915,
            3086,
            428,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            606,
            3925,
            15216,
            27739,
            35424,
            41005,
            38039,
            27589,
            13357,
            3701,
            426,
            37,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            75,
            1016,
            5886,
            17009,
            31832
          ]
        ]
      },
      "call": {
        "duration": 0.2699184579978464,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014900140013196506,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2914081150011043,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1687764529997366,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014626519987359643,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3688238870017813,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            117,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035715189987968188,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028663229968515225,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5352376340015326,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            3,
            255,
            6,
            255,
            0,
            81,
            0,
            255,
            0,
            255,
            255
          ],
          [
            62,
            0,
            9,
            0,
            4,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            52,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            195,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            26,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            5,
            255,
            56,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            1,
            255,
            2,
            255,
            4,
            5,
            0,
            255,
            1,
            255,
            255
          ],
          [
            66,
            0,
            3,
            0,
            5,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            92,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            81,
            0,
            11,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            107,
            255,
            54,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003484697997919284,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002875443999073468,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29622478199962643,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47893,
            47504,
            47589,
            47534,
            47345,
            47397,
            47516,
            47565,
            47661,
            47483,
            47145,
            47278,
            47881,
            47520,
            47804,
            47577,
            47306,
            47446,
            47569,
            47695,
            47591,
            49364,
            47521,
            47511,
            47539,
            47545,
            47616,
            47550,
            47413,
            47272,
            47650,
            47457,
            47648,
            47466,
            47705,
            47555,
            47605,
            47331,
            47592,
            47472,
            47487,
            47542,
            47695,
            47577,
            47737,
            47752,
            47501,
            47272,
            47558,
            47407,
            47782,
            47644,
            47626,
            47415,
            47711,
            47441,
            47493,
            47435,
            47393,
            47399,
            47151,
            47052,
            47594
          ],
          [
            47893,
            47504,
            47589,
            47534,
            47345,
            47397,
            47516,
            47565,
            47661,
            47483,
            47145,
            47278,
            47881,
            47520,
            47804,
            47577,
            47306,
            47446,
            47569,
            47695,
            47591,
            49364,
            47521,
            47511,
            47539,
            47545,
            47616,
            47550,
            47413,
            47272,
            47650,
            47457,
            47648,
            47466,
            47705,
            47555,
            47605,
            47331,
            47592,
            47472,
            47487,
            47542,
            47695,
            47577,
            47737,
            47752,
            47501,
            47272,
            47558,
            47407,
            47782,
            47644,
            47626,
            47415,
            47711,
            47441,
            47493,
            47435,
            47393,
            47399,
            47151,
            47052,
            47594
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            507,
            7332,
            24351,
            39558,
            34609,
            15261,
            3260,
            224,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            64,
            520,
            5869,
            21111,
            38126,
            38872,
            22199,
            5305,
            733,
            51,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            12,
            118,
            2035,
            13767,
            32578,
            40840,
            29589,
            9453,
            1647,
            152,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            735,
            5313,
            20920,
            37868,
            41563,
            31100,
            12510,
            1992,
            175,
            21,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            685,
            7515,
            25042,
            39420,
            43301
          ]
        ]
      },
      "call": {
        "duration": 0.13418623200050206,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016042259994719643,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06928578999941237,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48192,
            47619,
            47230,
            47242,
            46997,
            47392,
            47227,
            47274,
            47308,
            47547,
            47390,
            47271,
            47336,
            47351,
            47448,
            47411,
            47238,
            47340,
            47705,
            47656,
            47241,
            47226,
            47093,
            47263,
            47370,
            47347,
            47153,
            47270,
            47235,
            47070,
            47380,
            47204,
            47211,
            47439,
            47340,
            47350,
            47618,
            47330,
            47265,
            47473,
            47310,
            47196,
            47313,
            47429,
            47413,
            47466,
            47189,
            47314,
            47300,
            47424,
            47384,
            47354,
            47249,
            47264,
            47449,
            47505,
            47034,
            47193,
            47304,
            47379,
            47245,
            46741,
            47292
          ],
          [
            48192,
            47619,
            47230,
            47242,
            46997,
            47392,
            47227,
            47274,
            47308,
            47547,
            47390,
            47271,
            47336,
            47351,
            47448,
            47411,
            47238,
            47340,
            47705,
            47656,
            47241,
            47226,
            47093,
            47263,
            47370,
            47347,
            47153,
            47270,
            47235,
            47070,
            47380,
            47204,
            47211,
            47439,
            47340,
            47350,
            47618,
            47330,
            47265,
            47473,
            47310,
            47196,
            47313,
            47429,
            47413,
            47466,
            47189,
            47314,
            47300,
            47424,
            47384,
            47354,
            47249,
            47264,
            47449,
            47505,
            47034,
            47193,
            47304,
            47379,
            47245,
            46741,
            47292
          ],
          [
            48192,
            47619,
            47230,
            47242,
            46997,
            47392,
            47227,
            47274,
            47308,
            47547,
            47390,
            47271,
            47336,
            47351,
            47448,
            47411,
            47238,
            47340,
            47705,
            47656,
            47241,
            47226,
            47093,
            47263,
            47370,
            47347,
            47153,
            47270,
            47235,
            47070,
            47380,
            47204,
            47211,
            47439,
            47340,
            47350,
            47618,
            47330,
            47265,
            47473,
            47310,
            47196,
            47313,
            47429,
            47413,
            47466,
            47189,
            47314,
            47300,
            47424,
            47384,
            47354,
            47249,
            47264,
            47449,
            47505,
            47034,
            47193,
            47304,
            47379,
            47245,
            46741,
            47292
          ],
          [
            48192,
            47619,
            47230,
            47242,
            46997,
            47392,
            47227,
            47274,
            47308,
            47547,
            47390,
            47271,
            47336,
            47351,
            47448,
            47411,
            47238,
            47340,
            47705,
            47656,
            47241,
            47226,
            47093,
            47263,
            47370,
            47347,
            47153,
            47270,
            47235,
            47070,
            47380,
            47204,
            47211,
            47439,
            47340,
            47350,
            47618,
            47330,
            47265,
            47473,
            47310,
            47196,
            47313,
            47429,
            47413,
            47466,
            47189,
            47314,
            47300,
            47424,
            47384,
            47354,
            47249,
            47264,
            47449,
            47505,
            47034,
            47193,
            47304,
            47379,
            47245,
            46741,
            47292
          ],
          [
            48192,
            47619,
            47230,
            47242,
            46997,
            47392,
            47227,
            47274,
            47308,
            47547,
            47390,
            47271,
            47336,
            47351,
            47448,
            47411,
            47238,
            47340,
            47705,
            47656,
            47241,
            47226,
            47093,
            47263,
            47370,
            47347,
            47153,
            47270,
            47235,
            47070,
            47380,
            47204,
            47211,
            47439,
            47340,
            47350,
            47618,
            47330,
            47265,
            47473,
            47310,
            47196,
            47313,
            47429,
            47413,
            47466,
            47189,
            47314,
            47300,
            47424,
            47384,
            47354,
            47249,
            47264,
            47449,
            47505,
            47034,
            47193,
            47304,
            47379,
            47245,
            46741,
            47292
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            79,
            1144,
            6788,
            19073,
            29483,
            33889,
            32854,
            24384,
            14678,
            6342,
            1331,
            128,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            569,
            3445,
            10811,
            21601,
            31506,
            35258,
            30923,
            20404,
            10358,
            4295,
            831,
            62,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            823,
            4575,
            15456,
            26098,
            34030,
            38463,
            37239,
            26618,
            13617,
            4571,
            737,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            142,
            1430,
            5211,
            14684,
            26992,
            34871,
            34628,
            26168,
            13137,
            4398,
            842,
            80,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            14584,
            5473,
            907,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            189,
            2186,
            10985,
            23696,
            35139,
            39486,
            32441,
            19704,
            8272,
            1818,
            128,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            439,
            4237,
            14252,
            27993,
            37935,
            35409,
            23878,
            10092,
            2173,
            287,
            13,
            0,
            0,
            0,
            0
          ],
          [
            40,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            83,
            1125,
            7493,
            19497,
            30734,
            38578,
            39352,
            33494,
            23910,
            12544,
            3785,
            411,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            68,
            592,
            3104,
            12366,
            25024,
            35472,
            34175,
            23040,
            11380,
            4181,
            1003,
            85,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            71,
            1161,
            5724,
            17812,
            28419,
            36687,
            39153,
            35198,
            24267,
            13600,
            3760,
            493,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            196,
            1454,
            6366,
            16908,
            29443,
            38696,
            40054,
            33233,
            22703,
            12979,
            6141,
            1814,
            139,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27143760200124234,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001473722997616278,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29185116599910543,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168991377999191,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004799387003004085,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}