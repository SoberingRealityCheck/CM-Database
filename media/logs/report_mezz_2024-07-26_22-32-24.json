{
  "created": 1722033163.9019525,
  "duration": 23.257684230804443,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5071034359971236,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14835713900174596,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013212590019975323,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037889039995206986,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1481876950019796,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012720279992208816,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1325491579991649,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1217574969996349,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012809090003429446,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00376586399943335,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12118559399823425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012946789975103457,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033508640008221846,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14684846499949344,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001171616000647191,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033407549999537878,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12022977300148341,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001188926999020623,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003355125001689885,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14658101000168244,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011658260009426158,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033083529997384176,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12033123500077636,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011496859988255892,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0043923080011154525,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00212902799830772,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011017439974239096,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003309552997961873,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017267180010094307,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011296150005364325,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003295603000879055,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004045199999382021,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033146.4657087,
            "msecs": 465.70873260498047,
            "relativeCreated": 7797.720193862915,
            "thread": 281473336041504,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5059
          }
        ]
      },
      "teardown": {
        "duration": 0.0012599379988387227,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033719849998306017,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024692349979886785,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033146.4780307,
            "msecs": 478.0306816101074,
            "relativeCreated": 7810.042142868042,
            "thread": 281473336041504,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5059
          }
        ]
      },
      "teardown": {
        "duration": 0.0011550560011528432,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020546849991660565,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027408610003476497,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033146.4875906,
            "msecs": 487.5905513763428,
            "relativeCreated": 7819.602012634277,
            "thread": 281473336041504,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5059
          }
        ]
      },
      "teardown": {
        "duration": 0.0010805339989019558,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020953669991286006,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034645669984456617,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033146.4970412,
            "msecs": 497.0412254333496,
            "relativeCreated": 7829.052686691284,
            "thread": 281473336041504,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5059
          }
        ]
      },
      "teardown": {
        "duration": 0.001065923999703955,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003347264999320032,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14700056899891933,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011936070004594512,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003311264001240488,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12072613399868715,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011591350012167823,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.18204959799913922,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.148199666000437,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012640480017580558,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015145086999837076,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12159699400217505,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001287988998228684,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8465242900019803,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            4,
            15,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            69,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            10,
            87,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035805200022878125,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002903823999076849,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9086539649979386,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            231,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            225,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            34,
            255,
            255,
            255,
            18
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            63,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            95,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            132,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            142,
            0,
            91,
            255
          ],
          [
            255,
            0,
            223,
            0,
            255,
            0,
            226,
            86,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003500087997963419,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002902743999584345,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3028521739979624,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48596,
            47606,
            47771,
            47492,
            47511,
            47477,
            47616,
            47524,
            47834,
            47547,
            47718,
            47811,
            47672,
            47882,
            47857,
            47671,
            47662,
            47660,
            47621,
            47752,
            47710,
            47664,
            47695,
            47556,
            49594,
            47621,
            48068,
            47711,
            49900,
            47541,
            47872,
            47827,
            47798,
            47716,
            47751,
            47685,
            47548,
            47633,
            47333,
            47418,
            47489,
            47520,
            47610,
            47663,
            47615,
            47768,
            47578,
            47613,
            47626,
            47534,
            47803,
            47778,
            47738,
            47807,
            47765,
            47689,
            47622,
            47564,
            47653,
            49214,
            47652,
            48100,
            47624
          ],
          [
            48596,
            47606,
            47771,
            47492,
            47511,
            47477,
            47616,
            47524,
            47834,
            47547,
            47718,
            47811,
            47672,
            47882,
            47857,
            47671,
            47662,
            47660,
            47621,
            47752,
            47710,
            47664,
            47695,
            47556,
            49594,
            47621,
            48068,
            47711,
            49900,
            47541,
            47872,
            47827,
            47798,
            47716,
            47751,
            47685,
            47548,
            47633,
            47333,
            47418,
            47489,
            47520,
            47610,
            47663,
            47615,
            47768,
            47578,
            47613,
            47626,
            47534,
            47803,
            47778,
            47738,
            47807,
            47765,
            47689,
            47622,
            47564,
            47653,
            49214,
            47652,
            48100,
            47624
          ]
        ],
        "eTX_errcounts": [
          [
            40875,
            26223,
            7831,
            1166,
            71,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            235,
            3532,
            16484,
            35254,
            42874,
            32898,
            14436,
            2265,
            177,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            1156,
            7797,
            26291,
            40650,
            37290,
            19000,
            4990,
            507,
            81,
            2,
            0,
            0
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            338,
            4359,
            17722,
            36121,
            42517,
            31702,
            13792,
            2807,
            328,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            376,
            4357,
            19449,
            36578,
            42961,
            35327,
            17184,
            3073,
            328,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13385223599834717,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016245360020548105,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06898965399886947,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48190,
            47551,
            47616,
            47720,
            47605,
            47354,
            47550,
            47701,
            47436,
            47502,
            47564,
            47689,
            49305,
            48969,
            47496,
            47779,
            47494,
            47499,
            47159,
            47699,
            47400,
            47573,
            47334,
            47627,
            47510,
            47502,
            47582,
            47866,
            47403,
            47581,
            49356,
            49358,
            47500,
            47396,
            47355,
            47595,
            47472,
            47492,
            47492,
            47604,
            47372,
            47584,
            47472,
            47352,
            47479,
            47604,
            47543,
            47647,
            49261,
            49044,
            47447,
            47610,
            47569,
            47522,
            47426,
            47587,
            47501,
            47556,
            47520,
            47625,
            47402,
            47627,
            47610
          ],
          [
            48190,
            47551,
            47616,
            47720,
            47605,
            47354,
            47550,
            47701,
            47436,
            47502,
            47564,
            47689,
            49305,
            48969,
            47496,
            47779,
            47494,
            47499,
            47159,
            47699,
            47400,
            47573,
            47334,
            47627,
            47510,
            47502,
            47582,
            47866,
            47403,
            47581,
            49356,
            49358,
            47500,
            47396,
            47355,
            47595,
            47472,
            47492,
            47492,
            47604,
            47372,
            47584,
            47472,
            47352,
            47479,
            47604,
            47543,
            47647,
            49261,
            49044,
            47447,
            47610,
            47569,
            47522,
            47426,
            47587,
            47501,
            47556,
            47520,
            47625,
            47402,
            47627,
            47610
          ],
          [
            48190,
            47551,
            47616,
            47720,
            47605,
            47354,
            47550,
            47701,
            47436,
            47502,
            47564,
            47689,
            49305,
            48969,
            47496,
            47779,
            47494,
            47499,
            47159,
            47699,
            47400,
            47573,
            47334,
            47627,
            47510,
            47502,
            47582,
            47866,
            47403,
            47581,
            49356,
            49358,
            47500,
            47396,
            47355,
            47595,
            47472,
            47492,
            47492,
            47604,
            47372,
            47584,
            47472,
            47352,
            47479,
            47604,
            47543,
            47647,
            49261,
            49044,
            47447,
            47610,
            47569,
            47522,
            47426,
            47587,
            47501,
            47556,
            47520,
            47625,
            47402,
            47627,
            47610
          ],
          [
            48190,
            47551,
            47616,
            47720,
            47605,
            47354,
            47550,
            47701,
            47436,
            47502,
            47564,
            47689,
            49305,
            48969,
            47496,
            47779,
            47494,
            47499,
            47159,
            47699,
            47400,
            47573,
            47334,
            47627,
            47510,
            47502,
            47582,
            47866,
            47403,
            47581,
            49356,
            49358,
            47500,
            47396,
            47355,
            47595,
            47472,
            47492,
            47492,
            47604,
            47372,
            47584,
            47472,
            47352,
            47479,
            47604,
            47543,
            47647,
            49261,
            49044,
            47447,
            47610,
            47569,
            47522,
            47426,
            47587,
            47501,
            47556,
            47520,
            47625,
            47402,
            47627,
            47610
          ],
          [
            48190,
            47551,
            47616,
            47720,
            47605,
            47354,
            47550,
            47701,
            47436,
            47502,
            47564,
            47689,
            49305,
            48969,
            47496,
            47779,
            47494,
            47499,
            47159,
            47699,
            47400,
            47573,
            47334,
            47627,
            47510,
            47502,
            47582,
            47866,
            47403,
            47581,
            49356,
            49358,
            47500,
            47396,
            47355,
            47595,
            47472,
            47492,
            47492,
            47604,
            47372,
            47584,
            47472,
            47352,
            47479,
            47604,
            47543,
            47647,
            49261,
            49044,
            47447,
            47610,
            47569,
            47522,
            47426,
            47587,
            47501,
            47556,
            47520,
            47625,
            47402,
            47627,
            47610
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            31,
            552,
            2697,
            10350,
            22587,
            33978,
            36453,
            31506,
            21016,
            9512,
            2515,
            420,
            42,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            826,
            4189,
            12819,
            24086,
            32286,
            35471,
            31426,
            22451,
            12057,
            4217,
            909,
            102,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            19,
            237,
            1402,
            4439,
            10116,
            23125,
            36148,
            39597,
            35123,
            25708,
            16728,
            8861,
            3282,
            556,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            15,
            149,
            1479,
            5874,
            15189,
            27736,
            32382,
            35195,
            35962,
            28057,
            17088,
            6423,
            1452,
            126,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            2,
            69,
            619,
            2308,
            5896,
            14406,
            27789
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            107,
            1196,
            5561,
            15894,
            30893,
            35240,
            32309,
            23288,
            12799,
            5499,
            1116,
            64,
            7,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            122,
            1253,
            6508,
            16088,
            29522,
            36470,
            34594,
            23928,
            11922,
            3012,
            431,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            358,
            2527,
            8871,
            20617,
            34533,
            38136,
            34291,
            26452,
            15979,
            6864,
            1614,
            152,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            57,
            641,
            3485,
            8495,
            16975,
            28158,
            36645,
            34190,
            25839,
            15599,
            6754,
            1667,
            127,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            10,
            228,
            1283,
            3801,
            7822,
            19103,
            34124,
            39671,
            38524,
            31608,
            22578,
            13967,
            7871,
            2770,
            444,
            48,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            134,
            1143,
            5054,
            12239,
            25115,
            33115,
            36035,
            37824,
            32540,
            23840,
            14825,
            7076,
            1713,
            128,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            12,
            110,
            871,
            3409,
            8727
          ]
        ]
      },
      "call": {
        "duration": 0.2729656889969192,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff89735870>()\n +    where <built-in method all of numpy.ndarray object at 0xffff89735870> = array([21, 11, 19, 21, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff8970e580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48190, 47551, 47616, 47720, 47605, 47354, ...], [48190, 47551, 47616, 47720, 47605, 47354, ...], [... ...], [0, 1, 19, 237, 1402, 4439, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 10, 228, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff89735870>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff89735870> = array([21, 11, 19, 21, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016436759979114868,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2928842719993554,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170614986000146,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001461632000427926,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3011944230020163,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            212,
            71,
            8,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035305079982208554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002965775998745812,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5341000160005933,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            248,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            117,
            255,
            169,
            255,
            154,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            229,
            0,
            137,
            4,
            255,
            27,
            255,
            24
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            102,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            6,
            255,
            211,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            212,
            255,
            138,
            255,
            255,
            7,
            0,
            150,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            125,
            255,
            117
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034866169989982154,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00287556399780442,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959447610010102,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48659,
            48232,
            47919,
            47991,
            47758,
            47569,
            47676,
            47753,
            47894,
            47646,
            47716,
            47781,
            47859,
            47707,
            47707,
            47769,
            47734,
            47406,
            47382,
            47723,
            47855,
            47686,
            47546,
            47901,
            47812,
            47660,
            47697,
            47729,
            49803,
            47788,
            48007,
            47720,
            47772,
            47684,
            47644,
            47710,
            47571,
            47660,
            47511,
            47721,
            47523,
            47668,
            47513,
            47642,
            47772,
            47751,
            47727,
            47683,
            47711,
            47749,
            47716,
            47970,
            47644,
            47840,
            47755,
            47846,
            47727,
            49562,
            47629,
            47764,
            47591,
            49952,
            47679
          ],
          [
            48659,
            48232,
            47919,
            47991,
            47758,
            47569,
            47676,
            47753,
            47894,
            47646,
            47716,
            47781,
            47859,
            47707,
            47707,
            47769,
            47734,
            47406,
            47382,
            47723,
            47855,
            47686,
            47546,
            47901,
            47812,
            47660,
            47697,
            47729,
            49803,
            47788,
            48007,
            47720,
            47772,
            47684,
            47644,
            47710,
            47571,
            47660,
            47511,
            47721,
            47523,
            47668,
            47513,
            47642,
            47772,
            47751,
            47727,
            47683,
            47711,
            47749,
            47716,
            47970,
            47644,
            47840,
            47755,
            47846,
            47727,
            49562,
            47629,
            47764,
            47591,
            49952,
            47679
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            271,
            4178,
            18786,
            36577,
            35814,
            18508,
            4094,
            294,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            188,
            2797,
            16762,
            35824,
            39931,
            25720,
            8463,
            1157,
            82,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            1035,
            8654,
            29783,
            42716,
            38978,
            17816,
            4407,
            438,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            206,
            2805,
            14347,
            31816,
            42649,
            38998,
            19888,
            5393,
            490,
            55,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1343852580030216,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016222260019276291,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06930904099863255,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48320,
            47540,
            47409,
            47333,
            47465,
            47351,
            47375,
            47425,
            47181,
            47595,
            47449,
            47532,
            47888,
            49680,
            47419,
            47486,
            47507,
            47421,
            47294,
            47421,
            47428,
            47412,
            47544,
            47355,
            47528,
            47511,
            47568,
            47535,
            47520,
            47444,
            47471,
            45043,
            47512,
            47399,
            47287,
            47408,
            47291,
            47356,
            47522,
            47260,
            47478,
            47507,
            47388,
            47419,
            47563,
            47495,
            47438,
            47491,
            47441,
            47421,
            47856,
            47567,
            47469,
            47366,
            47399,
            47352,
            47395,
            47045,
            47509,
            47490,
            47439,
            47445,
            47475
          ],
          [
            48320,
            47540,
            47409,
            47333,
            47465,
            47351,
            47375,
            47425,
            47181,
            47595,
            47449,
            47532,
            47888,
            49680,
            47419,
            47486,
            47507,
            47421,
            47294,
            47421,
            47428,
            47412,
            47544,
            47355,
            47528,
            47511,
            47568,
            47535,
            47520,
            47444,
            47471,
            45043,
            47512,
            47399,
            47287,
            47408,
            47291,
            47356,
            47522,
            47260,
            47478,
            47507,
            47388,
            47419,
            47563,
            47495,
            47438,
            47491,
            47441,
            47421,
            47856,
            47567,
            47469,
            47366,
            47399,
            47352,
            47395,
            47045,
            47509,
            47490,
            47439,
            47445,
            47475
          ],
          [
            48320,
            47540,
            47409,
            47333,
            47465,
            47351,
            47375,
            47425,
            47181,
            47595,
            47449,
            47532,
            47888,
            49680,
            47419,
            47486,
            47507,
            47421,
            47294,
            47421,
            47428,
            47412,
            47544,
            47355,
            47528,
            47511,
            47568,
            47535,
            47520,
            47444,
            47471,
            45043,
            47512,
            47399,
            47287,
            47408,
            47291,
            47356,
            47522,
            47260,
            47478,
            47507,
            47388,
            47419,
            47563,
            47495,
            47438,
            47491,
            47441,
            47421,
            47856,
            47567,
            47469,
            47366,
            47399,
            47352,
            47395,
            47045,
            47509,
            47490,
            47439,
            47445,
            47475
          ],
          [
            48320,
            47540,
            47409,
            47333,
            47465,
            47351,
            47375,
            47425,
            47181,
            47595,
            47449,
            47532,
            47888,
            49680,
            47419,
            47486,
            47507,
            47421,
            47294,
            47421,
            47428,
            47412,
            47544,
            47355,
            47528,
            47511,
            47568,
            47535,
            47520,
            47444,
            47471,
            45043,
            47512,
            47399,
            47287,
            47408,
            47291,
            47356,
            47522,
            47260,
            47478,
            47507,
            47388,
            47419,
            47563,
            47495,
            47438,
            47491,
            47441,
            47421,
            47856,
            47567,
            47469,
            47366,
            47399,
            47352,
            47395,
            47045,
            47509,
            47490,
            47439,
            47445,
            47475
          ],
          [
            48320,
            47540,
            47409,
            47333,
            47465,
            47351,
            47375,
            47425,
            47181,
            47595,
            47449,
            47532,
            47888,
            49680,
            47419,
            47486,
            47507,
            47421,
            47294,
            47421,
            47428,
            47412,
            47544,
            47355,
            47528,
            47511,
            47568,
            47535,
            47520,
            47444,
            47471,
            45043,
            47512,
            47399,
            47287,
            47408,
            47291,
            47356,
            47522,
            47260,
            47478,
            47507,
            47388,
            47419,
            47563,
            47495,
            47438,
            47491,
            47441,
            47421,
            47856,
            47567,
            47469,
            47366,
            47399,
            47352,
            47395,
            47045,
            47509,
            47490,
            47439,
            47445,
            47475
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            341,
            2678,
            13218,
            26628,
            36075,
            33656,
            22757,
            10371,
            2825,
            434,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            40,
            934,
            4589,
            14738,
            26175,
            36185,
            39270,
            30391,
            17471,
            4300,
            622,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            1,
            9,
            183,
            1669,
            7246,
            19184,
            33558,
            38881,
            33076,
            18247,
            6162,
            1006,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            142,
            1939,
            10380,
            24891,
            36813,
            42232,
            40239,
            29799,
            16008,
            4806,
            634,
            12,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            441,
            2610,
            8441,
            20311,
            32361,
            37758
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            439,
            3817,
            16598,
            30713,
            36529,
            31865,
            17650,
            6503,
            1071,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            73,
            915,
            8212,
            21752,
            38064,
            41790,
            35103,
            21907,
            8708,
            1672,
            124,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            131,
            1218,
            6873,
            20479,
            34727,
            38918,
            33289,
            20266,
            8211,
            1433,
            111,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            251,
            2783,
            12494,
            25068,
            34326,
            38670,
            35242,
            25842,
            11516,
            3034,
            249,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            18,
            253,
            2325,
            9247,
            22096,
            33569,
            39784,
            35777,
            24300,
            11513,
            3213,
            383,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            637,
            4051,
            14822,
            27032,
            36321,
            40775,
            37813,
            27810,
            12750,
            3433,
            346,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            158,
            1058,
            6190,
            17052,
            32130
          ]
        ]
      },
      "call": {
        "duration": 0.2705143950006459,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014917830012564082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29196181199949933,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1701811460006866,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014351120007631835,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.337848908999149,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            126,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003554389000782976,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002957314998639049,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5356619710000814,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            10,
            255,
            0,
            54,
            0,
            255,
            0,
            255,
            255
          ],
          [
            93,
            0,
            20,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            26,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            222,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            5,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            49,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            3,
            5,
            0,
            255,
            5,
            255,
            255
          ],
          [
            73,
            0,
            4,
            0,
            10,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            80,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            106,
            0,
            8,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            91,
            255,
            47,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003487846999632893,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002889513998525217,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29624584700286505,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48240,
            48200,
            47710,
            47741,
            47590,
            47750,
            47599,
            47966,
            47628,
            47670,
            47779,
            47919,
            47798,
            48334,
            47784,
            48261,
            47746,
            47904,
            47710,
            47880,
            47788,
            47822,
            47647,
            47721,
            47724,
            47842,
            47751,
            47461,
            47721,
            47634,
            47728,
            47376,
            47420,
            47649,
            47741,
            47737,
            47848,
            47976,
            47732,
            47854,
            47681,
            47653,
            47925,
            47954,
            47683,
            47626,
            47808,
            47920,
            47786,
            48003,
            47853,
            47841,
            47543,
            47887,
            47651,
            47835,
            47683,
            47718,
            47631,
            47699,
            47706,
            47946,
            47653
          ],
          [
            48240,
            48200,
            47710,
            47741,
            47590,
            47750,
            47599,
            47966,
            47628,
            47670,
            47779,
            47919,
            47798,
            48334,
            47784,
            48261,
            47746,
            47904,
            47710,
            47880,
            47788,
            47822,
            47647,
            47721,
            47724,
            47842,
            47751,
            47461,
            47721,
            47634,
            47728,
            47376,
            47420,
            47649,
            47741,
            47737,
            47848,
            47976,
            47732,
            47854,
            47681,
            47653,
            47925,
            47954,
            47683,
            47626,
            47808,
            47920,
            47786,
            48003,
            47853,
            47841,
            47543,
            47887,
            47651,
            47835,
            47683,
            47718,
            47631,
            47699,
            47706,
            47946,
            47653
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            42,
            609,
            7425,
            25942,
            39576,
            34107,
            14478,
            2859,
            243,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            734,
            7175,
            24082,
            39271,
            37608,
            20255,
            5029,
            544,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            0,
            0,
            1,
            265,
            2307,
            14836,
            34330,
            40204,
            28694,
            8914,
            1480,
            154,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            659,
            6081,
            22694,
            39178,
            41942,
            29637,
            12074,
            1739,
            198,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            50,
            1071,
            8504,
            26257,
            41210,
            43513
          ]
        ]
      },
      "call": {
        "duration": 0.13447219999943627,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001604315999429673,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06898839399946155,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            51238,
            47513,
            47447,
            47356,
            47415,
            47403,
            47349,
            47386,
            47434,
            47486,
            47402,
            47569,
            47344,
            47500,
            47427,
            47206,
            47414,
            47436,
            49649,
            47581,
            47350,
            47477,
            47372,
            47515,
            47612,
            47501,
            47544,
            47494,
            47717,
            47479,
            47534,
            47388,
            47491,
            47536,
            47395,
            49053,
            49408,
            47521,
            47506,
            47108,
            47361,
            47426,
            47401,
            47534,
            47416,
            47479,
            47516,
            47532,
            47397,
            47673,
            47689,
            47519,
            47491,
            47444,
            47789,
            47525,
            47497,
            47366,
            47348,
            47503,
            47374,
            47501,
            47327
          ],
          [
            51238,
            47513,
            47447,
            47356,
            47415,
            47403,
            47349,
            47386,
            47434,
            47486,
            47402,
            47569,
            47344,
            47500,
            47427,
            47206,
            47414,
            47436,
            49649,
            47581,
            47350,
            47477,
            47372,
            47515,
            47612,
            47501,
            47544,
            47494,
            47717,
            47479,
            47534,
            47388,
            47491,
            47536,
            47395,
            49053,
            49408,
            47521,
            47506,
            47108,
            47361,
            47426,
            47401,
            47534,
            47416,
            47479,
            47516,
            47532,
            47397,
            47673,
            47689,
            47519,
            47491,
            47444,
            47789,
            47525,
            47497,
            47366,
            47348,
            47503,
            47374,
            47501,
            47327
          ],
          [
            51238,
            47513,
            47447,
            47356,
            47415,
            47403,
            47349,
            47386,
            47434,
            47486,
            47402,
            47569,
            47344,
            47500,
            47427,
            47206,
            47414,
            47436,
            49649,
            47581,
            47350,
            47477,
            47372,
            47515,
            47612,
            47501,
            47544,
            47494,
            47717,
            47479,
            47534,
            47388,
            47491,
            47536,
            47395,
            49053,
            49408,
            47521,
            47506,
            47108,
            47361,
            47426,
            47401,
            47534,
            47416,
            47479,
            47516,
            47532,
            47397,
            47673,
            47689,
            47519,
            47491,
            47444,
            47789,
            47525,
            47497,
            47366,
            47348,
            47503,
            47374,
            47501,
            47327
          ],
          [
            51238,
            47513,
            47447,
            47356,
            47415,
            47403,
            47349,
            47386,
            47434,
            47486,
            47402,
            47569,
            47344,
            47500,
            47427,
            47206,
            47414,
            47436,
            49649,
            47581,
            47350,
            47477,
            47372,
            47515,
            47612,
            47501,
            47544,
            47494,
            47717,
            47479,
            47534,
            47388,
            47491,
            47536,
            47395,
            49053,
            49408,
            47521,
            47506,
            47108,
            47361,
            47426,
            47401,
            47534,
            47416,
            47479,
            47516,
            47532,
            47397,
            47673,
            47689,
            47519,
            47491,
            47444,
            47789,
            47525,
            47497,
            47366,
            47348,
            47503,
            47374,
            47501,
            47327
          ],
          [
            51238,
            47513,
            47447,
            47356,
            47415,
            47403,
            47349,
            47386,
            47434,
            47486,
            47402,
            47569,
            47344,
            47500,
            47427,
            47206,
            47414,
            47436,
            49649,
            47581,
            47350,
            47477,
            47372,
            47515,
            47612,
            47501,
            47544,
            47494,
            47717,
            47479,
            47534,
            47388,
            47491,
            47536,
            47395,
            49053,
            49408,
            47521,
            47506,
            47108,
            47361,
            47426,
            47401,
            47534,
            47416,
            47479,
            47516,
            47532,
            47397,
            47673,
            47689,
            47519,
            47491,
            47444,
            47789,
            47525,
            47497,
            47366,
            47348,
            47503,
            47374,
            47501,
            47327
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            200,
            1964,
            8676,
            19889,
            28648,
            35433,
            35426,
            26432,
            12773,
            2623,
            258,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            307,
            2946,
            11018,
            23127,
            35018,
            38425,
            32385,
            19635,
            7418,
            2104,
            250,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            863,
            5373,
            16325,
            27565,
            35369,
            38974,
            36175,
            25608,
            12724,
            4830,
            667,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            144,
            1508,
            6357,
            16214,
            28498,
            35467,
            34322,
            25264,
            12217,
            3692,
            736,
            66,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            14193,
            4940,
            805,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            294,
            2410,
            11343,
            23776,
            35496,
            39690,
            31885,
            18724,
            7300,
            1434,
            128,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            392,
            4337,
            14832,
            29180,
            38424,
            34564,
            22201,
            8697,
            1784,
            206,
            13,
            0,
            0,
            0,
            0
          ],
          [
            50,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            81,
            1243,
            8457,
            20355,
            31270,
            38903,
            39435,
            33409,
            23545,
            11473,
            3188,
            376,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            74,
            616,
            3713,
            13849,
            25882,
            35905,
            33453,
            21341,
            10197,
            3536,
            687,
            35,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            103,
            1200,
            6306,
            18380,
            29082,
            36816,
            39507,
            35015,
            24276,
            12416,
            3120,
            458,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            197,
            1606,
            7132,
            18188,
            30296,
            39421,
            39811,
            32606,
            22029,
            12180,
            5203,
            1364,
            111,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2709230340005888,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014946629999030847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2919347810020554,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170352000001003,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004823537001357181,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}