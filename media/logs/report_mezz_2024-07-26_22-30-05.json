{
  "created": 1722033024.7492392,
  "duration": 23.215593099594116,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5057712559973879,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14805617200181587,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013168799996492453,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038312349970510695,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14804120199914905,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013059289994998835,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13265601999955834,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12183171899960143,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013368299987632781,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003827694999927189,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12100229000134277,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012758379998558667,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003357134999532718,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14664056000037817,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012361769986455329,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033637640008237213,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11995538699920871,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011855960001412313,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003387225999176735,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1462324920030369,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011709859973052517,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033739350001269486,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1199684069979412,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011969669976679143,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004404757997690467,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021474169989232905,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011247250004089437,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033373039987054653,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017092880007112399,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001114493999921251,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033092230005422607,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004042109998408705,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033007.3304923,
            "msecs": 330.4922580718994,
            "relativeCreated": 7775.909662246704,
            "thread": 281472830988320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4994
          }
        ]
      },
      "teardown": {
        "duration": 0.0012252270025783218,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00336340499779908,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024414250001427718,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033007.3428206,
            "msecs": 342.8206443786621,
            "relativeCreated": 7788.238048553467,
            "thread": 281472830988320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4994
          }
        ]
      },
      "teardown": {
        "duration": 0.0011981960014963988,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020665060001192614,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027031509998778347,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033007.352319,
            "msecs": 352.31900215148926,
            "relativeCreated": 7797.736406326294,
            "thread": 281472830988320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4994
          }
        ]
      },
      "teardown": {
        "duration": 0.0010561739982222207,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002096566000545863,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034478260022297036,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033007.3617764,
            "msecs": 361.77635192871094,
            "relativeCreated": 7807.193756103516,
            "thread": 281472830988320,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4994
          }
        ]
      },
      "teardown": {
        "duration": 0.00106889399830834,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033664649999991525,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1465879989991663,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011822070009657182,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033176539982378017,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12016593199950876,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011639959993772209,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17472715500116465,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1478804879989184,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012596679989655968,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015112445998965995,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12107729199851747,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001286309001443442,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.833717664998403,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            13,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            63,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            8,
            115,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003529098001308739,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029088350020174403,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8961102059984114,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            11,
            0,
            1,
            0,
            0
          ],
          [
            0,
            22,
            0,
            0,
            0,
            38,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            19,
            255,
            19,
            255,
            0,
            0,
            0,
            0,
            0,
            21
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            76,
            255,
            255,
            255,
            12
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            40,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            78,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            200,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            2,
            0,
            2,
            255
          ],
          [
            255,
            168,
            255,
            255,
            255,
            255,
            0,
            0,
            239,
            0,
            184,
            255
          ],
          [
            255,
            0,
            148,
            0,
            255,
            0,
            255,
            115,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034607269990374334,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002887533999455627,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30231087200081674,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48001,
            47421,
            47435,
            47461,
            47434,
            47323,
            47217,
            47565,
            47301,
            47490,
            47262,
            47217,
            47355,
            47655,
            47392,
            47541,
            47345,
            47366,
            47536,
            47615,
            47370,
            47456,
            47447,
            47516,
            47346,
            47775,
            47348,
            47646,
            47225,
            47680,
            47415,
            49747,
            47429,
            47276,
            47271,
            47322,
            47406,
            47601,
            47322,
            47391,
            47419,
            47299,
            47596,
            47633,
            47508,
            47346,
            47418,
            47314,
            47383,
            47535,
            47358,
            46967,
            47035,
            47445,
            47391,
            47517,
            47350,
            47311,
            47355,
            47227,
            49234,
            47694,
            47791
          ],
          [
            48001,
            47421,
            47435,
            47461,
            47434,
            47323,
            47217,
            47565,
            47301,
            47490,
            47262,
            47217,
            47355,
            47655,
            47392,
            47541,
            47345,
            47366,
            47536,
            47615,
            47370,
            47456,
            47447,
            47516,
            47346,
            47775,
            47348,
            47646,
            47225,
            47680,
            47415,
            49747,
            47429,
            47276,
            47271,
            47322,
            47406,
            47601,
            47322,
            47391,
            47419,
            47299,
            47596,
            47633,
            47508,
            47346,
            47418,
            47314,
            47383,
            47535,
            47358,
            46967,
            47035,
            47445,
            47391,
            47517,
            47350,
            47311,
            47355,
            47227,
            49234,
            47694,
            47791
          ]
        ],
        "eTX_errcounts": [
          [
            40117,
            25775,
            7780,
            1172,
            136,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            176,
            3578,
            16474,
            34677,
            42676,
            31025,
            13550,
            2186,
            177,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            1085,
            8102,
            26522,
            40025,
            37023,
            19214,
            4883,
            471,
            8,
            1,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            323,
            4192,
            17990,
            36572,
            42087,
            31643,
            13399,
            2940,
            296,
            8,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            521,
            5095,
            20309,
            36450,
            43113,
            35106,
            15890,
            3199,
            374,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13396236799962935,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001618536000023596,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06894408299922361,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47670,
            47220,
            47325,
            47375,
            47301,
            47546,
            47270,
            47167,
            47222,
            47333,
            47321,
            47089,
            47224,
            47137,
            47312,
            47091,
            47289,
            47208,
            47238,
            47299,
            47179,
            47231,
            47239,
            49213,
            48342,
            47281,
            47135,
            47327,
            47161,
            47136,
            47274,
            47002,
            46848,
            47359,
            47162,
            47177,
            47157,
            47331,
            47293,
            47185,
            47010,
            47355,
            47640,
            47243,
            47269,
            47168,
            47243,
            47279,
            47195,
            46895,
            47084,
            47224,
            47221,
            47212,
            47135,
            47383,
            47267,
            47212,
            47210,
            47278,
            47314,
            48811,
            47243
          ],
          [
            47670,
            47220,
            47325,
            47375,
            47301,
            47546,
            47270,
            47167,
            47222,
            47333,
            47321,
            47089,
            47224,
            47137,
            47312,
            47091,
            47289,
            47208,
            47238,
            47299,
            47179,
            47231,
            47239,
            49213,
            48342,
            47281,
            47135,
            47327,
            47161,
            47136,
            47274,
            47002,
            46848,
            47359,
            47162,
            47177,
            47157,
            47331,
            47293,
            47185,
            47010,
            47355,
            47640,
            47243,
            47269,
            47168,
            47243,
            47279,
            47195,
            46895,
            47084,
            47224,
            47221,
            47212,
            47135,
            47383,
            47267,
            47212,
            47210,
            47278,
            47314,
            48811,
            47243
          ],
          [
            47670,
            47220,
            47325,
            47375,
            47301,
            47546,
            47270,
            47167,
            47222,
            47333,
            47321,
            47089,
            47224,
            47137,
            47312,
            47091,
            47289,
            47208,
            47238,
            47299,
            47179,
            47231,
            47239,
            49213,
            48342,
            47281,
            47135,
            47327,
            47161,
            47136,
            47274,
            47002,
            46848,
            47359,
            47162,
            47177,
            47157,
            47331,
            47293,
            47185,
            47010,
            47355,
            47640,
            47243,
            47269,
            47168,
            47243,
            47279,
            47195,
            46895,
            47084,
            47224,
            47221,
            47212,
            47135,
            47383,
            47267,
            47212,
            47210,
            47278,
            47314,
            48811,
            47243
          ],
          [
            47670,
            47220,
            47325,
            47375,
            47301,
            47546,
            47270,
            47167,
            47222,
            47333,
            47321,
            47089,
            47224,
            47137,
            47312,
            47091,
            47289,
            47208,
            47238,
            47299,
            47179,
            47231,
            47239,
            49213,
            48342,
            47281,
            47135,
            47327,
            47161,
            47136,
            47274,
            47002,
            46848,
            47359,
            47162,
            47177,
            47157,
            47331,
            47293,
            47185,
            47010,
            47355,
            47640,
            47243,
            47269,
            47168,
            47243,
            47279,
            47195,
            46895,
            47084,
            47224,
            47221,
            47212,
            47135,
            47383,
            47267,
            47212,
            47210,
            47278,
            47314,
            48811,
            47243
          ],
          [
            47670,
            47220,
            47325,
            47375,
            47301,
            47546,
            47270,
            47167,
            47222,
            47333,
            47321,
            47089,
            47224,
            47137,
            47312,
            47091,
            47289,
            47208,
            47238,
            47299,
            47179,
            47231,
            47239,
            49213,
            48342,
            47281,
            47135,
            47327,
            47161,
            47136,
            47274,
            47002,
            46848,
            47359,
            47162,
            47177,
            47157,
            47331,
            47293,
            47185,
            47010,
            47355,
            47640,
            47243,
            47269,
            47168,
            47243,
            47279,
            47195,
            46895,
            47084,
            47224,
            47221,
            47212,
            47135,
            47383,
            47267,
            47212,
            47210,
            47278,
            47314,
            48811,
            47243
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            40,
            703,
            4597,
            13233,
            25624,
            35647,
            36917,
            28275,
            17529,
            8068,
            2033,
            210,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            91,
            1235,
            6172,
            15194,
            24818,
            32259,
            35947,
            33134,
            24500,
            11759,
            3031,
            476,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            148,
            880,
            3611,
            11266,
            21355,
            31419,
            37352,
            34303,
            25159,
            14731,
            5302,
            910,
            43,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            43,
            772,
            4557,
            13563,
            24512,
            33795,
            38126,
            37656,
            30524,
            20275,
            10191,
            3705,
            552,
            87,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            278,
            1656,
            6827,
            16603,
            26869
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            80,
            881,
            5866,
            16471,
            27551,
            32056,
            31904,
            24530,
            15097,
            6017,
            1096,
            84,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            175,
            1841,
            8816,
            17759,
            28931,
            33812,
            30414,
            23772,
            15771,
            8258,
            2719,
            283,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            406,
            2178,
            9058,
            19861,
            30011,
            34740,
            33643,
            27036,
            18371,
            8563,
            1985,
            174,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            591,
            3580,
            11040,
            21345,
            29428,
            34362,
            30227,
            25586,
            18949,
            11018,
            4784,
            879,
            94,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            58,
            668,
            3795,
            11194,
            20857,
            30876,
            38281,
            38835,
            30762,
            20819,
            10055,
            3493,
            565,
            65,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            84,
            981,
            4626,
            12164,
            23446,
            33678,
            39460,
            38826,
            33113,
            26066,
            17253,
            7163,
            1099,
            94,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            357,
            2254,
            8309
          ]
        ]
      },
      "call": {
        "duration": 0.2723097250018327,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6b60edb0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6b60edb0> = array([22, 12, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6b5a4370>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47670, 47220, 47325, 47375, 47301, 47546, ...], [47670, 47220, 47325, 47375, 47301, 47546, ...], [..., 0, ...], [0, 0, 3, 148, 880, 3611, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 58, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6b60edb0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6b60edb0> = array([22, 12, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016093560006993357,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2924016510005458,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169492689998151,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014640030021837447,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.293855240000994,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            5,
            20,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            207,
            49,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            28,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003498948000924429,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028882840015285183,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5393462930005626,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            144,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            181,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            74,
            255,
            105,
            255,
            142,
            0,
            0,
            186,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            205,
            0,
            36,
            1,
            255,
            6,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            66,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            5,
            255,
            171,
            255,
            202,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            249,
            255,
            183,
            255,
            255,
            0,
            0,
            103,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            70,
            255,
            127
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00347683799918741,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002907095000409754,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2954057089991693,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47896,
            47493,
            47389,
            47739,
            49160,
            47471,
            48150,
            47583,
            47476,
            47628,
            47324,
            47349,
            47713,
            47442,
            47366,
            47580,
            47536,
            47348,
            47592,
            47501,
            47432,
            47659,
            47438,
            47568,
            47834,
            47459,
            47492,
            47761,
            47442,
            47431,
            47675,
            47553,
            47512,
            47613,
            47139,
            52907,
            47538,
            47489,
            47522,
            47701,
            47467,
            47352,
            47869,
            47577,
            47523,
            47552,
            47475,
            47411,
            47747,
            47377,
            47453,
            47519,
            47606,
            47368,
            47674,
            47377,
            47438,
            47565,
            47482,
            47517,
            47770,
            47488,
            47375
          ],
          [
            47896,
            47493,
            47389,
            47739,
            49160,
            47471,
            48150,
            47583,
            47476,
            47628,
            47324,
            47349,
            47713,
            47442,
            47366,
            47580,
            47536,
            47348,
            47592,
            47501,
            47432,
            47659,
            47438,
            47568,
            47834,
            47459,
            47492,
            47761,
            47442,
            47431,
            47675,
            47553,
            47512,
            47613,
            47139,
            52907,
            47538,
            47489,
            47522,
            47701,
            47467,
            47352,
            47869,
            47577,
            47523,
            47552,
            47475,
            47411,
            47747,
            47377,
            47453,
            47519,
            47606,
            47368,
            47674,
            47377,
            47438,
            47565,
            47482,
            47517,
            47770,
            47488,
            47375
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            263,
            3650,
            18396,
            37305,
            36333,
            18113,
            4156,
            373,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            129,
            2933,
            17141,
            35366,
            39767,
            25433,
            7787,
            1230,
            118,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            1061,
            8327,
            29698,
            41797,
            38418,
            18379,
            4579,
            440,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            218,
            2523,
            14497,
            32297,
            42978,
            38405,
            19933,
            5215,
            564,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13408930199875613,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016426570000476204,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06851348399868584,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47557,
            46830,
            47130,
            47109,
            47130,
            47127,
            47346,
            47149,
            47263,
            47138,
            47467,
            47069,
            47027,
            47088,
            47056,
            47016,
            46822,
            47020,
            47092,
            47070,
            47106,
            47085,
            47090,
            47014,
            47070,
            47146,
            47081,
            46932,
            47115,
            47329,
            49076,
            47047,
            47004,
            47054,
            47164,
            46930,
            47070,
            46928,
            47081,
            47048,
            47129,
            46855,
            47268,
            47064,
            47189,
            47122,
            47174,
            46987,
            48947,
            48191,
            46953,
            47145,
            47029,
            46832,
            46997,
            46936,
            47106,
            47036,
            47088,
            46968,
            47087,
            47074,
            47093
          ],
          [
            47557,
            46830,
            47130,
            47109,
            47130,
            47127,
            47346,
            47149,
            47263,
            47138,
            47467,
            47069,
            47027,
            47088,
            47056,
            47016,
            46822,
            47020,
            47092,
            47070,
            47106,
            47085,
            47090,
            47014,
            47070,
            47146,
            47081,
            46932,
            47115,
            47329,
            49076,
            47047,
            47004,
            47054,
            47164,
            46930,
            47070,
            46928,
            47081,
            47048,
            47129,
            46855,
            47268,
            47064,
            47189,
            47122,
            47174,
            46987,
            48947,
            48191,
            46953,
            47145,
            47029,
            46832,
            46997,
            46936,
            47106,
            47036,
            47088,
            46968,
            47087,
            47074,
            47093
          ],
          [
            47557,
            46830,
            47130,
            47109,
            47130,
            47127,
            47346,
            47149,
            47263,
            47138,
            47467,
            47069,
            47027,
            47088,
            47056,
            47016,
            46822,
            47020,
            47092,
            47070,
            47106,
            47085,
            47090,
            47014,
            47070,
            47146,
            47081,
            46932,
            47115,
            47329,
            49076,
            47047,
            47004,
            47054,
            47164,
            46930,
            47070,
            46928,
            47081,
            47048,
            47129,
            46855,
            47268,
            47064,
            47189,
            47122,
            47174,
            46987,
            48947,
            48191,
            46953,
            47145,
            47029,
            46832,
            46997,
            46936,
            47106,
            47036,
            47088,
            46968,
            47087,
            47074,
            47093
          ],
          [
            47557,
            46830,
            47130,
            47109,
            47130,
            47127,
            47346,
            47149,
            47263,
            47138,
            47467,
            47069,
            47027,
            47088,
            47056,
            47016,
            46822,
            47020,
            47092,
            47070,
            47106,
            47085,
            47090,
            47014,
            47070,
            47146,
            47081,
            46932,
            47115,
            47329,
            49076,
            47047,
            47004,
            47054,
            47164,
            46930,
            47070,
            46928,
            47081,
            47048,
            47129,
            46855,
            47268,
            47064,
            47189,
            47122,
            47174,
            46987,
            48947,
            48191,
            46953,
            47145,
            47029,
            46832,
            46997,
            46936,
            47106,
            47036,
            47088,
            46968,
            47087,
            47074,
            47093
          ],
          [
            47557,
            46830,
            47130,
            47109,
            47130,
            47127,
            47346,
            47149,
            47263,
            47138,
            47467,
            47069,
            47027,
            47088,
            47056,
            47016,
            46822,
            47020,
            47092,
            47070,
            47106,
            47085,
            47090,
            47014,
            47070,
            47146,
            47081,
            46932,
            47115,
            47329,
            49076,
            47047,
            47004,
            47054,
            47164,
            46930,
            47070,
            46928,
            47081,
            47048,
            47129,
            46855,
            47268,
            47064,
            47189,
            47122,
            47174,
            46987,
            48947,
            48191,
            46953,
            47145,
            47029,
            46832,
            46997,
            46936,
            47106,
            47036,
            47088,
            46968,
            47087,
            47074,
            47093
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            269,
            2566,
            11453,
            24254,
            34786,
            34266,
            23294,
            11220,
            3734,
            560,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            618,
            3603,
            13305,
            26205,
            36316,
            37290,
            27007,
            14121,
            3803,
            538,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            0,
            0,
            19,
            587,
            5236,
            17606,
            32842,
            39702,
            34205,
            19263,
            6201,
            901,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            112,
            1260,
            7693,
            23270,
            38822,
            43537,
            38305,
            25784,
            11891,
            2544,
            244,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            84,
            1593,
            8023,
            22116,
            34778,
            39520
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            525,
            3510,
            13832,
            26681,
            33788,
            27797,
            13672,
            3499,
            361,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            59,
            698,
            6274,
            19577,
            34605,
            39536,
            32309,
            18679,
            5934,
            702,
            66,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            71,
            958,
            5998,
            18140,
            32917,
            38213,
            31120,
            17954,
            5400,
            654,
            54,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            12,
            205,
            1914,
            9121,
            22772,
            35704,
            41444,
            34316,
            22473,
            8303,
            1480,
            107,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            130,
            1726,
            8644,
            21777,
            34535,
            40973,
            37600,
            25406,
            11848,
            2450,
            310,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            323,
            2381,
            11484,
            25899,
            38536,
            43552,
            37980,
            25851,
            11823,
            3713,
            905,
            92,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            79,
            694,
            5843,
            17135,
            33126
          ]
        ]
      },
      "call": {
        "duration": 0.2700910860003205,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014955030019336846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2914028400009556,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169125663000159,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014591129984182771,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3710667269988335,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            127,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.00353638900196529,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029026239972154144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.534329310998146,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            5,
            255,
            2,
            27,
            0,
            255,
            1,
            255,
            255
          ],
          [
            81,
            0,
            14,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            30,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            231,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            17,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            4,
            255,
            33,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            3,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            62,
            0,
            3,
            0,
            7,
            0,
            255,
            148,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            84,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            99,
            0,
            4,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            74,
            255,
            57,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003466877002210822,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029057449974061456,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29579907799779903,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47950,
            47409,
            47356,
            47410,
            47457,
            47404,
            47524,
            47311,
            47339,
            47353,
            47538,
            47352,
            47392,
            47392,
            49744,
            47337,
            47713,
            47373,
            48866,
            47045,
            47434,
            47367,
            47243,
            47431,
            47361,
            47252,
            47297,
            47241,
            47249,
            47312,
            47566,
            47392,
            47372,
            47222,
            47321,
            47338,
            47290,
            47413,
            47300,
            47321,
            47268,
            47286,
            47379,
            47183,
            47393,
            47373,
            47342,
            47341,
            47368,
            47348,
            47359,
            47673,
            47312,
            47671,
            47442,
            49388,
            47303,
            47422,
            47276,
            47274,
            47432,
            47315,
            47209
          ],
          [
            47950,
            47409,
            47356,
            47410,
            47457,
            47404,
            47524,
            47311,
            47339,
            47353,
            47538,
            47352,
            47392,
            47392,
            49744,
            47337,
            47713,
            47373,
            48866,
            47045,
            47434,
            47367,
            47243,
            47431,
            47361,
            47252,
            47297,
            47241,
            47249,
            47312,
            47566,
            47392,
            47372,
            47222,
            47321,
            47338,
            47290,
            47413,
            47300,
            47321,
            47268,
            47286,
            47379,
            47183,
            47393,
            47373,
            47342,
            47341,
            47368,
            47348,
            47359,
            47673,
            47312,
            47671,
            47442,
            49388,
            47303,
            47422,
            47276,
            47274,
            47432,
            47315,
            47209
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            667,
            7465,
            25178,
            38627,
            33494,
            14938,
            2472,
            214,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            451,
            6833,
            22827,
            38205,
            37107,
            20680,
            4991,
            557,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3
          ],
          [
            0,
            0,
            0,
            11,
            113,
            2193,
            15105,
            33845,
            40547,
            28333,
            9365,
            1693,
            149,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            750,
            6301,
            22234,
            38510,
            42300,
            30629,
            12085,
            1927,
            229,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            719,
            8280,
            26329,
            40402,
            43190
          ]
        ]
      },
      "call": {
        "duration": 0.13356546000068192,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016402560031565372,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06897435399878304,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47674,
            47152,
            47032,
            47350,
            47074,
            47280,
            47261,
            47282,
            47205,
            46828,
            47209,
            47072,
            47442,
            47258,
            47001,
            47204,
            46898,
            47170,
            47258,
            47031,
            47246,
            47076,
            46964,
            47300,
            46991,
            47433,
            46983,
            47107,
            47131,
            47187,
            49011,
            50204,
            47106,
            46912,
            46988,
            47244,
            47074,
            47078,
            47250,
            47078,
            47248,
            47099,
            47169,
            47238,
            47073,
            47372,
            47089,
            47095,
            47269,
            47172,
            47293,
            47172,
            47144,
            47302,
            47049,
            47181,
            47201,
            47200,
            46847,
            47215,
            47174,
            47141,
            47159
          ],
          [
            47674,
            47152,
            47032,
            47350,
            47074,
            47280,
            47261,
            47282,
            47205,
            46828,
            47209,
            47072,
            47442,
            47258,
            47001,
            47204,
            46898,
            47170,
            47258,
            47031,
            47246,
            47076,
            46964,
            47300,
            46991,
            47433,
            46983,
            47107,
            47131,
            47187,
            49011,
            50204,
            47106,
            46912,
            46988,
            47244,
            47074,
            47078,
            47250,
            47078,
            47248,
            47099,
            47169,
            47238,
            47073,
            47372,
            47089,
            47095,
            47269,
            47172,
            47293,
            47172,
            47144,
            47302,
            47049,
            47181,
            47201,
            47200,
            46847,
            47215,
            47174,
            47141,
            47159
          ],
          [
            47674,
            47152,
            47032,
            47350,
            47074,
            47280,
            47261,
            47282,
            47205,
            46828,
            47209,
            47072,
            47442,
            47258,
            47001,
            47204,
            46898,
            47170,
            47258,
            47031,
            47246,
            47076,
            46964,
            47300,
            46991,
            47433,
            46983,
            47107,
            47131,
            47187,
            49011,
            50204,
            47106,
            46912,
            46988,
            47244,
            47074,
            47078,
            47250,
            47078,
            47248,
            47099,
            47169,
            47238,
            47073,
            47372,
            47089,
            47095,
            47269,
            47172,
            47293,
            47172,
            47144,
            47302,
            47049,
            47181,
            47201,
            47200,
            46847,
            47215,
            47174,
            47141,
            47159
          ],
          [
            47674,
            47152,
            47032,
            47350,
            47074,
            47280,
            47261,
            47282,
            47205,
            46828,
            47209,
            47072,
            47442,
            47258,
            47001,
            47204,
            46898,
            47170,
            47258,
            47031,
            47246,
            47076,
            46964,
            47300,
            46991,
            47433,
            46983,
            47107,
            47131,
            47187,
            49011,
            50204,
            47106,
            46912,
            46988,
            47244,
            47074,
            47078,
            47250,
            47078,
            47248,
            47099,
            47169,
            47238,
            47073,
            47372,
            47089,
            47095,
            47269,
            47172,
            47293,
            47172,
            47144,
            47302,
            47049,
            47181,
            47201,
            47200,
            46847,
            47215,
            47174,
            47141,
            47159
          ],
          [
            47674,
            47152,
            47032,
            47350,
            47074,
            47280,
            47261,
            47282,
            47205,
            46828,
            47209,
            47072,
            47442,
            47258,
            47001,
            47204,
            46898,
            47170,
            47258,
            47031,
            47246,
            47076,
            46964,
            47300,
            46991,
            47433,
            46983,
            47107,
            47131,
            47187,
            49011,
            50204,
            47106,
            46912,
            46988,
            47244,
            47074,
            47078,
            47250,
            47078,
            47248,
            47099,
            47169,
            47238,
            47073,
            47372,
            47089,
            47095,
            47269,
            47172,
            47293,
            47172,
            47144,
            47302,
            47049,
            47181,
            47201,
            47200,
            46847,
            47215,
            47174,
            47141,
            47159
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            127,
            1070,
            6421,
            16935,
            28815,
            35088,
            32132,
            22157,
            10944,
            2597,
            360,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            261,
            2269,
            11223,
            24326,
            36912,
            38967,
            30225,
            16601,
            7002,
            2249,
            357,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            17,
            402,
            2956,
            12682,
            27804,
            38526,
            40738,
            33742,
            21440,
            8602,
            2502,
            187,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            109,
            1285,
            5808,
            16973,
            31077,
            38074,
            34973,
            25346,
            11464,
            2242,
            204,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10826,
            2754,
            262,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            215,
            1691,
            9309,
            22247,
            34896,
            37472,
            28374,
            15497,
            4310,
            532,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            335,
            4716,
            15501,
            28457,
            38531,
            33965,
            21567,
            8680,
            1902,
            161,
            5,
            0,
            0,
            0,
            0
          ],
          [
            19,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            36,
            552,
            4884,
            15926,
            29809,
            40002,
            40095,
            31680,
            20363,
            7619,
            1318,
            69,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            264,
            2538,
            13499,
            27494,
            37810,
            34748,
            23563,
            10723,
            2938,
            261,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            728,
            4522,
            15491,
            28506,
            39780,
            41605,
            34584,
            23434,
            11797,
            3494,
            904,
            107,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            110,
            1311,
            7040,
            19225,
            32374,
            40947,
            40247,
            31337,
            20102,
            8581,
            2258,
            287,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27081830199676915,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001496553002652945,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.291607983999711,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.16887548700106,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0048113570010173135,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}