{
  "created": 1722029853.1226006,
  "duration": 35.16677522659302,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.507306300001801,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1486042929973337,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013157389985281043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037876450005569495,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14784251599849085,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012476679985411465,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13132504700115533,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1218982380014495,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001274337999348063,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038014439996914007,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12131388499983586,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012937179999426007,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003359775000717491,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477904050007055,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012020969988952857,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003352305000589695,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12100202799774706,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011621660014498048,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033556050002516713,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14752585899987025,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011671160027617589,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033649050019448623,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12102344899903983,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001207917001011083,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004398098000820028,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021042469998064917,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011435659980634227,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033692850010993425,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017598699996597134,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010908539989031851,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033431240008212626,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040970720001496375,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029826.5125728,
            "msecs": 512.5727653503418,
            "relativeCreated": 10583.991527557373,
            "thread": 281473048170528,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4078
          }
        ]
      },
      "teardown": {
        "duration": 0.0011945370024477597,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033879749971674755,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024333239998668432,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029826.5254295,
            "msecs": 525.4294872283936,
            "relativeCreated": 10596.848249435425,
            "thread": 281473048170528,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4078
          }
        ]
      },
      "teardown": {
        "duration": 0.0011420649971114472,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020754170000145677,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00275430200053961,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029826.535403,
            "msecs": 535.4030132293701,
            "relativeCreated": 10606.821775436401,
            "thread": 281473048170528,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4078
          }
        ]
      },
      "teardown": {
        "duration": 0.008307516000058968,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002125847000570502,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003428595999139361,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029826.5522795,
            "msecs": 552.2794723510742,
            "relativeCreated": 10623.698234558105,
            "thread": 281473048170528,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4078
          }
        ]
      },
      "teardown": {
        "duration": 0.0010751640002126805,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033508039996377192,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14737459500247496,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011822070009657182,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033283339980698656,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12088478499936173,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011490860015328508,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17661747700185515,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14806506099921535,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012690580006164964,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015220419998513535,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12179215500145801,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012479680008254945,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.742604612998548,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            5,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            84,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            11,
            117,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003556789997674059,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002901994997955626,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9015425689976837,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            2,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            207,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            40,
            255,
            255,
            255,
            4
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            27,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            74,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            1,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            142,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            173,
            255,
            255,
            255,
            255,
            0,
            0,
            134,
            0,
            102,
            255
          ],
          [
            255,
            0,
            101,
            0,
            255,
            0,
            247,
            81,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003474436998658348,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028673439992417116,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031799199998204,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48146,
            47618,
            47648,
            47629,
            47604,
            47667,
            47757,
            47733,
            47688,
            47784,
            47699,
            47288,
            47290,
            47708,
            47849,
            47742,
            47649,
            47807,
            47642,
            47696,
            47621,
            47767,
            50267,
            47615,
            47987,
            47920,
            47740,
            47850,
            47706,
            47849,
            47525,
            47659,
            47617,
            47733,
            47791,
            47864,
            47624,
            47823,
            47591,
            47766,
            47781,
            47853,
            47705,
            47700,
            47697,
            47886,
            47711,
            47814,
            47767,
            48317,
            47569,
            50477,
            47759,
            47633,
            47764,
            47637,
            47659,
            47652,
            47491,
            47624,
            47718,
            47498,
            47216
          ],
          [
            48146,
            47618,
            47648,
            47629,
            47604,
            47667,
            47757,
            47733,
            47688,
            47784,
            47699,
            47288,
            47290,
            47708,
            47849,
            47742,
            47649,
            47807,
            47642,
            47696,
            47621,
            47767,
            50267,
            47615,
            47987,
            47920,
            47740,
            47850,
            47706,
            47849,
            47525,
            47659,
            47617,
            47733,
            47791,
            47864,
            47624,
            47823,
            47591,
            47766,
            47781,
            47853,
            47705,
            47700,
            47697,
            47886,
            47711,
            47814,
            47767,
            48317,
            47569,
            50477,
            47759,
            47633,
            47764,
            47637,
            47659,
            47652,
            47491,
            47624,
            47718,
            47498,
            47216
          ]
        ],
        "eTX_errcounts": [
          [
            41112,
            28879,
            10145,
            1747,
            155,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            186,
            2646,
            14882,
            33060,
            43053,
            33432,
            16511,
            2950,
            228,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            618,
            6348,
            23124,
            40188,
            39133,
            22618,
            6258,
            927,
            35,
            2,
            0,
            0
          ],
          [
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            196,
            3008,
            15770,
            34721,
            44772,
            33822,
            15648,
            4014,
            464,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            224,
            3478,
            17555,
            35050,
            43353,
            36927,
            20686,
            4046,
            370,
            9,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13507327100160182,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016190460009966046,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.07426884499727748,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48001,
            47841,
            47615,
            49035,
            54350,
            47628,
            47405,
            47503,
            47551,
            47446,
            47625,
            47468,
            47347,
            47654,
            47541,
            47625,
            47576,
            47670,
            47514,
            47574,
            47714,
            47583,
            47518,
            47476,
            47574,
            47568,
            47344,
            47436,
            47021,
            47339,
            47541,
            47759,
            47368,
            47509,
            47566,
            47556,
            47726,
            47756,
            47393,
            47429,
            47404,
            47514,
            47437,
            47472,
            47444,
            47414,
            47601,
            47565,
            47647,
            47675,
            47757,
            47464,
            47471,
            48285,
            47403,
            47572,
            47348,
            47421,
            47404,
            47477,
            47375,
            47576,
            47469
          ],
          [
            48001,
            47841,
            47615,
            49035,
            54350,
            47628,
            47405,
            47503,
            47551,
            47446,
            47625,
            47468,
            47347,
            47654,
            47541,
            47625,
            47576,
            47670,
            47514,
            47574,
            47714,
            47583,
            47518,
            47476,
            47574,
            47568,
            47344,
            47436,
            47021,
            47339,
            47541,
            47759,
            47368,
            47509,
            47566,
            47556,
            47726,
            47756,
            47393,
            47429,
            47404,
            47514,
            47437,
            47472,
            47444,
            47414,
            47601,
            47565,
            47647,
            47675,
            47757,
            47464,
            47471,
            48285,
            47403,
            47572,
            47348,
            47421,
            47404,
            47477,
            47375,
            47576,
            47469
          ],
          [
            48001,
            47841,
            47615,
            49035,
            54350,
            47628,
            47405,
            47503,
            47551,
            47446,
            47625,
            47468,
            47347,
            47654,
            47541,
            47625,
            47576,
            47670,
            47514,
            47574,
            47714,
            47583,
            47518,
            47476,
            47574,
            47568,
            47344,
            47436,
            47021,
            47339,
            47541,
            47759,
            47368,
            47509,
            47566,
            47556,
            47726,
            47756,
            47393,
            47429,
            47404,
            47514,
            47437,
            47472,
            47444,
            47414,
            47601,
            47565,
            47647,
            47675,
            47757,
            47464,
            47471,
            48285,
            47403,
            47572,
            47348,
            47421,
            47404,
            47477,
            47375,
            47576,
            47469
          ],
          [
            48001,
            47841,
            47615,
            49035,
            54350,
            47628,
            47405,
            47503,
            47551,
            47446,
            47625,
            47468,
            47347,
            47654,
            47541,
            47625,
            47576,
            47670,
            47514,
            47574,
            47714,
            47583,
            47518,
            47476,
            47574,
            47568,
            47344,
            47436,
            47021,
            47339,
            47541,
            47759,
            47368,
            47509,
            47566,
            47556,
            47726,
            47756,
            47393,
            47429,
            47404,
            47514,
            47437,
            47472,
            47444,
            47414,
            47601,
            47565,
            47647,
            47675,
            47757,
            47464,
            47471,
            48285,
            47403,
            47572,
            47348,
            47421,
            47404,
            47477,
            47375,
            47576,
            47469
          ],
          [
            48001,
            47841,
            47615,
            49035,
            54350,
            47628,
            47405,
            47503,
            47551,
            47446,
            47625,
            47468,
            47347,
            47654,
            47541,
            47625,
            47576,
            47670,
            47514,
            47574,
            47714,
            47583,
            47518,
            47476,
            47574,
            47568,
            47344,
            47436,
            47021,
            47339,
            47541,
            47759,
            47368,
            47509,
            47566,
            47556,
            47726,
            47756,
            47393,
            47429,
            47404,
            47514,
            47437,
            47472,
            47444,
            47414,
            47601,
            47565,
            47647,
            47675,
            47757,
            47464,
            47471,
            48285,
            47403,
            47572,
            47348,
            47421,
            47404,
            47477,
            47375,
            47576,
            47469
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            311,
            1942,
            7756,
            18346,
            30263,
            36926,
            33906,
            22856,
            11035,
            2326,
            261,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            31,
            426,
            2902,
            9066,
            21185,
            31295,
            35620,
            31310,
            25309,
            18159,
            8438,
            2056,
            165,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            18,
            359,
            2054,
            7655,
            18670,
            31362,
            37097,
            36413,
            29039,
            18042,
            8150,
            2031,
            324,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            63,
            680,
            3555,
            9493,
            18811,
            30297,
            41006,
            42080,
            32139,
            21055,
            8384,
            1548,
            133,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            58,
            680,
            3895,
            10916,
            20550
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            126,
            1187,
            5418,
            14650,
            26473,
            35574,
            34324,
            26416,
            15327,
            5641,
            1035,
            64,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            59,
            805,
            5377,
            14224,
            28603,
            34722,
            32953,
            25923,
            16521,
            5619,
            773,
            61,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            167,
            1672,
            7015,
            15922,
            28329,
            37635,
            37190,
            29001,
            15967,
            5132,
            704,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            24,
            470,
            2053,
            5588,
            13309,
            26899,
            37768,
            37474,
            31547,
            19891,
            8797,
            1856,
            210,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            93,
            592,
            2765,
            7744,
            18205,
            30182,
            37581,
            37855,
            33636,
            25780,
            13204,
            3965,
            697,
            36,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            84,
            1011,
            4131,
            8796,
            16036,
            27564,
            39034,
            41765,
            37012,
            27032,
            13912,
            5204,
            1130,
            181,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            36,
            496,
            2351,
            6888
          ]
        ]
      },
      "call": {
        "duration": 0.27405880999867804,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff72c47690>()\n +    where <built-in method all of numpy.ndarray object at 0xffff72c47690> = array([22, 13, 17, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff72e875b0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48001, 47841, 47615, 49035, 54350, 47628, ...], [48001, 47841, 47615, 49035, 54350, 47628, ...], [...0, 0, ...], [0, 0, 1, 18, 359, 2054, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 93, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff72c47690>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff72c47690> = array([22, 13, 17, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001616887002455769,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292988991997845,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1705203399978927,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015714649998699315,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.313348532999953,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            35,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            223,
            11,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            201,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035104380003758706,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028598740027518943,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.535584301000199,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            197,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            208,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            92,
            255,
            166,
            255,
            158,
            0,
            0,
            230,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            231,
            0,
            93,
            1,
            255,
            31,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            63,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            7,
            255,
            178,
            255,
            227,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            226,
            255,
            147,
            255,
            255,
            3,
            0,
            150,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            134,
            255,
            130
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034930679976241663,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028338940028334036,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296209654003178,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48204,
            47784,
            47739,
            47621,
            47669,
            48043,
            47662,
            49823,
            47785,
            47634,
            47751,
            47663,
            47743,
            47673,
            47786,
            47663,
            47806,
            47916,
            47727,
            47824,
            47819,
            47778,
            47765,
            47735,
            47901,
            47633,
            47630,
            47635,
            49667,
            47688,
            48166,
            47673,
            48039,
            47715,
            47684,
            47828,
            47452,
            47647,
            47695,
            47757,
            47611,
            47600,
            47668,
            47838,
            47601,
            47655,
            47696,
            47691,
            47654,
            47718,
            47711,
            47740,
            47680,
            48101,
            47770,
            48119,
            47725,
            47729,
            47647,
            47515,
            47765,
            47600,
            47487
          ],
          [
            48204,
            47784,
            47739,
            47621,
            47669,
            48043,
            47662,
            49823,
            47785,
            47634,
            47751,
            47663,
            47743,
            47673,
            47786,
            47663,
            47806,
            47916,
            47727,
            47824,
            47819,
            47778,
            47765,
            47735,
            47901,
            47633,
            47630,
            47635,
            49667,
            47688,
            48166,
            47673,
            48039,
            47715,
            47684,
            47828,
            47452,
            47647,
            47695,
            47757,
            47611,
            47600,
            47668,
            47838,
            47601,
            47655,
            47696,
            47691,
            47654,
            47718,
            47711,
            47740,
            47680,
            48101,
            47770,
            48119,
            47725,
            47729,
            47647,
            47515,
            47765,
            47600,
            47487
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            248,
            3327,
            17226,
            36426,
            37752,
            20298,
            4886,
            455,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            99,
            2577,
            16313,
            33941,
            40217,
            26621,
            9339,
            1181,
            87,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            38,
            751,
            7456,
            27721,
            42069,
            39734,
            20442,
            5350,
            600,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            162,
            2083,
            13402,
            30789,
            42566,
            39381,
            21536,
            6099,
            695,
            42,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13526182499845163,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016243559985014144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06898398799967254,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48052,
            47532,
            47555,
            47489,
            47495,
            47490,
            47559,
            47496,
            47493,
            47360,
            48098,
            47474,
            47513,
            47483,
            47517,
            47490,
            47526,
            46935,
            47537,
            47551,
            47500,
            47392,
            47757,
            47477,
            47712,
            47501,
            47869,
            47485,
            47526,
            47492,
            47361,
            47475,
            47518,
            47449,
            47636,
            47558,
            47507,
            47556,
            47716,
            47726,
            47711,
            47489,
            49122,
            47731,
            47483,
            47465,
            47635,
            47510,
            47542,
            47421,
            47542,
            47581,
            47584,
            47499,
            47647,
            47582,
            47483,
            47546,
            49639,
            49338,
            47491,
            47559,
            47502
          ],
          [
            48052,
            47532,
            47555,
            47489,
            47495,
            47490,
            47559,
            47496,
            47493,
            47360,
            48098,
            47474,
            47513,
            47483,
            47517,
            47490,
            47526,
            46935,
            47537,
            47551,
            47500,
            47392,
            47757,
            47477,
            47712,
            47501,
            47869,
            47485,
            47526,
            47492,
            47361,
            47475,
            47518,
            47449,
            47636,
            47558,
            47507,
            47556,
            47716,
            47726,
            47711,
            47489,
            49122,
            47731,
            47483,
            47465,
            47635,
            47510,
            47542,
            47421,
            47542,
            47581,
            47584,
            47499,
            47647,
            47582,
            47483,
            47546,
            49639,
            49338,
            47491,
            47559,
            47502
          ],
          [
            48052,
            47532,
            47555,
            47489,
            47495,
            47490,
            47559,
            47496,
            47493,
            47360,
            48098,
            47474,
            47513,
            47483,
            47517,
            47490,
            47526,
            46935,
            47537,
            47551,
            47500,
            47392,
            47757,
            47477,
            47712,
            47501,
            47869,
            47485,
            47526,
            47492,
            47361,
            47475,
            47518,
            47449,
            47636,
            47558,
            47507,
            47556,
            47716,
            47726,
            47711,
            47489,
            49122,
            47731,
            47483,
            47465,
            47635,
            47510,
            47542,
            47421,
            47542,
            47581,
            47584,
            47499,
            47647,
            47582,
            47483,
            47546,
            49639,
            49338,
            47491,
            47559,
            47502
          ],
          [
            48052,
            47532,
            47555,
            47489,
            47495,
            47490,
            47559,
            47496,
            47493,
            47360,
            48098,
            47474,
            47513,
            47483,
            47517,
            47490,
            47526,
            46935,
            47537,
            47551,
            47500,
            47392,
            47757,
            47477,
            47712,
            47501,
            47869,
            47485,
            47526,
            47492,
            47361,
            47475,
            47518,
            47449,
            47636,
            47558,
            47507,
            47556,
            47716,
            47726,
            47711,
            47489,
            49122,
            47731,
            47483,
            47465,
            47635,
            47510,
            47542,
            47421,
            47542,
            47581,
            47584,
            47499,
            47647,
            47582,
            47483,
            47546,
            49639,
            49338,
            47491,
            47559,
            47502
          ],
          [
            48052,
            47532,
            47555,
            47489,
            47495,
            47490,
            47559,
            47496,
            47493,
            47360,
            48098,
            47474,
            47513,
            47483,
            47517,
            47490,
            47526,
            46935,
            47537,
            47551,
            47500,
            47392,
            47757,
            47477,
            47712,
            47501,
            47869,
            47485,
            47526,
            47492,
            47361,
            47475,
            47518,
            47449,
            47636,
            47558,
            47507,
            47556,
            47716,
            47726,
            47711,
            47489,
            49122,
            47731,
            47483,
            47465,
            47635,
            47510,
            47542,
            47421,
            47542,
            47581,
            47584,
            47499,
            47647,
            47582,
            47483,
            47546,
            49639,
            49338,
            47491,
            47559,
            47502
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            161,
            1901,
            11152,
            27492,
            37998,
            37756,
            26893,
            13202,
            3239,
            409,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            110,
            2228,
            10159,
            28398,
            39999,
            41193,
            32783,
            17186,
            5749,
            1082,
            128,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            50
          ],
          [
            0,
            7,
            129,
            1271,
            6644,
            19540,
            36165,
            40973,
            35353,
            22886,
            10541,
            2587,
            313,
            5,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            230,
            1735,
            7713,
            21052,
            35355,
            44016,
            33393,
            14472,
            4191,
            360,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            490,
            2571,
            8233,
            19385,
            33573,
            39493,
            32109
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            900,
            5932,
            20355,
            33217,
            38831,
            32800,
            15772,
            4126,
            357,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            411,
            3220,
            15201,
            30925,
            41716,
            36373,
            20801,
            7421,
            1325,
            58,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            110,
            1539,
            9525,
            25503,
            38767,
            42330,
            34875,
            18735,
            5816,
            752,
            86,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            121,
            1431,
            7727,
            19247,
            32659,
            41325,
            38971,
            23870,
            11017,
            2825,
            282,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            14,
            240,
            2153,
            10084,
            25558,
            38080,
            40146,
            35106,
            27449,
            16909,
            6161,
            1474,
            84,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            32,
            647,
            3282,
            11136,
            23771,
            42329,
            41785,
            31698,
            16556,
            5385,
            776,
            68,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            154,
            1447,
            5882,
            16353,
            27988,
            38354
          ]
        ]
      },
      "call": {
        "duration": 0.27274057999966317,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015010829993116204,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2919495589994767,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1704416790016694,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014375720020325389,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.315575872999034,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            127,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003513708001264604,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028492829987953883,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5360633510026673,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            6,
            255,
            0,
            62,
            0,
            255,
            1,
            255,
            255
          ],
          [
            58,
            0,
            13,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            28,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            236,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            2,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            13,
            255,
            60,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            2,
            0,
            255,
            11,
            255,
            255
          ],
          [
            62,
            0,
            3,
            0,
            10,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            99,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            60,
            0,
            3,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            126,
            255,
            32,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034749469996313564,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002866533999622334,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2964940599995316,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47999,
            47666,
            47676,
            48080,
            47612,
            47550,
            47594,
            47564,
            47635,
            47414,
            47729,
            47605,
            47651,
            47636,
            47687,
            47497,
            47778,
            47642,
            47773,
            47875,
            47818,
            47759,
            47636,
            47826,
            47727,
            47777,
            47800,
            47650,
            48112,
            47241,
            47756,
            47678,
            47615,
            47603,
            47589,
            47554,
            47516,
            47692,
            47739,
            47654,
            47634,
            47828,
            47667,
            47776,
            47729,
            47687,
            47684,
            47547,
            47671,
            47654,
            47823,
            47677,
            47785,
            48135,
            47660,
            50021,
            47864,
            47648,
            47742,
            47521,
            47612,
            47537,
            47544
          ],
          [
            47999,
            47666,
            47676,
            48080,
            47612,
            47550,
            47594,
            47564,
            47635,
            47414,
            47729,
            47605,
            47651,
            47636,
            47687,
            47497,
            47778,
            47642,
            47773,
            47875,
            47818,
            47759,
            47636,
            47826,
            47727,
            47777,
            47800,
            47650,
            48112,
            47241,
            47756,
            47678,
            47615,
            47603,
            47589,
            47554,
            47516,
            47692,
            47739,
            47654,
            47634,
            47828,
            47667,
            47776,
            47729,
            47687,
            47684,
            47547,
            47671,
            47654,
            47823,
            47677,
            47785,
            48135,
            47660,
            50021,
            47864,
            47648,
            47742,
            47521,
            47612,
            47537,
            47544
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            435,
            6052,
            22778,
            39183,
            35441,
            16851,
            3484,
            323,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            469,
            5094,
            21254,
            37408,
            39235,
            23478,
            5745,
            753,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            107,
            1620,
            13086,
            31741,
            41285,
            30855,
            10976,
            1866,
            149,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            584,
            5503,
            20687,
            37341,
            41943,
            32145,
            13634,
            2732,
            301,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            577,
            6709,
            24218,
            39545,
            43524
          ]
        ]
      },
      "call": {
        "duration": 0.13514812299763435,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016191360009543132,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06922621400008211,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47878,
            47486,
            47443,
            47414,
            47385,
            47418,
            47536,
            47477,
            48052,
            47516,
            47308,
            47490,
            47530,
            47056,
            47610,
            47452,
            47497,
            47517,
            47461,
            47445,
            47514,
            47586,
            47561,
            47578,
            47839,
            47417,
            47426,
            47473,
            47445,
            47423,
            47150,
            47538,
            47531,
            47452,
            47757,
            47640,
            47718,
            47519,
            47161,
            47527,
            47963,
            47379,
            47300,
            47454,
            47570,
            47249,
            47312,
            47371,
            47641,
            47382,
            47592,
            47501,
            47659,
            47547,
            47695,
            47505,
            47714,
            47677,
            47488,
            47434,
            47347,
            47402,
            47122
          ],
          [
            47878,
            47486,
            47443,
            47414,
            47385,
            47418,
            47536,
            47477,
            48052,
            47516,
            47308,
            47490,
            47530,
            47056,
            47610,
            47452,
            47497,
            47517,
            47461,
            47445,
            47514,
            47586,
            47561,
            47578,
            47839,
            47417,
            47426,
            47473,
            47445,
            47423,
            47150,
            47538,
            47531,
            47452,
            47757,
            47640,
            47718,
            47519,
            47161,
            47527,
            47963,
            47379,
            47300,
            47454,
            47570,
            47249,
            47312,
            47371,
            47641,
            47382,
            47592,
            47501,
            47659,
            47547,
            47695,
            47505,
            47714,
            47677,
            47488,
            47434,
            47347,
            47402,
            47122
          ],
          [
            47878,
            47486,
            47443,
            47414,
            47385,
            47418,
            47536,
            47477,
            48052,
            47516,
            47308,
            47490,
            47530,
            47056,
            47610,
            47452,
            47497,
            47517,
            47461,
            47445,
            47514,
            47586,
            47561,
            47578,
            47839,
            47417,
            47426,
            47473,
            47445,
            47423,
            47150,
            47538,
            47531,
            47452,
            47757,
            47640,
            47718,
            47519,
            47161,
            47527,
            47963,
            47379,
            47300,
            47454,
            47570,
            47249,
            47312,
            47371,
            47641,
            47382,
            47592,
            47501,
            47659,
            47547,
            47695,
            47505,
            47714,
            47677,
            47488,
            47434,
            47347,
            47402,
            47122
          ],
          [
            47878,
            47486,
            47443,
            47414,
            47385,
            47418,
            47536,
            47477,
            48052,
            47516,
            47308,
            47490,
            47530,
            47056,
            47610,
            47452,
            47497,
            47517,
            47461,
            47445,
            47514,
            47586,
            47561,
            47578,
            47839,
            47417,
            47426,
            47473,
            47445,
            47423,
            47150,
            47538,
            47531,
            47452,
            47757,
            47640,
            47718,
            47519,
            47161,
            47527,
            47963,
            47379,
            47300,
            47454,
            47570,
            47249,
            47312,
            47371,
            47641,
            47382,
            47592,
            47501,
            47659,
            47547,
            47695,
            47505,
            47714,
            47677,
            47488,
            47434,
            47347,
            47402,
            47122
          ],
          [
            47878,
            47486,
            47443,
            47414,
            47385,
            47418,
            47536,
            47477,
            48052,
            47516,
            47308,
            47490,
            47530,
            47056,
            47610,
            47452,
            47497,
            47517,
            47461,
            47445,
            47514,
            47586,
            47561,
            47578,
            47839,
            47417,
            47426,
            47473,
            47445,
            47423,
            47150,
            47538,
            47531,
            47452,
            47757,
            47640,
            47718,
            47519,
            47161,
            47527,
            47963,
            47379,
            47300,
            47454,
            47570,
            47249,
            47312,
            47371,
            47641,
            47382,
            47592,
            47501,
            47659,
            47547,
            47695,
            47505,
            47714,
            47677,
            47488,
            47434,
            47347,
            47402,
            47122
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            787,
            4485,
            16444,
            32203,
            39648,
            37383,
            25984,
            13606,
            4287,
            766,
            61,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            182,
            1513,
            8113,
            21849,
            35663,
            41774,
            38737,
            25108,
            9872,
            2465,
            362,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            126,
            1005,
            4169,
            11261,
            23818,
            35810,
            43434,
            40550,
            26029,
            10944,
            2611,
            273,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            14,
            279,
            2055,
            5931,
            13715,
            28290,
            38784,
            37768,
            28890,
            15418,
            5095,
            1122,
            98,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40
          ],
          [
            13346,
            4111,
            482,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            84,
            1091,
            7640,
            18560,
            31730,
            39304,
            32467,
            17455,
            7088,
            1184,
            99,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            28,
            574,
            4275,
            13699,
            26620,
            35605,
            33814,
            23554,
            9663,
            1996,
            272,
            7,
            0,
            0,
            0,
            0
          ],
          [
            106,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            66,
            659,
            5101,
            15063,
            26103,
            37674,
            41121,
            33862,
            22542,
            11179,
            3670,
            552,
            55,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            80,
            791,
            3895,
            13572,
            25377,
            34814,
            33943,
            25339,
            12996,
            4464,
            968,
            98,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            131,
            1263,
            5004,
            14690,
            26074,
            35844,
            40561,
            39642,
            27954,
            15637,
            5091,
            868,
            60,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            413,
            2275,
            7059,
            16385,
            28967,
            37116,
            36762,
            31348,
            24044,
            14415,
            6615,
            1583,
            151,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.273109949001082,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014761530001123901,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2922026439991896,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1716729660001874,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045740, 10011435), (411484, 411484), (40051283, 10012821))\nassert ((40045740 > 0 and 10011435 == 0\n  +10011435\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff72e87340>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff72e30a30>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff72efd1c0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045740, 10011435), (411484, 411484), (40051283, 10012821))\nE       assert ((40045740 > 0 and 10011435 == 0\nE         +10011435\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004925060002278769,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}