{
  "created": 1722032913.8354452,
  "duration": 23.534408569335938,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5081670489998942,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14837564999834285,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013524599999072962,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037895040004514158,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479584299995622,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012682189990300685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1325457370003278,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12159657300071558,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013139990005583968,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037745340014225803,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12104387199724442,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012637479994737078,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003309854000690393,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14642014599667164,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012009570018562954,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033401539985788986,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11992961700161686,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011795960017479956,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033295940011157654,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1463140329979069,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001192016999993939,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003343334003147902,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11987486500220257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012000569986412302,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00439062700024806,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002119066997693153,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001103394002711866,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003315853999083629,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016965670001809485,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010969440008921083,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032875030010472983,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004016278999188216,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032896.1344051,
            "msecs": 134.40513610839844,
            "relativeCreated": 7807.427644729614,
            "thread": 281473229963296,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4941
          }
        ]
      },
      "teardown": {
        "duration": 0.0012140370017732494,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033315440014121123,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023946539986354765,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032896.1466227,
            "msecs": 146.6226577758789,
            "relativeCreated": 7819.645166397095,
            "thread": 281473229963296,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4941
          }
        ]
      },
      "teardown": {
        "duration": 0.0011316260024614166,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020408860000316054,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027013210019504186,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032896.1560645,
            "msecs": 156.06451034545898,
            "relativeCreated": 7829.087018966675,
            "thread": 281473229963296,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4941
          }
        ]
      },
      "teardown": {
        "duration": 0.0010495730020920746,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020645559998229146,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003417886000534054,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032896.1654155,
            "msecs": 165.41552543640137,
            "relativeCreated": 7838.438034057617,
            "thread": 281473229963296,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4941
          }
        ]
      },
      "teardown": {
        "duration": 0.0010493039990251418,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033168139998451807,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14642605600238312,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011784260022977833,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033228440006496385,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12014625200026785,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011741960006474983,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1799597819990595,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1475715720007429,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012543279990495648,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015143707001698203,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12110288299663807,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00127772899941192,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.83330839500195,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            114,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            21,
            138,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003566329000022961,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029434850002871826,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8975332280024304,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            26,
            0,
            1,
            0,
            53,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            8,
            255,
            0,
            0,
            0,
            0,
            0,
            15
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            68,
            255,
            255,
            255,
            5
          ],
          [
            7,
            0,
            1,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            15,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            69,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            170,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            2,
            0,
            0,
            255
          ],
          [
            255,
            187,
            255,
            255,
            255,
            255,
            0,
            0,
            225,
            1,
            141,
            255
          ],
          [
            255,
            0,
            92,
            0,
            255,
            0,
            255,
            75,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034583870001370087,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002929775000666268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3023827840006561,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48198,
            47600,
            47504,
            47601,
            47123,
            47272,
            47674,
            47407,
            47664,
            49151,
            47391,
            47908,
            47489,
            50293,
            47351,
            47510,
            47411,
            47464,
            47453,
            47412,
            47451,
            47542,
            47583,
            47435,
            47447,
            47321,
            47372,
            47490,
            47535,
            47502,
            47493,
            47408,
            47463,
            47362,
            47412,
            47341,
            47409,
            47286,
            47509,
            47460,
            47363,
            47404,
            47460,
            47621,
            49007,
            47380,
            47757,
            47468,
            49466,
            47457,
            47526,
            47399,
            47364,
            47495,
            47103,
            47101,
            47262,
            47473,
            47348,
            47310,
            47314,
            47386,
            47501
          ],
          [
            48198,
            47600,
            47504,
            47601,
            47123,
            47272,
            47674,
            47407,
            47664,
            49151,
            47391,
            47908,
            47489,
            50293,
            47351,
            47510,
            47411,
            47464,
            47453,
            47412,
            47451,
            47542,
            47583,
            47435,
            47447,
            47321,
            47372,
            47490,
            47535,
            47502,
            47493,
            47408,
            47463,
            47362,
            47412,
            47341,
            47409,
            47286,
            47509,
            47460,
            47363,
            47404,
            47460,
            47621,
            49007,
            47380,
            47757,
            47468,
            49466,
            47457,
            47526,
            47399,
            47364,
            47495,
            47103,
            47101,
            47262,
            47473,
            47348,
            47310,
            47314,
            47386,
            47501
          ]
        ],
        "eTX_errcounts": [
          [
            40441,
            27130,
            8439,
            1492,
            77,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            230,
            3137,
            16211,
            34635,
            42655,
            31746,
            14574,
            2188,
            131,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            73,
            904,
            7678,
            26341,
            39781,
            36800,
            19345,
            5102,
            591,
            23,
            2,
            0,
            0
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            316,
            4104,
            17657,
            36215,
            42346,
            32024,
            13411,
            3206,
            307,
            8,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            40,
            380,
            4375,
            19484,
            37804,
            42924,
            35427,
            16885,
            3554,
            364,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13375638399884338,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001618416001292644,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06895836399780819,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47876,
            47567,
            47460,
            47183,
            47165,
            47151,
            47174,
            47026,
            47218,
            47102,
            47139,
            47112,
            47216,
            47153,
            47333,
            47317,
            47200,
            47191,
            47231,
            47156,
            48970,
            47172,
            47096,
            47282,
            47044,
            47006,
            46873,
            46950,
            47277,
            47158,
            47236,
            46979,
            47203,
            47223,
            47445,
            47201,
            47224,
            47292,
            47339,
            47292,
            47623,
            47632,
            47195,
            47154,
            47226,
            47098,
            47318,
            47154,
            47143,
            47142,
            47057,
            46885,
            47068,
            47255,
            47049,
            47194,
            47277,
            47146,
            47263,
            48748,
            47424,
            47320,
            46991
          ],
          [
            47876,
            47567,
            47460,
            47183,
            47165,
            47151,
            47174,
            47026,
            47218,
            47102,
            47139,
            47112,
            47216,
            47153,
            47333,
            47317,
            47200,
            47191,
            47231,
            47156,
            48970,
            47172,
            47096,
            47282,
            47044,
            47006,
            46873,
            46950,
            47277,
            47158,
            47236,
            46979,
            47203,
            47223,
            47445,
            47201,
            47224,
            47292,
            47339,
            47292,
            47623,
            47632,
            47195,
            47154,
            47226,
            47098,
            47318,
            47154,
            47143,
            47142,
            47057,
            46885,
            47068,
            47255,
            47049,
            47194,
            47277,
            47146,
            47263,
            48748,
            47424,
            47320,
            46991
          ],
          [
            47876,
            47567,
            47460,
            47183,
            47165,
            47151,
            47174,
            47026,
            47218,
            47102,
            47139,
            47112,
            47216,
            47153,
            47333,
            47317,
            47200,
            47191,
            47231,
            47156,
            48970,
            47172,
            47096,
            47282,
            47044,
            47006,
            46873,
            46950,
            47277,
            47158,
            47236,
            46979,
            47203,
            47223,
            47445,
            47201,
            47224,
            47292,
            47339,
            47292,
            47623,
            47632,
            47195,
            47154,
            47226,
            47098,
            47318,
            47154,
            47143,
            47142,
            47057,
            46885,
            47068,
            47255,
            47049,
            47194,
            47277,
            47146,
            47263,
            48748,
            47424,
            47320,
            46991
          ],
          [
            47876,
            47567,
            47460,
            47183,
            47165,
            47151,
            47174,
            47026,
            47218,
            47102,
            47139,
            47112,
            47216,
            47153,
            47333,
            47317,
            47200,
            47191,
            47231,
            47156,
            48970,
            47172,
            47096,
            47282,
            47044,
            47006,
            46873,
            46950,
            47277,
            47158,
            47236,
            46979,
            47203,
            47223,
            47445,
            47201,
            47224,
            47292,
            47339,
            47292,
            47623,
            47632,
            47195,
            47154,
            47226,
            47098,
            47318,
            47154,
            47143,
            47142,
            47057,
            46885,
            47068,
            47255,
            47049,
            47194,
            47277,
            47146,
            47263,
            48748,
            47424,
            47320,
            46991
          ],
          [
            47876,
            47567,
            47460,
            47183,
            47165,
            47151,
            47174,
            47026,
            47218,
            47102,
            47139,
            47112,
            47216,
            47153,
            47333,
            47317,
            47200,
            47191,
            47231,
            47156,
            48970,
            47172,
            47096,
            47282,
            47044,
            47006,
            46873,
            46950,
            47277,
            47158,
            47236,
            46979,
            47203,
            47223,
            47445,
            47201,
            47224,
            47292,
            47339,
            47292,
            47623,
            47632,
            47195,
            47154,
            47226,
            47098,
            47318,
            47154,
            47143,
            47142,
            47057,
            46885,
            47068,
            47255,
            47049,
            47194,
            47277,
            47146,
            47263,
            48748,
            47424,
            47320,
            46991
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            144,
            1098,
            4908,
            12628,
            24133,
            31104,
            31748,
            28605,
            22750,
            13084,
            3886,
            581,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            58,
            698,
            4164,
            13148,
            25959,
            32168,
            32494,
            27059,
            22620,
            16525,
            10124,
            3841,
            790,
            47,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            7,
            100,
            753,
            3052,
            10433,
            20302,
            31333,
            36987,
            34384,
            25521,
            15627,
            5823,
            957,
            53,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            30,
            456,
            3615,
            11601,
            23528,
            33053,
            37737,
            37834,
            31353,
            20920,
            10387,
            3501,
            522,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            218,
            1471,
            6368,
            15774,
            26175
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            104,
            1101,
            5453,
            15771,
            27005,
            32516,
            32049,
            25265,
            15023,
            5765,
            1275,
            133,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            163,
            1554,
            8237,
            16562,
            27676,
            33328,
            30983,
            24955,
            16397,
            8918,
            2947,
            491,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            20,
            229,
            1854,
            9053,
            19558,
            29803,
            34611,
            34665,
            28124,
            19774,
            9790,
            2222,
            144,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            524,
            3120,
            9704,
            20203,
            28613,
            34108,
            31360,
            26970,
            20260,
            11898,
            5365,
            878,
            94,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            3,
            55,
            592,
            3529,
            11063,
            19965,
            30306,
            37793,
            39080,
            31689,
            21300,
            11000,
            3926,
            864,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            65,
            734,
            3997,
            11530,
            22185,
            33015,
            38702,
            38675,
            33774,
            27265,
            18362,
            8019,
            1565,
            128,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            311,
            1998,
            7677
          ]
        ]
      },
      "call": {
        "duration": 0.27157443900068756,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff83277e70>()\n +    where <built-in method all of numpy.ndarray object at 0xffff83277e70> = array([20, 13, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff83263040>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47876, 47567, 47460, 47183, 47165, 47151, ...], [47876, 47567, 47460, 47183, 47165, 47151, ...], [..., 0, ...], [0, 0, 7, 100, 753, 3052, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 3, 55, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff83277e70>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff83277e70> = array([20, 13, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016129859977809247,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29246423300355673,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1688720070014824,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014372420009749476,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2933274680035538,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            255,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            30,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            159,
            53,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003550548997736769,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002919154998380691,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5389935450002667,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            160,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            189,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            82,
            255,
            113,
            255,
            123,
            0,
            0,
            169,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            250,
            0,
            74,
            1,
            255,
            10,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            95,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            149,
            255,
            153,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            221,
            255,
            255,
            3,
            0,
            107,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            4,
            255,
            0,
            255,
            56,
            255,
            141
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034531659985077567,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029315149986359756,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29553702200064436,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48338,
            47586,
            47776,
            47565,
            47660,
            47463,
            47596,
            47535,
            47532,
            47621,
            47572,
            47623,
            47617,
            47556,
            47600,
            47399,
            47525,
            47436,
            48003,
            47480,
            47528,
            47820,
            47715,
            47524,
            47393,
            47565,
            47725,
            47516,
            47481,
            47645,
            47511,
            47572,
            47591,
            47645,
            47548,
            47492,
            47188,
            47233,
            47593,
            47623,
            47625,
            47745,
            47762,
            47481,
            47518,
            47600,
            47613,
            47549,
            47424,
            47969,
            47513,
            47999,
            47539,
            48139,
            47521,
            47529,
            47578,
            47442,
            47610,
            47547,
            47496,
            47708,
            47748
          ],
          [
            48338,
            47586,
            47776,
            47565,
            47660,
            47463,
            47596,
            47535,
            47532,
            47621,
            47572,
            47623,
            47617,
            47556,
            47600,
            47399,
            47525,
            47436,
            48003,
            47480,
            47528,
            47820,
            47715,
            47524,
            47393,
            47565,
            47725,
            47516,
            47481,
            47645,
            47511,
            47572,
            47591,
            47645,
            47548,
            47492,
            47188,
            47233,
            47593,
            47623,
            47625,
            47745,
            47762,
            47481,
            47518,
            47600,
            47613,
            47549,
            47424,
            47969,
            47513,
            47999,
            47539,
            48139,
            47521,
            47529,
            47578,
            47442,
            47610,
            47547,
            47496,
            47708,
            47748
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            232,
            3969,
            18335,
            36606,
            37246,
            18484,
            4037,
            328,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            129,
            2883,
            16266,
            34190,
            39608,
            25111,
            7517,
            831,
            87,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            1024,
            8207,
            29400,
            41616,
            38393,
            18463,
            4138,
            415,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            204,
            2363,
            13805,
            31695,
            42774,
            38584,
            20396,
            5612,
            490,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13406371100063552,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001636115997825982,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06870611799968174,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47859,
            47321,
            47396,
            47185,
            47399,
            47109,
            47227,
            47316,
            47241,
            47330,
            47394,
            47357,
            47193,
            47697,
            47214,
            47177,
            47329,
            46951,
            47083,
            47274,
            47184,
            47070,
            47255,
            47273,
            47277,
            47311,
            47225,
            47163,
            47371,
            47138,
            47123,
            47116,
            47724,
            47317,
            47221,
            47152,
            47148,
            47130,
            47154,
            47084,
            47204,
            47104,
            46920,
            47363,
            47181,
            47134,
            47416,
            46980,
            47195,
            47278,
            47400,
            47404,
            47603,
            47103,
            47147,
            47167,
            47175,
            47023,
            47303,
            47145,
            47147,
            47205,
            47229
          ],
          [
            47859,
            47321,
            47396,
            47185,
            47399,
            47109,
            47227,
            47316,
            47241,
            47330,
            47394,
            47357,
            47193,
            47697,
            47214,
            47177,
            47329,
            46951,
            47083,
            47274,
            47184,
            47070,
            47255,
            47273,
            47277,
            47311,
            47225,
            47163,
            47371,
            47138,
            47123,
            47116,
            47724,
            47317,
            47221,
            47152,
            47148,
            47130,
            47154,
            47084,
            47204,
            47104,
            46920,
            47363,
            47181,
            47134,
            47416,
            46980,
            47195,
            47278,
            47400,
            47404,
            47603,
            47103,
            47147,
            47167,
            47175,
            47023,
            47303,
            47145,
            47147,
            47205,
            47229
          ],
          [
            47859,
            47321,
            47396,
            47185,
            47399,
            47109,
            47227,
            47316,
            47241,
            47330,
            47394,
            47357,
            47193,
            47697,
            47214,
            47177,
            47329,
            46951,
            47083,
            47274,
            47184,
            47070,
            47255,
            47273,
            47277,
            47311,
            47225,
            47163,
            47371,
            47138,
            47123,
            47116,
            47724,
            47317,
            47221,
            47152,
            47148,
            47130,
            47154,
            47084,
            47204,
            47104,
            46920,
            47363,
            47181,
            47134,
            47416,
            46980,
            47195,
            47278,
            47400,
            47404,
            47603,
            47103,
            47147,
            47167,
            47175,
            47023,
            47303,
            47145,
            47147,
            47205,
            47229
          ],
          [
            47859,
            47321,
            47396,
            47185,
            47399,
            47109,
            47227,
            47316,
            47241,
            47330,
            47394,
            47357,
            47193,
            47697,
            47214,
            47177,
            47329,
            46951,
            47083,
            47274,
            47184,
            47070,
            47255,
            47273,
            47277,
            47311,
            47225,
            47163,
            47371,
            47138,
            47123,
            47116,
            47724,
            47317,
            47221,
            47152,
            47148,
            47130,
            47154,
            47084,
            47204,
            47104,
            46920,
            47363,
            47181,
            47134,
            47416,
            46980,
            47195,
            47278,
            47400,
            47404,
            47603,
            47103,
            47147,
            47167,
            47175,
            47023,
            47303,
            47145,
            47147,
            47205,
            47229
          ],
          [
            47859,
            47321,
            47396,
            47185,
            47399,
            47109,
            47227,
            47316,
            47241,
            47330,
            47394,
            47357,
            47193,
            47697,
            47214,
            47177,
            47329,
            46951,
            47083,
            47274,
            47184,
            47070,
            47255,
            47273,
            47277,
            47311,
            47225,
            47163,
            47371,
            47138,
            47123,
            47116,
            47724,
            47317,
            47221,
            47152,
            47148,
            47130,
            47154,
            47084,
            47204,
            47104,
            46920,
            47363,
            47181,
            47134,
            47416,
            46980,
            47195,
            47278,
            47400,
            47404,
            47603,
            47103,
            47147,
            47167,
            47175,
            47023,
            47303,
            47145,
            47147,
            47205,
            47229
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            384,
            2602,
            11296,
            26493,
            36940,
            36689,
            26197,
            13219,
            2705,
            230,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            453,
            2687,
            12441,
            27755,
            38323,
            39116,
            29577,
            16418,
            5175,
            1097,
            106,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            11
          ],
          [
            0,
            0,
            13,
            597,
            4631,
            15048,
            31597,
            39776,
            34879,
            19278,
            6819,
            776,
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            76,
            949,
            7055,
            23199,
            38331,
            43831,
            39409,
            26472,
            12433,
            2478,
            180,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            54,
            1100,
            7424,
            20822,
            35275,
            39379
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            417,
            3620,
            13426,
            27097,
            33602,
            28933,
            14715,
            3975,
            310,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            48,
            742,
            6233,
            19137,
            34540,
            39576,
            32229,
            18148,
            5992,
            668,
            54,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            81,
            756,
            5714,
            17184,
            32941,
            37850,
            32269,
            17744,
            5662,
            729,
            48,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            176,
            1865,
            8597,
            21946,
            36000,
            41077,
            35329,
            22949,
            8514,
            1700,
            102,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            154,
            1383,
            8228,
            20544,
            33892,
            40877,
            37701,
            26302,
            12718,
            3427,
            373,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            282,
            2462,
            11467,
            25596,
            38203,
            43831,
            38846,
            26360,
            12623,
            4298,
            959,
            119,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            44,
            892,
            5375,
            17205,
            32094
          ]
        ]
      },
      "call": {
        "duration": 0.27020616899972083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014945130023988895,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2912164449990087,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1688467169988144,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014815229988016654,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3679199270009121,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            120,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.008360406001884257,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029314849998627324,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5343531319995236,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            7,
            255,
            0,
            14,
            0,
            255,
            0,
            255,
            255
          ],
          [
            110,
            0,
            17,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            43,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            236,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            7,
            255,
            39,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            4,
            255,
            12,
            255,
            10,
            2,
            0,
            255,
            2,
            255,
            255
          ],
          [
            106,
            0,
            4,
            0,
            3,
            0,
            255,
            116,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            122,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            61,
            0,
            3,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            71,
            255,
            51,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          6
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034735670014924835,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029280350026965607,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959945020011219,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48088,
            47766,
            47894,
            47717,
            49644,
            47690,
            47686,
            47575,
            47508,
            47610,
            47472,
            47546,
            47538,
            47588,
            47468,
            47583,
            47532,
            47611,
            47743,
            47682,
            47663,
            47674,
            47681,
            47571,
            47486,
            47681,
            47737,
            47644,
            47646,
            47472,
            47780,
            48029,
            47766,
            47533,
            47639,
            47617,
            47707,
            47599,
            47636,
            47749,
            47783,
            47562,
            47583,
            47659,
            47701,
            47649,
            47786,
            47289,
            47309,
            47493,
            47384,
            47656,
            47557,
            47590,
            47633,
            47654,
            47634,
            47671,
            49342,
            47683,
            47976,
            47587,
            49875
          ],
          [
            48088,
            47766,
            47894,
            47717,
            49644,
            47690,
            47686,
            47575,
            47508,
            47610,
            47472,
            47546,
            47538,
            47588,
            47468,
            47583,
            47532,
            47611,
            47743,
            47682,
            47663,
            47674,
            47681,
            47571,
            47486,
            47681,
            47737,
            47644,
            47646,
            47472,
            47780,
            48029,
            47766,
            47533,
            47639,
            47617,
            47707,
            47599,
            47636,
            47749,
            47783,
            47562,
            47583,
            47659,
            47701,
            47649,
            47786,
            47289,
            47309,
            47493,
            47384,
            47656,
            47557,
            47590,
            47633,
            47654,
            47634,
            47671,
            49342,
            47683,
            47976,
            47587,
            49875
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            600,
            7203,
            25291,
            39892,
            33275,
            14498,
            2819,
            344,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            87,
            524,
            6791,
            23108,
            38611,
            37228,
            20712,
            4869,
            561,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            0,
            0,
            0,
            154,
            2081,
            14796,
            33033,
            40688,
            29209,
            9756,
            1425,
            118,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            523,
            6180,
            22811,
            38721,
            41611,
            30396,
            12203,
            1778,
            227,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            732,
            8361,
            26041,
            40356,
            45361
          ]
        ]
      },
      "call": {
        "duration": 0.13447085000007064,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016173059993889183,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06900759400014067,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48040,
            47518,
            47206,
            47413,
            47210,
            47165,
            47100,
            47223,
            47169,
            47185,
            47300,
            47282,
            47122,
            51145,
            49753,
            47908,
            46982,
            47449,
            47362,
            50420,
            48805,
            47413,
            46925,
            47350,
            47177,
            47367,
            47097,
            47350,
            47239,
            47300,
            47344,
            47037,
            47156,
            47328,
            47167,
            47340,
            47167,
            47715,
            47284,
            47094,
            47435,
            47215,
            47248,
            47317,
            47251,
            47326,
            47253,
            46795,
            47254,
            47214,
            47300,
            47341,
            47265,
            47525,
            49419,
            49315,
            47185,
            47307,
            47237,
            47166,
            47233,
            47432,
            47261
          ],
          [
            48040,
            47518,
            47206,
            47413,
            47210,
            47165,
            47100,
            47223,
            47169,
            47185,
            47300,
            47282,
            47122,
            51145,
            49753,
            47908,
            46982,
            47449,
            47362,
            50420,
            48805,
            47413,
            46925,
            47350,
            47177,
            47367,
            47097,
            47350,
            47239,
            47300,
            47344,
            47037,
            47156,
            47328,
            47167,
            47340,
            47167,
            47715,
            47284,
            47094,
            47435,
            47215,
            47248,
            47317,
            47251,
            47326,
            47253,
            46795,
            47254,
            47214,
            47300,
            47341,
            47265,
            47525,
            49419,
            49315,
            47185,
            47307,
            47237,
            47166,
            47233,
            47432,
            47261
          ],
          [
            48040,
            47518,
            47206,
            47413,
            47210,
            47165,
            47100,
            47223,
            47169,
            47185,
            47300,
            47282,
            47122,
            51145,
            49753,
            47908,
            46982,
            47449,
            47362,
            50420,
            48805,
            47413,
            46925,
            47350,
            47177,
            47367,
            47097,
            47350,
            47239,
            47300,
            47344,
            47037,
            47156,
            47328,
            47167,
            47340,
            47167,
            47715,
            47284,
            47094,
            47435,
            47215,
            47248,
            47317,
            47251,
            47326,
            47253,
            46795,
            47254,
            47214,
            47300,
            47341,
            47265,
            47525,
            49419,
            49315,
            47185,
            47307,
            47237,
            47166,
            47233,
            47432,
            47261
          ],
          [
            48040,
            47518,
            47206,
            47413,
            47210,
            47165,
            47100,
            47223,
            47169,
            47185,
            47300,
            47282,
            47122,
            51145,
            49753,
            47908,
            46982,
            47449,
            47362,
            50420,
            48805,
            47413,
            46925,
            47350,
            47177,
            47367,
            47097,
            47350,
            47239,
            47300,
            47344,
            47037,
            47156,
            47328,
            47167,
            47340,
            47167,
            47715,
            47284,
            47094,
            47435,
            47215,
            47248,
            47317,
            47251,
            47326,
            47253,
            46795,
            47254,
            47214,
            47300,
            47341,
            47265,
            47525,
            49419,
            49315,
            47185,
            47307,
            47237,
            47166,
            47233,
            47432,
            47261
          ],
          [
            48040,
            47518,
            47206,
            47413,
            47210,
            47165,
            47100,
            47223,
            47169,
            47185,
            47300,
            47282,
            47122,
            51145,
            49753,
            47908,
            46982,
            47449,
            47362,
            50420,
            48805,
            47413,
            46925,
            47350,
            47177,
            47367,
            47097,
            47350,
            47239,
            47300,
            47344,
            47037,
            47156,
            47328,
            47167,
            47340,
            47167,
            47715,
            47284,
            47094,
            47435,
            47215,
            47248,
            47317,
            47251,
            47326,
            47253,
            46795,
            47254,
            47214,
            47300,
            47341,
            47265,
            47525,
            49419,
            49315,
            47185,
            47307,
            47237,
            47166,
            47233,
            47432,
            47261
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            103,
            952,
            5196,
            16833,
            32971,
            39475,
            35218,
            24545,
            13168,
            4034,
            658,
            87,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            21,
            303,
            2467,
            10854,
            24893,
            36854,
            38718,
            32346,
            20901,
            7936,
            1762,
            142,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            292,
            2329,
            11578,
            27082,
            41907,
            43583,
            34875,
            21719,
            9280,
            2181,
            263,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            962,
            5175,
            16423,
            30331,
            38714,
            35511,
            25522,
            11179,
            2450,
            228,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            10697,
            3215,
            337,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            178,
            1808,
            9504,
            22367,
            34823,
            37860,
            28721,
            14955,
            4402,
            501,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            532,
            4702,
            15153,
            27946,
            38810,
            35043,
            23003,
            10250,
            1787,
            206,
            1,
            0,
            0,
            0,
            0
          ],
          [
            46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            38,
            522,
            4875,
            16512,
            30377,
            40358,
            40252,
            32232,
            20572,
            7603,
            1384,
            75,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            271,
            2774,
            13204,
            27014,
            38166,
            35676,
            24459,
            10767,
            2768,
            411,
            31,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            692,
            4470,
            16751,
            30082,
            40126,
            41654,
            35344,
            23666,
            13656,
            3737,
            917,
            90,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            78,
            1154,
            6808,
            19137,
            32134,
            40640,
            40272,
            31508,
            19587,
            8711,
            2503,
            290,
            9,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2721473910023633,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014943940004741307,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29159364399674814,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1700839740005904,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045584, 10011396), (411734, 411734), (40050009, 10012503))\nassert ((40045584 > 0 and 10011396 == 0\n  +10011396\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff83263370>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff82fbf610>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff87bd4e80>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045584, 10011396), (411734, 411734), (40050009, 10012503))\nE       assert ((40045584 > 0 and 10011396 == 0\nE         +10011396\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.0050047110016748775,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}