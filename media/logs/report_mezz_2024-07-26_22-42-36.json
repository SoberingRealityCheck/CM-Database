{
  "created": 1722033775.7289343,
  "duration": 23.26206111907959,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5057075229997281,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14783358099884936,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012977689984836616,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003831625999737298,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14771630899849697,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012806979975721333,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13192218599942862,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12159082500147633,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012652780023927335,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003827394997642841,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12063782399854972,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013145690027158707,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033831150030891877,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1461249530002533,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011779159976867959,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033748950008885004,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1195631400005368,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011598560013226233,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033362540016241837,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14585812799850828,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011989769991487265,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033758849967853166,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11974236400055815,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012054270009684842,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0044169390021124855,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002135538001311943,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011570660026336554,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003359084999829065,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017096480005420744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011004549996869173,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033391940014553256,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004024980000394862,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033758.303442,
            "msecs": 303.44200134277344,
            "relativeCreated": 7810.305118560791,
            "thread": 281473039347744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5351
          }
        ]
      },
      "teardown": {
        "duration": 0.001215657001012005,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033558150025783107,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023853530001360923,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033758.3157334,
            "msecs": 315.7334327697754,
            "relativeCreated": 7822.596549987793,
            "thread": 281473039347744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5351
          }
        ]
      },
      "teardown": {
        "duration": 0.0012014969979645684,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021199980001256336,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002702341000258457,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033758.32523,
            "msecs": 325.2298831939697,
            "relativeCreated": 7832.093000411987,
            "thread": 281473039347744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5351
          }
        ]
      },
      "teardown": {
        "duration": 0.0010477140021976084,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020984570001019165,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034607870002218988,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033758.3346999,
            "msecs": 334.6998691558838,
            "relativeCreated": 7841.562986373901,
            "thread": 281473039347744,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5351
          }
        ]
      },
      "teardown": {
        "duration": 0.0011169550016347785,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033626849981374107,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14633366799898795,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001161206000688253,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033634649989835452,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12062237399732112,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001198916997964261,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1748276439975598,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14740253099807887,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012347070005489513,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015332322996982839,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1210232730009011,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012865790013165679,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8345608279996668,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            4,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            129,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            14,
            115,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035511789974407293,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002936494998721173,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8929000999996788,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            6,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            10,
            255,
            9,
            255,
            0,
            0,
            0,
            0,
            0,
            20
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            219,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            32,
            255,
            255,
            255,
            18
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            2,
            41,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            140,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            207,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            169,
            255,
            255,
            255,
            255,
            0,
            0,
            157,
            2,
            104,
            255
          ],
          [
            255,
            0,
            104,
            0,
            255,
            0,
            255,
            40,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034705969992501196,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002892454001994338,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.302562097000191,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48225,
            47413,
            47645,
            47426,
            47315,
            47441,
            47469,
            47420,
            47448,
            47406,
            47563,
            47452,
            47468,
            47479,
            47537,
            47263,
            53399,
            47456,
            47397,
            47284,
            47802,
            47595,
            47256,
            47422,
            47452,
            47431,
            47269,
            47454,
            47256,
            47383,
            47341,
            47573,
            47446,
            47496,
            47471,
            47408,
            47224,
            47361,
            47372,
            47398,
            47240,
            47499,
            47256,
            47425,
            47463,
            47571,
            47356,
            47317,
            47314,
            47462,
            47658,
            47854,
            47532,
            47419,
            47683,
            47593,
            47420,
            47516,
            47428,
            47317,
            47198,
            47393,
            47486
          ],
          [
            48225,
            47413,
            47645,
            47426,
            47315,
            47441,
            47469,
            47420,
            47448,
            47406,
            47563,
            47452,
            47468,
            47479,
            47537,
            47263,
            53399,
            47456,
            47397,
            47284,
            47802,
            47595,
            47256,
            47422,
            47452,
            47431,
            47269,
            47454,
            47256,
            47383,
            47341,
            47573,
            47446,
            47496,
            47471,
            47408,
            47224,
            47361,
            47372,
            47398,
            47240,
            47499,
            47256,
            47425,
            47463,
            47571,
            47356,
            47317,
            47314,
            47462,
            47658,
            47854,
            47532,
            47419,
            47683,
            47593,
            47420,
            47516,
            47428,
            47317,
            47198,
            47393,
            47486
          ]
        ],
        "eTX_errcounts": [
          [
            40881,
            26826,
            8502,
            1455,
            93,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            110,
            3175,
            15120,
            34424,
            42353,
            31325,
            14527,
            2368,
            139,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            880,
            7199,
            25313,
            40530,
            37738,
            20393,
            5619,
            689,
            25,
            0,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            275,
            3666,
            17045,
            34854,
            42161,
            31973,
            14254,
            3450,
            318,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            276,
            4287,
            18684,
            35637,
            42687,
            35416,
            17787,
            3458,
            426,
            27,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13397381199683878,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016357559979951475,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06906460300160688,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47888,
            47224,
            47072,
            47359,
            47096,
            47529,
            47275,
            47060,
            47201,
            47378,
            48790,
            49114,
            47161,
            47093,
            46926,
            47318,
            47041,
            47197,
            47238,
            47379,
            47176,
            47264,
            47116,
            47358,
            47174,
            47273,
            47121,
            47323,
            47120,
            47571,
            49475,
            47049,
            47023,
            47339,
            47157,
            47203,
            47135,
            47274,
            47043,
            47248,
            47013,
            46881,
            47647,
            47313,
            47107,
            47524,
            47226,
            47599,
            47531,
            47335,
            47194,
            47370,
            47151,
            47372,
            47087,
            47181,
            46718,
            47311,
            47173,
            47261,
            47393,
            47262,
            47272
          ],
          [
            47888,
            47224,
            47072,
            47359,
            47096,
            47529,
            47275,
            47060,
            47201,
            47378,
            48790,
            49114,
            47161,
            47093,
            46926,
            47318,
            47041,
            47197,
            47238,
            47379,
            47176,
            47264,
            47116,
            47358,
            47174,
            47273,
            47121,
            47323,
            47120,
            47571,
            49475,
            47049,
            47023,
            47339,
            47157,
            47203,
            47135,
            47274,
            47043,
            47248,
            47013,
            46881,
            47647,
            47313,
            47107,
            47524,
            47226,
            47599,
            47531,
            47335,
            47194,
            47370,
            47151,
            47372,
            47087,
            47181,
            46718,
            47311,
            47173,
            47261,
            47393,
            47262,
            47272
          ],
          [
            47888,
            47224,
            47072,
            47359,
            47096,
            47529,
            47275,
            47060,
            47201,
            47378,
            48790,
            49114,
            47161,
            47093,
            46926,
            47318,
            47041,
            47197,
            47238,
            47379,
            47176,
            47264,
            47116,
            47358,
            47174,
            47273,
            47121,
            47323,
            47120,
            47571,
            49475,
            47049,
            47023,
            47339,
            47157,
            47203,
            47135,
            47274,
            47043,
            47248,
            47013,
            46881,
            47647,
            47313,
            47107,
            47524,
            47226,
            47599,
            47531,
            47335,
            47194,
            47370,
            47151,
            47372,
            47087,
            47181,
            46718,
            47311,
            47173,
            47261,
            47393,
            47262,
            47272
          ],
          [
            47888,
            47224,
            47072,
            47359,
            47096,
            47529,
            47275,
            47060,
            47201,
            47378,
            48790,
            49114,
            47161,
            47093,
            46926,
            47318,
            47041,
            47197,
            47238,
            47379,
            47176,
            47264,
            47116,
            47358,
            47174,
            47273,
            47121,
            47323,
            47120,
            47571,
            49475,
            47049,
            47023,
            47339,
            47157,
            47203,
            47135,
            47274,
            47043,
            47248,
            47013,
            46881,
            47647,
            47313,
            47107,
            47524,
            47226,
            47599,
            47531,
            47335,
            47194,
            47370,
            47151,
            47372,
            47087,
            47181,
            46718,
            47311,
            47173,
            47261,
            47393,
            47262,
            47272
          ],
          [
            47888,
            47224,
            47072,
            47359,
            47096,
            47529,
            47275,
            47060,
            47201,
            47378,
            48790,
            49114,
            47161,
            47093,
            46926,
            47318,
            47041,
            47197,
            47238,
            47379,
            47176,
            47264,
            47116,
            47358,
            47174,
            47273,
            47121,
            47323,
            47120,
            47571,
            49475,
            47049,
            47023,
            47339,
            47157,
            47203,
            47135,
            47274,
            47043,
            47248,
            47013,
            46881,
            47647,
            47313,
            47107,
            47524,
            47226,
            47599,
            47531,
            47335,
            47194,
            47370,
            47151,
            47372,
            47087,
            47181,
            46718,
            47311,
            47173,
            47261,
            47393,
            47262,
            47272
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            56,
            683,
            3844,
            13714,
            27822,
            35308,
            35013,
            27788,
            18251,
            9954,
            3167,
            420,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            686,
            4669,
            14252,
            27667,
            34739,
            37028,
            29652,
            21807,
            11923,
            4078,
            839,
            94,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            11,
            208,
            2358,
            11314,
            23190,
            33406,
            38341,
            34893,
            24085,
            12802,
            4527,
            918,
            144,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            321,
            3474,
            14076,
            26266,
            34855,
            39174,
            35913,
            25528,
            18575,
            9585,
            2524,
            276,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            35,
            605,
            5044,
            14693,
            25387
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            48,
            1386,
            7687,
            20090,
            30691,
            33443,
            30678,
            21511,
            11257,
            3366,
            526,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            108,
            1311,
            9651,
            21426,
            33074,
            35583,
            31406,
            24102,
            16435,
            6973,
            1426,
            125,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            125,
            1420,
            9513,
            21390,
            31081,
            34162,
            31121,
            23145,
            13949,
            5540,
            1100,
            108,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            191,
            1640,
            8386,
            21588,
            30694,
            33833,
            31399,
            24647,
            17298,
            8896,
            2847,
            376,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            26,
            340,
            2874,
            10366,
            22054,
            32847,
            40664,
            39854,
            30296,
            20458,
            11555,
            3366,
            437,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            501,
            3849,
            12170,
            23281,
            33650,
            40211,
            37097,
            28491,
            20068,
            12066,
            4865,
            1856,
            500,
            56,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            126,
            1627,
            7318
          ]
        ]
      },
      "call": {
        "duration": 0.27257990700309165,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff77c2ced0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff77c2ced0> = array([13, 13, 14, 13, 10]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff77c244f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47888, 47224, 47072, 47359, 47096, 47529, ...], [47888, 47224, 47072, 47359, 47096, 47529, ...], [...0, 0, ...], [0, 0, 0, 11, 208, 2358, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 26, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff77c2ced0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff77c2ced0> = array([13, 13, 14, 13, 10]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016369269978895318,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29272229700291064,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1696196799966856,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014571930005331524,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2982818719974603,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            2,
            255,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            41,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003504468000755878,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002892304000852164,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5386812600008852,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            157,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            135,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            98,
            255,
            151,
            255,
            171,
            0,
            0,
            193,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            235,
            0,
            56,
            0,
            255,
            6,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            58,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            6,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            4,
            255,
            137,
            255,
            140,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            188,
            255,
            255,
            7,
            0,
            115,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            68,
            255,
            193
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003487817997665843,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002864313999452861,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29566794199854485,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48073,
            47918,
            47530,
            50773,
            47502,
            47468,
            47496,
            47397,
            47391,
            47256,
            47619,
            47322,
            47498,
            47378,
            47434,
            47313,
            47264,
            47300,
            47391,
            47252,
            47438,
            47363,
            47405,
            47513,
            47363,
            47433,
            47093,
            47418,
            47500,
            47326,
            47360,
            47629,
            49138,
            47157,
            47681,
            47528,
            49630,
            47514,
            47356,
            47253,
            47411,
            47206,
            47396,
            47434,
            47174,
            47242,
            47271,
            47261,
            47259,
            47387,
            47236,
            47290,
            47334,
            47517,
            47361,
            47547,
            60090,
            47537,
            47390,
            47472,
            47185,
            47161,
            47535
          ],
          [
            48073,
            47918,
            47530,
            50773,
            47502,
            47468,
            47496,
            47397,
            47391,
            47256,
            47619,
            47322,
            47498,
            47378,
            47434,
            47313,
            47264,
            47300,
            47391,
            47252,
            47438,
            47363,
            47405,
            47513,
            47363,
            47433,
            47093,
            47418,
            47500,
            47326,
            47360,
            47629,
            49138,
            47157,
            47681,
            47528,
            49630,
            47514,
            47356,
            47253,
            47411,
            47206,
            47396,
            47434,
            47174,
            47242,
            47271,
            47261,
            47259,
            47387,
            47236,
            47290,
            47334,
            47517,
            47361,
            47547,
            60090,
            47537,
            47390,
            47472,
            47185,
            47161,
            47535
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            249,
            3810,
            17347,
            36213,
            36807,
            19401,
            4380,
            261,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            108,
            2532,
            16649,
            34218,
            39770,
            26692,
            8946,
            1008,
            108,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            883,
            8060,
            28527,
            41611,
            38936,
            19575,
            4727,
            436,
            27,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            103,
            2324,
            13036,
            30929,
            42309,
            38785,
            20663,
            5583,
            557,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13443426199955866,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016194060008274391,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06770971200239728,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48401,
            47634,
            47310,
            47168,
            47107,
            47443,
            47099,
            47256,
            47326,
            47248,
            47136,
            47356,
            47267,
            47371,
            47416,
            47312,
            46972,
            47497,
            47203,
            47608,
            47598,
            47298,
            47323,
            47492,
            47238,
            47289,
            47422,
            47312,
            47204,
            47500,
            47205,
            47338,
            47413,
            47263,
            47202,
            47445,
            47318,
            47724,
            47899,
            46991,
            47062,
            47439,
            47286,
            47297,
            47554,
            47350,
            47169,
            47365,
            47236,
            47261,
            47348,
            47302,
            47308,
            47495,
            47388,
            48947,
            49137,
            47016,
            47240,
            47361,
            47200,
            47292,
            47384
          ],
          [
            48401,
            47634,
            47310,
            47168,
            47107,
            47443,
            47099,
            47256,
            47326,
            47248,
            47136,
            47356,
            47267,
            47371,
            47416,
            47312,
            46972,
            47497,
            47203,
            47608,
            47598,
            47298,
            47323,
            47492,
            47238,
            47289,
            47422,
            47312,
            47204,
            47500,
            47205,
            47338,
            47413,
            47263,
            47202,
            47445,
            47318,
            47724,
            47899,
            46991,
            47062,
            47439,
            47286,
            47297,
            47554,
            47350,
            47169,
            47365,
            47236,
            47261,
            47348,
            47302,
            47308,
            47495,
            47388,
            48947,
            49137,
            47016,
            47240,
            47361,
            47200,
            47292,
            47384
          ],
          [
            48401,
            47634,
            47310,
            47168,
            47107,
            47443,
            47099,
            47256,
            47326,
            47248,
            47136,
            47356,
            47267,
            47371,
            47416,
            47312,
            46972,
            47497,
            47203,
            47608,
            47598,
            47298,
            47323,
            47492,
            47238,
            47289,
            47422,
            47312,
            47204,
            47500,
            47205,
            47338,
            47413,
            47263,
            47202,
            47445,
            47318,
            47724,
            47899,
            46991,
            47062,
            47439,
            47286,
            47297,
            47554,
            47350,
            47169,
            47365,
            47236,
            47261,
            47348,
            47302,
            47308,
            47495,
            47388,
            48947,
            49137,
            47016,
            47240,
            47361,
            47200,
            47292,
            47384
          ],
          [
            48401,
            47634,
            47310,
            47168,
            47107,
            47443,
            47099,
            47256,
            47326,
            47248,
            47136,
            47356,
            47267,
            47371,
            47416,
            47312,
            46972,
            47497,
            47203,
            47608,
            47598,
            47298,
            47323,
            47492,
            47238,
            47289,
            47422,
            47312,
            47204,
            47500,
            47205,
            47338,
            47413,
            47263,
            47202,
            47445,
            47318,
            47724,
            47899,
            46991,
            47062,
            47439,
            47286,
            47297,
            47554,
            47350,
            47169,
            47365,
            47236,
            47261,
            47348,
            47302,
            47308,
            47495,
            47388,
            48947,
            49137,
            47016,
            47240,
            47361,
            47200,
            47292,
            47384
          ],
          [
            48401,
            47634,
            47310,
            47168,
            47107,
            47443,
            47099,
            47256,
            47326,
            47248,
            47136,
            47356,
            47267,
            47371,
            47416,
            47312,
            46972,
            47497,
            47203,
            47608,
            47598,
            47298,
            47323,
            47492,
            47238,
            47289,
            47422,
            47312,
            47204,
            47500,
            47205,
            47338,
            47413,
            47263,
            47202,
            47445,
            47318,
            47724,
            47899,
            46991,
            47062,
            47439,
            47286,
            47297,
            47554,
            47350,
            47169,
            47365,
            47236,
            47261,
            47348,
            47302,
            47308,
            47495,
            47388,
            48947,
            49137,
            47016,
            47240,
            47361,
            47200,
            47292,
            47384
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            348,
            2935,
            11699,
            23621,
            35490,
            37945,
            26734,
            12015,
            2355,
            248,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            90,
            1024,
            3956,
            10474,
            24239,
            38084,
            40135,
            28690,
            12804,
            3321,
            686,
            52,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            7
          ],
          [
            0,
            1,
            37,
            592,
            4807,
            14099,
            28552,
            39230,
            36436,
            19721,
            5859,
            633,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            254,
            1835,
            7393,
            18662,
            33783,
            42808,
            40705,
            28323,
            13938,
            3490,
            288,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            97,
            1771,
            8316,
            21156,
            35133,
            41428
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            707,
            4586,
            14079,
            27754,
            37468,
            32024,
            16438,
            4328,
            501,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            584,
            4767,
            16980,
            35298,
            41633,
            35336,
            19863,
            6471,
            1001,
            55,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            43,
            1048,
            6192,
            16377,
            30607,
            38833,
            32554,
            17437,
            5166,
            505,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            238,
            1568,
            6388,
            18344,
            33465,
            42267,
            36275,
            23538,
            8453,
            1806,
            164,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            202,
            1976,
            8216,
            18961,
            31952,
            41140,
            39734,
            27304,
            10606,
            1657,
            134,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            794,
            3311,
            10881,
            23056,
            35556,
            42529,
            39305,
            27126,
            10789,
            2814,
            478,
            41,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            125,
            1519,
            9337,
            19723,
            32837
          ]
        ]
      },
      "call": {
        "duration": 0.27099191199886263,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014877930007060058,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29269388600005186,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169399894999515,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014438719990721438,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3398795110006176,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          3,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034550870004750323,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028885849969810806,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5399303969970788,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            5,
            255,
            17,
            255,
            2,
            23,
            0,
            255,
            0,
            255,
            255
          ],
          [
            86,
            0,
            15,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            30,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            249,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            203
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            1,
            0,
            255,
            0,
            255,
            255
          ],
          [
            88,
            0,
            7,
            0,
            14,
            0,
            255,
            126,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            87,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            68,
            0,
            4,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            79,
            255,
            40,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034774969972204417,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028663849989243317,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29639797900017584,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47908,
            47440,
            47482,
            47346,
            47222,
            47054,
            47087,
            47450,
            47322,
            47507,
            47502,
            47298,
            47303,
            47236,
            47411,
            47258,
            47299,
            47531,
            47465,
            47126,
            47100,
            47689,
            47440,
            47357,
            47637,
            47621,
            47333,
            47431,
            47698,
            47495,
            47707,
            47413,
            47434,
            47317,
            47413,
            47489,
            47274,
            47730,
            47315,
            47391,
            47330,
            47377,
            47389,
            47416,
            46976,
            47225,
            47537,
            47313,
            47408,
            47520,
            47479,
            47366,
            47330,
            47490,
            47403,
            49294,
            47240,
            47666,
            47610,
            49081,
            47654,
            47487,
            47514
          ],
          [
            47908,
            47440,
            47482,
            47346,
            47222,
            47054,
            47087,
            47450,
            47322,
            47507,
            47502,
            47298,
            47303,
            47236,
            47411,
            47258,
            47299,
            47531,
            47465,
            47126,
            47100,
            47689,
            47440,
            47357,
            47637,
            47621,
            47333,
            47431,
            47698,
            47495,
            47707,
            47413,
            47434,
            47317,
            47413,
            47489,
            47274,
            47730,
            47315,
            47391,
            47330,
            47377,
            47389,
            47416,
            46976,
            47225,
            47537,
            47313,
            47408,
            47520,
            47479,
            47366,
            47330,
            47490,
            47403,
            49294,
            47240,
            47666,
            47610,
            49081,
            47654,
            47487,
            47514
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            18,
            629,
            7231,
            24734,
            38833,
            33525,
            14972,
            2807,
            216,
            8,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            579,
            6130,
            22541,
            38214,
            37890,
            21075,
            5196,
            585,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1
          ],
          [
            0,
            0,
            0,
            3,
            140,
            2217,
            14316,
            33094,
            41161,
            28839,
            9316,
            1578,
            145,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            680,
            5928,
            22000,
            37923,
            41655,
            30551,
            12348,
            2163,
            259,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            617,
            7900,
            24819,
            40053,
            43698
          ]
        ]
      },
      "call": {
        "duration": 0.1342498779995367,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001617095997062279,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06826031399759813,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47835,
            47180,
            46773,
            47173,
            47166,
            47143,
            47118,
            47122,
            47238,
            47230,
            47186,
            47256,
            47135,
            47378,
            47054,
            47250,
            47230,
            47537,
            47512,
            47157,
            46817,
            47130,
            47066,
            47178,
            47073,
            47220,
            47137,
            46947,
            47037,
            47167,
            47293,
            46982,
            47052,
            47141,
            47147,
            47269,
            49098,
            47504,
            47229,
            46974,
            47110,
            47214,
            47038,
            47045,
            47066,
            47215,
            47059,
            47165,
            47154,
            47162,
            47090,
            47164,
            46883,
            47375,
            47256,
            47172,
            49129,
            48719,
            47146,
            47136,
            47115,
            47214,
            47177
          ],
          [
            47835,
            47180,
            46773,
            47173,
            47166,
            47143,
            47118,
            47122,
            47238,
            47230,
            47186,
            47256,
            47135,
            47378,
            47054,
            47250,
            47230,
            47537,
            47512,
            47157,
            46817,
            47130,
            47066,
            47178,
            47073,
            47220,
            47137,
            46947,
            47037,
            47167,
            47293,
            46982,
            47052,
            47141,
            47147,
            47269,
            49098,
            47504,
            47229,
            46974,
            47110,
            47214,
            47038,
            47045,
            47066,
            47215,
            47059,
            47165,
            47154,
            47162,
            47090,
            47164,
            46883,
            47375,
            47256,
            47172,
            49129,
            48719,
            47146,
            47136,
            47115,
            47214,
            47177
          ],
          [
            47835,
            47180,
            46773,
            47173,
            47166,
            47143,
            47118,
            47122,
            47238,
            47230,
            47186,
            47256,
            47135,
            47378,
            47054,
            47250,
            47230,
            47537,
            47512,
            47157,
            46817,
            47130,
            47066,
            47178,
            47073,
            47220,
            47137,
            46947,
            47037,
            47167,
            47293,
            46982,
            47052,
            47141,
            47147,
            47269,
            49098,
            47504,
            47229,
            46974,
            47110,
            47214,
            47038,
            47045,
            47066,
            47215,
            47059,
            47165,
            47154,
            47162,
            47090,
            47164,
            46883,
            47375,
            47256,
            47172,
            49129,
            48719,
            47146,
            47136,
            47115,
            47214,
            47177
          ],
          [
            47835,
            47180,
            46773,
            47173,
            47166,
            47143,
            47118,
            47122,
            47238,
            47230,
            47186,
            47256,
            47135,
            47378,
            47054,
            47250,
            47230,
            47537,
            47512,
            47157,
            46817,
            47130,
            47066,
            47178,
            47073,
            47220,
            47137,
            46947,
            47037,
            47167,
            47293,
            46982,
            47052,
            47141,
            47147,
            47269,
            49098,
            47504,
            47229,
            46974,
            47110,
            47214,
            47038,
            47045,
            47066,
            47215,
            47059,
            47165,
            47154,
            47162,
            47090,
            47164,
            46883,
            47375,
            47256,
            47172,
            49129,
            48719,
            47146,
            47136,
            47115,
            47214,
            47177
          ],
          [
            47835,
            47180,
            46773,
            47173,
            47166,
            47143,
            47118,
            47122,
            47238,
            47230,
            47186,
            47256,
            47135,
            47378,
            47054,
            47250,
            47230,
            47537,
            47512,
            47157,
            46817,
            47130,
            47066,
            47178,
            47073,
            47220,
            47137,
            46947,
            47037,
            47167,
            47293,
            46982,
            47052,
            47141,
            47147,
            47269,
            49098,
            47504,
            47229,
            46974,
            47110,
            47214,
            47038,
            47045,
            47066,
            47215,
            47059,
            47165,
            47154,
            47162,
            47090,
            47164,
            46883,
            47375,
            47256,
            47172,
            49129,
            48719,
            47146,
            47136,
            47115,
            47214,
            47177
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            288,
            2067,
            6909,
            15031,
            27361,
            36864,
            34984,
            21818,
            8809,
            2225,
            383,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            10,
            533,
            4047,
            14216,
            24532,
            35394,
            39663,
            34103,
            20797,
            8180,
            1674,
            140,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            285,
            1706,
            4929,
            10871,
            21488,
            34464,
            40932,
            36345,
            22345,
            9070,
            1920,
            260,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            93,
            1246,
            6581,
            15779,
            28642,
            39787,
            40133,
            29872,
            12114,
            2295,
            259,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            11943,
            3011,
            338,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            141,
            1369,
            7138,
            18589,
            32234,
            38923,
            31027,
            15677,
            5109,
            671,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            108,
            1457,
            8397,
            17984,
            28513,
            38299,
            35481,
            22723,
            8654,
            1291,
            141,
            1,
            0,
            0,
            0,
            0
          ],
          [
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            64,
            946,
            4307,
            12757,
            25500,
            38830,
            42440,
            34359,
            21324,
            8208,
            1712,
            164,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            75,
            1221,
            6034,
            16990,
            27613,
            37793,
            35979,
            23720,
            8869,
            1880,
            215,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            195,
            1964,
            6433,
            15497,
            25298,
            35595,
            40801,
            35654,
            22451,
            10065,
            2504,
            377,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            295,
            2697,
            10325,
            20068,
            31417,
            40178,
            42547,
            37101,
            23895,
            9397,
            1831,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2699128469976131,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015087040010257624,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29287515099713346,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1690961070016783,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00482518699936918,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}