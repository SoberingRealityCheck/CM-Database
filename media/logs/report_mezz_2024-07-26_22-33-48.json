{
  "created": 1722033247.6532865,
  "duration": 23.484700202941895,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5042789639992407,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1482931770005962,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013187699987611268,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00391037699955632,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14808587299921783,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012601779999386054,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13176940999983344,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12162954399900627,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012749680026900023,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003914486998837674,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12086836799790035,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001280668999243062,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034833770005207043,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14640202499867883,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001185116998385638,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034680770004342776,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11993399700077134,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011597060001804493,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034768969999277033,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1460225770024408,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001172876000055112,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003476836998743238,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11978213399925153,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011636360031843651,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004500040002312744,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020824359999096487,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011359759992046747,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003434505997574888,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001746878999256296,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011157839981024154,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034185459990112577,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004051859999890439,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033229.9413593,
            "msecs": 941.359281539917,
            "relativeCreated": 7746.823787689209,
            "thread": 281473273946144,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5100
          }
        ]
      },
      "teardown": {
        "duration": 0.0012419070008036215,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003449567000643583,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002443164001306286,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033229.953917,
            "msecs": 953.9170265197754,
            "relativeCreated": 7759.381532669067,
            "thread": 281473273946144,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5100
          }
        ]
      },
      "teardown": {
        "duration": 0.001149235999037046,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021709379980165977,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027424809995864052,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033229.9637086,
            "msecs": 963.7086391448975,
            "relativeCreated": 7769.173145294189,
            "thread": 281473273946144,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5100
          }
        ]
      },
      "teardown": {
        "duration": 0.0010747740016086027,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0022087990000727586,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003459736002696445,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033229.973493,
            "msecs": 973.4930992126465,
            "relativeCreated": 7778.9576053619385,
            "thread": 281473273946144,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5100
          }
        ]
      },
      "teardown": {
        "duration": 0.0010665839981811587,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003430005999689456,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14641897599722142,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012483569989854004,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034248759984620847,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12023271399812074,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011663660006888676,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17725345200233278,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14764456299963058,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001275059003091883,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015297580001060851,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117812399810646,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012561580006149597,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8471341730000859,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            5,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            86,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            21,
            135,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003577579998818692,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029481060009857174,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8985718500007351,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            23,
            0,
            0,
            0,
            47,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            16,
            255,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            30
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            76,
            255,
            255,
            255,
            8
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            50,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            76,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            241,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            193,
            255,
            255,
            255,
            255,
            0,
            0,
            218,
            1,
            175,
            255
          ],
          [
            255,
            0,
            114,
            0,
            255,
            0,
            255,
            92,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035234579991083592,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029841370014764834,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30331697500150767,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47779,
            47107,
            47419,
            47351,
            47434,
            47462,
            47349,
            47435,
            47510,
            47288,
            47305,
            47497,
            47510,
            47436,
            47439,
            47426,
            47300,
            47296,
            47304,
            49751,
            47493,
            47636,
            47500,
            49378,
            47611,
            47367,
            47460,
            47505,
            47401,
            47362,
            47532,
            47385,
            47372,
            47300,
            47414,
            47355,
            47511,
            47340,
            47400,
            47356,
            47417,
            47329,
            47546,
            47471,
            47488,
            47429,
            47512,
            47294,
            47500,
            47387,
            47455,
            47139,
            46998,
            47286,
            47419,
            47459,
            49006,
            47403,
            47600,
            47336,
            47794,
            47505,
            49643
          ],
          [
            47779,
            47107,
            47419,
            47351,
            47434,
            47462,
            47349,
            47435,
            47510,
            47288,
            47305,
            47497,
            47510,
            47436,
            47439,
            47426,
            47300,
            47296,
            47304,
            49751,
            47493,
            47636,
            47500,
            49378,
            47611,
            47367,
            47460,
            47505,
            47401,
            47362,
            47532,
            47385,
            47372,
            47300,
            47414,
            47355,
            47511,
            47340,
            47400,
            47356,
            47417,
            47329,
            47546,
            47471,
            47488,
            47429,
            47512,
            47294,
            47500,
            47387,
            47455,
            47139,
            46998,
            47286,
            47419,
            47459,
            49006,
            47403,
            47600,
            47336,
            47794,
            47505,
            49643
          ]
        ],
        "eTX_errcounts": [
          [
            39708,
            25808,
            8180,
            1101,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            218,
            3058,
            16026,
            34600,
            42355,
            30825,
            13393,
            2135,
            203,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            925,
            7519,
            25682,
            40400,
            37485,
            19565,
            4882,
            597,
            19,
            2,
            0,
            0
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            418,
            4170,
            17432,
            36030,
            42087,
            33101,
            13200,
            3381,
            308,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            499,
            4821,
            19275,
            36968,
            43052,
            35236,
            17313,
            3233,
            318,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13349279899921385,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016180860002350528,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06910728699949686,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47551,
            47454,
            47140,
            47691,
            47178,
            47196,
            47259,
            47211,
            47118,
            47112,
            47076,
            47184,
            47218,
            47106,
            47240,
            47332,
            47301,
            47214,
            47406,
            47257,
            47216,
            47266,
            47367,
            47354,
            46988,
            47035,
            47235,
            47247,
            47258,
            47285,
            47173,
            47340,
            47219,
            47405,
            47172,
            47292,
            47341,
            47122,
            47239,
            47331,
            47251,
            47239,
            47277,
            47701,
            47236,
            47107,
            47098,
            47264,
            47375,
            46782,
            47417,
            47285,
            47297,
            47233,
            47336,
            47487,
            47278,
            47180,
            47248,
            47390,
            47208,
            47407,
            49182
          ],
          [
            47551,
            47454,
            47140,
            47691,
            47178,
            47196,
            47259,
            47211,
            47118,
            47112,
            47076,
            47184,
            47218,
            47106,
            47240,
            47332,
            47301,
            47214,
            47406,
            47257,
            47216,
            47266,
            47367,
            47354,
            46988,
            47035,
            47235,
            47247,
            47258,
            47285,
            47173,
            47340,
            47219,
            47405,
            47172,
            47292,
            47341,
            47122,
            47239,
            47331,
            47251,
            47239,
            47277,
            47701,
            47236,
            47107,
            47098,
            47264,
            47375,
            46782,
            47417,
            47285,
            47297,
            47233,
            47336,
            47487,
            47278,
            47180,
            47248,
            47390,
            47208,
            47407,
            49182
          ],
          [
            47551,
            47454,
            47140,
            47691,
            47178,
            47196,
            47259,
            47211,
            47118,
            47112,
            47076,
            47184,
            47218,
            47106,
            47240,
            47332,
            47301,
            47214,
            47406,
            47257,
            47216,
            47266,
            47367,
            47354,
            46988,
            47035,
            47235,
            47247,
            47258,
            47285,
            47173,
            47340,
            47219,
            47405,
            47172,
            47292,
            47341,
            47122,
            47239,
            47331,
            47251,
            47239,
            47277,
            47701,
            47236,
            47107,
            47098,
            47264,
            47375,
            46782,
            47417,
            47285,
            47297,
            47233,
            47336,
            47487,
            47278,
            47180,
            47248,
            47390,
            47208,
            47407,
            49182
          ],
          [
            47551,
            47454,
            47140,
            47691,
            47178,
            47196,
            47259,
            47211,
            47118,
            47112,
            47076,
            47184,
            47218,
            47106,
            47240,
            47332,
            47301,
            47214,
            47406,
            47257,
            47216,
            47266,
            47367,
            47354,
            46988,
            47035,
            47235,
            47247,
            47258,
            47285,
            47173,
            47340,
            47219,
            47405,
            47172,
            47292,
            47341,
            47122,
            47239,
            47331,
            47251,
            47239,
            47277,
            47701,
            47236,
            47107,
            47098,
            47264,
            47375,
            46782,
            47417,
            47285,
            47297,
            47233,
            47336,
            47487,
            47278,
            47180,
            47248,
            47390,
            47208,
            47407,
            49182
          ],
          [
            47551,
            47454,
            47140,
            47691,
            47178,
            47196,
            47259,
            47211,
            47118,
            47112,
            47076,
            47184,
            47218,
            47106,
            47240,
            47332,
            47301,
            47214,
            47406,
            47257,
            47216,
            47266,
            47367,
            47354,
            46988,
            47035,
            47235,
            47247,
            47258,
            47285,
            47173,
            47340,
            47219,
            47405,
            47172,
            47292,
            47341,
            47122,
            47239,
            47331,
            47251,
            47239,
            47277,
            47701,
            47236,
            47107,
            47098,
            47264,
            47375,
            46782,
            47417,
            47285,
            47297,
            47233,
            47336,
            47487,
            47278,
            47180,
            47248,
            47390,
            47208,
            47407,
            49182
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            39,
            711,
            4220,
            13062,
            26138,
            35558,
            36301,
            27990,
            17213,
            8069,
            2185,
            267,
            13,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            82,
            1203,
            6155,
            14877,
            24661,
            31924,
            36496,
            33383,
            24741,
            12150,
            3419,
            478,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            2,
            145,
            864,
            3220,
            11283,
            21504,
            31585,
            37217,
            33803,
            25234,
            15264,
            5757,
            769,
            59,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            55,
            722,
            4664,
            13586,
            24393,
            33786,
            38332,
            37827,
            30261,
            19883,
            10842,
            3973,
            708,
            84,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            222,
            1524,
            6782,
            16561,
            27950
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            64,
            1142,
            5904,
            16665,
            27586,
            32023,
            32004,
            24797,
            14446,
            5509,
            1048,
            55,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            205,
            1708,
            8773,
            17267,
            28609,
            33569,
            30603,
            23846,
            16060,
            8777,
            2927,
            289,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            276,
            2317,
            9361,
            19910,
            30328,
            34693,
            33822,
            27055,
            18878,
            9500,
            2018,
            210,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            36,
            547,
            3259,
            10337,
            20937,
            29756,
            34268,
            30424,
            25537,
            19152,
            11306,
            4836,
            948,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            2,
            42,
            698,
            4062,
            11154,
            20451,
            30983,
            38401,
            39284,
            31030,
            20486,
            10304,
            3357,
            672,
            33,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            75,
            872,
            4738,
            11716,
            23253,
            33218,
            39480,
            39390,
            33649,
            26401,
            17232,
            6908,
            1110,
            138,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            346,
            2410,
            8474
          ]
        ]
      },
      "call": {
        "duration": 0.27144150599997374,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff85bf5c30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff85bf5c30> = array([22, 12, 18, 21, 13]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff85bdd400>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47551, 47454, 47140, 47691, 47178, 47196, ...], [47551, 47454, 47140, 47691, 47178, 47196, ...], [..., 0, ...], [0, 0, 2, 145, 864, 3220, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 2, 42, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff85bf5c30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff85bf5c30> = array([22, 12, 18, 21, 13]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001618566002434818,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29298765500061563,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1709247729995695,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014612429986300413,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.30561421099992,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            15,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            165,
            81,
            10,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            28,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034986179998668376,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002941685997939203,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5352120809984626,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            135,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            117,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            75,
            255,
            125,
            255,
            140,
            0,
            0,
            210,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            252,
            0,
            87,
            3,
            255,
            31,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            126,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            131,
            255,
            141,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            173,
            255,
            255,
            10,
            0,
            115,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            64,
            255,
            194
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003487426998617593,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029082639994157944,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29600461199879646,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48218,
            47352,
            47371,
            47415,
            47550,
            47403,
            47451,
            47510,
            47374,
            47288,
            47506,
            47281,
            47279,
            47200,
            47333,
            47359,
            47503,
            47286,
            47374,
            47224,
            47333,
            47252,
            47427,
            47311,
            47399,
            47504,
            47518,
            47388,
            47395,
            47076,
            47084,
            47347,
            47435,
            47330,
            47407,
            47297,
            49244,
            47306,
            47795,
            47376,
            47653,
            47353,
            49754,
            47334,
            47237,
            47348,
            47513,
            47356,
            47352,
            47471,
            47411,
            47368,
            47514,
            47251,
            47120,
            47163,
            47309,
            47408,
            47261,
            47291,
            47375,
            47356,
            47176
          ],
          [
            48218,
            47352,
            47371,
            47415,
            47550,
            47403,
            47451,
            47510,
            47374,
            47288,
            47506,
            47281,
            47279,
            47200,
            47333,
            47359,
            47503,
            47286,
            47374,
            47224,
            47333,
            47252,
            47427,
            47311,
            47399,
            47504,
            47518,
            47388,
            47395,
            47076,
            47084,
            47347,
            47435,
            47330,
            47407,
            47297,
            49244,
            47306,
            47795,
            47376,
            47653,
            47353,
            49754,
            47334,
            47237,
            47348,
            47513,
            47356,
            47352,
            47471,
            47411,
            47368,
            47514,
            47251,
            47120,
            47163,
            47309,
            47408,
            47261,
            47291,
            47375,
            47356,
            47176
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            218,
            3876,
            18377,
            36630,
            35337,
            18447,
            4084,
            365,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            126,
            2787,
            16674,
            35206,
            39473,
            24797,
            7896,
            570,
            56,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            1018,
            8656,
            28866,
            42270,
            38740,
            18601,
            4351,
            463,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            192,
            2791,
            13755,
            33293,
            42576,
            38249,
            20066,
            5388,
            532,
            16,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13314248100141413,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001609115999599453,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06885546100238571,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50143,
            49250,
            47283,
            47242,
            47258,
            47164,
            47263,
            47321,
            47053,
            47109,
            47155,
            47263,
            47248,
            47187,
            46986,
            47344,
            47295,
            47283,
            47316,
            47206,
            47229,
            47695,
            47365,
            47176,
            47181,
            47144,
            47117,
            47271,
            47332,
            47180,
            47030,
            47086,
            47271,
            47346,
            47193,
            47356,
            47283,
            47375,
            47180,
            47075,
            47117,
            47342,
            47480,
            47788,
            47124,
            47279,
            47162,
            47380,
            47189,
            47176,
            47320,
            47281,
            47002,
            47394,
            47014,
            47325,
            47118,
            47298,
            47257,
            47194,
            47074,
            47285,
            47179
          ],
          [
            50143,
            49250,
            47283,
            47242,
            47258,
            47164,
            47263,
            47321,
            47053,
            47109,
            47155,
            47263,
            47248,
            47187,
            46986,
            47344,
            47295,
            47283,
            47316,
            47206,
            47229,
            47695,
            47365,
            47176,
            47181,
            47144,
            47117,
            47271,
            47332,
            47180,
            47030,
            47086,
            47271,
            47346,
            47193,
            47356,
            47283,
            47375,
            47180,
            47075,
            47117,
            47342,
            47480,
            47788,
            47124,
            47279,
            47162,
            47380,
            47189,
            47176,
            47320,
            47281,
            47002,
            47394,
            47014,
            47325,
            47118,
            47298,
            47257,
            47194,
            47074,
            47285,
            47179
          ],
          [
            50143,
            49250,
            47283,
            47242,
            47258,
            47164,
            47263,
            47321,
            47053,
            47109,
            47155,
            47263,
            47248,
            47187,
            46986,
            47344,
            47295,
            47283,
            47316,
            47206,
            47229,
            47695,
            47365,
            47176,
            47181,
            47144,
            47117,
            47271,
            47332,
            47180,
            47030,
            47086,
            47271,
            47346,
            47193,
            47356,
            47283,
            47375,
            47180,
            47075,
            47117,
            47342,
            47480,
            47788,
            47124,
            47279,
            47162,
            47380,
            47189,
            47176,
            47320,
            47281,
            47002,
            47394,
            47014,
            47325,
            47118,
            47298,
            47257,
            47194,
            47074,
            47285,
            47179
          ],
          [
            50143,
            49250,
            47283,
            47242,
            47258,
            47164,
            47263,
            47321,
            47053,
            47109,
            47155,
            47263,
            47248,
            47187,
            46986,
            47344,
            47295,
            47283,
            47316,
            47206,
            47229,
            47695,
            47365,
            47176,
            47181,
            47144,
            47117,
            47271,
            47332,
            47180,
            47030,
            47086,
            47271,
            47346,
            47193,
            47356,
            47283,
            47375,
            47180,
            47075,
            47117,
            47342,
            47480,
            47788,
            47124,
            47279,
            47162,
            47380,
            47189,
            47176,
            47320,
            47281,
            47002,
            47394,
            47014,
            47325,
            47118,
            47298,
            47257,
            47194,
            47074,
            47285,
            47179
          ],
          [
            50143,
            49250,
            47283,
            47242,
            47258,
            47164,
            47263,
            47321,
            47053,
            47109,
            47155,
            47263,
            47248,
            47187,
            46986,
            47344,
            47295,
            47283,
            47316,
            47206,
            47229,
            47695,
            47365,
            47176,
            47181,
            47144,
            47117,
            47271,
            47332,
            47180,
            47030,
            47086,
            47271,
            47346,
            47193,
            47356,
            47283,
            47375,
            47180,
            47075,
            47117,
            47342,
            47480,
            47788,
            47124,
            47279,
            47162,
            47380,
            47189,
            47176,
            47320,
            47281,
            47002,
            47394,
            47014,
            47325,
            47118,
            47298,
            47257,
            47194,
            47074,
            47285,
            47179
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            313,
            2543,
            11728,
            23945,
            34159,
            34399,
            23340,
            11282,
            3331,
            495,
            36,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            28,
            557,
            3335,
            13097,
            26104,
            36177,
            37209,
            27252,
            14354,
            3639,
            566,
            29,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            43,
            598,
            4966,
            16068,
            31800,
            39636,
            34362,
            19254,
            6370,
            716,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            96,
            1077,
            7729,
            23058,
            38627,
            43914,
            39183,
            25757,
            12787,
            2497,
            176,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            138,
            1173,
            8070,
            21854,
            35775,
            39153
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            380,
            3391,
            14191,
            27484,
            34173,
            28791,
            14089,
            3875,
            407,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            841,
            6455,
            19905,
            34801,
            39636,
            32751,
            18791,
            5576,
            712,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            62,
            952,
            5647,
            17734,
            33032,
            38658,
            31104,
            17229,
            5423,
            808,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            156,
            1715,
            8644,
            22173,
            35915,
            41299,
            34859,
            21791,
            7950,
            1825,
            114,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            2,
            108,
            1409,
            7726,
            20813,
            34233,
            41020,
            37186,
            25231,
            12106,
            2694,
            331,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            340,
            2358,
            11494,
            26252,
            38820,
            43868,
            38823,
            26077,
            11925,
            3782,
            910,
            96,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            23,
            803,
            5662,
            17907,
            32798
          ]
        ]
      },
      "call": {
        "duration": 0.2692300070011697,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016250459993898403,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917503079988819,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170498312996642,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014521229968522675,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3531469089975872,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            119,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            254,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035057880013482645,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002941414997621905,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.539653140000155,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            5,
            255,
            7,
            255,
            4,
            17,
            0,
            255,
            0,
            255,
            255
          ],
          [
            41,
            0,
            13,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            40,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            253,
            255,
            0,
            13,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            5,
            255,
            29,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            1,
            0,
            255,
            2,
            255,
            255
          ],
          [
            37,
            0,
            2,
            0,
            12,
            0,
            255,
            115,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            147,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            57,
            0,
            3,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            89,
            255,
            66,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034822679990611505,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029026850024820305,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29645459200037294,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48161,
            47512,
            47316,
            47269,
            47374,
            47199,
            47483,
            47442,
            47409,
            47358,
            47375,
            47223,
            47492,
            47506,
            47243,
            47430,
            47336,
            47324,
            47411,
            47498,
            47350,
            47272,
            47404,
            47344,
            47507,
            47437,
            47248,
            47453,
            47840,
            47272,
            47758,
            47788,
            47758,
            47533,
            47283,
            47327,
            47338,
            47671,
            47282,
            47393,
            47309,
            47397,
            47285,
            47381,
            47308,
            47429,
            47201,
            47103,
            47416,
            47608,
            47462,
            47455,
            47277,
            47321,
            47365,
            47418,
            47264,
            47338,
            47433,
            47342,
            47491,
            48184,
            47444
          ],
          [
            48161,
            47512,
            47316,
            47269,
            47374,
            47199,
            47483,
            47442,
            47409,
            47358,
            47375,
            47223,
            47492,
            47506,
            47243,
            47430,
            47336,
            47324,
            47411,
            47498,
            47350,
            47272,
            47404,
            47344,
            47507,
            47437,
            47248,
            47453,
            47840,
            47272,
            47758,
            47788,
            47758,
            47533,
            47283,
            47327,
            47338,
            47671,
            47282,
            47393,
            47309,
            47397,
            47285,
            47381,
            47308,
            47429,
            47201,
            47103,
            47416,
            47608,
            47462,
            47455,
            47277,
            47321,
            47365,
            47418,
            47264,
            47338,
            47433,
            47342,
            47491,
            48184,
            47444
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            792,
            7718,
            24772,
            39351,
            33553,
            14534,
            2640,
            314,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50,
            653,
            6323,
            22756,
            38502,
            37300,
            19909,
            4890,
            552,
            63,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            121,
            1964,
            14705,
            33509,
            41384,
            28542,
            9315,
            1413,
            152,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            611,
            5681,
            22076,
            38702,
            41763,
            30138,
            11917,
            1936,
            254,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            885,
            7948,
            25749,
            40944,
            43630
          ]
        ]
      },
      "call": {
        "duration": 0.13373457299894653,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016194359996006824,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06929392099846154,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47968,
            47271,
            47152,
            47238,
            47142,
            47232,
            47330,
            47242,
            47125,
            47215,
            47109,
            47348,
            47209,
            47252,
            47689,
            47354,
            47085,
            47092,
            47021,
            47084,
            47201,
            47269,
            46853,
            47180,
            47024,
            47249,
            47080,
            47220,
            47167,
            47311,
            47357,
            46984,
            46789,
            47467,
            47494,
            49456,
            47168,
            47191,
            47313,
            47160,
            46984,
            47220,
            47087,
            47186,
            47173,
            47201,
            47190,
            46963,
            47214,
            47292,
            47255,
            47273,
            47182,
            47200,
            48860,
            49108,
            47100,
            47027,
            47114,
            47154,
            47200,
            47276,
            47091
          ],
          [
            47968,
            47271,
            47152,
            47238,
            47142,
            47232,
            47330,
            47242,
            47125,
            47215,
            47109,
            47348,
            47209,
            47252,
            47689,
            47354,
            47085,
            47092,
            47021,
            47084,
            47201,
            47269,
            46853,
            47180,
            47024,
            47249,
            47080,
            47220,
            47167,
            47311,
            47357,
            46984,
            46789,
            47467,
            47494,
            49456,
            47168,
            47191,
            47313,
            47160,
            46984,
            47220,
            47087,
            47186,
            47173,
            47201,
            47190,
            46963,
            47214,
            47292,
            47255,
            47273,
            47182,
            47200,
            48860,
            49108,
            47100,
            47027,
            47114,
            47154,
            47200,
            47276,
            47091
          ],
          [
            47968,
            47271,
            47152,
            47238,
            47142,
            47232,
            47330,
            47242,
            47125,
            47215,
            47109,
            47348,
            47209,
            47252,
            47689,
            47354,
            47085,
            47092,
            47021,
            47084,
            47201,
            47269,
            46853,
            47180,
            47024,
            47249,
            47080,
            47220,
            47167,
            47311,
            47357,
            46984,
            46789,
            47467,
            47494,
            49456,
            47168,
            47191,
            47313,
            47160,
            46984,
            47220,
            47087,
            47186,
            47173,
            47201,
            47190,
            46963,
            47214,
            47292,
            47255,
            47273,
            47182,
            47200,
            48860,
            49108,
            47100,
            47027,
            47114,
            47154,
            47200,
            47276,
            47091
          ],
          [
            47968,
            47271,
            47152,
            47238,
            47142,
            47232,
            47330,
            47242,
            47125,
            47215,
            47109,
            47348,
            47209,
            47252,
            47689,
            47354,
            47085,
            47092,
            47021,
            47084,
            47201,
            47269,
            46853,
            47180,
            47024,
            47249,
            47080,
            47220,
            47167,
            47311,
            47357,
            46984,
            46789,
            47467,
            47494,
            49456,
            47168,
            47191,
            47313,
            47160,
            46984,
            47220,
            47087,
            47186,
            47173,
            47201,
            47190,
            46963,
            47214,
            47292,
            47255,
            47273,
            47182,
            47200,
            48860,
            49108,
            47100,
            47027,
            47114,
            47154,
            47200,
            47276,
            47091
          ],
          [
            47968,
            47271,
            47152,
            47238,
            47142,
            47232,
            47330,
            47242,
            47125,
            47215,
            47109,
            47348,
            47209,
            47252,
            47689,
            47354,
            47085,
            47092,
            47021,
            47084,
            47201,
            47269,
            46853,
            47180,
            47024,
            47249,
            47080,
            47220,
            47167,
            47311,
            47357,
            46984,
            46789,
            47467,
            47494,
            49456,
            47168,
            47191,
            47313,
            47160,
            46984,
            47220,
            47087,
            47186,
            47173,
            47201,
            47190,
            46963,
            47214,
            47292,
            47255,
            47273,
            47182,
            47200,
            48860,
            49108,
            47100,
            47027,
            47114,
            47154,
            47200,
            47276,
            47091
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            102,
            949,
            6080,
            16376,
            27958,
            35159,
            32168,
            21975,
            10793,
            2730,
            337,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            268,
            2192,
            10303,
            24937,
            36779,
            39054,
            30119,
            16896,
            6864,
            2255,
            344,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            426,
            2644,
            12242,
            26733,
            38993,
            41401,
            34208,
            21737,
            9083,
            2528,
            254,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            69,
            1031,
            5974,
            17558,
            30886,
            38384,
            34542,
            24837,
            11233,
            2333,
            248,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            10903,
            2880,
            237,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            148,
            1850,
            9215,
            22475,
            34681,
            37523,
            28504,
            14967,
            4498,
            530,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            357,
            4976,
            15592,
            28817,
            39058,
            34734,
            22297,
            9339,
            2062,
            153,
            10,
            0,
            0,
            0,
            0
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            20,
            510,
            4515,
            15593,
            29119,
            40202,
            39988,
            31750,
            20678,
            8086,
            1331,
            67,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            285,
            2974,
            12710,
            27464,
            38082,
            34612,
            23475,
            10873,
            2979,
            202,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            23,
            656,
            4178,
            15521,
            28932,
            39529,
            42132,
            34699,
            23592,
            12597,
            3631,
            853,
            89,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            102,
            1330,
            6755,
            19073,
            32467,
            41167,
            40222,
            31953,
            19341,
            8632,
            2060,
            295,
            18,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2695573439996224,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014854529981676023,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292150457000389,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1714347540000745,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045693, 10011423), (411369, 411369), (40048596, 10012149))\nassert ((40045693 > 0 and 10011423 == 0\n  +10011423\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff85bdd1f0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff859ae3a0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff85cdb640>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045693, 10011423), (411369, 411369), (40048596, 10012149))\nE       assert ((40045693 > 0 and 10011423 == 0\nE         +10011423\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.005022411001846194,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}