{
  "created": 1722029705.7455263,
  "duration": 35.13463282585144,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5039753259989084,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14827017599964165,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013470599988067988,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003795445001742337,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14750104900303995,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012752380025631282,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13100566099819844,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12148962799983565,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012539080016722437,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003775615001359256,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12101525799880619,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012935380000271834,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033787350002967287,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14752447900173138,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012078270010533743,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003339375001814915,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.120643790000031,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011706570003298111,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003333344000566285,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1472158920005313,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011809770003310405,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033455250013503246,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12074480200317339,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001176416000816971,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00440280799739412,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0020929370002704673,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011403550015529618,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033243739999306854,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017449289989599492,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001084073999663815,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003297313000075519,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004085310996742919,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029679.1524842,
            "msecs": 152.48417854309082,
            "relativeCreated": 10563.830614089966,
            "thread": 281473853788192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4052
          }
        ]
      },
      "teardown": {
        "duration": 0.001192167001136113,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00334807499893941,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023663630017836113,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029679.1647844,
            "msecs": 164.78443145751953,
            "relativeCreated": 10576.130867004395,
            "thread": 281473853788192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4052
          }
        ]
      },
      "teardown": {
        "duration": 0.0011720660004357342,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020836959993175697,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027246610006841365,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029679.1742268,
            "msecs": 174.2267608642578,
            "relativeCreated": 10585.573196411133,
            "thread": 281473853788192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4052
          }
        ]
      },
      "teardown": {
        "duration": 0.0010364029985794332,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020562459976645187,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003469127001153538,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722029679.1836762,
            "msecs": 183.67624282836914,
            "relativeCreated": 10595.022678375244,
            "thread": 281473853788192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4052
          }
        ]
      },
      "teardown": {
        "duration": 0.0010742039994511288,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033276450012635905,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.15361749499788857,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011935469992749859,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033235339979000855,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12062041900207987,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012106169997423422,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17862212299951352,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14809068199974718,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012734680021821987,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.01522882000062964,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12157060000026831,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012605390002136119,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.7384354200003145,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            228,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            149,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            226,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            38,
            201,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0036530010002024937,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028771850011253264,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8972112219998962,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            9,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            0,
            0,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            66,
            255,
            255,
            255,
            20
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            49,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            132,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            156,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            221,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            4,
            208,
            255
          ],
          [
            255,
            0,
            139,
            0,
            255,
            0,
            255,
            109,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034939369979838375,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028798249986721203,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30298149499867577,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47903,
            47491,
            47401,
            47319,
            47523,
            47487,
            47441,
            47505,
            47392,
            47336,
            47142,
            47111,
            47389,
            49323,
            47421,
            47832,
            47596,
            47471,
            47485,
            47452,
            47358,
            47291,
            47593,
            47328,
            47252,
            47380,
            47326,
            47384,
            47488,
            47297,
            47413,
            47454,
            47558,
            47449,
            47541,
            47627,
            47509,
            47673,
            47521,
            47479,
            47900,
            47342,
            49453,
            47598,
            47403,
            47310,
            47407,
            47255,
            47225,
            47321,
            47333,
            47342,
            47452,
            47467,
            47224,
            47586,
            47481,
            47513,
            47614,
            47480,
            47097,
            47211,
            47483
          ],
          [
            47903,
            47491,
            47401,
            47319,
            47523,
            47487,
            47441,
            47505,
            47392,
            47336,
            47142,
            47111,
            47389,
            49323,
            47421,
            47832,
            47596,
            47471,
            47485,
            47452,
            47358,
            47291,
            47593,
            47328,
            47252,
            47380,
            47326,
            47384,
            47488,
            47297,
            47413,
            47454,
            47558,
            47449,
            47541,
            47627,
            47509,
            47673,
            47521,
            47479,
            47900,
            47342,
            49453,
            47598,
            47403,
            47310,
            47407,
            47255,
            47225,
            47321,
            47333,
            47342,
            47452,
            47467,
            47224,
            47586,
            47481,
            47513,
            47614,
            47480,
            47097,
            47211,
            47483
          ]
        ],
        "eTX_errcounts": [
          [
            41134,
            28819,
            9353,
            1753,
            130,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            143,
            2446,
            13617,
            32432,
            42944,
            33680,
            16584,
            2778,
            242,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            770,
            6329,
            22970,
            38801,
            39013,
            22302,
            6605,
            715,
            47,
            0,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            191,
            3044,
            15081,
            34274,
            42504,
            33235,
            15329,
            3815,
            524,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            216,
            3285,
            16986,
            34449,
            42743,
            36756,
            19684,
            3941,
            455,
            24,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.135100331997819,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001601375999598531,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.07407513099678908,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47945,
            47154,
            47156,
            46807,
            47200,
            47168,
            47243,
            47230,
            47442,
            47615,
            47264,
            47155,
            47193,
            47058,
            47217,
            47263,
            47211,
            47205,
            47290,
            47148,
            47200,
            47295,
            47181,
            47071,
            47314,
            47269,
            48748,
            48858,
            47156,
            47183,
            47267,
            47195,
            47103,
            47137,
            47212,
            47169,
            47111,
            47202,
            47261,
            47179,
            47261,
            47285,
            47147,
            47287,
            47521,
            47334,
            47207,
            47126,
            47133,
            47204,
            47205,
            47165,
            46863,
            47656,
            47112,
            47172,
            47356,
            47405,
            47378,
            47199,
            47262,
            47656,
            47380
          ],
          [
            47945,
            47154,
            47156,
            46807,
            47200,
            47168,
            47243,
            47230,
            47442,
            47615,
            47264,
            47155,
            47193,
            47058,
            47217,
            47263,
            47211,
            47205,
            47290,
            47148,
            47200,
            47295,
            47181,
            47071,
            47314,
            47269,
            48748,
            48858,
            47156,
            47183,
            47267,
            47195,
            47103,
            47137,
            47212,
            47169,
            47111,
            47202,
            47261,
            47179,
            47261,
            47285,
            47147,
            47287,
            47521,
            47334,
            47207,
            47126,
            47133,
            47204,
            47205,
            47165,
            46863,
            47656,
            47112,
            47172,
            47356,
            47405,
            47378,
            47199,
            47262,
            47656,
            47380
          ],
          [
            47945,
            47154,
            47156,
            46807,
            47200,
            47168,
            47243,
            47230,
            47442,
            47615,
            47264,
            47155,
            47193,
            47058,
            47217,
            47263,
            47211,
            47205,
            47290,
            47148,
            47200,
            47295,
            47181,
            47071,
            47314,
            47269,
            48748,
            48858,
            47156,
            47183,
            47267,
            47195,
            47103,
            47137,
            47212,
            47169,
            47111,
            47202,
            47261,
            47179,
            47261,
            47285,
            47147,
            47287,
            47521,
            47334,
            47207,
            47126,
            47133,
            47204,
            47205,
            47165,
            46863,
            47656,
            47112,
            47172,
            47356,
            47405,
            47378,
            47199,
            47262,
            47656,
            47380
          ],
          [
            47945,
            47154,
            47156,
            46807,
            47200,
            47168,
            47243,
            47230,
            47442,
            47615,
            47264,
            47155,
            47193,
            47058,
            47217,
            47263,
            47211,
            47205,
            47290,
            47148,
            47200,
            47295,
            47181,
            47071,
            47314,
            47269,
            48748,
            48858,
            47156,
            47183,
            47267,
            47195,
            47103,
            47137,
            47212,
            47169,
            47111,
            47202,
            47261,
            47179,
            47261,
            47285,
            47147,
            47287,
            47521,
            47334,
            47207,
            47126,
            47133,
            47204,
            47205,
            47165,
            46863,
            47656,
            47112,
            47172,
            47356,
            47405,
            47378,
            47199,
            47262,
            47656,
            47380
          ],
          [
            47945,
            47154,
            47156,
            46807,
            47200,
            47168,
            47243,
            47230,
            47442,
            47615,
            47264,
            47155,
            47193,
            47058,
            47217,
            47263,
            47211,
            47205,
            47290,
            47148,
            47200,
            47295,
            47181,
            47071,
            47314,
            47269,
            48748,
            48858,
            47156,
            47183,
            47267,
            47195,
            47103,
            47137,
            47212,
            47169,
            47111,
            47202,
            47261,
            47179,
            47261,
            47285,
            47147,
            47287,
            47521,
            47334,
            47207,
            47126,
            47133,
            47204,
            47205,
            47165,
            46863,
            47656,
            47112,
            47172,
            47356,
            47405,
            47378,
            47199,
            47262,
            47656,
            47380
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            79,
            913,
            4094,
            10015,
            20625,
            30344,
            32555,
            27526,
            20249,
            14199,
            8367,
            3242,
            803,
            85,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            118,
            1205,
            4763,
            11793,
            23320,
            31489,
            37525,
            33397,
            24283,
            14999,
            7403,
            1908,
            208,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            3,
            143,
            1002,
            3595,
            8699,
            17735,
            33887,
            39625,
            36881,
            28328,
            18221,
            10807,
            5012,
            1523,
            83,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            126,
            1172,
            4702,
            12171,
            23476,
            30313,
            34090,
            36355,
            31743,
            21009,
            9358,
            2596,
            438,
            34,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            363,
            1831,
            5233,
            12033,
            23327
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            76,
            616,
            3839,
            13165,
            27294,
            34701,
            33666,
            25533,
            15414,
            7472,
            2177,
            242,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            75,
            655,
            4808,
            13093,
            26322,
            35027,
            34891,
            26710,
            15899,
            5328,
            888,
            54,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            15,
            208,
            1522,
            6410,
            16159,
            31081,
            37193,
            35191,
            28322,
            18805,
            9423,
            2992,
            375,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            284,
            2128,
            6839,
            13900,
            24418,
            35386,
            35458,
            28559,
            18567,
            9316,
            2698,
            360,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            7,
            116,
            930,
            2867,
            6654,
            15120,
            30417,
            38950,
            37731,
            32261,
            24620,
            15833,
            9685,
            4642,
            899,
            137,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            84,
            721,
            3748,
            9589,
            21571,
            31363,
            34502,
            37227,
            34848,
            26708,
            17663,
            9693,
            3117,
            478,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            72,
            686,
            2623,
            6749
          ]
        ]
      },
      "call": {
        "duration": 0.2734359059977578,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa2c85450>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa2c85450> = array([12, 13, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa2ec54f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47945, 47154, 47156, 46807, 47200, 47168, ...], [47945, 47154, 47156, 46807, 47200, 47168, ...], [...0, ...], [0, 0, 3, 143, 1002, 3595, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 7, 116, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa2c85450>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa2c85450> = array([12, 13, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016356070009351242,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2927729269977135,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170467689000361,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014594719978049397,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.311600633998751,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            149,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034940879995701835,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029123149979568552,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5356406720020459,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            245,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            231,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            77,
            255,
            108,
            255,
            108,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            178,
            0,
            167,
            2,
            255,
            48,
            255,
            3
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            73,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            4,
            255,
            211,
            255,
            244,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            230,
            255,
            155,
            255,
            255,
            6,
            0,
            162,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            3,
            255,
            1,
            255,
            169,
            255,
            128
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          2
        ]
      },
      "call": {
        "duration": 0.0035023080017708708,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002877545000956161,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959446580025542,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47859,
            47423,
            47340,
            47415,
            47256,
            47346,
            47459,
            47203,
            47422,
            47680,
            47411,
            49088,
            47623,
            47381,
            47321,
            47280,
            47352,
            47264,
            47510,
            47193,
            47256,
            47333,
            47456,
            47218,
            47439,
            47388,
            47307,
            47351,
            47379,
            47423,
            47544,
            47495,
            47385,
            47472,
            47486,
            47431,
            47399,
            47136,
            46863,
            47476,
            47607,
            47483,
            47507,
            47290,
            47289,
            47295,
            47333,
            47370,
            47465,
            47457,
            47270,
            47297,
            47240,
            47303,
            47293,
            47388,
            47311,
            47358,
            47421,
            47297,
            47481,
            47471,
            47312
          ],
          [
            47859,
            47423,
            47340,
            47415,
            47256,
            47346,
            47459,
            47203,
            47422,
            47680,
            47411,
            49088,
            47623,
            47381,
            47321,
            47280,
            47352,
            47264,
            47510,
            47193,
            47256,
            47333,
            47456,
            47218,
            47439,
            47388,
            47307,
            47351,
            47379,
            47423,
            47544,
            47495,
            47385,
            47472,
            47486,
            47431,
            47399,
            47136,
            46863,
            47476,
            47607,
            47483,
            47507,
            47290,
            47289,
            47295,
            47333,
            47370,
            47465,
            47457,
            47270,
            47297,
            47240,
            47303,
            47293,
            47388,
            47311,
            47358,
            47421,
            47297,
            47481,
            47471,
            47312
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            217,
            2744,
            16334,
            35281,
            37694,
            19689,
            4959,
            381,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            135,
            2670,
            15895,
            34076,
            40415,
            26956,
            9390,
            1300,
            76,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            32,
            821,
            7689,
            27468,
            41389,
            39593,
            20757,
            5528,
            555,
            11,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            112,
            2059,
            13005,
            30341,
            42207,
            39606,
            21464,
            6039,
            702,
            33,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1343784560012864,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016027560013753828,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06888567600253737,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47936,
            47427,
            47211,
            47529,
            47359,
            47417,
            47422,
            47313,
            47376,
            47427,
            47273,
            47407,
            47148,
            47570,
            47332,
            47697,
            47270,
            47070,
            47255,
            47318,
            47191,
            47432,
            47260,
            47430,
            47280,
            47551,
            47394,
            47407,
            47532,
            47465,
            47649,
            47748,
            47143,
            47418,
            47232,
            47327,
            47217,
            47289,
            47111,
            47346,
            47247,
            47433,
            46870,
            47375,
            47343,
            47538,
            47371,
            47797,
            47430,
            47403,
            47539,
            47377,
            47115,
            47499,
            47237,
            47352,
            47323,
            47372,
            47189,
            47379,
            47317,
            47555,
            47190
          ],
          [
            47936,
            47427,
            47211,
            47529,
            47359,
            47417,
            47422,
            47313,
            47376,
            47427,
            47273,
            47407,
            47148,
            47570,
            47332,
            47697,
            47270,
            47070,
            47255,
            47318,
            47191,
            47432,
            47260,
            47430,
            47280,
            47551,
            47394,
            47407,
            47532,
            47465,
            47649,
            47748,
            47143,
            47418,
            47232,
            47327,
            47217,
            47289,
            47111,
            47346,
            47247,
            47433,
            46870,
            47375,
            47343,
            47538,
            47371,
            47797,
            47430,
            47403,
            47539,
            47377,
            47115,
            47499,
            47237,
            47352,
            47323,
            47372,
            47189,
            47379,
            47317,
            47555,
            47190
          ],
          [
            47936,
            47427,
            47211,
            47529,
            47359,
            47417,
            47422,
            47313,
            47376,
            47427,
            47273,
            47407,
            47148,
            47570,
            47332,
            47697,
            47270,
            47070,
            47255,
            47318,
            47191,
            47432,
            47260,
            47430,
            47280,
            47551,
            47394,
            47407,
            47532,
            47465,
            47649,
            47748,
            47143,
            47418,
            47232,
            47327,
            47217,
            47289,
            47111,
            47346,
            47247,
            47433,
            46870,
            47375,
            47343,
            47538,
            47371,
            47797,
            47430,
            47403,
            47539,
            47377,
            47115,
            47499,
            47237,
            47352,
            47323,
            47372,
            47189,
            47379,
            47317,
            47555,
            47190
          ],
          [
            47936,
            47427,
            47211,
            47529,
            47359,
            47417,
            47422,
            47313,
            47376,
            47427,
            47273,
            47407,
            47148,
            47570,
            47332,
            47697,
            47270,
            47070,
            47255,
            47318,
            47191,
            47432,
            47260,
            47430,
            47280,
            47551,
            47394,
            47407,
            47532,
            47465,
            47649,
            47748,
            47143,
            47418,
            47232,
            47327,
            47217,
            47289,
            47111,
            47346,
            47247,
            47433,
            46870,
            47375,
            47343,
            47538,
            47371,
            47797,
            47430,
            47403,
            47539,
            47377,
            47115,
            47499,
            47237,
            47352,
            47323,
            47372,
            47189,
            47379,
            47317,
            47555,
            47190
          ],
          [
            47936,
            47427,
            47211,
            47529,
            47359,
            47417,
            47422,
            47313,
            47376,
            47427,
            47273,
            47407,
            47148,
            47570,
            47332,
            47697,
            47270,
            47070,
            47255,
            47318,
            47191,
            47432,
            47260,
            47430,
            47280,
            47551,
            47394,
            47407,
            47532,
            47465,
            47649,
            47748,
            47143,
            47418,
            47232,
            47327,
            47217,
            47289,
            47111,
            47346,
            47247,
            47433,
            46870,
            47375,
            47343,
            47538,
            47371,
            47797,
            47430,
            47403,
            47539,
            47377,
            47115,
            47499,
            47237,
            47352,
            47323,
            47372,
            47189,
            47379,
            47317,
            47555,
            47190
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            68,
            486,
            2994,
            12065,
            24979,
            34255,
            35413,
            25822,
            12413,
            2931,
            324,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            621,
            7032,
            23897,
            33768,
            36927,
            32520,
            19612,
            9873,
            2251,
            224,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            164
          ],
          [
            0,
            8,
            163,
            1444,
            6034,
            17089,
            32100,
            39144,
            34131,
            19163,
            6730,
            1214,
            54,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            91,
            1509,
            9396,
            23849,
            35370,
            41946,
            40646,
            31583,
            11042,
            966,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            19,
            299,
            1780,
            6253,
            16879,
            29829,
            38345,
            32160
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            413,
            3553,
            14720,
            29708,
            36633,
            33007,
            19238,
            6966,
            1136,
            60,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            741,
            5058,
            19061,
            33333,
            41733,
            37750,
            25409,
            11549,
            3026,
            203,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            80,
            999,
            5962,
            19126,
            34102,
            39197,
            34626,
            21204,
            8365,
            1778,
            78,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            779,
            9244,
            22002,
            32111,
            38122,
            36247,
            27580,
            14499,
            3820,
            498,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            9,
            152,
            1767,
            8157,
            20618,
            32921,
            39405,
            36147,
            25512,
            12451,
            3466,
            464,
            13,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            485,
            3755,
            13842,
            25871,
            35733,
            40496,
            34278,
            16695,
            5294,
            806,
            60,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            58,
            610,
            4481,
            15096,
            29165,
            40537
          ]
        ]
      },
      "call": {
        "duration": 0.2727161000002525,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014946640003472567,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2915764710014628,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1701848129996506,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014259310009947512,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 4.312434082999971,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            64,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            61,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035088789991277736,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028829139992012642,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5366398139994999,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            3,
            255,
            1,
            87,
            0,
            255,
            2,
            255,
            255
          ],
          [
            80,
            0,
            27,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            36,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            169,
            255,
            0,
            12,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            19,
            0,
            3,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            33,
            255,
            97,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            8,
            0,
            255,
            6,
            255,
            255
          ],
          [
            64,
            0,
            2,
            0,
            6,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            65,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            151,
            0,
            26,
            0,
            52,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            176,
            255,
            72,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003498527999909129,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002905295001255581,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29620443399835494,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47797,
            47529,
            47315,
            47358,
            47295,
            47368,
            47528,
            47523,
            47683,
            47565,
            47546,
            47622,
            47491,
            49735,
            47500,
            47401,
            47573,
            47357,
            47413,
            47280,
            47281,
            47487,
            47540,
            47457,
            47458,
            47660,
            47394,
            47268,
            47247,
            47362,
            47298,
            47081,
            47055,
            47355,
            49072,
            47484,
            47636,
            47439,
            47499,
            47551,
            47341,
            47431,
            47234,
            47305,
            47286,
            47405,
            47229,
            47381,
            47220,
            47307,
            47231,
            47438,
            47267,
            47332,
            47420,
            47272,
            47418,
            47514,
            47370,
            47424,
            47362,
            47468,
            47360
          ],
          [
            47797,
            47529,
            47315,
            47358,
            47295,
            47368,
            47528,
            47523,
            47683,
            47565,
            47546,
            47622,
            47491,
            49735,
            47500,
            47401,
            47573,
            47357,
            47413,
            47280,
            47281,
            47487,
            47540,
            47457,
            47458,
            47660,
            47394,
            47268,
            47247,
            47362,
            47298,
            47081,
            47055,
            47355,
            49072,
            47484,
            47636,
            47439,
            47499,
            47551,
            47341,
            47431,
            47234,
            47305,
            47286,
            47405,
            47229,
            47381,
            47220,
            47307,
            47231,
            47438,
            47267,
            47332,
            47420,
            47272,
            47418,
            47514,
            47370,
            47424,
            47362,
            47468,
            47360
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            395,
            5409,
            22507,
            39501,
            37291,
            17172,
            3950,
            339,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            444,
            5195,
            20545,
            36441,
            39112,
            23235,
            6064,
            875,
            64,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            128,
            1550,
            12465,
            30921,
            41192,
            30932,
            11086,
            2079,
            123,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            463,
            4960,
            19694,
            38667,
            41762,
            32160,
            14077,
            2635,
            311,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            24,
            564,
            6435,
            23501,
            38698,
            44190
          ]
        ]
      },
      "call": {
        "duration": 0.13511410200226237,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015912050002953038,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907705000048736,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47925,
            47150,
            47254,
            47382,
            47256,
            48002,
            47545,
            47384,
            47291,
            47424,
            47400,
            47385,
            47492,
            47233,
            46937,
            47339,
            47315,
            47399,
            47127,
            47282,
            47474,
            47272,
            47329,
            47380,
            47251,
            47498,
            47432,
            47432,
            47716,
            47470,
            47360,
            47292,
            47129,
            47229,
            47316,
            47391,
            47397,
            47310,
            47400,
            47078,
            47515,
            47377,
            47422,
            48792,
            49365,
            47292,
            47249,
            47316,
            47179,
            47229,
            47197,
            47188,
            47280,
            47287,
            47344,
            47479,
            47356,
            47426,
            47502,
            49071,
            49029,
            47318,
            47220
          ],
          [
            47925,
            47150,
            47254,
            47382,
            47256,
            48002,
            47545,
            47384,
            47291,
            47424,
            47400,
            47385,
            47492,
            47233,
            46937,
            47339,
            47315,
            47399,
            47127,
            47282,
            47474,
            47272,
            47329,
            47380,
            47251,
            47498,
            47432,
            47432,
            47716,
            47470,
            47360,
            47292,
            47129,
            47229,
            47316,
            47391,
            47397,
            47310,
            47400,
            47078,
            47515,
            47377,
            47422,
            48792,
            49365,
            47292,
            47249,
            47316,
            47179,
            47229,
            47197,
            47188,
            47280,
            47287,
            47344,
            47479,
            47356,
            47426,
            47502,
            49071,
            49029,
            47318,
            47220
          ],
          [
            47925,
            47150,
            47254,
            47382,
            47256,
            48002,
            47545,
            47384,
            47291,
            47424,
            47400,
            47385,
            47492,
            47233,
            46937,
            47339,
            47315,
            47399,
            47127,
            47282,
            47474,
            47272,
            47329,
            47380,
            47251,
            47498,
            47432,
            47432,
            47716,
            47470,
            47360,
            47292,
            47129,
            47229,
            47316,
            47391,
            47397,
            47310,
            47400,
            47078,
            47515,
            47377,
            47422,
            48792,
            49365,
            47292,
            47249,
            47316,
            47179,
            47229,
            47197,
            47188,
            47280,
            47287,
            47344,
            47479,
            47356,
            47426,
            47502,
            49071,
            49029,
            47318,
            47220
          ],
          [
            47925,
            47150,
            47254,
            47382,
            47256,
            48002,
            47545,
            47384,
            47291,
            47424,
            47400,
            47385,
            47492,
            47233,
            46937,
            47339,
            47315,
            47399,
            47127,
            47282,
            47474,
            47272,
            47329,
            47380,
            47251,
            47498,
            47432,
            47432,
            47716,
            47470,
            47360,
            47292,
            47129,
            47229,
            47316,
            47391,
            47397,
            47310,
            47400,
            47078,
            47515,
            47377,
            47422,
            48792,
            49365,
            47292,
            47249,
            47316,
            47179,
            47229,
            47197,
            47188,
            47280,
            47287,
            47344,
            47479,
            47356,
            47426,
            47502,
            49071,
            49029,
            47318,
            47220
          ],
          [
            47925,
            47150,
            47254,
            47382,
            47256,
            48002,
            47545,
            47384,
            47291,
            47424,
            47400,
            47385,
            47492,
            47233,
            46937,
            47339,
            47315,
            47399,
            47127,
            47282,
            47474,
            47272,
            47329,
            47380,
            47251,
            47498,
            47432,
            47432,
            47716,
            47470,
            47360,
            47292,
            47129,
            47229,
            47316,
            47391,
            47397,
            47310,
            47400,
            47078,
            47515,
            47377,
            47422,
            48792,
            49365,
            47292,
            47249,
            47316,
            47179,
            47229,
            47197,
            47188,
            47280,
            47287,
            47344,
            47479,
            47356,
            47426,
            47502,
            49071,
            49029,
            47318,
            47220
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            76,
            877,
            5340,
            16565,
            27750,
            33743,
            33683,
            26227,
            16376,
            7770,
            1846,
            210,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            401,
            2675,
            9661,
            19913,
            30326,
            35257,
            32546,
            22672,
            11781,
            4970,
            1026,
            89,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            478,
            3812,
            13875,
            24834,
            32650,
            37940,
            38026,
            29265,
            15617,
            5832,
            1045,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            4,
            83,
            1108,
            4586,
            13260,
            25832,
            34829,
            35781,
            29418,
            16120,
            5232,
            1152,
            121,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            16540,
            6959,
            1361,
            71,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            104,
            1743,
            9579,
            21580,
            33363,
            39682,
            34329,
            22143,
            10046,
            2280,
            156,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            274,
            2963,
            11764,
            25769,
            37507,
            36565,
            25656,
            11834,
            2876,
            251,
            9,
            0,
            0,
            0,
            0
          ],
          [
            43,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            666,
            5765,
            16968,
            29677,
            38159,
            39321,
            35193,
            26505,
            13971,
            4741,
            624,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            387,
            2600,
            10567,
            22787,
            34397,
            34889,
            25012,
            12253,
            4921,
            1227,
            168,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            58,
            935,
            4963,
            15979,
            26720,
            35783,
            39286,
            36649,
            25860,
            15414,
            4400,
            691,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            126,
            1200,
            5683,
            16071,
            28099,
            39040,
            42431,
            34351,
            23927,
            14568,
            6973,
            2265,
            309,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2730882889991335,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015505849987675902,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918579969991697,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1720718249998754,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40052779, 10013195), (411240, 411240), (40048578, 10012145))\nassert ((40052779 > 0 and 10013195 == 0\n  +10013195\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffffa2ec5310>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffffa2e670a0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffffa2f392b0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40052779, 10013195), (411240, 411240), (40048578, 10012145))\nE       assert ((40052779 > 0 and 10013195 == 0\nE         +10013195\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.00503192300311639,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}