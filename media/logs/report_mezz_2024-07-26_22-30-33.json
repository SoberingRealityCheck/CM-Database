{
  "created": 1722033052.7550938,
  "duration": 23.511923789978027,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5038487530000566,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14946800400139182,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013562700005422812,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003930357997887768,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14929504999963683,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001277007999306079,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1317796699986502,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12260705600056099,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012959689993294887,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003954478001105599,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1220371929994144,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012896379994344898,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034661280005821027,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14767960400058655,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012172470014775172,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034355259995209053,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12088159800259746,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011789060008595698,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034871569987444673,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14775544599979185,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001176116998976795,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00346882699886919,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12105497200172977,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012037769993185066,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004461698998056818,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021123759979673196,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012490179979067761,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003426076000323519,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017377889998897444,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011024340019503143,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033710850002535153,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004087981000338914,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033035.0442264,
            "msecs": 44.22640800476074,
            "relativeCreated": 7773.85401725769,
            "thread": 281472914501664,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5008
          }
        ]
      },
      "teardown": {
        "duration": 0.001209596997796325,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003454097000940237,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023651330011489335,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033035.0567183,
            "msecs": 56.71834945678711,
            "relativeCreated": 7786.345958709717,
            "thread": 281472914501664,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5008
          }
        ]
      },
      "teardown": {
        "duration": 0.0012558279995573685,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021873480000067502,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002738521001447225,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033035.0663671,
            "msecs": 66.36714935302734,
            "relativeCreated": 7795.994758605957,
            "thread": 281472914501664,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5008
          }
        ]
      },
      "teardown": {
        "duration": 0.0010542539966991171,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002166647998819826,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034057660013786517,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033035.076006,
            "msecs": 76.00593566894531,
            "relativeCreated": 7805.633544921875,
            "thread": 281472914501664,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5008
          }
        ]
      },
      "teardown": {
        "duration": 0.0010986240013153292,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034337270008109044,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1475722909999604,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011936369992326945,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00344152600155212,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120374499863829,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011787570001615677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.18107370700090542,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14878482800122583,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012786279985448346,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015265629001078196,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12210355599745526,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012866379984188825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8442155880002247,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            3,
            11,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            48,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            12,
            122,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.003532998998707626,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029721959981543478,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9140218949978589,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            9,
            0,
            1,
            0,
            0
          ],
          [
            0,
            15,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            4,
            255,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            14
          ],
          [
            221,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            199,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            41,
            255,
            255,
            255,
            10
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            58,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            116,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            104,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            126,
            0,
            91,
            255
          ],
          [
            255,
            0,
            169,
            0,
            255,
            0,
            215,
            81,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003482388001430081,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028929350010002963,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031138700025622,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48185,
            47469,
            47492,
            47289,
            47303,
            47444,
            47467,
            47033,
            47069,
            47628,
            47399,
            47466,
            47415,
            47455,
            47386,
            47313,
            49391,
            47384,
            47751,
            47288,
            49584,
            47401,
            47381,
            47310,
            47336,
            47530,
            47523,
            47466,
            47280,
            47472,
            47094,
            46955,
            47354,
            47463,
            47369,
            47473,
            47435,
            47403,
            47406,
            47255,
            47457,
            47311,
            47450,
            47442,
            47417,
            47461,
            47467,
            47424,
            47474,
            47492,
            47385,
            47881,
            47336,
            47755,
            47501,
            47341,
            47314,
            47352,
            47279,
            47274,
            47456,
            47271,
            47295
          ],
          [
            48185,
            47469,
            47492,
            47289,
            47303,
            47444,
            47467,
            47033,
            47069,
            47628,
            47399,
            47466,
            47415,
            47455,
            47386,
            47313,
            49391,
            47384,
            47751,
            47288,
            49584,
            47401,
            47381,
            47310,
            47336,
            47530,
            47523,
            47466,
            47280,
            47472,
            47094,
            46955,
            47354,
            47463,
            47369,
            47473,
            47435,
            47403,
            47406,
            47255,
            47457,
            47311,
            47450,
            47442,
            47417,
            47461,
            47467,
            47424,
            47474,
            47492,
            47385,
            47881,
            47336,
            47755,
            47501,
            47341,
            47314,
            47352,
            47279,
            47274,
            47456,
            47271,
            47295
          ]
        ],
        "eTX_errcounts": [
          [
            40618,
            26976,
            8079,
            1232,
            131,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            212,
            3176,
            16186,
            35265,
            42986,
            31146,
            14124,
            2196,
            174,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            937,
            7275,
            26319,
            40484,
            36974,
            18587,
            5062,
            436,
            12,
            1,
            0,
            0
          ],
          [
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            356,
            4449,
            18554,
            36618,
            42045,
            30902,
            13021,
            2971,
            227,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            442,
            4445,
            19700,
            36717,
            42924,
            34841,
            16991,
            3434,
            264,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13398075900113326,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016457769997941796,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06951856600062456,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47845,
            47361,
            47168,
            47233,
            47166,
            47336,
            47250,
            47154,
            48973,
            49033,
            47155,
            47229,
            47045,
            47179,
            46831,
            47302,
            47025,
            47230,
            47070,
            47306,
            47122,
            47475,
            47275,
            47194,
            47022,
            47253,
            47237,
            47682,
            47298,
            47262,
            47257,
            47250,
            47141,
            47219,
            47024,
            47285,
            47117,
            47267,
            46985,
            47009,
            47427,
            47208,
            47210,
            47186,
            47024,
            47682,
            49458,
            47176,
            46971,
            47100,
            47001,
            47117,
            46981,
            47194,
            47147,
            47189,
            47080,
            47223,
            47162,
            47133,
            47172,
            47293,
            47186
          ],
          [
            47845,
            47361,
            47168,
            47233,
            47166,
            47336,
            47250,
            47154,
            48973,
            49033,
            47155,
            47229,
            47045,
            47179,
            46831,
            47302,
            47025,
            47230,
            47070,
            47306,
            47122,
            47475,
            47275,
            47194,
            47022,
            47253,
            47237,
            47682,
            47298,
            47262,
            47257,
            47250,
            47141,
            47219,
            47024,
            47285,
            47117,
            47267,
            46985,
            47009,
            47427,
            47208,
            47210,
            47186,
            47024,
            47682,
            49458,
            47176,
            46971,
            47100,
            47001,
            47117,
            46981,
            47194,
            47147,
            47189,
            47080,
            47223,
            47162,
            47133,
            47172,
            47293,
            47186
          ],
          [
            47845,
            47361,
            47168,
            47233,
            47166,
            47336,
            47250,
            47154,
            48973,
            49033,
            47155,
            47229,
            47045,
            47179,
            46831,
            47302,
            47025,
            47230,
            47070,
            47306,
            47122,
            47475,
            47275,
            47194,
            47022,
            47253,
            47237,
            47682,
            47298,
            47262,
            47257,
            47250,
            47141,
            47219,
            47024,
            47285,
            47117,
            47267,
            46985,
            47009,
            47427,
            47208,
            47210,
            47186,
            47024,
            47682,
            49458,
            47176,
            46971,
            47100,
            47001,
            47117,
            46981,
            47194,
            47147,
            47189,
            47080,
            47223,
            47162,
            47133,
            47172,
            47293,
            47186
          ],
          [
            47845,
            47361,
            47168,
            47233,
            47166,
            47336,
            47250,
            47154,
            48973,
            49033,
            47155,
            47229,
            47045,
            47179,
            46831,
            47302,
            47025,
            47230,
            47070,
            47306,
            47122,
            47475,
            47275,
            47194,
            47022,
            47253,
            47237,
            47682,
            47298,
            47262,
            47257,
            47250,
            47141,
            47219,
            47024,
            47285,
            47117,
            47267,
            46985,
            47009,
            47427,
            47208,
            47210,
            47186,
            47024,
            47682,
            49458,
            47176,
            46971,
            47100,
            47001,
            47117,
            46981,
            47194,
            47147,
            47189,
            47080,
            47223,
            47162,
            47133,
            47172,
            47293,
            47186
          ],
          [
            47845,
            47361,
            47168,
            47233,
            47166,
            47336,
            47250,
            47154,
            48973,
            49033,
            47155,
            47229,
            47045,
            47179,
            46831,
            47302,
            47025,
            47230,
            47070,
            47306,
            47122,
            47475,
            47275,
            47194,
            47022,
            47253,
            47237,
            47682,
            47298,
            47262,
            47257,
            47250,
            47141,
            47219,
            47024,
            47285,
            47117,
            47267,
            46985,
            47009,
            47427,
            47208,
            47210,
            47186,
            47024,
            47682,
            49458,
            47176,
            46971,
            47100,
            47001,
            47117,
            46981,
            47194,
            47147,
            47189,
            47080,
            47223,
            47162,
            47133,
            47172,
            47293,
            47186
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            135,
            1328,
            5208,
            12188,
            23208,
            31864,
            31373,
            25996,
            18680,
            13281,
            7025,
            2127,
            326,
            29,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            11,
            138,
            1691,
            5948,
            13909,
            25546,
            33517,
            36984,
            30307,
            21939,
            13605,
            5430,
            1228,
            126,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            11,
            194,
            1424,
            4375,
            9885,
            22380,
            37607,
            40573,
            34835,
            26050,
            15973,
            8798,
            3379,
            810,
            57,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            275,
            1838,
            6322,
            14963,
            25655,
            31729,
            35245,
            36534,
            28992,
            17621,
            7082,
            1776,
            192,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            49,
            585,
            2446,
            6281,
            14389,
            27339
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            77,
            1037,
            4930,
            15756,
            30230,
            34937,
            32168,
            23022,
            12713,
            5284,
            1294,
            89,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            108,
            1249,
            6917,
            15710,
            30466,
            35882,
            33242,
            24214,
            12599,
            3693,
            449,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            36,
            413,
            2287,
            8452,
            19550,
            33827,
            37829,
            33913,
            26679,
            16478,
            7061,
            1591,
            223,
            3,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            513,
            3089,
            8283,
            16443,
            27318,
            35939,
            34288,
            27331,
            15699,
            7148,
            1810,
            190,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            15,
            187,
            1169,
            3751,
            8267,
            19158,
            33157,
            39286,
            36696,
            30773,
            22302,
            14235,
            8142,
            3378,
            584,
            81,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            131,
            1163,
            4782,
            12498,
            24803,
            32761,
            35004,
            37138,
            33303,
            24400,
            15733,
            8074,
            1929,
            252,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            16,
            146,
            988,
            3513,
            8450
          ]
        ]
      },
      "call": {
        "duration": 0.27250955999988946,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff70579f30>()\n +    where <built-in method all of numpy.ndarray object at 0xffff70579f30> = array([21, 12, 13, 21, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff7050c4f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47845, 47361, 47168, 47233, 47166, 47336, ...], [47845, 47361, 47168, 47233, 47166, 47336, ...], [... ...], [0, 0, 11, 194, 1424, 4375, ...], [1, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 15, 187, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff70579f30>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff70579f30> = array([21, 12, 13, 21, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016155060002347454,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2932554109975172,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169870969999465,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014571920000889804,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3005443990005006,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            2,
            20,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            33,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            204,
            70,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003546678999555297,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029230250002001412,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5361286909974297,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            218,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            85,
            255,
            153,
            255,
            147,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            217,
            0,
            134,
            7,
            255,
            44,
            255,
            9
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            44,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            7,
            255,
            183,
            255,
            247,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            170,
            255,
            123,
            255,
            255,
            7,
            0,
            177,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            110,
            255,
            83
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003453225999692222,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028914340000483207,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296486723000271,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47746,
            47293,
            47380,
            47455,
            47456,
            47330,
            47330,
            47502,
            47311,
            47096,
            47013,
            47484,
            47294,
            47329,
            49019,
            47301,
            47731,
            47429,
            49759,
            47362,
            47379,
            47395,
            47283,
            47436,
            47228,
            47215,
            47250,
            47349,
            47343,
            47321,
            47161,
            47295,
            47269,
            47315,
            47249,
            47326,
            47379,
            47263,
            47427,
            47314,
            47340,
            47382,
            47363,
            47479,
            47351,
            47278,
            47350,
            47237,
            47457,
            48946,
            47434,
            47763,
            47464,
            47380,
            47363,
            47247,
            47303,
            47433,
            47520,
            47138,
            47049,
            47434,
            47221
          ],
          [
            47746,
            47293,
            47380,
            47455,
            47456,
            47330,
            47330,
            47502,
            47311,
            47096,
            47013,
            47484,
            47294,
            47329,
            49019,
            47301,
            47731,
            47429,
            49759,
            47362,
            47379,
            47395,
            47283,
            47436,
            47228,
            47215,
            47250,
            47349,
            47343,
            47321,
            47161,
            47295,
            47269,
            47315,
            47249,
            47326,
            47379,
            47263,
            47427,
            47314,
            47340,
            47382,
            47363,
            47479,
            47351,
            47278,
            47350,
            47237,
            47457,
            48946,
            47434,
            47763,
            47464,
            47380,
            47363,
            47247,
            47303,
            47433,
            47520,
            47138,
            47049,
            47434,
            47221
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            152,
            3849,
            18049,
            36337,
            35454,
            18465,
            4156,
            378,
            15,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            100,
            2743,
            16091,
            35276,
            40537,
            26037,
            8270,
            1098,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            893,
            9160,
            28768,
            41731,
            38718,
            19574,
            4554,
            397,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            145,
            2760,
            13848,
            31208,
            42559,
            38755,
            20304,
            5192,
            590,
            21,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1336381219989562,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001810210000257939,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06939163300194195,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48206,
            47365,
            47487,
            47336,
            47136,
            47364,
            47370,
            47268,
            47711,
            47509,
            47281,
            47437,
            47120,
            47184,
            47296,
            47094,
            47334,
            47254,
            47098,
            47434,
            47427,
            47083,
            47352,
            47458,
            47218,
            47348,
            49024,
            47357,
            47089,
            47271,
            46772,
            47153,
            47413,
            47042,
            47192,
            47340,
            47148,
            47194,
            47390,
            47153,
            47255,
            47375,
            47380,
            47241,
            47308,
            47521,
            47222,
            47175,
            47247,
            47235,
            47376,
            47027,
            47219,
            47097,
            47285,
            47242,
            47251,
            47265,
            47192,
            47328,
            47217,
            47506,
            47378
          ],
          [
            48206,
            47365,
            47487,
            47336,
            47136,
            47364,
            47370,
            47268,
            47711,
            47509,
            47281,
            47437,
            47120,
            47184,
            47296,
            47094,
            47334,
            47254,
            47098,
            47434,
            47427,
            47083,
            47352,
            47458,
            47218,
            47348,
            49024,
            47357,
            47089,
            47271,
            46772,
            47153,
            47413,
            47042,
            47192,
            47340,
            47148,
            47194,
            47390,
            47153,
            47255,
            47375,
            47380,
            47241,
            47308,
            47521,
            47222,
            47175,
            47247,
            47235,
            47376,
            47027,
            47219,
            47097,
            47285,
            47242,
            47251,
            47265,
            47192,
            47328,
            47217,
            47506,
            47378
          ],
          [
            48206,
            47365,
            47487,
            47336,
            47136,
            47364,
            47370,
            47268,
            47711,
            47509,
            47281,
            47437,
            47120,
            47184,
            47296,
            47094,
            47334,
            47254,
            47098,
            47434,
            47427,
            47083,
            47352,
            47458,
            47218,
            47348,
            49024,
            47357,
            47089,
            47271,
            46772,
            47153,
            47413,
            47042,
            47192,
            47340,
            47148,
            47194,
            47390,
            47153,
            47255,
            47375,
            47380,
            47241,
            47308,
            47521,
            47222,
            47175,
            47247,
            47235,
            47376,
            47027,
            47219,
            47097,
            47285,
            47242,
            47251,
            47265,
            47192,
            47328,
            47217,
            47506,
            47378
          ],
          [
            48206,
            47365,
            47487,
            47336,
            47136,
            47364,
            47370,
            47268,
            47711,
            47509,
            47281,
            47437,
            47120,
            47184,
            47296,
            47094,
            47334,
            47254,
            47098,
            47434,
            47427,
            47083,
            47352,
            47458,
            47218,
            47348,
            49024,
            47357,
            47089,
            47271,
            46772,
            47153,
            47413,
            47042,
            47192,
            47340,
            47148,
            47194,
            47390,
            47153,
            47255,
            47375,
            47380,
            47241,
            47308,
            47521,
            47222,
            47175,
            47247,
            47235,
            47376,
            47027,
            47219,
            47097,
            47285,
            47242,
            47251,
            47265,
            47192,
            47328,
            47217,
            47506,
            47378
          ],
          [
            48206,
            47365,
            47487,
            47336,
            47136,
            47364,
            47370,
            47268,
            47711,
            47509,
            47281,
            47437,
            47120,
            47184,
            47296,
            47094,
            47334,
            47254,
            47098,
            47434,
            47427,
            47083,
            47352,
            47458,
            47218,
            47348,
            49024,
            47357,
            47089,
            47271,
            46772,
            47153,
            47413,
            47042,
            47192,
            47340,
            47148,
            47194,
            47390,
            47153,
            47255,
            47375,
            47380,
            47241,
            47308,
            47521,
            47222,
            47175,
            47247,
            47235,
            47376,
            47027,
            47219,
            47097,
            47285,
            47242,
            47251,
            47265,
            47192,
            47328,
            47217,
            47506,
            47378
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            51,
            609,
            3396,
            13021,
            25823,
            34531,
            34852,
            24400,
            10833,
            2545,
            284,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            20,
            634,
            4082,
            14472,
            26916,
            34905,
            37399,
            29823,
            18378,
            7467,
            1641,
            162,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22
          ],
          [
            0,
            9,
            172,
            1598,
            6526,
            18310,
            32602,
            38573,
            33427,
            18206,
            6147,
            851,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            130,
            1976,
            10682,
            24442,
            35772,
            42013,
            40486,
            30781,
            16515,
            4192,
            480,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            316,
            2055,
            7690,
            18571,
            32177,
            38370
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            445,
            3727,
            16301,
            30600,
            36114,
            31943,
            18873,
            6538,
            937,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            45,
            1028,
            7803,
            21472,
            36724,
            41619,
            35623,
            22086,
            9711,
            2004,
            179,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            101,
            1194,
            6173,
            20618,
            34923,
            38925,
            33666,
            19942,
            7868,
            1349,
            151,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            317,
            3032,
            12196,
            24356,
            34229,
            38836,
            35457,
            25811,
            11775,
            3194,
            212,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            1,
            12,
            176,
            2026,
            8900,
            21797,
            33683,
            39190,
            35524,
            24267,
            11559,
            2756,
            384,
            14,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            586,
            4120,
            14110,
            26538,
            35795,
            40650,
            37542,
            27458,
            13252,
            3768,
            436,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            92,
            993,
            5602,
            16385,
            31641
          ]
        ]
      },
      "call": {
        "duration": 0.27091634400130715,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015011140021670144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2920300639998459,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1693874790034897,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014427320020331535,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3323825169973134,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            108,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035915000007662456,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002902174997871043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5372035849977692,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            3,
            255,
            6,
            255,
            2,
            82,
            0,
            255,
            2,
            255,
            255
          ],
          [
            61,
            0,
            17,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            39,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            208,
            255,
            0,
            6,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            14,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            10,
            255,
            57,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            3,
            2,
            0,
            255,
            3,
            255,
            255
          ],
          [
            75,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            85,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            97,
            0,
            15,
            0,
            45,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            85,
            255,
            40,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0034850870033551473,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002866143000574084,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29673278799964464,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48066,
            47347,
            47303,
            47449,
            47418,
            47380,
            47538,
            47389,
            47502,
            47414,
            47573,
            47417,
            47435,
            47224,
            47427,
            47382,
            47295,
            47338,
            47449,
            47365,
            47437,
            47434,
            47422,
            47531,
            47250,
            47440,
            49241,
            47613,
            47757,
            47484,
            49802,
            47332,
            47228,
            47418,
            47379,
            47502,
            46981,
            47066,
            47255,
            47400,
            47398,
            47374,
            47366,
            47379,
            47146,
            47439,
            47410,
            47444,
            47244,
            47348,
            47278,
            47463,
            47501,
            47432,
            47388,
            47351,
            47417,
            47258,
            47419,
            47723,
            47235,
            47666,
            47359
          ],
          [
            48066,
            47347,
            47303,
            47449,
            47418,
            47380,
            47538,
            47389,
            47502,
            47414,
            47573,
            47417,
            47435,
            47224,
            47427,
            47382,
            47295,
            47338,
            47449,
            47365,
            47437,
            47434,
            47422,
            47531,
            47250,
            47440,
            49241,
            47613,
            47757,
            47484,
            49802,
            47332,
            47228,
            47418,
            47379,
            47502,
            46981,
            47066,
            47255,
            47400,
            47398,
            47374,
            47366,
            47379,
            47146,
            47439,
            47410,
            47444,
            47244,
            47348,
            47278,
            47463,
            47501,
            47432,
            47388,
            47351,
            47417,
            47258,
            47419,
            47723,
            47235,
            47666,
            47359
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            586,
            6980,
            24969,
            39383,
            33949,
            14806,
            2748,
            320,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            623,
            6542,
            22605,
            38304,
            37504,
            20718,
            4901,
            692,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            3,
            82,
            1943,
            14186,
            32777,
            41457,
            29008,
            9632,
            1616,
            116,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            716,
            5590,
            21706,
            38664,
            41991,
            30297,
            12379,
            2035,
            211,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            794,
            7648,
            25443,
            40453,
            43487
          ]
        ]
      },
      "call": {
        "duration": 0.13400521000221488,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001626696001039818,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0697491210012231,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47792,
            47141,
            47290,
            46941,
            47073,
            47254,
            47152,
            47335,
            47285,
            47149,
            49042,
            47314,
            47386,
            47023,
            46916,
            47091,
            47220,
            46885,
            47010,
            47162,
            47092,
            47083,
            47232,
            47229,
            47154,
            47294,
            47257,
            47268,
            47593,
            47627,
            47013,
            47160,
            47222,
            47219,
            47085,
            47141,
            47260,
            47195,
            47092,
            47134,
            47302,
            47142,
            47003,
            47189,
            47293,
            47343,
            49063,
            49127,
            47106,
            47100,
            47149,
            46954,
            47062,
            46984,
            47024,
            47192,
            47075,
            47211,
            47084,
            47100,
            47136,
            47172,
            47315
          ],
          [
            47792,
            47141,
            47290,
            46941,
            47073,
            47254,
            47152,
            47335,
            47285,
            47149,
            49042,
            47314,
            47386,
            47023,
            46916,
            47091,
            47220,
            46885,
            47010,
            47162,
            47092,
            47083,
            47232,
            47229,
            47154,
            47294,
            47257,
            47268,
            47593,
            47627,
            47013,
            47160,
            47222,
            47219,
            47085,
            47141,
            47260,
            47195,
            47092,
            47134,
            47302,
            47142,
            47003,
            47189,
            47293,
            47343,
            49063,
            49127,
            47106,
            47100,
            47149,
            46954,
            47062,
            46984,
            47024,
            47192,
            47075,
            47211,
            47084,
            47100,
            47136,
            47172,
            47315
          ],
          [
            47792,
            47141,
            47290,
            46941,
            47073,
            47254,
            47152,
            47335,
            47285,
            47149,
            49042,
            47314,
            47386,
            47023,
            46916,
            47091,
            47220,
            46885,
            47010,
            47162,
            47092,
            47083,
            47232,
            47229,
            47154,
            47294,
            47257,
            47268,
            47593,
            47627,
            47013,
            47160,
            47222,
            47219,
            47085,
            47141,
            47260,
            47195,
            47092,
            47134,
            47302,
            47142,
            47003,
            47189,
            47293,
            47343,
            49063,
            49127,
            47106,
            47100,
            47149,
            46954,
            47062,
            46984,
            47024,
            47192,
            47075,
            47211,
            47084,
            47100,
            47136,
            47172,
            47315
          ],
          [
            47792,
            47141,
            47290,
            46941,
            47073,
            47254,
            47152,
            47335,
            47285,
            47149,
            49042,
            47314,
            47386,
            47023,
            46916,
            47091,
            47220,
            46885,
            47010,
            47162,
            47092,
            47083,
            47232,
            47229,
            47154,
            47294,
            47257,
            47268,
            47593,
            47627,
            47013,
            47160,
            47222,
            47219,
            47085,
            47141,
            47260,
            47195,
            47092,
            47134,
            47302,
            47142,
            47003,
            47189,
            47293,
            47343,
            49063,
            49127,
            47106,
            47100,
            47149,
            46954,
            47062,
            46984,
            47024,
            47192,
            47075,
            47211,
            47084,
            47100,
            47136,
            47172,
            47315
          ],
          [
            47792,
            47141,
            47290,
            46941,
            47073,
            47254,
            47152,
            47335,
            47285,
            47149,
            49042,
            47314,
            47386,
            47023,
            46916,
            47091,
            47220,
            46885,
            47010,
            47162,
            47092,
            47083,
            47232,
            47229,
            47154,
            47294,
            47257,
            47268,
            47593,
            47627,
            47013,
            47160,
            47222,
            47219,
            47085,
            47141,
            47260,
            47195,
            47092,
            47134,
            47302,
            47142,
            47003,
            47189,
            47293,
            47343,
            49063,
            49127,
            47106,
            47100,
            47149,
            46954,
            47062,
            46984,
            47024,
            47192,
            47075,
            47211,
            47084,
            47100,
            47136,
            47172,
            47315
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            79,
            1061,
            6826,
            18933,
            29152,
            33600,
            32485,
            23914,
            14928,
            6503,
            1350,
            140,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            55,
            592,
            3384,
            10897,
            22370,
            33064,
            35287,
            30454,
            19254,
            10009,
            4052,
            701,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            83,
            862,
            5258,
            15618,
            26355,
            33728,
            37979,
            36720,
            26526,
            12865,
            4208,
            684,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            145,
            1510,
            5612,
            15223,
            27528,
            35030,
            33971,
            25555,
            12724,
            4101,
            804,
            58,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            13856,
            4891,
            765,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            220,
            2356,
            11321,
            23110,
            34525,
            39074,
            32233,
            19376,
            8178,
            1769,
            145,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            390,
            4193,
            15002,
            28210,
            38013,
            34645,
            22024,
            9061,
            2124,
            183,
            6,
            0,
            0,
            0,
            0
          ],
          [
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            77,
            1259,
            7613,
            19257,
            30853,
            38790,
            39548,
            33680,
            23992,
            12386,
            3449,
            439,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            70,
            586,
            3428,
            13420,
            25486,
            35362,
            33649,
            21919,
            10462,
            3705,
            707,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            104,
            1423,
            6130,
            18154,
            28639,
            36774,
            39222,
            34353,
            23328,
            13401,
            3419,
            432,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            205,
            1735,
            6986,
            17514,
            29960,
            38555,
            39584,
            32708,
            23088,
            13105,
            5660,
            1652,
            139,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2710244359986973,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014953539975977037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29236340100032976,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170711227998254,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40046025, 10011506), (411540, 411540), (40048650, 10012162))\nassert ((40046025 > 0 and 10011506 == 0\n  +10011506\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff7050c100>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff702e5220>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff706223a0>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40046025, 10011506), (411540, 411540), (40048650, 10012162))\nE       assert ((40046025 > 0 and 10011506 == 0\nE         +10011506\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.00503882200064254,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}