{
  "created": 1722033525.7999651,
  "duration": 23.43847346305847,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5052750329996343,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14799789500102634,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013580400009232108,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003898737002600683,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14793624399680994,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012724790030915756,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13200030799998785,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12142876100188005,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001311478998104576,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0039004770005703904,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12092778000078397,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012744289997499436,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034371170004305895,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14625614599935943,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012027869997837115,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003457547998550581,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11985162699784269,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011861370003316551,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003456347003520932,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14603753100163885,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012040169967804104,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034555370002635755,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12003253000148106,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001198616999317892,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004466620001039701,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021219779991952237,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011506160008138977,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034133260014641564,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0016977079976641107,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011080449985456653,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003386836000572657,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040105500011122786,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033508.1674168,
            "msecs": 167.41681098937988,
            "relativeCreated": 7783.89835357666,
            "thread": 281472988495904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5232
          }
        ]
      },
      "teardown": {
        "duration": 0.0012224679994687904,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034131459979107603,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023682230021222495,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033508.1798923,
            "msecs": 179.89230155944824,
            "relativeCreated": 7796.3738441467285,
            "thread": 281472988495904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5232
          }
        ]
      },
      "teardown": {
        "duration": 0.0011874869996972848,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021754080007667653,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002704471000470221,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033508.1895723,
            "msecs": 189.57233428955078,
            "relativeCreated": 7806.053876876831,
            "thread": 281472988495904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5232
          }
        ]
      },
      "teardown": {
        "duration": 0.0010417429984954651,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021628979993693065,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034002460015472025,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033508.1991634,
            "msecs": 199.16343688964844,
            "relativeCreated": 7815.644979476929,
            "thread": 281472988495904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5232
          }
        ]
      },
      "teardown": {
        "duration": 0.0010961040024994873,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003420166001887992,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14631827699849964,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012041670015605632,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034267959999851882,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12017518299762742,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011979570008406881,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17967068199868663,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1474186719970021,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001286038001126144,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015280810999684036,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12118185599683784,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012649780001083855,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8358180659997743,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            45,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            3,
            63,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035488389985403046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028843540021625813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.897408450000512,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            7,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            173,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            165,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            19,
            255,
            255,
            255,
            21
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            68,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            135,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            91,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            108,
            0,
            63,
            255
          ],
          [
            255,
            0,
            172,
            0,
            255,
            0,
            174,
            32,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034750679988064803,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002889483999751974,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.30229619999954593,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48267,
            47877,
            47152,
            55331,
            47731,
            47208,
            47393,
            47231,
            47369,
            47479,
            47765,
            47351,
            47546,
            47388,
            47559,
            47391,
            47543,
            47115,
            47299,
            47310,
            47561,
            47716,
            47615,
            47397,
            47456,
            47316,
            47449,
            47557,
            47505,
            47256,
            47527,
            47570,
            47573,
            47546,
            49407,
            47218,
            47438,
            47350,
            47327,
            47642,
            47455,
            47430,
            47243,
            47496,
            47414,
            47491,
            47406,
            47232,
            47157,
            47444,
            47519,
            47731,
            47337,
            47166,
            47430,
            47395,
            47351,
            47576,
            47450,
            47219,
            47494,
            47402,
            47500
          ],
          [
            48267,
            47877,
            47152,
            55331,
            47731,
            47208,
            47393,
            47231,
            47369,
            47479,
            47765,
            47351,
            47546,
            47388,
            47559,
            47391,
            47543,
            47115,
            47299,
            47310,
            47561,
            47716,
            47615,
            47397,
            47456,
            47316,
            47449,
            47557,
            47505,
            47256,
            47527,
            47570,
            47573,
            47546,
            49407,
            47218,
            47438,
            47350,
            47327,
            47642,
            47455,
            47430,
            47243,
            47496,
            47414,
            47491,
            47406,
            47232,
            47157,
            47444,
            47519,
            47731,
            47337,
            47166,
            47430,
            47395,
            47351,
            47576,
            47450,
            47219,
            47494,
            47402,
            47500
          ]
        ],
        "eTX_errcounts": [
          [
            40441,
            26679,
            8528,
            1392,
            82,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            315,
            3292,
            16875,
            35017,
            42126,
            31051,
            13168,
            1819,
            180,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            787,
            7693,
            25820,
            40497,
            37311,
            19412,
            4894,
            580,
            25,
            0,
            0,
            0
          ],
          [
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            395,
            4213,
            18178,
            36440,
            42511,
            31286,
            13304,
            3232,
            345,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            537,
            4458,
            19128,
            36100,
            42804,
            34858,
            17040,
            3302,
            269,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13413695599956554,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016059959998528939,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06897711999772582,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47233,
            47127,
            47200,
            47195,
            46928,
            47211,
            47178,
            47198,
            47307,
            47269,
            47169,
            47122,
            47346,
            47237,
            47110,
            47375,
            47199,
            47084,
            47104,
            47179,
            47241,
            46894,
            47250,
            47220,
            46920,
            46883,
            47163,
            47224,
            47283,
            47137,
            47045,
            47058,
            47101,
            47088,
            47362,
            47331,
            47125,
            47064,
            47116,
            47093,
            47033,
            47059,
            47198,
            47150,
            47157,
            47126,
            47166,
            47314,
            47232,
            47081,
            46785,
            47303,
            47073,
            47383,
            49394,
            47282,
            47015,
            47049,
            47176,
            47086,
            47161,
            47174,
            47099
          ],
          [
            47233,
            47127,
            47200,
            47195,
            46928,
            47211,
            47178,
            47198,
            47307,
            47269,
            47169,
            47122,
            47346,
            47237,
            47110,
            47375,
            47199,
            47084,
            47104,
            47179,
            47241,
            46894,
            47250,
            47220,
            46920,
            46883,
            47163,
            47224,
            47283,
            47137,
            47045,
            47058,
            47101,
            47088,
            47362,
            47331,
            47125,
            47064,
            47116,
            47093,
            47033,
            47059,
            47198,
            47150,
            47157,
            47126,
            47166,
            47314,
            47232,
            47081,
            46785,
            47303,
            47073,
            47383,
            49394,
            47282,
            47015,
            47049,
            47176,
            47086,
            47161,
            47174,
            47099
          ],
          [
            47233,
            47127,
            47200,
            47195,
            46928,
            47211,
            47178,
            47198,
            47307,
            47269,
            47169,
            47122,
            47346,
            47237,
            47110,
            47375,
            47199,
            47084,
            47104,
            47179,
            47241,
            46894,
            47250,
            47220,
            46920,
            46883,
            47163,
            47224,
            47283,
            47137,
            47045,
            47058,
            47101,
            47088,
            47362,
            47331,
            47125,
            47064,
            47116,
            47093,
            47033,
            47059,
            47198,
            47150,
            47157,
            47126,
            47166,
            47314,
            47232,
            47081,
            46785,
            47303,
            47073,
            47383,
            49394,
            47282,
            47015,
            47049,
            47176,
            47086,
            47161,
            47174,
            47099
          ],
          [
            47233,
            47127,
            47200,
            47195,
            46928,
            47211,
            47178,
            47198,
            47307,
            47269,
            47169,
            47122,
            47346,
            47237,
            47110,
            47375,
            47199,
            47084,
            47104,
            47179,
            47241,
            46894,
            47250,
            47220,
            46920,
            46883,
            47163,
            47224,
            47283,
            47137,
            47045,
            47058,
            47101,
            47088,
            47362,
            47331,
            47125,
            47064,
            47116,
            47093,
            47033,
            47059,
            47198,
            47150,
            47157,
            47126,
            47166,
            47314,
            47232,
            47081,
            46785,
            47303,
            47073,
            47383,
            49394,
            47282,
            47015,
            47049,
            47176,
            47086,
            47161,
            47174,
            47099
          ],
          [
            47233,
            47127,
            47200,
            47195,
            46928,
            47211,
            47178,
            47198,
            47307,
            47269,
            47169,
            47122,
            47346,
            47237,
            47110,
            47375,
            47199,
            47084,
            47104,
            47179,
            47241,
            46894,
            47250,
            47220,
            46920,
            46883,
            47163,
            47224,
            47283,
            47137,
            47045,
            47058,
            47101,
            47088,
            47362,
            47331,
            47125,
            47064,
            47116,
            47093,
            47033,
            47059,
            47198,
            47150,
            47157,
            47126,
            47166,
            47314,
            47232,
            47081,
            46785,
            47303,
            47073,
            47383,
            49394,
            47282,
            47015,
            47049,
            47176,
            47086,
            47161,
            47174,
            47099
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            45,
            488,
            2928,
            9218,
            20483,
            32922,
            36761,
            31479,
            19658,
            7358,
            1385,
            101,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            72,
            814,
            4015,
            11295,
            24161,
            32382,
            34871,
            29407,
            23223,
            14997,
            6444,
            1080,
            91,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            58,
            560,
            2847,
            10469,
            21672,
            33614,
            37168,
            34512,
            25991,
            14659,
            5870,
            1297,
            107,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            120,
            1183,
            4679,
            11007,
            21058,
            33349,
            41711,
            40048,
            29000,
            17285,
            5985,
            868,
            82,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            130,
            1106,
            4952,
            12876,
            23405
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            187,
            1811,
            7005,
            17302,
            30341,
            36032,
            32249,
            23400,
            12438,
            3846,
            450,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            187,
            1244,
            7083,
            17455,
            31647,
            34790,
            30996,
            23895,
            14043,
            4101,
            480,
            38,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            387,
            2448,
            8664,
            19183,
            31295,
            38133,
            35049,
            25156,
            12710,
            3046,
            334,
            22,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            63,
            704,
            2832,
            6908,
            16297,
            29976,
            38447,
            35862,
            28175,
            17156,
            5989,
            1113,
            62,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            6,
            135,
            1086,
            3716,
            9516,
            20976,
            31901,
            38249,
            37190,
            31894,
            23258,
            9706,
            2583,
            411,
            36,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            20,
            178,
            1381,
            4875,
            10198,
            18355,
            30281,
            40477,
            40899,
            34535,
            23197,
            11347,
            3782,
            714,
            105,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            57,
            648,
            2954,
            8376
          ]
        ]
      },
      "call": {
        "duration": 0.2718966120010009,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff74bc87b0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff74bc87b0> = array([21, 13, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff74ba18e0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47233, 47127, 47200, 47195, 46928, 47211, ...], [47233, 47127, 47200, 47195, 46928, 47211, ...], [..., 0, ...], [0, 0, 0, 58, 560, 2847, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 6, 135, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff74bc87b0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff74bc87b0> = array([21, 13, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016224060018430464,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29244059000120615,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1693469429992547,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001550283999677049,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2986313799992786,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            33,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            248,
            61,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034970580018125474,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029704560001846403,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.533498253000289,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            213,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            13,
            255,
            220,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            98,
            255,
            141,
            255,
            126,
            0,
            0,
            236,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            118,
            4,
            255,
            42,
            255,
            15
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            71,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            1,
            255,
            124,
            255,
            223,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            190,
            255,
            120,
            255,
            255,
            8,
            0,
            159,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            98,
            255,
            135
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034597379999468103,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002867674000299303,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29551286900095874,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47871,
            47332,
            47387,
            47524,
            47344,
            47398,
            47423,
            47525,
            47300,
            47226,
            47374,
            47300,
            47369,
            47329,
            47433,
            47325,
            47353,
            49308,
            47510,
            47754,
            47292,
            49846,
            47369,
            47276,
            47413,
            47178,
            47190,
            47175,
            47350,
            47225,
            47297,
            47324,
            47305,
            47298,
            47479,
            47015,
            47025,
            47277,
            47399,
            47454,
            47469,
            47331,
            47392,
            47254,
            47314,
            47340,
            47338,
            47286,
            47282,
            47429,
            49261,
            47361,
            47496,
            47373,
            49551,
            47423,
            47398,
            47303,
            47437,
            47412,
            47292,
            47391,
            47242
          ],
          [
            47871,
            47332,
            47387,
            47524,
            47344,
            47398,
            47423,
            47525,
            47300,
            47226,
            47374,
            47300,
            47369,
            47329,
            47433,
            47325,
            47353,
            49308,
            47510,
            47754,
            47292,
            49846,
            47369,
            47276,
            47413,
            47178,
            47190,
            47175,
            47350,
            47225,
            47297,
            47324,
            47305,
            47298,
            47479,
            47015,
            47025,
            47277,
            47399,
            47454,
            47469,
            47331,
            47392,
            47254,
            47314,
            47340,
            47338,
            47286,
            47282,
            47429,
            49261,
            47361,
            47496,
            47373,
            49551,
            47423,
            47398,
            47303,
            47437,
            47412,
            47292,
            47391,
            47242
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            316,
            3862,
            17799,
            36650,
            37875,
            18722,
            4227,
            346,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            106,
            2623,
            16735,
            35034,
            39891,
            25809,
            8415,
            1027,
            58,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            45,
            1240,
            8731,
            29131,
            41753,
            39733,
            19101,
            4449,
            473,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            178,
            2726,
            13798,
            31478,
            42675,
            38586,
            20165,
            5577,
            644,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13379629799965187,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016116959995997604,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06878985599905718,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48221,
            47223,
            47349,
            47642,
            47386,
            47360,
            47214,
            47302,
            47313,
            46947,
            47223,
            47354,
            47165,
            47193,
            47263,
            47177,
            47279,
            47035,
            47184,
            47170,
            47327,
            47486,
            47174,
            47289,
            47041,
            47183,
            47266,
            47010,
            47028,
            47274,
            47055,
            46861,
            47450,
            47135,
            47123,
            47242,
            47125,
            47228,
            47199,
            47571,
            49330,
            46884,
            47255,
            47162,
            47286,
            47074,
            47120,
            47380,
            47177,
            47115,
            47149,
            47190,
            47180,
            47330,
            47287,
            47111,
            47246,
            48741,
            49056,
            47371,
            47133,
            47103,
            47357
          ],
          [
            48221,
            47223,
            47349,
            47642,
            47386,
            47360,
            47214,
            47302,
            47313,
            46947,
            47223,
            47354,
            47165,
            47193,
            47263,
            47177,
            47279,
            47035,
            47184,
            47170,
            47327,
            47486,
            47174,
            47289,
            47041,
            47183,
            47266,
            47010,
            47028,
            47274,
            47055,
            46861,
            47450,
            47135,
            47123,
            47242,
            47125,
            47228,
            47199,
            47571,
            49330,
            46884,
            47255,
            47162,
            47286,
            47074,
            47120,
            47380,
            47177,
            47115,
            47149,
            47190,
            47180,
            47330,
            47287,
            47111,
            47246,
            48741,
            49056,
            47371,
            47133,
            47103,
            47357
          ],
          [
            48221,
            47223,
            47349,
            47642,
            47386,
            47360,
            47214,
            47302,
            47313,
            46947,
            47223,
            47354,
            47165,
            47193,
            47263,
            47177,
            47279,
            47035,
            47184,
            47170,
            47327,
            47486,
            47174,
            47289,
            47041,
            47183,
            47266,
            47010,
            47028,
            47274,
            47055,
            46861,
            47450,
            47135,
            47123,
            47242,
            47125,
            47228,
            47199,
            47571,
            49330,
            46884,
            47255,
            47162,
            47286,
            47074,
            47120,
            47380,
            47177,
            47115,
            47149,
            47190,
            47180,
            47330,
            47287,
            47111,
            47246,
            48741,
            49056,
            47371,
            47133,
            47103,
            47357
          ],
          [
            48221,
            47223,
            47349,
            47642,
            47386,
            47360,
            47214,
            47302,
            47313,
            46947,
            47223,
            47354,
            47165,
            47193,
            47263,
            47177,
            47279,
            47035,
            47184,
            47170,
            47327,
            47486,
            47174,
            47289,
            47041,
            47183,
            47266,
            47010,
            47028,
            47274,
            47055,
            46861,
            47450,
            47135,
            47123,
            47242,
            47125,
            47228,
            47199,
            47571,
            49330,
            46884,
            47255,
            47162,
            47286,
            47074,
            47120,
            47380,
            47177,
            47115,
            47149,
            47190,
            47180,
            47330,
            47287,
            47111,
            47246,
            48741,
            49056,
            47371,
            47133,
            47103,
            47357
          ],
          [
            48221,
            47223,
            47349,
            47642,
            47386,
            47360,
            47214,
            47302,
            47313,
            46947,
            47223,
            47354,
            47165,
            47193,
            47263,
            47177,
            47279,
            47035,
            47184,
            47170,
            47327,
            47486,
            47174,
            47289,
            47041,
            47183,
            47266,
            47010,
            47028,
            47274,
            47055,
            46861,
            47450,
            47135,
            47123,
            47242,
            47125,
            47228,
            47199,
            47571,
            49330,
            46884,
            47255,
            47162,
            47286,
            47074,
            47120,
            47380,
            47177,
            47115,
            47149,
            47190,
            47180,
            47330,
            47287,
            47111,
            47246,
            48741,
            49056,
            47371,
            47133,
            47103,
            47357
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            192,
            2031,
            11580,
            27772,
            37945,
            36724,
            25379,
            11786,
            2624,
            306,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            308,
            2837,
            14462,
            30882,
            42004,
            40046,
            29159,
            15351,
            4773,
            839,
            75,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            3,
            168,
            1578,
            7075,
            21122,
            37216,
            40527,
            34378,
            21665,
            9695,
            2341,
            298,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            6,
            310,
            1934,
            8787,
            22149,
            35875,
            43981,
            42087,
            28037,
            12820,
            2451,
            341,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            65,
            617,
            3099,
            8529,
            20469,
            34917,
            38306
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            1157,
            6536,
            21112,
            34404,
            38716,
            31450,
            13957,
            3337,
            353,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            533,
            5530,
            17538,
            34301,
            41026,
            33488,
            18257,
            5560,
            971,
            62,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            161,
            1646,
            10333,
            26195,
            39257,
            41999,
            33713,
            17079,
            5084,
            612,
            30,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            205,
            2074,
            9160,
            21898,
            34561,
            41917,
            35030,
            22836,
            9069,
            2047,
            267,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            19,
            222,
            2528,
            11779,
            26844,
            38726,
            39305,
            34051,
            27051,
            16240,
            5812,
            1286,
            65,
            5,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            54,
            782,
            3784,
            11485,
            25117,
            36382,
            42972,
            40458,
            28875,
            13964,
            4501,
            595,
            18,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            212,
            1541,
            7013,
            17148,
            29640
          ]
        ]
      },
      "call": {
        "duration": 0.27257954699962283,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff74975030>()\n +    where <built-in method all of numpy.ndarray object at 0xffff74975030> = array([14, 13, 15, 14, 11]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff74ba18e0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48221, 47223, 47349, 47642, 47386, 47360, ...], [48221, 47223, 47349, 47642, 47386, 47360, ...], [... [0, 3, 168, 1578, 7075, 21122, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 19, 222, 2528, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff74975030>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff74975030> = array([14, 13, 15, 14, 11]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0015997859991330188,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29180661600184976,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1695871889969567,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014359220003825612,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.4959568259982916,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            85,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            236,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035361490008654073,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029405160021269694,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5337920499987376,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            5,
            255,
            0,
            42,
            0,
            255,
            0,
            255,
            255
          ],
          [
            73,
            0,
            17,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            17,
            255,
            47,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            4,
            255,
            5,
            3,
            0,
            255,
            2,
            255,
            255
          ],
          [
            81,
            0,
            7,
            0,
            14,
            0,
            255,
            237,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            128,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            98,
            0,
            7,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            87,
            255,
            40,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035053679966949858,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002905984998506028,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29593140900033177,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48303,
            47597,
            47425,
            47471,
            47481,
            47382,
            47580,
            47246,
            47338,
            49308,
            47567,
            47674,
            47349,
            49409,
            47385,
            47401,
            47715,
            47387,
            47508,
            47533,
            47500,
            47369,
            47377,
            47333,
            47434,
            47432,
            47309,
            47282,
            47441,
            47483,
            47478,
            47484,
            47300,
            47409,
            47436,
            47302,
            47652,
            47693,
            47610,
            47524,
            47793,
            47353,
            47521,
            47453,
            49105,
            47399,
            47883,
            47454,
            49528,
            47167,
            47442,
            47278,
            47356,
            47467,
            47338,
            47414,
            47440,
            47392,
            47495,
            47539,
            47359,
            47460,
            47332
          ],
          [
            48303,
            47597,
            47425,
            47471,
            47481,
            47382,
            47580,
            47246,
            47338,
            49308,
            47567,
            47674,
            47349,
            49409,
            47385,
            47401,
            47715,
            47387,
            47508,
            47533,
            47500,
            47369,
            47377,
            47333,
            47434,
            47432,
            47309,
            47282,
            47441,
            47483,
            47478,
            47484,
            47300,
            47409,
            47436,
            47302,
            47652,
            47693,
            47610,
            47524,
            47793,
            47353,
            47521,
            47453,
            49105,
            47399,
            47883,
            47454,
            49528,
            47167,
            47442,
            47278,
            47356,
            47467,
            47338,
            47414,
            47440,
            47392,
            47495,
            47539,
            47359,
            47460,
            47332
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            735,
            7470,
            24924,
            38888,
            35359,
            14355,
            2345,
            218,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            66,
            569,
            6970,
            22369,
            38210,
            38062,
            21028,
            5402,
            437,
            24,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13
          ],
          [
            0,
            0,
            0,
            2,
            174,
            1825,
            14242,
            33206,
            41083,
            30628,
            9652,
            1770,
            101,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            587,
            5724,
            22108,
            38712,
            41465,
            30554,
            12939,
            1819,
            212,
            20,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            773,
            7698,
            25711,
            40508,
            43372
          ]
        ]
      },
      "call": {
        "duration": 0.13382383800126263,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016814180016808677,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06901486099741305,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50154,
            49246,
            47039,
            47174,
            47332,
            47181,
            47198,
            47188,
            47166,
            47143,
            47089,
            47125,
            47006,
            47175,
            47227,
            47269,
            47283,
            47186,
            47206,
            47488,
            47265,
            47186,
            47051,
            46815,
            47061,
            47071,
            47075,
            47244,
            47381,
            47053,
            47157,
            46971,
            47103,
            47290,
            47379,
            47279,
            47333,
            47581,
            47365,
            47198,
            47287,
            46937,
            47249,
            47211,
            46997,
            47101,
            47277,
            47097,
            47011,
            47126,
            47151,
            47241,
            47505,
            47134,
            47058,
            47351,
            49575,
            47061,
            47212,
            47118,
            47193,
            47274,
            47003
          ],
          [
            50154,
            49246,
            47039,
            47174,
            47332,
            47181,
            47198,
            47188,
            47166,
            47143,
            47089,
            47125,
            47006,
            47175,
            47227,
            47269,
            47283,
            47186,
            47206,
            47488,
            47265,
            47186,
            47051,
            46815,
            47061,
            47071,
            47075,
            47244,
            47381,
            47053,
            47157,
            46971,
            47103,
            47290,
            47379,
            47279,
            47333,
            47581,
            47365,
            47198,
            47287,
            46937,
            47249,
            47211,
            46997,
            47101,
            47277,
            47097,
            47011,
            47126,
            47151,
            47241,
            47505,
            47134,
            47058,
            47351,
            49575,
            47061,
            47212,
            47118,
            47193,
            47274,
            47003
          ],
          [
            50154,
            49246,
            47039,
            47174,
            47332,
            47181,
            47198,
            47188,
            47166,
            47143,
            47089,
            47125,
            47006,
            47175,
            47227,
            47269,
            47283,
            47186,
            47206,
            47488,
            47265,
            47186,
            47051,
            46815,
            47061,
            47071,
            47075,
            47244,
            47381,
            47053,
            47157,
            46971,
            47103,
            47290,
            47379,
            47279,
            47333,
            47581,
            47365,
            47198,
            47287,
            46937,
            47249,
            47211,
            46997,
            47101,
            47277,
            47097,
            47011,
            47126,
            47151,
            47241,
            47505,
            47134,
            47058,
            47351,
            49575,
            47061,
            47212,
            47118,
            47193,
            47274,
            47003
          ],
          [
            50154,
            49246,
            47039,
            47174,
            47332,
            47181,
            47198,
            47188,
            47166,
            47143,
            47089,
            47125,
            47006,
            47175,
            47227,
            47269,
            47283,
            47186,
            47206,
            47488,
            47265,
            47186,
            47051,
            46815,
            47061,
            47071,
            47075,
            47244,
            47381,
            47053,
            47157,
            46971,
            47103,
            47290,
            47379,
            47279,
            47333,
            47581,
            47365,
            47198,
            47287,
            46937,
            47249,
            47211,
            46997,
            47101,
            47277,
            47097,
            47011,
            47126,
            47151,
            47241,
            47505,
            47134,
            47058,
            47351,
            49575,
            47061,
            47212,
            47118,
            47193,
            47274,
            47003
          ],
          [
            50154,
            49246,
            47039,
            47174,
            47332,
            47181,
            47198,
            47188,
            47166,
            47143,
            47089,
            47125,
            47006,
            47175,
            47227,
            47269,
            47283,
            47186,
            47206,
            47488,
            47265,
            47186,
            47051,
            46815,
            47061,
            47071,
            47075,
            47244,
            47381,
            47053,
            47157,
            46971,
            47103,
            47290,
            47379,
            47279,
            47333,
            47581,
            47365,
            47198,
            47287,
            46937,
            47249,
            47211,
            46997,
            47101,
            47277,
            47097,
            47011,
            47126,
            47151,
            47241,
            47505,
            47134,
            47058,
            47351,
            49575,
            47061,
            47212,
            47118,
            47193,
            47274,
            47003
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            68,
            924,
            6448,
            19948,
            33781,
            39691,
            35278,
            23534,
            11371,
            3367,
            419,
            57,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            171,
            2016,
            10534,
            24885,
            37443,
            41393,
            36460,
            21745,
            7736,
            1702,
            175,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            199,
            1498,
            5041,
            12907,
            25391,
            37853,
            43361,
            38359,
            22857,
            8825,
            1684,
            220,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            29,
            339,
            2571,
            6899,
            15896,
            30135,
            39230,
            36845,
            26788,
            13271,
            3958,
            787,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            60
          ],
          [
            11671,
            3020,
            355,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            126,
            1708,
            8927,
            20469,
            32462,
            39077,
            29338,
            15109,
            5558,
            876,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            78,
            901,
            5289,
            15827,
            28216,
            36103,
            32739,
            21720,
            8315,
            1629,
            136,
            5,
            0,
            0,
            0,
            0
          ],
          [
            56,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            62,
            1171,
            6815,
            17096,
            27592,
            38737,
            40544,
            31315,
            20702,
            9755,
            2848,
            339,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            144,
            1136,
            5034,
            15824,
            27456,
            34908,
            33167,
            23190,
            11199,
            3406,
            708,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            203,
            1608,
            5775,
            16555,
            27912,
            37227,
            41298,
            37353,
            24859,
            14037,
            4222,
            699,
            26,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            655,
            2928,
            8033,
            17921,
            30381,
            37672,
            35903,
            30226,
            22450,
            12858,
            5088,
            1372,
            105,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27086956899802317,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014853329994366504,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2915461199991114,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689684550001402,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004820448000828037,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}