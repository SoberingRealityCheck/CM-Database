{
  "created": 1722032497.2837288,
  "duration": 23.192145109176636,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.508313933001773,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479251890013984,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013702200012630783,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0039006560000416357,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14799221100111026,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001292519002163317,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13249953600097797,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12145242100086762,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00129953900250257,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038981959987722803,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1208622779995494,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012832489992433693,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003481517000182066,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1462708319995727,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012130169998272322,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034485159994801506,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11969969200072228,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011850570008391514,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034215160012536217,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14592567500221776,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012173370014352258,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034508559983805753,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1280522369997925,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012223180019645952,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004478799997741589,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002108356999087846,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001151065000158269,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034241860012116376,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0018160300023737364,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011042040023312438,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003401115998713067,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004067070000019157,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032479.8566394,
            "msecs": 856.6393852233887,
            "relativeCreated": 7741.538524627686,
            "thread": 281473717542944,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4742
          }
        ]
      },
      "teardown": {
        "duration": 0.0012008369994873647,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003435616999922786,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024067740014288574,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032479.869166,
            "msecs": 869.1658973693848,
            "relativeCreated": 7754.065036773682,
            "thread": 281473717542944,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4742
          }
        ]
      },
      "teardown": {
        "duration": 0.0011846359993796796,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002147928000340471,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027434709991212003,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032479.8788853,
            "msecs": 878.8852691650391,
            "relativeCreated": 7763.784408569336,
            "thread": 281473717542944,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4742
          }
        ]
      },
      "teardown": {
        "duration": 0.0010856640001293272,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021718980024161283,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034632469978532754,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032479.8885207,
            "msecs": 888.5207176208496,
            "relativeCreated": 7773.4198570251465,
            "thread": 281473717542944,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4742
          }
        ]
      },
      "teardown": {
        "duration": 0.0010859639987756964,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034016559984593187,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14634334400034277,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012773979979101568,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034088250031345524,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12018522200014559,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012637180007004645,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1749681799992686,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14739504699900863,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012769189997925423,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015451062998181442,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12113327300176024,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012736780008708593,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8349874430023192,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            6,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            57,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            6,
            125,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003584120000596158,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002911144998506643,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8931444600020768,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            13,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            6,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            249,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            251,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            39,
            255,
            255,
            255,
            7
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            87,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            144,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            155,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            248,
            255,
            255,
            255,
            255,
            0,
            0,
            204,
            0,
            125,
            255
          ],
          [
            255,
            0,
            180,
            0,
            255,
            0,
            217,
            63,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003480376999505097,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002991485998791177,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3024684060001164,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48029,
            47023,
            47015,
            47316,
            47274,
            47288,
            47260,
            47313,
            47328,
            47454,
            47386,
            47352,
            47297,
            47216,
            47293,
            47204,
            55277,
            59968,
            47400,
            48108,
            47295,
            47269,
            47321,
            47351,
            47241,
            47344,
            47646,
            47351,
            47599,
            47571,
            49497,
            47204,
            47357,
            47246,
            47228,
            47366,
            47398,
            47414,
            47310,
            47422,
            47260,
            47550,
            47127,
            47279,
            47235,
            47389,
            47372,
            47421,
            47313,
            47467,
            47256,
            47394,
            47092,
            47813,
            47110,
            47310,
            47418,
            47254,
            47366,
            49285,
            47267,
            47578,
            47237
          ],
          [
            48029,
            47023,
            47015,
            47316,
            47274,
            47288,
            47260,
            47313,
            47328,
            47454,
            47386,
            47352,
            47297,
            47216,
            47293,
            47204,
            55277,
            59968,
            47400,
            48108,
            47295,
            47269,
            47321,
            47351,
            47241,
            47344,
            47646,
            47351,
            47599,
            47571,
            49497,
            47204,
            47357,
            47246,
            47228,
            47366,
            47398,
            47414,
            47310,
            47422,
            47260,
            47550,
            47127,
            47279,
            47235,
            47389,
            47372,
            47421,
            47313,
            47467,
            47256,
            47394,
            47092,
            47813,
            47110,
            47310,
            47418,
            47254,
            47366,
            49285,
            47267,
            47578,
            47237
          ]
        ],
        "eTX_errcounts": [
          [
            40067,
            26584,
            8635,
            1173,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            214,
            3085,
            15368,
            34046,
            42420,
            32145,
            14974,
            2383,
            200,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            840,
            7441,
            25841,
            39615,
            38001,
            20129,
            5478,
            533,
            54,
            3,
            0,
            0
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            363,
            3953,
            16867,
            35704,
            42384,
            32086,
            14120,
            3663,
            366,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            388,
            4037,
            19065,
            36586,
            42747,
            35380,
            17350,
            3428,
            419,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13409803199829184,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016498570003022905,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0688600210014556,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47499,
            47243,
            47046,
            47340,
            46990,
            47068,
            46790,
            47181,
            46886,
            47015,
            47617,
            47165,
            47072,
            47090,
            47374,
            47300,
            47030,
            47070,
            46969,
            47154,
            46942,
            47942,
            46983,
            47239,
            47077,
            47000,
            47106,
            47111,
            47247,
            47785,
            47097,
            47322,
            46953,
            47349,
            47138,
            47224,
            47099,
            47127,
            47073,
            47226,
            46998,
            47115,
            47155,
            47289,
            46799,
            47140,
            46989,
            47259,
            47768,
            47241,
            46710,
            47290,
            47085,
            47044,
            47033,
            47140,
            47027,
            46997,
            47012,
            47007,
            46985,
            46858,
            46964
          ],
          [
            47499,
            47243,
            47046,
            47340,
            46990,
            47068,
            46790,
            47181,
            46886,
            47015,
            47617,
            47165,
            47072,
            47090,
            47374,
            47300,
            47030,
            47070,
            46969,
            47154,
            46942,
            47942,
            46983,
            47239,
            47077,
            47000,
            47106,
            47111,
            47247,
            47785,
            47097,
            47322,
            46953,
            47349,
            47138,
            47224,
            47099,
            47127,
            47073,
            47226,
            46998,
            47115,
            47155,
            47289,
            46799,
            47140,
            46989,
            47259,
            47768,
            47241,
            46710,
            47290,
            47085,
            47044,
            47033,
            47140,
            47027,
            46997,
            47012,
            47007,
            46985,
            46858,
            46964
          ],
          [
            47499,
            47243,
            47046,
            47340,
            46990,
            47068,
            46790,
            47181,
            46886,
            47015,
            47617,
            47165,
            47072,
            47090,
            47374,
            47300,
            47030,
            47070,
            46969,
            47154,
            46942,
            47942,
            46983,
            47239,
            47077,
            47000,
            47106,
            47111,
            47247,
            47785,
            47097,
            47322,
            46953,
            47349,
            47138,
            47224,
            47099,
            47127,
            47073,
            47226,
            46998,
            47115,
            47155,
            47289,
            46799,
            47140,
            46989,
            47259,
            47768,
            47241,
            46710,
            47290,
            47085,
            47044,
            47033,
            47140,
            47027,
            46997,
            47012,
            47007,
            46985,
            46858,
            46964
          ],
          [
            47499,
            47243,
            47046,
            47340,
            46990,
            47068,
            46790,
            47181,
            46886,
            47015,
            47617,
            47165,
            47072,
            47090,
            47374,
            47300,
            47030,
            47070,
            46969,
            47154,
            46942,
            47942,
            46983,
            47239,
            47077,
            47000,
            47106,
            47111,
            47247,
            47785,
            47097,
            47322,
            46953,
            47349,
            47138,
            47224,
            47099,
            47127,
            47073,
            47226,
            46998,
            47115,
            47155,
            47289,
            46799,
            47140,
            46989,
            47259,
            47768,
            47241,
            46710,
            47290,
            47085,
            47044,
            47033,
            47140,
            47027,
            46997,
            47012,
            47007,
            46985,
            46858,
            46964
          ],
          [
            47499,
            47243,
            47046,
            47340,
            46990,
            47068,
            46790,
            47181,
            46886,
            47015,
            47617,
            47165,
            47072,
            47090,
            47374,
            47300,
            47030,
            47070,
            46969,
            47154,
            46942,
            47942,
            46983,
            47239,
            47077,
            47000,
            47106,
            47111,
            47247,
            47785,
            47097,
            47322,
            46953,
            47349,
            47138,
            47224,
            47099,
            47127,
            47073,
            47226,
            46998,
            47115,
            47155,
            47289,
            46799,
            47140,
            46989,
            47259,
            47768,
            47241,
            46710,
            47290,
            47085,
            47044,
            47033,
            47140,
            47027,
            46997,
            47012,
            47007,
            46985,
            46858,
            46964
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            27,
            434,
            2693,
            8851,
            21890,
            33600,
            35977,
            31936,
            21453,
            9752,
            2459,
            436,
            67,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            29,
            739,
            4492,
            11996,
            23186,
            32477,
            35789,
            31020,
            23136,
            12328,
            4628,
            1058,
            160,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            2,
            12,
            181,
            1218,
            3919,
            9425,
            21719,
            36221,
            39473,
            35665,
            26490,
            16210,
            9289,
            3424,
            600,
            64,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            146,
            1316,
            5287,
            14847,
            26432,
            31959,
            34609,
            35886,
            28663,
            16871,
            6997,
            1765,
            164,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            59,
            528,
            2407,
            5754,
            13371,
            26309
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            76,
            1069,
            5026,
            16123,
            30691,
            35524,
            33011,
            23208,
            12851,
            5186,
            1075,
            115,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            123,
            1380,
            6686,
            15632,
            29143,
            35820,
            34332,
            24101,
            11968,
            3851,
            453,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            37,
            358,
            2015,
            8077,
            19697,
            33072,
            37804,
            34289,
            26392,
            16101,
            7276,
            1653,
            168,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            56,
            663,
            3089,
            7953,
            16600,
            27757,
            36092,
            34262,
            25823,
            15778,
            7285,
            1954,
            142,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            5,
            156,
            1138,
            3598,
            8001,
            17792,
            32965,
            39341,
            36856,
            31103,
            23016,
            14166,
            8080,
            2954,
            497,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            105,
            1196,
            4756,
            12417,
            24611,
            32563,
            35468,
            37521,
            33176,
            24574,
            15088,
            7335,
            1775,
            238,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            129,
            880,
            3222,
            8200
          ]
        ]
      },
      "call": {
        "duration": 0.2720368989976123,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa0331d50>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa0331d50> = array([21, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa03174c0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47499, 47243, 47046, 47340, 46990, 47068, ...], [47499, 47243, 47046, 47340, 46990, 47068, ...], [..., ...], [0, 2, 12, 181, 1218, 3919, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 5, 156, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa0331d50>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa0331d50> = array([21, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016234260001510847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2976434580014029,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689729600002465,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014494819988613017,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2932535170002666,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            31,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            239,
            86,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003527689001202816,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028875940006400924,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5337650289984595,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            217,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            89,
            255,
            106,
            255,
            109,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            233,
            0,
            109,
            2,
            255,
            24,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            70,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            8
          ],
          [
            3,
            255,
            153,
            255,
            196,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            222,
            255,
            134,
            255,
            255,
            9,
            0,
            160,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            157,
            255,
            99
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          2
        ]
      },
      "call": {
        "duration": 0.003444077003223356,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028995639986533206,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956452639991767,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48171,
            47260,
            47485,
            47464,
            47454,
            47299,
            47657,
            47224,
            47408,
            47572,
            47374,
            47292,
            47577,
            47415,
            47449,
            47619,
            47490,
            47513,
            47585,
            47352,
            47270,
            47451,
            47410,
            47311,
            47405,
            47408,
            49275,
            47433,
            47884,
            47300,
            49255,
            47328,
            47695,
            47602,
            47466,
            47581,
            47147,
            47294,
            47349,
            47432,
            47364,
            47352,
            47274,
            47551,
            47363,
            47284,
            47392,
            47294,
            47393,
            47318,
            47459,
            47400,
            47521,
            47492,
            47635,
            47465,
            47417,
            47504,
            47348,
            47396,
            47484,
            47447,
            47346
          ],
          [
            48171,
            47260,
            47485,
            47464,
            47454,
            47299,
            47657,
            47224,
            47408,
            47572,
            47374,
            47292,
            47577,
            47415,
            47449,
            47619,
            47490,
            47513,
            47585,
            47352,
            47270,
            47451,
            47410,
            47311,
            47405,
            47408,
            49275,
            47433,
            47884,
            47300,
            49255,
            47328,
            47695,
            47602,
            47466,
            47581,
            47147,
            47294,
            47349,
            47432,
            47364,
            47352,
            47274,
            47551,
            47363,
            47284,
            47392,
            47294,
            47393,
            47318,
            47459,
            47400,
            47521,
            47492,
            47635,
            47465,
            47417,
            47504,
            47348,
            47396,
            47484,
            47447,
            47346
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            233,
            3317,
            16838,
            36275,
            37537,
            19620,
            4655,
            455,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            144,
            2757,
            16258,
            34891,
            40170,
            26124,
            8469,
            1007,
            101,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            784,
            8047,
            28139,
            41371,
            39493,
            20361,
            4763,
            432,
            26,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            135,
            2290,
            13524,
            30596,
            41897,
            39215,
            20682,
            5867,
            667,
            67,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13351061899811612,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016060259986261372,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06881984999927226,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47783,
            47069,
            47200,
            47025,
            46984,
            47061,
            47271,
            47061,
            47020,
            47158,
            47050,
            47153,
            47290,
            47005,
            47106,
            47033,
            47296,
            47156,
            47389,
            47360,
            47161,
            47097,
            47075,
            47070,
            46977,
            47144,
            47042,
            47233,
            47299,
            47148,
            47067,
            46772,
            47165,
            47191,
            47160,
            47132,
            47347,
            47080,
            47121,
            47536,
            49438,
            47065,
            46976,
            47061,
            47081,
            47030,
            47104,
            47128,
            47124,
            46996,
            47011,
            46968,
            47032,
            47174,
            47143,
            47087,
            47181,
            47084,
            47279,
            47140,
            47281,
            49258,
            47027
          ],
          [
            47783,
            47069,
            47200,
            47025,
            46984,
            47061,
            47271,
            47061,
            47020,
            47158,
            47050,
            47153,
            47290,
            47005,
            47106,
            47033,
            47296,
            47156,
            47389,
            47360,
            47161,
            47097,
            47075,
            47070,
            46977,
            47144,
            47042,
            47233,
            47299,
            47148,
            47067,
            46772,
            47165,
            47191,
            47160,
            47132,
            47347,
            47080,
            47121,
            47536,
            49438,
            47065,
            46976,
            47061,
            47081,
            47030,
            47104,
            47128,
            47124,
            46996,
            47011,
            46968,
            47032,
            47174,
            47143,
            47087,
            47181,
            47084,
            47279,
            47140,
            47281,
            49258,
            47027
          ],
          [
            47783,
            47069,
            47200,
            47025,
            46984,
            47061,
            47271,
            47061,
            47020,
            47158,
            47050,
            47153,
            47290,
            47005,
            47106,
            47033,
            47296,
            47156,
            47389,
            47360,
            47161,
            47097,
            47075,
            47070,
            46977,
            47144,
            47042,
            47233,
            47299,
            47148,
            47067,
            46772,
            47165,
            47191,
            47160,
            47132,
            47347,
            47080,
            47121,
            47536,
            49438,
            47065,
            46976,
            47061,
            47081,
            47030,
            47104,
            47128,
            47124,
            46996,
            47011,
            46968,
            47032,
            47174,
            47143,
            47087,
            47181,
            47084,
            47279,
            47140,
            47281,
            49258,
            47027
          ],
          [
            47783,
            47069,
            47200,
            47025,
            46984,
            47061,
            47271,
            47061,
            47020,
            47158,
            47050,
            47153,
            47290,
            47005,
            47106,
            47033,
            47296,
            47156,
            47389,
            47360,
            47161,
            47097,
            47075,
            47070,
            46977,
            47144,
            47042,
            47233,
            47299,
            47148,
            47067,
            46772,
            47165,
            47191,
            47160,
            47132,
            47347,
            47080,
            47121,
            47536,
            49438,
            47065,
            46976,
            47061,
            47081,
            47030,
            47104,
            47128,
            47124,
            46996,
            47011,
            46968,
            47032,
            47174,
            47143,
            47087,
            47181,
            47084,
            47279,
            47140,
            47281,
            49258,
            47027
          ],
          [
            47783,
            47069,
            47200,
            47025,
            46984,
            47061,
            47271,
            47061,
            47020,
            47158,
            47050,
            47153,
            47290,
            47005,
            47106,
            47033,
            47296,
            47156,
            47389,
            47360,
            47161,
            47097,
            47075,
            47070,
            46977,
            47144,
            47042,
            47233,
            47299,
            47148,
            47067,
            46772,
            47165,
            47191,
            47160,
            47132,
            47347,
            47080,
            47121,
            47536,
            49438,
            47065,
            46976,
            47061,
            47081,
            47030,
            47104,
            47128,
            47124,
            46996,
            47011,
            46968,
            47032,
            47174,
            47143,
            47087,
            47181,
            47084,
            47279,
            47140,
            47281,
            49258,
            47027
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            346,
            2729,
            12396,
            25949,
            34496,
            33973,
            23336,
            11001,
            3160,
            511,
            22,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            785,
            4543,
            14238,
            26220,
            37523,
            39043,
            31144,
            17594,
            4459,
            570,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            0,
            10,
            184,
            1562,
            6493,
            18134,
            32899,
            38887,
            32920,
            18753,
            6594,
            988,
            41,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            219,
            1793,
            10217,
            23597,
            36343,
            42198,
            40439,
            30770,
            16450,
            5156,
            631,
            74,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            383,
            2162,
            7885,
            19197,
            33291,
            37454
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            354,
            3712,
            15454,
            29880,
            36951,
            32769,
            18766,
            7003,
            1214,
            40,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            798,
            7030,
            20848,
            37373,
            41577,
            35665,
            22351,
            9713,
            1847,
            183,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            100,
            1034,
            5884,
            19595,
            34130,
            38167,
            34109,
            21486,
            8851,
            1535,
            175,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            231,
            2553,
            12082,
            25178,
            33568,
            38480,
            35109,
            25755,
            11917,
            3158,
            347,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            8,
            213,
            1856,
            8607,
            21441,
            33270,
            39210,
            35833,
            25019,
            12112,
            2901,
            371,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            34,
            555,
            3755,
            14418,
            26417,
            35559,
            40892,
            37917,
            28300,
            13386,
            4185,
            445,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            5,
            71,
            901,
            5667,
            17426,
            31410
          ]
        ]
      },
      "call": {
        "duration": 0.2690482020007039,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015172540006460622,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29829492299904814,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1689562190003926,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014503519996651448,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3710728769983689,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            109,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            18,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035143980021530297,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002891013999033021,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.534502655002143,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            5,
            255,
            0,
            59,
            0,
            255,
            0,
            255,
            255
          ],
          [
            85,
            0,
            16,
            0,
            5,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            47,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            188,
            255,
            0,
            18,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            20,
            255,
            60,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            11,
            0,
            255,
            10,
            255,
            255
          ],
          [
            57,
            0,
            2,
            0,
            13,
            0,
            255,
            233,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            113,
            255,
            3,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            107,
            0,
            12,
            0,
            26,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            143,
            255,
            94,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          5
        ]
      },
      "call": {
        "duration": 0.0034822980014723726,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029017839988227934,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2961341549998906,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50486,
            47727,
            47707,
            47314,
            50072,
            47623,
            47039,
            47323,
            47448,
            47380,
            47292,
            47629,
            47311,
            47436,
            47291,
            47430,
            47361,
            47633,
            47417,
            47480,
            47486,
            47565,
            47449,
            47618,
            47555,
            47468,
            47526,
            47458,
            47469,
            47682,
            47548,
            47545,
            47353,
            47373,
            47475,
            47772,
            47391,
            47795,
            47386,
            47329,
            47409,
            47794,
            47449,
            47503,
            47587,
            47072,
            47071,
            47645,
            47410,
            47482,
            47497,
            47467,
            47356,
            47396,
            47219,
            47446,
            47487,
            47221,
            47371,
            47562,
            47303,
            47654,
            47599
          ],
          [
            50486,
            47727,
            47707,
            47314,
            50072,
            47623,
            47039,
            47323,
            47448,
            47380,
            47292,
            47629,
            47311,
            47436,
            47291,
            47430,
            47361,
            47633,
            47417,
            47480,
            47486,
            47565,
            47449,
            47618,
            47555,
            47468,
            47526,
            47458,
            47469,
            47682,
            47548,
            47545,
            47353,
            47373,
            47475,
            47772,
            47391,
            47795,
            47386,
            47329,
            47409,
            47794,
            47449,
            47503,
            47587,
            47072,
            47071,
            47645,
            47410,
            47482,
            47497,
            47467,
            47356,
            47396,
            47219,
            47446,
            47487,
            47221,
            47371,
            47562,
            47303,
            47654,
            47599
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            645,
            6734,
            24310,
            39157,
            34356,
            15431,
            2804,
            251,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            700,
            6289,
            21795,
            38027,
            38404,
            21712,
            4910,
            890,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            0,
            0,
            157,
            1987,
            13315,
            32099,
            41224,
            29930,
            9727,
            1966,
            106,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            656,
            5899,
            21577,
            38453,
            42662,
            30548,
            13408,
            2236,
            207,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            50,
            957,
            7810,
            25188,
            40618,
            43567
          ]
        ]
      },
      "call": {
        "duration": 0.13374837399896933,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016494660012540407,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907284600310959,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47989,
            47532,
            47054,
            47405,
            47172,
            47362,
            47717,
            53084,
            47211,
            47290,
            47008,
            47307,
            47086,
            47427,
            47049,
            47261,
            47219,
            47243,
            47400,
            47384,
            47148,
            47530,
            46803,
            47576,
            47501,
            47740,
            47252,
            47390,
            47273,
            47374,
            46814,
            47404,
            47064,
            47454,
            47300,
            47395,
            47186,
            47379,
            47329,
            47493,
            47166,
            47684,
            48868,
            49034,
            47052,
            47134,
            46900,
            47171,
            47163,
            47220,
            47147,
            47388,
            47187,
            47319,
            47301,
            47246,
            47218,
            47342,
            47270,
            47534,
            47232,
            47755,
            47031
          ],
          [
            47989,
            47532,
            47054,
            47405,
            47172,
            47362,
            47717,
            53084,
            47211,
            47290,
            47008,
            47307,
            47086,
            47427,
            47049,
            47261,
            47219,
            47243,
            47400,
            47384,
            47148,
            47530,
            46803,
            47576,
            47501,
            47740,
            47252,
            47390,
            47273,
            47374,
            46814,
            47404,
            47064,
            47454,
            47300,
            47395,
            47186,
            47379,
            47329,
            47493,
            47166,
            47684,
            48868,
            49034,
            47052,
            47134,
            46900,
            47171,
            47163,
            47220,
            47147,
            47388,
            47187,
            47319,
            47301,
            47246,
            47218,
            47342,
            47270,
            47534,
            47232,
            47755,
            47031
          ],
          [
            47989,
            47532,
            47054,
            47405,
            47172,
            47362,
            47717,
            53084,
            47211,
            47290,
            47008,
            47307,
            47086,
            47427,
            47049,
            47261,
            47219,
            47243,
            47400,
            47384,
            47148,
            47530,
            46803,
            47576,
            47501,
            47740,
            47252,
            47390,
            47273,
            47374,
            46814,
            47404,
            47064,
            47454,
            47300,
            47395,
            47186,
            47379,
            47329,
            47493,
            47166,
            47684,
            48868,
            49034,
            47052,
            47134,
            46900,
            47171,
            47163,
            47220,
            47147,
            47388,
            47187,
            47319,
            47301,
            47246,
            47218,
            47342,
            47270,
            47534,
            47232,
            47755,
            47031
          ],
          [
            47989,
            47532,
            47054,
            47405,
            47172,
            47362,
            47717,
            53084,
            47211,
            47290,
            47008,
            47307,
            47086,
            47427,
            47049,
            47261,
            47219,
            47243,
            47400,
            47384,
            47148,
            47530,
            46803,
            47576,
            47501,
            47740,
            47252,
            47390,
            47273,
            47374,
            46814,
            47404,
            47064,
            47454,
            47300,
            47395,
            47186,
            47379,
            47329,
            47493,
            47166,
            47684,
            48868,
            49034,
            47052,
            47134,
            46900,
            47171,
            47163,
            47220,
            47147,
            47388,
            47187,
            47319,
            47301,
            47246,
            47218,
            47342,
            47270,
            47534,
            47232,
            47755,
            47031
          ],
          [
            47989,
            47532,
            47054,
            47405,
            47172,
            47362,
            47717,
            53084,
            47211,
            47290,
            47008,
            47307,
            47086,
            47427,
            47049,
            47261,
            47219,
            47243,
            47400,
            47384,
            47148,
            47530,
            46803,
            47576,
            47501,
            47740,
            47252,
            47390,
            47273,
            47374,
            46814,
            47404,
            47064,
            47454,
            47300,
            47395,
            47186,
            47379,
            47329,
            47493,
            47166,
            47684,
            48868,
            49034,
            47052,
            47134,
            46900,
            47171,
            47163,
            47220,
            47147,
            47388,
            47187,
            47319,
            47301,
            47246,
            47218,
            47342,
            47270,
            47534,
            47232,
            47755,
            47031
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            2,
            193,
            2098,
            8336,
            18539,
            28000,
            35709,
            36104,
            27115,
            14184,
            3218,
            382,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            8,
            282,
            2219,
            10312,
            22305,
            33994,
            37802,
            33289,
            20402,
            8318,
            2389,
            377,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            23,
            658,
            4973,
            15529,
            27004,
            34947,
            38550,
            37015,
            26602,
            13733,
            5318,
            950,
            43,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            157,
            1433,
            5562,
            15555,
            27680,
            35714,
            36336,
            27274,
            13429,
            4301,
            800,
            78,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            14028,
            5728,
            996,
            89,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            160,
            2011,
            10348,
            22985,
            35179,
            40160,
            32631,
            19387,
            8148,
            1843,
            130,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            393,
            4083,
            14178,
            28012,
            38350,
            35497,
            23488,
            10219,
            2116,
            240,
            4,
            0,
            0,
            0,
            0
          ],
          [
            69,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            115,
            1218,
            7498,
            19702,
            30931,
            38896,
            38843,
            34418,
            24292,
            12433,
            3793,
            374,
            21,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            43,
            585,
            3157,
            12216,
            24885,
            35498,
            33874,
            22928,
            10864,
            4039,
            895,
            113,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            92,
            1218,
            6318,
            18336,
            28397,
            36872,
            39043,
            35199,
            24107,
            13336,
            3405,
            643,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            170,
            1525,
            6671,
            17324,
            30074,
            40336,
            40289,
            33283,
            22502,
            13099,
            6021,
            1552,
            120,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.271158238996577,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001514943996880902,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2966924079992168,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168798926002637,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004810217000340344,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}