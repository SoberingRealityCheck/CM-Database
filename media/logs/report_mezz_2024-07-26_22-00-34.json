{
  "created": 1722031253.5935693,
  "duration": 23.421168327331543,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5058777539998118,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14830179500131635,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013600199999928009,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037820939978701063,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14813637100087362,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012733189978462178,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13326791999861598,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12179971400109935,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001280248998227762,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003794333999394439,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12102848699942115,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012777589981851634,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003364575000887271,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14666906899947207,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011873969997395761,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351883999130223,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11994588299785391,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011579060010262765,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033490349997009616,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14636501199856866,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011953760003962088,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003361304999998538,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1200778860002174,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011800170032074675,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004402149002999067,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002080245998513419,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011310250010865275,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033351150013913866,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017535090009914711,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010877940003410913,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003324614001030568,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004043640998133924,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031235.896847,
            "msecs": 896.8470096588135,
            "relativeCreated": 7697.340726852417,
            "thread": 281473210740768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4309
          }
        ]
      },
      "teardown": {
        "duration": 0.0011867670000356156,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033799950033426285,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002413043999695219,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031235.909163,
            "msecs": 909.1629981994629,
            "relativeCreated": 7709.656715393066,
            "thread": 281473210740768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4309
          }
        ]
      },
      "teardown": {
        "duration": 0.0011756959975173231,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020706159994006157,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002724420999584254,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031235.9186609,
            "msecs": 918.6608791351318,
            "relativeCreated": 7719.154596328735,
            "thread": 281473210740768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4309
          }
        ]
      },
      "teardown": {
        "duration": 0.0010371230018790811,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020632660016417503,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034215160012536217,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031235.9280694,
            "msecs": 928.0693531036377,
            "relativeCreated": 7728.563070297241,
            "thread": 281473210740768,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4309
          }
        ]
      },
      "teardown": {
        "duration": 0.0010845840006368235,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033287539990851656,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14656478600227274,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012040469991916325,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003336554997076746,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12011115700079245,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001181725998321781,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17684122100035893,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14774663299976964,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012491979978221934,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015234878999763168,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1213804250000976,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013051189998805057,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8352744320000056,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            6,
            6,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            97,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            10,
            97,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          5
        ]
      },
      "call": {
        "duration": 0.0035537889998522587,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002890234001824865,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8975343230013095,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0
          ],
          [
            0,
            38,
            0,
            1,
            0,
            44,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            14,
            255,
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            34
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            2,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            104,
            255,
            255,
            255,
            5
          ],
          [
            10,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            17,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            54,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            0,
            255
          ],
          [
            255,
            173,
            255,
            255,
            255,
            255,
            0,
            0,
            230,
            1,
            148,
            255
          ],
          [
            255,
            0,
            132,
            0,
            255,
            0,
            255,
            116,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          3,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035023080017708708,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.003033727000001818,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.302368877997651,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50742,
            47608,
            47654,
            47545,
            47553,
            47444,
            47518,
            47664,
            47512,
            47523,
            47484,
            47596,
            47549,
            47603,
            47358,
            47490,
            47458,
            47654,
            47500,
            47550,
            47111,
            47151,
            47618,
            47583,
            47522,
            47503,
            47447,
            47451,
            47626,
            47604,
            47544,
            47555,
            47542,
            53964,
            47577,
            47635,
            47639,
            49686,
            47540,
            47559,
            47597,
            47357,
            47543,
            47441,
            47572,
            47566,
            47702,
            47443,
            47660,
            47480,
            47665,
            47453,
            47584,
            47486,
            47604,
            47502,
            47431,
            47384,
            47506,
            47556,
            47507,
            47641,
            47501
          ],
          [
            50742,
            47608,
            47654,
            47545,
            47553,
            47444,
            47518,
            47664,
            47512,
            47523,
            47484,
            47596,
            47549,
            47603,
            47358,
            47490,
            47458,
            47654,
            47500,
            47550,
            47111,
            47151,
            47618,
            47583,
            47522,
            47503,
            47447,
            47451,
            47626,
            47604,
            47544,
            47555,
            47542,
            53964,
            47577,
            47635,
            47639,
            49686,
            47540,
            47559,
            47597,
            47357,
            47543,
            47441,
            47572,
            47566,
            47702,
            47443,
            47660,
            47480,
            47665,
            47453,
            47584,
            47486,
            47604,
            47502,
            47431,
            47384,
            47506,
            47556,
            47507,
            47641,
            47501
          ]
        ],
        "eTX_errcounts": [
          [
            43203,
            28105,
            9561,
            1370,
            140,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            167,
            2670,
            14721,
            32971,
            42880,
            33007,
            16256,
            2652,
            173,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            603,
            6324,
            24421,
            40133,
            38913,
            21702,
            5794,
            710,
            23,
            1,
            0,
            0
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            250,
            3386,
            15931,
            34719,
            42724,
            33286,
            15111,
            3771,
            438,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            352,
            3488,
            17381,
            35397,
            42917,
            37071,
            19189,
            4212,
            513,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13359561700053746,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00163641600011033,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06886716400185833,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48074,
            47692,
            47776,
            47730,
            47625,
            47571,
            47696,
            47645,
            48047,
            47312,
            47509,
            47417,
            47690,
            47309,
            47450,
            47518,
            47540,
            47425,
            47412,
            47508,
            47548,
            47403,
            47538,
            47608,
            47433,
            47527,
            47707,
            47877,
            47835,
            47439,
            47456,
            47542,
            47545,
            47387,
            47041,
            47570,
            47801,
            47387,
            47673,
            47434,
            47720,
            47549,
            47429,
            47523,
            47781,
            49195,
            47816,
            47481,
            47788,
            47393,
            47537,
            47456,
            47857,
            47488,
            47358,
            47608,
            47239,
            47686,
            47606,
            47318,
            47815,
            47684,
            47621
          ],
          [
            48074,
            47692,
            47776,
            47730,
            47625,
            47571,
            47696,
            47645,
            48047,
            47312,
            47509,
            47417,
            47690,
            47309,
            47450,
            47518,
            47540,
            47425,
            47412,
            47508,
            47548,
            47403,
            47538,
            47608,
            47433,
            47527,
            47707,
            47877,
            47835,
            47439,
            47456,
            47542,
            47545,
            47387,
            47041,
            47570,
            47801,
            47387,
            47673,
            47434,
            47720,
            47549,
            47429,
            47523,
            47781,
            49195,
            47816,
            47481,
            47788,
            47393,
            47537,
            47456,
            47857,
            47488,
            47358,
            47608,
            47239,
            47686,
            47606,
            47318,
            47815,
            47684,
            47621
          ],
          [
            48074,
            47692,
            47776,
            47730,
            47625,
            47571,
            47696,
            47645,
            48047,
            47312,
            47509,
            47417,
            47690,
            47309,
            47450,
            47518,
            47540,
            47425,
            47412,
            47508,
            47548,
            47403,
            47538,
            47608,
            47433,
            47527,
            47707,
            47877,
            47835,
            47439,
            47456,
            47542,
            47545,
            47387,
            47041,
            47570,
            47801,
            47387,
            47673,
            47434,
            47720,
            47549,
            47429,
            47523,
            47781,
            49195,
            47816,
            47481,
            47788,
            47393,
            47537,
            47456,
            47857,
            47488,
            47358,
            47608,
            47239,
            47686,
            47606,
            47318,
            47815,
            47684,
            47621
          ],
          [
            48074,
            47692,
            47776,
            47730,
            47625,
            47571,
            47696,
            47645,
            48047,
            47312,
            47509,
            47417,
            47690,
            47309,
            47450,
            47518,
            47540,
            47425,
            47412,
            47508,
            47548,
            47403,
            47538,
            47608,
            47433,
            47527,
            47707,
            47877,
            47835,
            47439,
            47456,
            47542,
            47545,
            47387,
            47041,
            47570,
            47801,
            47387,
            47673,
            47434,
            47720,
            47549,
            47429,
            47523,
            47781,
            49195,
            47816,
            47481,
            47788,
            47393,
            47537,
            47456,
            47857,
            47488,
            47358,
            47608,
            47239,
            47686,
            47606,
            47318,
            47815,
            47684,
            47621
          ],
          [
            48074,
            47692,
            47776,
            47730,
            47625,
            47571,
            47696,
            47645,
            48047,
            47312,
            47509,
            47417,
            47690,
            47309,
            47450,
            47518,
            47540,
            47425,
            47412,
            47508,
            47548,
            47403,
            47538,
            47608,
            47433,
            47527,
            47707,
            47877,
            47835,
            47439,
            47456,
            47542,
            47545,
            47387,
            47041,
            47570,
            47801,
            47387,
            47673,
            47434,
            47720,
            47549,
            47429,
            47523,
            47781,
            49195,
            47816,
            47481,
            47788,
            47393,
            47537,
            47456,
            47857,
            47488,
            47358,
            47608,
            47239,
            47686,
            47606,
            47318,
            47815,
            47684,
            47621
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            533,
            3388,
            11647,
            24378,
            34072,
            37550,
            30429,
            19273,
            9783,
            2960,
            426,
            23,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            46,
            973,
            5446,
            13306,
            23308,
            31192,
            36325,
            34708,
            28526,
            14723,
            4447,
            644,
            65,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            103,
            655,
            2975,
            10190,
            19194,
            29998,
            37028,
            35660,
            27100,
            17000,
            7012,
            1123,
            121,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            532,
            3542,
            11760,
            22610,
            32649,
            38275,
            38620,
            32293,
            22124,
            12474,
            4877,
            828,
            93,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            199,
            1167,
            5184,
            14239,
            25509
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            590,
            4270,
            14607,
            26143,
            31506,
            32854,
            26106,
            16225,
            7126,
            1556,
            111,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            125,
            1501,
            7522,
            16166,
            27326,
            33636,
            31744,
            25145,
            17019,
            9473,
            3496,
            401,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            248,
            1701,
            7835,
            17407,
            28990,
            34588,
            34606,
            29058,
            20960,
            10929,
            2957,
            292,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            417,
            2571,
            9111,
            19701,
            28410,
            34898,
            32901,
            27321,
            20632,
            12614,
            5775,
            1202,
            79,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            4,
            55,
            558,
            2800,
            9336,
            18753,
            29553,
            37617,
            39833,
            32591,
            22482,
            12013,
            4343,
            999,
            100,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            86,
            675,
            3905,
            10669,
            21128,
            31756,
            39169,
            39453,
            35774,
            28010,
            19076,
            8647,
            1591,
            241,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            16,
            165,
            1513,
            7023
          ]
        ]
      },
      "call": {
        "duration": 0.27217293600187986,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff81fd5bd0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff81fd5bd0> = array([22, 12, 18, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff81f935b0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48074, 47692, 47776, 47730, 47625, 47571, ...], [48074, 47692, 47776, 47730, 47625, 47571, ...], [..., 0, ...], [0, 0, 3, 103, 655, 2975, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 4, 55, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff81fd5bd0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff81fd5bd0> = array([22, 12, 18, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.001614455999515485,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29271793400039314,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1692995659977896,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014298620008048601,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.294937310001842,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            17,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            193,
            62,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003488926999125397,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029278250003699213,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5394159810020938,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            129,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            6,
            255,
            162,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            97,
            255,
            166,
            255,
            151,
            0,
            0,
            181,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            178,
            0,
            87,
            3,
            255,
            33,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            91,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            140,
            255,
            181,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            198,
            255,
            255,
            1,
            0,
            97,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            91,
            255,
            142
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00346912800159771,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002870524000172736,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29556433700054185,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48461,
            47688,
            47268,
            47409,
            47683,
            47597,
            47608,
            47666,
            47629,
            48184,
            47678,
            47970,
            47813,
            48012,
            47693,
            47477,
            47553,
            47560,
            47627,
            47687,
            47589,
            47561,
            47657,
            47485,
            47575,
            47466,
            47640,
            47438,
            47746,
            47558,
            47565,
            47620,
            47529,
            47579,
            47516,
            47501,
            47621,
            47649,
            47567,
            47674,
            47711,
            47738,
            47641,
            47698,
            47945,
            47561,
            48026,
            47539,
            47610,
            47655,
            47420,
            47591,
            47239,
            47276,
            48184,
            47544,
            47354,
            47641,
            47615,
            47672,
            47527,
            47692,
            47590
          ],
          [
            48461,
            47688,
            47268,
            47409,
            47683,
            47597,
            47608,
            47666,
            47629,
            48184,
            47678,
            47970,
            47813,
            48012,
            47693,
            47477,
            47553,
            47560,
            47627,
            47687,
            47589,
            47561,
            47657,
            47485,
            47575,
            47466,
            47640,
            47438,
            47746,
            47558,
            47565,
            47620,
            47529,
            47579,
            47516,
            47501,
            47621,
            47649,
            47567,
            47674,
            47711,
            47738,
            47641,
            47698,
            47945,
            47561,
            48026,
            47539,
            47610,
            47655,
            47420,
            47591,
            47239,
            47276,
            48184,
            47544,
            47354,
            47641,
            47615,
            47672,
            47527,
            47692,
            47590
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            168,
            3310,
            16296,
            35140,
            37477,
            19484,
            4845,
            521,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            104,
            2478,
            15016,
            33722,
            40747,
            28032,
            9599,
            1411,
            116,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            612,
            7026,
            27409,
            40922,
            40009,
            20529,
            5026,
            576,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            83,
            2131,
            12528,
            29703,
            42414,
            39953,
            21572,
            6356,
            849,
            69,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1337399509975512,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015978949995769653,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06864254999891273,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48235,
            47216,
            49994,
            48765,
            47479,
            47517,
            47460,
            47565,
            47457,
            47270,
            47593,
            47449,
            47538,
            47458,
            47381,
            47426,
            47510,
            47448,
            47520,
            47567,
            47550,
            47430,
            47743,
            49666,
            47433,
            47178,
            47434,
            47527,
            47580,
            47423,
            47585,
            47172,
            47668,
            47549,
            47467,
            47536,
            47482,
            47604,
            47541,
            47389,
            47308,
            47560,
            47947,
            47500,
            47480,
            47433,
            47327,
            47386,
            47519,
            47321,
            47275,
            47436,
            47653,
            47495,
            47690,
            47592,
            47499,
            47513,
            47507,
            47391,
            47549,
            47754,
            50009
          ],
          [
            48235,
            47216,
            49994,
            48765,
            47479,
            47517,
            47460,
            47565,
            47457,
            47270,
            47593,
            47449,
            47538,
            47458,
            47381,
            47426,
            47510,
            47448,
            47520,
            47567,
            47550,
            47430,
            47743,
            49666,
            47433,
            47178,
            47434,
            47527,
            47580,
            47423,
            47585,
            47172,
            47668,
            47549,
            47467,
            47536,
            47482,
            47604,
            47541,
            47389,
            47308,
            47560,
            47947,
            47500,
            47480,
            47433,
            47327,
            47386,
            47519,
            47321,
            47275,
            47436,
            47653,
            47495,
            47690,
            47592,
            47499,
            47513,
            47507,
            47391,
            47549,
            47754,
            50009
          ],
          [
            48235,
            47216,
            49994,
            48765,
            47479,
            47517,
            47460,
            47565,
            47457,
            47270,
            47593,
            47449,
            47538,
            47458,
            47381,
            47426,
            47510,
            47448,
            47520,
            47567,
            47550,
            47430,
            47743,
            49666,
            47433,
            47178,
            47434,
            47527,
            47580,
            47423,
            47585,
            47172,
            47668,
            47549,
            47467,
            47536,
            47482,
            47604,
            47541,
            47389,
            47308,
            47560,
            47947,
            47500,
            47480,
            47433,
            47327,
            47386,
            47519,
            47321,
            47275,
            47436,
            47653,
            47495,
            47690,
            47592,
            47499,
            47513,
            47507,
            47391,
            47549,
            47754,
            50009
          ],
          [
            48235,
            47216,
            49994,
            48765,
            47479,
            47517,
            47460,
            47565,
            47457,
            47270,
            47593,
            47449,
            47538,
            47458,
            47381,
            47426,
            47510,
            47448,
            47520,
            47567,
            47550,
            47430,
            47743,
            49666,
            47433,
            47178,
            47434,
            47527,
            47580,
            47423,
            47585,
            47172,
            47668,
            47549,
            47467,
            47536,
            47482,
            47604,
            47541,
            47389,
            47308,
            47560,
            47947,
            47500,
            47480,
            47433,
            47327,
            47386,
            47519,
            47321,
            47275,
            47436,
            47653,
            47495,
            47690,
            47592,
            47499,
            47513,
            47507,
            47391,
            47549,
            47754,
            50009
          ],
          [
            48235,
            47216,
            49994,
            48765,
            47479,
            47517,
            47460,
            47565,
            47457,
            47270,
            47593,
            47449,
            47538,
            47458,
            47381,
            47426,
            47510,
            47448,
            47520,
            47567,
            47550,
            47430,
            47743,
            49666,
            47433,
            47178,
            47434,
            47527,
            47580,
            47423,
            47585,
            47172,
            47668,
            47549,
            47467,
            47536,
            47482,
            47604,
            47541,
            47389,
            47308,
            47560,
            47947,
            47500,
            47480,
            47433,
            47327,
            47386,
            47519,
            47321,
            47275,
            47436,
            47653,
            47495,
            47690,
            47592,
            47499,
            47513,
            47507,
            47391,
            47549,
            47754,
            50009
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            213,
            2102,
            10215,
            22135,
            33545,
            35625,
            24540,
            12796,
            4463,
            850,
            80,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            34,
            477,
            2977,
            11644,
            25080,
            35418,
            38156,
            29097,
            16418,
            4649,
            739,
            21,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            17,
            414,
            3947,
            14291,
            30374,
            39409,
            35921,
            21475,
            7546,
            1278,
            59,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            70,
            866,
            6470,
            21641,
            37062,
            43772,
            40275,
            27974,
            14255,
            3719,
            363,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            56,
            996,
            6869,
            19958,
            34336,
            41434
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            281,
            3015,
            12833,
            25565,
            33722,
            29636,
            16053,
            4743,
            657,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            674,
            5617,
            17622,
            33592,
            39713,
            33545,
            20301,
            6961,
            1241,
            55,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            731,
            4766,
            16252,
            31613,
            38231,
            32831,
            19837,
            7301,
            1162,
            46,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            100,
            1259,
            7797,
            20237,
            34871,
            42022,
            36468,
            24982,
            9960,
            2057,
            220,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            1,
            61,
            1141,
            6906,
            19726,
            33460,
            40785,
            38692,
            27840,
            14507,
            3558,
            446,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            259,
            2027,
            9263,
            24624,
            37858,
            43909,
            40239,
            29284,
            13784,
            4823,
            1168,
            168,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            521,
            4707,
            15697,
            32510
          ]
        ]
      },
      "call": {
        "duration": 0.2700073980013258,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015040229991427623,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.291298451997136,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1691600930025743,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001446302001568256,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3644677289994434,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            104,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00845811900217086,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029682059976039454,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5341095539988601,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            0,
            255,
            0,
            35,
            0,
            255,
            0,
            255,
            255
          ],
          [
            82,
            0,
            10,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            24,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            197,
            255,
            0,
            12,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            0,
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            9,
            255,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            3,
            13,
            0,
            255,
            7,
            255,
            255
          ],
          [
            48,
            0,
            0,
            0,
            1,
            0,
            255,
            157,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            145,
            255,
            4,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            92,
            0,
            5,
            0,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            95,
            255,
            49,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034489370009396225,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002954105999378953,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29598959700160776,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48158,
            47506,
            47488,
            47414,
            47466,
            47416,
            47419,
            47338,
            47455,
            47527,
            47384,
            47343,
            48152,
            47495,
            47637,
            47495,
            47580,
            47490,
            47422,
            47503,
            49131,
            47564,
            47932,
            47620,
            49656,
            47530,
            47436,
            47466,
            47351,
            47385,
            47297,
            47433,
            47278,
            47307,
            47306,
            47520,
            47456,
            47496,
            47385,
            47449,
            47445,
            47408,
            47515,
            47611,
            47407,
            47471,
            45411,
            47385,
            47358,
            47391,
            47397,
            47349,
            47543,
            47466,
            47280,
            47821,
            47367,
            47914,
            47405,
            47689,
            47425,
            47347,
            47476
          ],
          [
            48158,
            47506,
            47488,
            47414,
            47466,
            47416,
            47419,
            47338,
            47455,
            47527,
            47384,
            47343,
            48152,
            47495,
            47637,
            47495,
            47580,
            47490,
            47422,
            47503,
            49131,
            47564,
            47932,
            47620,
            49656,
            47530,
            47436,
            47466,
            47351,
            47385,
            47297,
            47433,
            47278,
            47307,
            47306,
            47520,
            47456,
            47496,
            47385,
            47449,
            47445,
            47408,
            47515,
            47611,
            47407,
            47471,
            45411,
            47385,
            47358,
            47391,
            47397,
            47349,
            47543,
            47466,
            47280,
            47821,
            47367,
            47914,
            47405,
            47689,
            47425,
            47347,
            47476
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            515,
            6236,
            22743,
            39758,
            35238,
            17029,
            3303,
            320,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            412,
            4954,
            20300,
            37046,
            39359,
            22978,
            5628,
            895,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            3,
            142,
            1584,
            13047,
            31296,
            41638,
            30108,
            10706,
            2003,
            197,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            442,
            5011,
            20175,
            37725,
            42230,
            31689,
            13421,
            2146,
            274,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            38,
            597,
            6772,
            23009,
            39404,
            43877
          ]
        ]
      },
      "call": {
        "duration": 0.13376158100072644,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016154460026882589,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0690458490025776,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48190,
            44249,
            47528,
            47385,
            47394,
            47316,
            47379,
            47434,
            47324,
            47340,
            47578,
            47420,
            47352,
            47840,
            47542,
            47196,
            47376,
            47542,
            47483,
            47465,
            42388,
            47418,
            47491,
            47357,
            47386,
            47411,
            47369,
            47280,
            47606,
            47405,
            47360,
            47110,
            47457,
            47511,
            47288,
            47312,
            47396,
            47318,
            47316,
            47205,
            47145,
            47347,
            47324,
            47385,
            47291,
            47438,
            47431,
            47459,
            47334,
            47450,
            47192,
            49527,
            47252,
            47422,
            47307,
            47317,
            47247,
            48039,
            47292,
            47374,
            47329,
            47283,
            47438
          ],
          [
            48190,
            44249,
            47528,
            47385,
            47394,
            47316,
            47379,
            47434,
            47324,
            47340,
            47578,
            47420,
            47352,
            47840,
            47542,
            47196,
            47376,
            47542,
            47483,
            47465,
            42388,
            47418,
            47491,
            47357,
            47386,
            47411,
            47369,
            47280,
            47606,
            47405,
            47360,
            47110,
            47457,
            47511,
            47288,
            47312,
            47396,
            47318,
            47316,
            47205,
            47145,
            47347,
            47324,
            47385,
            47291,
            47438,
            47431,
            47459,
            47334,
            47450,
            47192,
            49527,
            47252,
            47422,
            47307,
            47317,
            47247,
            48039,
            47292,
            47374,
            47329,
            47283,
            47438
          ],
          [
            48190,
            44249,
            47528,
            47385,
            47394,
            47316,
            47379,
            47434,
            47324,
            47340,
            47578,
            47420,
            47352,
            47840,
            47542,
            47196,
            47376,
            47542,
            47483,
            47465,
            42388,
            47418,
            47491,
            47357,
            47386,
            47411,
            47369,
            47280,
            47606,
            47405,
            47360,
            47110,
            47457,
            47511,
            47288,
            47312,
            47396,
            47318,
            47316,
            47205,
            47145,
            47347,
            47324,
            47385,
            47291,
            47438,
            47431,
            47459,
            47334,
            47450,
            47192,
            49527,
            47252,
            47422,
            47307,
            47317,
            47247,
            48039,
            47292,
            47374,
            47329,
            47283,
            47438
          ],
          [
            48190,
            44249,
            47528,
            47385,
            47394,
            47316,
            47379,
            47434,
            47324,
            47340,
            47578,
            47420,
            47352,
            47840,
            47542,
            47196,
            47376,
            47542,
            47483,
            47465,
            42388,
            47418,
            47491,
            47357,
            47386,
            47411,
            47369,
            47280,
            47606,
            47405,
            47360,
            47110,
            47457,
            47511,
            47288,
            47312,
            47396,
            47318,
            47316,
            47205,
            47145,
            47347,
            47324,
            47385,
            47291,
            47438,
            47431,
            47459,
            47334,
            47450,
            47192,
            49527,
            47252,
            47422,
            47307,
            47317,
            47247,
            48039,
            47292,
            47374,
            47329,
            47283,
            47438
          ],
          [
            48190,
            44249,
            47528,
            47385,
            47394,
            47316,
            47379,
            47434,
            47324,
            47340,
            47578,
            47420,
            47352,
            47840,
            47542,
            47196,
            47376,
            47542,
            47483,
            47465,
            42388,
            47418,
            47491,
            47357,
            47386,
            47411,
            47369,
            47280,
            47606,
            47405,
            47360,
            47110,
            47457,
            47511,
            47288,
            47312,
            47396,
            47318,
            47316,
            47205,
            47145,
            47347,
            47324,
            47385,
            47291,
            47438,
            47431,
            47459,
            47334,
            47450,
            47192,
            49527,
            47252,
            47422,
            47307,
            47317,
            47247,
            48039,
            47292,
            47374,
            47329,
            47283,
            47438
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            72,
            720,
            5276,
            16079,
            27940,
            31450,
            33437,
            23913,
            13543,
            3587,
            371,
            31,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            104,
            1574,
            9212,
            22723,
            35909,
            39279,
            32286,
            18485,
            8442,
            2789,
            505,
            30,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            222,
            2085,
            10326,
            24917,
            38531,
            41386,
            36034,
            24742,
            11218,
            3195,
            285,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            33,
            900,
            4906,
            15846,
            29364,
            37781,
            35993,
            27523,
            13718,
            3051,
            337,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            12689,
            3339,
            409,
            32,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            97,
            1277,
            8061,
            18932,
            33602,
            38532,
            30099,
            16856,
            6135,
            897,
            58,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            228,
            3626,
            13488,
            28069,
            38258,
            36208,
            23823,
            10387,
            2306,
            310,
            5,
            0,
            0,
            0,
            0
          ],
          [
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            473,
            4316,
            14632,
            24617,
            39647,
            41165,
            34539,
            22851,
            9607,
            1706,
            178,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            240,
            2023,
            11423,
            25149,
            37507,
            36496,
            27098,
            12903,
            3921,
            427,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            390,
            3257,
            13994,
            27150,
            38027,
            42739,
            36887,
            24995,
            13352,
            3744,
            1162,
            143,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            60,
            938,
            5920,
            17323,
            31047,
            40296,
            41232,
            33336,
            21801,
            10429,
            3023,
            412,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27045002799786744,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014847929996903986,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917680829996243,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1701376639975933,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045800, 10011450), (410672, 410672), (40050326, 10012581))\nassert ((40045800 > 0 and 10011450 == 0\n  +10011450\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff81f932b0>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff81d3a700>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff82051760>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045800, 10011450), (410672, 410672), (40050326, 10012581))\nE       assert ((40045800 > 0 and 10011450 == 0\nE         +10011450\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.004917259997455403,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}