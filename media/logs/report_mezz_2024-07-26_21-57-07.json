{
  "created": 1722031046.5671792,
  "duration": 23.169583082199097,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5052026789999218,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14848122900002636,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013279199993121438,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038032449992897455,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14827491500182077,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001271098000870552,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13279537999915192,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12171307300013723,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012753590017382521,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00379358499776572,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12130119300127262,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012936889979755506,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003357224999490427,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14689701299721492,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011881459977303166,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033604350028326735,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11986725099995965,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001160635998530779,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033709649978845846,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14621611800248502,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001181337000161875,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003329564002342522,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12784685999940848,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012035069994453806,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004410937999637099,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002097405998938484,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011341159988660365,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003336555000714725,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017480490023444872,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001096645002689911,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003320113999507157,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040659599981154315,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031029.132909,
            "msecs": 132.90905952453613,
            "relativeCreated": 7716.634035110474,
            "thread": 281472980119584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4224
          }
        ]
      },
      "teardown": {
        "duration": 0.0012020060021313839,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034212170030514244,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024306539999088272,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031029.145282,
            "msecs": 145.28203010559082,
            "relativeCreated": 7729.007005691528,
            "thread": 281472980119584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4224
          }
        ]
      },
      "teardown": {
        "duration": 0.0011609659995883703,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002067826000711648,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027419709986133967,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031029.154778,
            "msecs": 154.77800369262695,
            "relativeCreated": 7738.502979278564,
            "thread": 281472980119584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4224
          }
        ]
      },
      "teardown": {
        "duration": 0.0010690140006772708,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002069985999696655,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003413836002437165,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722031029.1642265,
            "msecs": 164.22653198242188,
            "relativeCreated": 7747.951507568359,
            "thread": 281472980119584,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4224
          }
        ]
      },
      "teardown": {
        "duration": 0.0010854240026674233,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033453449977969285,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14673816000140505,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011784259986598045,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033421049993194174,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12030130100174574,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011974769986409228,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17459462099941447,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14772635299959802,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012665079993894324,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015181417998974212,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12129228300182149,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012693579992628656,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.84223494699836,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            28,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            67,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            71,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            67,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          3,
          4,
          5,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035806699997920077,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029019650028203614,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8925557420006953,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            50,
            0,
            0,
            0,
            60,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            24,
            255,
            20,
            255,
            0,
            0,
            0,
            0,
            0,
            49
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            164,
            0,
            255,
            0,
            255,
            126,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            234,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            20,
            0,
            0,
            0,
            0
          ],
          [
            0,
            41,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            50,
            255,
            196,
            255,
            255,
            0,
            0,
            255,
            4,
            255,
            255
          ],
          [
            242,
            0,
            32,
            0,
            255,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003474617999017937,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029153450013836846,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3031619760004105,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47590,
            47324,
            47040,
            47221,
            46914,
            47113,
            46980,
            47141,
            47033,
            47274,
            47081,
            47227,
            47060,
            47035,
            47100,
            47089,
            46935,
            47172,
            46991,
            47212,
            47283,
            47192,
            46996,
            47067,
            47172,
            48621,
            47174,
            47581,
            46891,
            52983,
            47063,
            47020,
            47074,
            47089,
            47057,
            47166,
            46981,
            46915,
            47111,
            47011,
            47004,
            47157,
            47035,
            47202,
            46925,
            46980,
            47110,
            46906,
            47105,
            47081,
            47183,
            47200,
            47063,
            46941,
            47030,
            46986,
            47113,
            46992,
            47014,
            47166,
            47034,
            47095,
            47118
          ],
          [
            47590,
            47324,
            47040,
            47221,
            46914,
            47113,
            46980,
            47141,
            47033,
            47274,
            47081,
            47227,
            47060,
            47035,
            47100,
            47089,
            46935,
            47172,
            46991,
            47212,
            47283,
            47192,
            46996,
            47067,
            47172,
            48621,
            47174,
            47581,
            46891,
            52983,
            47063,
            47020,
            47074,
            47089,
            47057,
            47166,
            46981,
            46915,
            47111,
            47011,
            47004,
            47157,
            47035,
            47202,
            46925,
            46980,
            47110,
            46906,
            47105,
            47081,
            47183,
            47200,
            47063,
            46941,
            47030,
            46986,
            47113,
            46992,
            47014,
            47166,
            47034,
            47095,
            47118
          ]
        ],
        "eTX_errcounts": [
          [
            39833,
            37002,
            18303,
            4733,
            610,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            595,
            6874,
            23307,
            39976,
            39623,
            29017,
            6734,
            729,
            58,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            127,
            2269,
            13025,
            32658,
            41227,
            31462,
            12892,
            2521,
            252,
            5,
            0,
            0
          ],
          [
            51,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            36,
            922,
            7314,
            25109,
            39299,
            39687,
            24181,
            8725,
            1274,
            90,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            1132,
            8525,
            25851,
            39637,
            41839,
            29040,
            9506,
            1797,
            140,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13328055100282654,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016198859993892256,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06909147999976994,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47618,
            47151,
            47123,
            47143,
            47087,
            47108,
            47166,
            47605,
            47239,
            46994,
            46863,
            46956,
            47077,
            46722,
            46960,
            46983,
            47008,
            46940,
            47229,
            47055,
            47135,
            47063,
            47190,
            47173,
            47172,
            47389,
            47184,
            47046,
            48937,
            47333,
            47059,
            46920,
            47012,
            47151,
            46970,
            46864,
            46609,
            46981,
            46672,
            47046,
            46994,
            46956,
            46943,
            47145,
            47049,
            47188,
            47086,
            47077,
            47285,
            47184,
            48785,
            48794,
            46947,
            47041,
            46712,
            47097,
            47014,
            47018,
            47078,
            47075,
            47038,
            47013,
            47014
          ],
          [
            47618,
            47151,
            47123,
            47143,
            47087,
            47108,
            47166,
            47605,
            47239,
            46994,
            46863,
            46956,
            47077,
            46722,
            46960,
            46983,
            47008,
            46940,
            47229,
            47055,
            47135,
            47063,
            47190,
            47173,
            47172,
            47389,
            47184,
            47046,
            48937,
            47333,
            47059,
            46920,
            47012,
            47151,
            46970,
            46864,
            46609,
            46981,
            46672,
            47046,
            46994,
            46956,
            46943,
            47145,
            47049,
            47188,
            47086,
            47077,
            47285,
            47184,
            48785,
            48794,
            46947,
            47041,
            46712,
            47097,
            47014,
            47018,
            47078,
            47075,
            47038,
            47013,
            47014
          ],
          [
            47618,
            47151,
            47123,
            47143,
            47087,
            47108,
            47166,
            47605,
            47239,
            46994,
            46863,
            46956,
            47077,
            46722,
            46960,
            46983,
            47008,
            46940,
            47229,
            47055,
            47135,
            47063,
            47190,
            47173,
            47172,
            47389,
            47184,
            47046,
            48937,
            47333,
            47059,
            46920,
            47012,
            47151,
            46970,
            46864,
            46609,
            46981,
            46672,
            47046,
            46994,
            46956,
            46943,
            47145,
            47049,
            47188,
            47086,
            47077,
            47285,
            47184,
            48785,
            48794,
            46947,
            47041,
            46712,
            47097,
            47014,
            47018,
            47078,
            47075,
            47038,
            47013,
            47014
          ],
          [
            47618,
            47151,
            47123,
            47143,
            47087,
            47108,
            47166,
            47605,
            47239,
            46994,
            46863,
            46956,
            47077,
            46722,
            46960,
            46983,
            47008,
            46940,
            47229,
            47055,
            47135,
            47063,
            47190,
            47173,
            47172,
            47389,
            47184,
            47046,
            48937,
            47333,
            47059,
            46920,
            47012,
            47151,
            46970,
            46864,
            46609,
            46981,
            46672,
            47046,
            46994,
            46956,
            46943,
            47145,
            47049,
            47188,
            47086,
            47077,
            47285,
            47184,
            48785,
            48794,
            46947,
            47041,
            46712,
            47097,
            47014,
            47018,
            47078,
            47075,
            47038,
            47013,
            47014
          ],
          [
            47618,
            47151,
            47123,
            47143,
            47087,
            47108,
            47166,
            47605,
            47239,
            46994,
            46863,
            46956,
            47077,
            46722,
            46960,
            46983,
            47008,
            46940,
            47229,
            47055,
            47135,
            47063,
            47190,
            47173,
            47172,
            47389,
            47184,
            47046,
            48937,
            47333,
            47059,
            46920,
            47012,
            47151,
            46970,
            46864,
            46609,
            46981,
            46672,
            47046,
            46994,
            46956,
            46943,
            47145,
            47049,
            47188,
            47086,
            47077,
            47285,
            47184,
            48785,
            48794,
            46947,
            47041,
            46712,
            47097,
            47014,
            47018,
            47078,
            47075,
            47038,
            47013,
            47014
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            25,
            424,
            2855,
            9416,
            20098,
            31293,
            36382,
            32427,
            22023,
            8167,
            1862,
            227,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            76,
            705,
            3260,
            11131,
            22336,
            32603,
            34213,
            30583,
            23888,
            15942,
            6587,
            1470,
            163,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            36,
            598,
            3127,
            9252,
            21337,
            32625,
            36895,
            34760,
            27020,
            15991,
            6717,
            1882,
            175,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            116,
            1079,
            4679,
            10670,
            18805,
            31128,
            41819,
            39454,
            30125,
            18172,
            6745,
            1308,
            160,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            141,
            1190,
            4893,
            12305
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            219,
            1693,
            7038,
            16298,
            29077,
            35861,
            32913,
            24180,
            13206,
            4720,
            754,
            47,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            158,
            1653,
            5969,
            18797,
            30567,
            34796,
            31773,
            25551,
            14489,
            4895,
            595,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            351,
            2559,
            7986,
            17535,
            29767,
            38231,
            35742,
            26701,
            14827,
            4212,
            487,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            62,
            522,
            2554,
            6966,
            16115,
            30163,
            38449,
            36921,
            28815,
            17655,
            7426,
            1453,
            107,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            14,
            132,
            906,
            3321,
            9135,
            20709,
            32543,
            37374,
            36534,
            32501,
            23096,
            11134,
            3460,
            556,
            60,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            192,
            1416,
            4308,
            9390,
            17811,
            28889,
            39393,
            41225,
            35676,
            24616,
            12242,
            3996,
            878,
            123,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            75,
            533,
            3044
          ]
        ]
      },
      "call": {
        "duration": 0.27030947399907745,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff743eb570>()\n +    where <built-in method all of numpy.ndarray object at 0xffff743eb570> = array([21, 13, 14, 20, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff743a9640>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47618, 47151, 47123, 47143, 47087, 47108, ...], [47618, 47151, 47123, 47143, 47087, 47108, ...], [...0, 0, 0, ...], [0, 0, 0, 0, 36, 598, ...], [3, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 14, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff743eb570>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff743eb570> = array([21, 13, 14, 20, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016381560017180163,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29770638499758206,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1705074530000275,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014396119986486156,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3031370919998153,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            67,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            24,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            42,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            72,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            28,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          6,
          5,
          5
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034904880012618378,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002918915000918787,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5336702839995269,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            43,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            17,
            255,
            23,
            255,
            29,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            86,
            0,
            55,
            0,
            255,
            14,
            255,
            180,
            255,
            1
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            3,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            67,
            255,
            0,
            143,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            27
          ],
          [
            29,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            80,
            255,
            32,
            255,
            255,
            44,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            3,
            255,
            255,
            255,
            14
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            187,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034669370033952873,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002906825000536628,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29613524899832555,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48137,
            47360,
            47347,
            47114,
            46935,
            47158,
            46696,
            46762,
            46966,
            46967,
            46919,
            47101,
            46962,
            46996,
            46847,
            47140,
            46924,
            47162,
            47167,
            47345,
            47295,
            47159,
            47235,
            46859,
            46907,
            47071,
            47048,
            46983,
            47086,
            46970,
            46989,
            46957,
            47001,
            48699,
            47050,
            47466,
            46985,
            47031,
            47390,
            47387,
            47203,
            47159,
            47192,
            46866,
            47058,
            46568,
            46775,
            47014,
            47046,
            46946,
            47115,
            47025,
            46944,
            46948,
            47060,
            46911,
            47079,
            46586,
            46856,
            47229,
            47258,
            47171,
            47354
          ],
          [
            48137,
            47360,
            47347,
            47114,
            46935,
            47158,
            46696,
            46762,
            46966,
            46967,
            46919,
            47101,
            46962,
            46996,
            46847,
            47140,
            46924,
            47162,
            47167,
            47345,
            47295,
            47159,
            47235,
            46859,
            46907,
            47071,
            47048,
            46983,
            47086,
            46970,
            46989,
            46957,
            47001,
            48699,
            47050,
            47466,
            46985,
            47031,
            47390,
            47387,
            47203,
            47159,
            47192,
            46866,
            47058,
            46568,
            46775,
            47014,
            47046,
            46946,
            47115,
            47025,
            46944,
            46948,
            47060,
            46911,
            47079,
            46586,
            46856,
            47229,
            47258,
            47171,
            47354
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            953,
            8469,
            26348,
            38803,
            30090,
            11451,
            1617,
            189,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            566,
            7117,
            23605,
            39786,
            35374,
            18561,
            3789,
            547,
            56,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            192,
            2576,
            16833,
            34694,
            42720,
            30306,
            11979,
            1811,
            50,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            451,
            5385,
            19359,
            37226,
            41863,
            31279,
            13146,
            2358,
            239,
            4,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13342587299848674,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016358160028175917,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0689002260005509,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47628,
            47278,
            47088,
            47006,
            47142,
            47251,
            47072,
            47304,
            47141,
            47593,
            47140,
            47253,
            47085,
            47299,
            47104,
            47253,
            46889,
            47279,
            47170,
            47265,
            47059,
            47147,
            47099,
            47192,
            47036,
            47515,
            47146,
            47265,
            46884,
            47450,
            47551,
            47406,
            47131,
            46905,
            47117,
            47300,
            46863,
            47284,
            47058,
            47225,
            46954,
            47255,
            47063,
            47264,
            47180,
            47299,
            47142,
            47375,
            47036,
            47611,
            49063,
            47249,
            46737,
            47281,
            47141,
            47159,
            47113,
            47307,
            46950,
            47228,
            46982,
            47200,
            46991
          ],
          [
            47628,
            47278,
            47088,
            47006,
            47142,
            47251,
            47072,
            47304,
            47141,
            47593,
            47140,
            47253,
            47085,
            47299,
            47104,
            47253,
            46889,
            47279,
            47170,
            47265,
            47059,
            47147,
            47099,
            47192,
            47036,
            47515,
            47146,
            47265,
            46884,
            47450,
            47551,
            47406,
            47131,
            46905,
            47117,
            47300,
            46863,
            47284,
            47058,
            47225,
            46954,
            47255,
            47063,
            47264,
            47180,
            47299,
            47142,
            47375,
            47036,
            47611,
            49063,
            47249,
            46737,
            47281,
            47141,
            47159,
            47113,
            47307,
            46950,
            47228,
            46982,
            47200,
            46991
          ],
          [
            47628,
            47278,
            47088,
            47006,
            47142,
            47251,
            47072,
            47304,
            47141,
            47593,
            47140,
            47253,
            47085,
            47299,
            47104,
            47253,
            46889,
            47279,
            47170,
            47265,
            47059,
            47147,
            47099,
            47192,
            47036,
            47515,
            47146,
            47265,
            46884,
            47450,
            47551,
            47406,
            47131,
            46905,
            47117,
            47300,
            46863,
            47284,
            47058,
            47225,
            46954,
            47255,
            47063,
            47264,
            47180,
            47299,
            47142,
            47375,
            47036,
            47611,
            49063,
            47249,
            46737,
            47281,
            47141,
            47159,
            47113,
            47307,
            46950,
            47228,
            46982,
            47200,
            46991
          ],
          [
            47628,
            47278,
            47088,
            47006,
            47142,
            47251,
            47072,
            47304,
            47141,
            47593,
            47140,
            47253,
            47085,
            47299,
            47104,
            47253,
            46889,
            47279,
            47170,
            47265,
            47059,
            47147,
            47099,
            47192,
            47036,
            47515,
            47146,
            47265,
            46884,
            47450,
            47551,
            47406,
            47131,
            46905,
            47117,
            47300,
            46863,
            47284,
            47058,
            47225,
            46954,
            47255,
            47063,
            47264,
            47180,
            47299,
            47142,
            47375,
            47036,
            47611,
            49063,
            47249,
            46737,
            47281,
            47141,
            47159,
            47113,
            47307,
            46950,
            47228,
            46982,
            47200,
            46991
          ],
          [
            47628,
            47278,
            47088,
            47006,
            47142,
            47251,
            47072,
            47304,
            47141,
            47593,
            47140,
            47253,
            47085,
            47299,
            47104,
            47253,
            46889,
            47279,
            47170,
            47265,
            47059,
            47147,
            47099,
            47192,
            47036,
            47515,
            47146,
            47265,
            46884,
            47450,
            47551,
            47406,
            47131,
            46905,
            47117,
            47300,
            46863,
            47284,
            47058,
            47225,
            46954,
            47255,
            47063,
            47264,
            47180,
            47299,
            47142,
            47375,
            47036,
            47611,
            49063,
            47249,
            46737,
            47281,
            47141,
            47159,
            47113,
            47307,
            46950,
            47228,
            46982,
            47200,
            46991
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            155,
            2057,
            10307,
            26428,
            38250,
            37489,
            26783,
            12067,
            2899,
            413,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            210,
            3230,
            13489,
            29833,
            40686,
            40347,
            30851,
            15143,
            4777,
            838,
            137,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            166,
            1374,
            6497,
            20806,
            36584,
            40522,
            33973,
            22403,
            9650,
            2487,
            317,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            249,
            2014,
            8760,
            22193,
            35774,
            43510,
            41428,
            29607,
            11596,
            2872,
            204,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            54,
            506,
            2788,
            8137,
            20637,
            33806
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            40,
            889,
            6672,
            20300,
            33629,
            39548,
            30375,
            14308,
            3365,
            321,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            18,
            699,
            5314,
            19259,
            33843,
            41551,
            33215,
            18559,
            6525,
            1203,
            51,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            123,
            1590,
            9833,
            26387,
            38639,
            41817,
            33398,
            18241,
            5446,
            885,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            186,
            1870,
            8554,
            20322,
            34885,
            41469,
            36414,
            22552,
            9473,
            2317,
            244,
            10,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            6,
            290,
            2393,
            9814,
            25287,
            38724,
            40373,
            35281,
            27276,
            15738,
            6973,
            1190,
            63,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            50,
            594,
            3820,
            11592,
            23254,
            36464,
            43444,
            40985,
            29867,
            14729,
            4961,
            703,
            70,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            155,
            1579,
            6113,
            16513
          ]
        ]
      },
      "call": {
        "duration": 0.2694525650003925,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014879129994369578,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2964988280000398,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1703468289997545,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014333719991554972,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3596374120024848,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            124,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            13,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            24,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            116,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            189,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035071679994871374,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002945795000414364,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5359890050021932,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            3,
            255,
            1,
            191,
            0,
            255,
            2,
            255,
            212
          ],
          [
            12,
            0,
            2,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            8,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            112,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            78,
            0,
            11,
            0,
            64,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11,
            255,
            61,
            255,
            151,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            3,
            0,
            8,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            15,
            0,
            255,
            18,
            255,
            118
          ],
          [
            39,
            0,
            2,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            12,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            218,
            0,
            22,
            0,
            67,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            255,
            255,
            161,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003485566998278955,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029076049977447838,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.296356263999769,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47422,
            47064,
            47196,
            46962,
            48607,
            46751,
            43052,
            47042,
            47486,
            47042,
            48705,
            47012,
            47120,
            47098,
            46853,
            47070,
            47012,
            46967,
            46980,
            47170,
            46804,
            46799,
            46883,
            46861,
            46984,
            46978,
            47006,
            47010,
            47089,
            46996,
            46912,
            47113,
            46963,
            46957,
            47096,
            47032,
            46948,
            47203,
            47061,
            46954,
            47007,
            47057,
            46661,
            48847,
            46980,
            47353,
            47188,
            47387,
            47025,
            49655,
            46957,
            46913,
            46944,
            46836,
            46990,
            46966,
            47060,
            47002,
            47049,
            47044,
            47028,
            47017,
            46987
          ],
          [
            47422,
            47064,
            47196,
            46962,
            48607,
            46751,
            43052,
            47042,
            47486,
            47042,
            48705,
            47012,
            47120,
            47098,
            46853,
            47070,
            47012,
            46967,
            46980,
            47170,
            46804,
            46799,
            46883,
            46861,
            46984,
            46978,
            47006,
            47010,
            47089,
            46996,
            46912,
            47113,
            46963,
            46957,
            47096,
            47032,
            46948,
            47203,
            47061,
            46954,
            47007,
            47057,
            46661,
            48847,
            46980,
            47353,
            47188,
            47387,
            47025,
            49655,
            46957,
            46913,
            46944,
            46836,
            46990,
            46966,
            47060,
            47002,
            47049,
            47044,
            47028,
            47017,
            46987
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            118,
            2165,
            13807,
            32513,
            39524,
            25510,
            7593,
            1155,
            109,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            127,
            1795,
            11595,
            29905,
            41375,
            32496,
            12676,
            2290,
            159,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            17,
            383,
            5187,
            21588,
            38910,
            37752,
            20111,
            5196,
            673,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            103,
            1709,
            11443,
            29490,
            40537,
            38322,
            23069,
            5831,
            948,
            119,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            130,
            2483,
            13873,
            31317,
            42754
          ]
        ]
      },
      "call": {
        "duration": 0.1332630299984885,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001641487000597408,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06927214299867046,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47714,
            47149,
            47246,
            47265,
            47109,
            47216,
            47043,
            47211,
            47312,
            47195,
            46875,
            47624,
            47171,
            47147,
            47065,
            47017,
            47013,
            47071,
            47126,
            46784,
            47189,
            46913,
            47198,
            47285,
            47120,
            47163,
            47094,
            47104,
            47341,
            47046,
            47194,
            47081,
            47264,
            47139,
            46628,
            47146,
            47040,
            46759,
            47154,
            47093,
            47188,
            47029,
            46991,
            47134,
            47122,
            47195,
            47165,
            47087,
            47324,
            47118,
            48832,
            47409,
            47111,
            47328,
            47029,
            47178,
            47102,
            47033,
            47211,
            46726,
            47104,
            47080,
            47038
          ],
          [
            47714,
            47149,
            47246,
            47265,
            47109,
            47216,
            47043,
            47211,
            47312,
            47195,
            46875,
            47624,
            47171,
            47147,
            47065,
            47017,
            47013,
            47071,
            47126,
            46784,
            47189,
            46913,
            47198,
            47285,
            47120,
            47163,
            47094,
            47104,
            47341,
            47046,
            47194,
            47081,
            47264,
            47139,
            46628,
            47146,
            47040,
            46759,
            47154,
            47093,
            47188,
            47029,
            46991,
            47134,
            47122,
            47195,
            47165,
            47087,
            47324,
            47118,
            48832,
            47409,
            47111,
            47328,
            47029,
            47178,
            47102,
            47033,
            47211,
            46726,
            47104,
            47080,
            47038
          ],
          [
            47714,
            47149,
            47246,
            47265,
            47109,
            47216,
            47043,
            47211,
            47312,
            47195,
            46875,
            47624,
            47171,
            47147,
            47065,
            47017,
            47013,
            47071,
            47126,
            46784,
            47189,
            46913,
            47198,
            47285,
            47120,
            47163,
            47094,
            47104,
            47341,
            47046,
            47194,
            47081,
            47264,
            47139,
            46628,
            47146,
            47040,
            46759,
            47154,
            47093,
            47188,
            47029,
            46991,
            47134,
            47122,
            47195,
            47165,
            47087,
            47324,
            47118,
            48832,
            47409,
            47111,
            47328,
            47029,
            47178,
            47102,
            47033,
            47211,
            46726,
            47104,
            47080,
            47038
          ],
          [
            47714,
            47149,
            47246,
            47265,
            47109,
            47216,
            47043,
            47211,
            47312,
            47195,
            46875,
            47624,
            47171,
            47147,
            47065,
            47017,
            47013,
            47071,
            47126,
            46784,
            47189,
            46913,
            47198,
            47285,
            47120,
            47163,
            47094,
            47104,
            47341,
            47046,
            47194,
            47081,
            47264,
            47139,
            46628,
            47146,
            47040,
            46759,
            47154,
            47093,
            47188,
            47029,
            46991,
            47134,
            47122,
            47195,
            47165,
            47087,
            47324,
            47118,
            48832,
            47409,
            47111,
            47328,
            47029,
            47178,
            47102,
            47033,
            47211,
            46726,
            47104,
            47080,
            47038
          ],
          [
            47714,
            47149,
            47246,
            47265,
            47109,
            47216,
            47043,
            47211,
            47312,
            47195,
            46875,
            47624,
            47171,
            47147,
            47065,
            47017,
            47013,
            47071,
            47126,
            46784,
            47189,
            46913,
            47198,
            47285,
            47120,
            47163,
            47094,
            47104,
            47341,
            47046,
            47194,
            47081,
            47264,
            47139,
            46628,
            47146,
            47040,
            46759,
            47154,
            47093,
            47188,
            47029,
            46991,
            47134,
            47122,
            47195,
            47165,
            47087,
            47324,
            47118,
            48832,
            47409,
            47111,
            47328,
            47029,
            47178,
            47102,
            47033,
            47211,
            46726,
            47104,
            47080,
            47038
          ]
        ],
        "eTX_errcounts": [
          [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            54,
            996,
            6993,
            20227,
            34025,
            39600,
            34793,
            24173,
            10239,
            2814,
            484,
            53,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            168,
            2237,
            10901,
            25550,
            37542,
            41503,
            36486,
            20154,
            7701,
            1640,
            146,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            11,
            219,
            1531,
            5588,
            14031,
            26582,
            38246,
            43292,
            37330,
            21815,
            8216,
            1664,
            82,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            43,
            618,
            2894,
            7406,
            16795,
            31070,
            39107,
            38332,
            25414,
            12619,
            4018,
            567,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            23885,
            11240,
            2567,
            291,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            116,
            2179,
            8553,
            21375,
            34345,
            37801,
            28029,
            15517,
            4581,
            748,
            37,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            76,
            1292,
            6136,
            16350,
            29798,
            35610,
            32741,
            19312,
            6826,
            1264,
            104,
            2,
            0,
            0,
            0
          ],
          [
            845,
            83,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            91,
            1412,
            7186,
            17026,
            28757,
            38584,
            40145,
            31602,
            19281,
            8922,
            2543,
            312,
            6,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            100,
            1199,
            5511,
            15862,
            28384,
            35559,
            32457,
            22483,
            10878,
            3533,
            570,
            51,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            236,
            1615,
            7247,
            16031,
            28220,
            36891,
            41216,
            36643,
            25469,
            12222,
            4225,
            464,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            65,
            661,
            2940,
            8769,
            18409,
            30792,
            37783,
            36841,
            30442,
            22434,
            12551,
            5345,
            891,
            114,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.26969386099881376,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014655929990112782,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2969549579975137,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17024896699877,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00484081800095737,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}