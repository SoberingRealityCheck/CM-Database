{
  "created": 1722033831.5737996,
  "duration": 23.298917531967163,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.510699663998821,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14816340900142677,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013290289971337188,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003793464999034768,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479251140008273,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012803089994122274,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1327308539985097,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12152461299774586,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012942290013597813,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037869539992243517,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1208810390016879,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012549879975267686,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033398849991499446,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14660106399969663,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012010469981760252,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033172040020872373,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11988354699860793,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011668760016618762,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033026240016624797,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14630840699828696,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011754859988286626,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00333139500071411,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11983044600128778,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011959170005866326,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004357597998023266,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002100497000355972,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001174737000837922,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003320954001537757,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017418989991710987,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011138640002172906,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032717229987611063,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040347299982386176,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033814.1236413,
            "msecs": 123.6412525177002,
            "relativeCreated": 7823.55523109436,
            "thread": 281473831792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5377
          }
        ]
      },
      "teardown": {
        "duration": 0.0012237869996170048,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033216739975614473,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002401372999884188,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033814.1358986,
            "msecs": 135.89859008789062,
            "relativeCreated": 7835.812568664551,
            "thread": 281473831792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5377
          }
        ]
      },
      "teardown": {
        "duration": 0.0011800159991253167,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002074067000648938,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00272460100313765,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033814.145355,
            "msecs": 145.3549861907959,
            "relativeCreated": 7845.268964767456,
            "thread": 281473831792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5377
          }
        ]
      },
      "teardown": {
        "duration": 0.001052873001754051,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002064767002593726,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034457270012353547,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033814.1547866,
            "msecs": 154.7865867614746,
            "relativeCreated": 7854.700565338135,
            "thread": 281473831792672,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5377
          }
        ]
      },
      "teardown": {
        "duration": 0.0011263449996476993,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00332221500138985,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1465833330003079,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001163606000773143,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033251240020035766,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12022678500215989,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011932159977732226,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1746132590014895,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14761430699945777,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012453569979697932,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015122558001166908,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12114084499989985,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012967789989488665,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8330767840016051,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            8,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            80,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            12,
            117,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003565909999451833,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002890624997235136,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.891890456998226,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            22,
            0,
            1,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            227,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            236,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            35,
            255,
            255,
            255,
            25
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            76,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            157,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            0,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            142,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            227,
            255,
            255,
            255,
            255,
            0,
            0,
            180,
            2,
            99,
            255
          ],
          [
            255,
            0,
            204,
            0,
            255,
            0,
            196,
            71,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003478008002275601,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028732840000884607,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3022754099984013,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48012,
            47350,
            47956,
            47554,
            47488,
            47553,
            47420,
            47687,
            47588,
            47433,
            47332,
            47452,
            47425,
            47366,
            47430,
            47687,
            47395,
            47619,
            47371,
            47484,
            47447,
            47475,
            47469,
            47249,
            47310,
            47420,
            47635,
            47713,
            47368,
            47530,
            47357,
            47517,
            47628,
            47541,
            47101,
            50117,
            47406,
            48125,
            47567,
            47797,
            47437,
            47175,
            47359,
            47303,
            47517,
            47384,
            47477,
            47452,
            47397,
            47286,
            47439,
            47342,
            47373,
            47243,
            47321,
            47489,
            47633,
            47651,
            47475,
            47434,
            47399,
            47581,
            47701
          ],
          [
            48012,
            47350,
            47956,
            47554,
            47488,
            47553,
            47420,
            47687,
            47588,
            47433,
            47332,
            47452,
            47425,
            47366,
            47430,
            47687,
            47395,
            47619,
            47371,
            47484,
            47447,
            47475,
            47469,
            47249,
            47310,
            47420,
            47635,
            47713,
            47368,
            47530,
            47357,
            47517,
            47628,
            47541,
            47101,
            50117,
            47406,
            48125,
            47567,
            47797,
            47437,
            47175,
            47359,
            47303,
            47517,
            47384,
            47477,
            47452,
            47397,
            47286,
            47439,
            47342,
            47373,
            47243,
            47321,
            47489,
            47633,
            47651,
            47475,
            47434,
            47399,
            47581,
            47701
          ]
        ],
        "eTX_errcounts": [
          [
            40112,
            25701,
            7789,
            1183,
            72,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            273,
            3404,
            16825,
            35643,
            42954,
            30357,
            13504,
            1925,
            95,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            729,
            7950,
            25936,
            41002,
            37164,
            18708,
            5089,
            493,
            7,
            5,
            0,
            0
          ],
          [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            307,
            4329,
            18125,
            36412,
            42259,
            30548,
            12389,
            2888,
            253,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            417,
            4753,
            19887,
            36434,
            42889,
            35182,
            16038,
            2906,
            208,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13397720200009644,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001608395999937784,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06886446800126578,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47506,
            47215,
            47202,
            47387,
            47178,
            47188,
            47186,
            49090,
            47167,
            47148,
            47052,
            47217,
            47185,
            47299,
            47032,
            47201,
            46850,
            47209,
            47053,
            47176,
            47058,
            47140,
            47099,
            47356,
            47158,
            47148,
            47111,
            47594,
            47378,
            47054,
            47004,
            47343,
            47156,
            47363,
            47051,
            47093,
            47100,
            47161,
            47313,
            47257,
            47096,
            46806,
            47232,
            47423,
            47179,
            47186,
            47408,
            47199,
            47166,
            47060,
            46979,
            47263,
            46982,
            47172,
            47160,
            47249,
            47079,
            47208,
            47344,
            47102,
            47150,
            47139,
            47150
          ],
          [
            47506,
            47215,
            47202,
            47387,
            47178,
            47188,
            47186,
            49090,
            47167,
            47148,
            47052,
            47217,
            47185,
            47299,
            47032,
            47201,
            46850,
            47209,
            47053,
            47176,
            47058,
            47140,
            47099,
            47356,
            47158,
            47148,
            47111,
            47594,
            47378,
            47054,
            47004,
            47343,
            47156,
            47363,
            47051,
            47093,
            47100,
            47161,
            47313,
            47257,
            47096,
            46806,
            47232,
            47423,
            47179,
            47186,
            47408,
            47199,
            47166,
            47060,
            46979,
            47263,
            46982,
            47172,
            47160,
            47249,
            47079,
            47208,
            47344,
            47102,
            47150,
            47139,
            47150
          ],
          [
            47506,
            47215,
            47202,
            47387,
            47178,
            47188,
            47186,
            49090,
            47167,
            47148,
            47052,
            47217,
            47185,
            47299,
            47032,
            47201,
            46850,
            47209,
            47053,
            47176,
            47058,
            47140,
            47099,
            47356,
            47158,
            47148,
            47111,
            47594,
            47378,
            47054,
            47004,
            47343,
            47156,
            47363,
            47051,
            47093,
            47100,
            47161,
            47313,
            47257,
            47096,
            46806,
            47232,
            47423,
            47179,
            47186,
            47408,
            47199,
            47166,
            47060,
            46979,
            47263,
            46982,
            47172,
            47160,
            47249,
            47079,
            47208,
            47344,
            47102,
            47150,
            47139,
            47150
          ],
          [
            47506,
            47215,
            47202,
            47387,
            47178,
            47188,
            47186,
            49090,
            47167,
            47148,
            47052,
            47217,
            47185,
            47299,
            47032,
            47201,
            46850,
            47209,
            47053,
            47176,
            47058,
            47140,
            47099,
            47356,
            47158,
            47148,
            47111,
            47594,
            47378,
            47054,
            47004,
            47343,
            47156,
            47363,
            47051,
            47093,
            47100,
            47161,
            47313,
            47257,
            47096,
            46806,
            47232,
            47423,
            47179,
            47186,
            47408,
            47199,
            47166,
            47060,
            46979,
            47263,
            46982,
            47172,
            47160,
            47249,
            47079,
            47208,
            47344,
            47102,
            47150,
            47139,
            47150
          ],
          [
            47506,
            47215,
            47202,
            47387,
            47178,
            47188,
            47186,
            49090,
            47167,
            47148,
            47052,
            47217,
            47185,
            47299,
            47032,
            47201,
            46850,
            47209,
            47053,
            47176,
            47058,
            47140,
            47099,
            47356,
            47158,
            47148,
            47111,
            47594,
            47378,
            47054,
            47004,
            47343,
            47156,
            47363,
            47051,
            47093,
            47100,
            47161,
            47313,
            47257,
            47096,
            46806,
            47232,
            47423,
            47179,
            47186,
            47408,
            47199,
            47166,
            47060,
            46979,
            47263,
            46982,
            47172,
            47160,
            47249,
            47079,
            47208,
            47344,
            47102,
            47150,
            47139,
            47150
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            589,
            3130,
            10180,
            22396,
            33899,
            35872,
            30971,
            20477,
            8899,
            2274,
            399,
            54,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            53,
            1013,
            4343,
            12885,
            23590,
            32619,
            35694,
            30892,
            22681,
            12189,
            4800,
            823,
            105,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            4,
            256,
            1472,
            4579,
            10528,
            23617,
            36352,
            39005,
            34391,
            24829,
            15146,
            8531,
            3201,
            584,
            38,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            139,
            1478,
            6032,
            15452,
            27129,
            32337,
            34960,
            35455,
            27680,
            16704,
            6246,
            1454,
            111,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            82,
            661,
            2433,
            5947,
            13608,
            27112
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            112,
            1257,
            6004,
            16711,
            31226,
            35071,
            31941,
            22867,
            12195,
            4585,
            994,
            74,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            169,
            1442,
            6895,
            15709,
            29238,
            35698,
            32904,
            22804,
            11354,
            3081,
            406,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            41,
            472,
            2380,
            8552,
            21021,
            34541,
            37660,
            33896,
            25738,
            14891,
            6715,
            1507,
            170,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            79,
            602,
            3267,
            8167,
            16997,
            28235,
            36441,
            34046,
            26044,
            15984,
            6498,
            1610,
            130,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            19,
            304,
            1358,
            3969,
            8622,
            19272,
            34177,
            39192,
            36602,
            30527,
            22742,
            13820,
            7432,
            2500,
            403,
            33,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            13,
            120,
            1222,
            5059,
            13034,
            25819,
            33031,
            35907,
            37656,
            32642,
            23950,
            14618,
            7078,
            1669,
            236,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            3,
            125,
            967,
            3343,
            8611
          ]
        ]
      },
      "call": {
        "duration": 0.27194482299819356,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa704bed0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa704bed0> = array([22, 12, 19, 21, 10]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa6fdd490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47506, 47215, 47202, 47387, 47178, 47188, ...], [47506, 47215, 47202, 47387, 47178, 47188, ...], [..., ...], [0, 0, 4, 256, 1472, 4579, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 19, 304, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa704bed0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa704bed0> = array([22, 12, 19, 21, 10]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016369269978895318,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2923353490004956,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1691107180013205,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014804130005359184,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2945226680021733,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            255,
            7,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            21,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            228,
            82,
            7,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0035154789984517265,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028974950000701938,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5456823960012116,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            6,
            255,
            200,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            77,
            255,
            141,
            255,
            119,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            202,
            0,
            142,
            5,
            255,
            37,
            255,
            13
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            81,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            11,
            255,
            174,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            210,
            255,
            155,
            255,
            255,
            2,
            0,
            118,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            120,
            255,
            130
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.003483167998638237,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002880063999327831,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29544344800160616,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47925,
            47646,
            47350,
            47380,
            47469,
            47388,
            47147,
            47270,
            47375,
            47425,
            47256,
            47385,
            47103,
            47044,
            47252,
            47276,
            47323,
            47919,
            47470,
            47605,
            47442,
            47407,
            47426,
            47229,
            47398,
            47384,
            47214,
            47290,
            47340,
            47180,
            47311,
            47243,
            47375,
            47466,
            47324,
            47327,
            47343,
            47538,
            47322,
            47488,
            47308,
            47450,
            47392,
            47477,
            47367,
            47365,
            47387,
            47453,
            48976,
            47462,
            47600,
            47406,
            49649,
            47329,
            47252,
            47294,
            47223,
            47660,
            47389,
            47418,
            47399,
            47446,
            46940
          ],
          [
            47925,
            47646,
            47350,
            47380,
            47469,
            47388,
            47147,
            47270,
            47375,
            47425,
            47256,
            47385,
            47103,
            47044,
            47252,
            47276,
            47323,
            47919,
            47470,
            47605,
            47442,
            47407,
            47426,
            47229,
            47398,
            47384,
            47214,
            47290,
            47340,
            47180,
            47311,
            47243,
            47375,
            47466,
            47324,
            47327,
            47343,
            47538,
            47322,
            47488,
            47308,
            47450,
            47392,
            47477,
            47367,
            47365,
            47387,
            47453,
            48976,
            47462,
            47600,
            47406,
            49649,
            47329,
            47252,
            47294,
            47223,
            47660,
            47389,
            47418,
            47399,
            47446,
            46940
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            347,
            4048,
            17450,
            35799,
            36463,
            18561,
            4338,
            341,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            232,
            2836,
            17225,
            34954,
            40686,
            25116,
            8367,
            876,
            141,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            40,
            889,
            8742,
            29357,
            41310,
            39371,
            18663,
            4505,
            441,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            220,
            2540,
            13527,
            31170,
            42704,
            38511,
            20481,
            5702,
            774,
            44,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13379086699933396,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001610765997611452,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06863304299986339,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48266,
            47551,
            47439,
            47082,
            47150,
            46734,
            47118,
            47089,
            47201,
            47164,
            47154,
            47023,
            47289,
            47113,
            47016,
            47189,
            47226,
            47178,
            47138,
            47157,
            48646,
            49389,
            47018,
            47110,
            46910,
            46964,
            47043,
            60703,
            47102,
            46894,
            46906,
            46872,
            47183,
            47174,
            47279,
            47133,
            47126,
            47147,
            47240,
            48981,
            48927,
            47177,
            46966,
            47177,
            47134,
            47174,
            47075,
            47030,
            47073,
            47127,
            47123,
            47090,
            47252,
            47284,
            47107,
            46912,
            47320,
            47253,
            48959,
            47118,
            47127,
            47162,
            47084
          ],
          [
            48266,
            47551,
            47439,
            47082,
            47150,
            46734,
            47118,
            47089,
            47201,
            47164,
            47154,
            47023,
            47289,
            47113,
            47016,
            47189,
            47226,
            47178,
            47138,
            47157,
            48646,
            49389,
            47018,
            47110,
            46910,
            46964,
            47043,
            60703,
            47102,
            46894,
            46906,
            46872,
            47183,
            47174,
            47279,
            47133,
            47126,
            47147,
            47240,
            48981,
            48927,
            47177,
            46966,
            47177,
            47134,
            47174,
            47075,
            47030,
            47073,
            47127,
            47123,
            47090,
            47252,
            47284,
            47107,
            46912,
            47320,
            47253,
            48959,
            47118,
            47127,
            47162,
            47084
          ],
          [
            48266,
            47551,
            47439,
            47082,
            47150,
            46734,
            47118,
            47089,
            47201,
            47164,
            47154,
            47023,
            47289,
            47113,
            47016,
            47189,
            47226,
            47178,
            47138,
            47157,
            48646,
            49389,
            47018,
            47110,
            46910,
            46964,
            47043,
            60703,
            47102,
            46894,
            46906,
            46872,
            47183,
            47174,
            47279,
            47133,
            47126,
            47147,
            47240,
            48981,
            48927,
            47177,
            46966,
            47177,
            47134,
            47174,
            47075,
            47030,
            47073,
            47127,
            47123,
            47090,
            47252,
            47284,
            47107,
            46912,
            47320,
            47253,
            48959,
            47118,
            47127,
            47162,
            47084
          ],
          [
            48266,
            47551,
            47439,
            47082,
            47150,
            46734,
            47118,
            47089,
            47201,
            47164,
            47154,
            47023,
            47289,
            47113,
            47016,
            47189,
            47226,
            47178,
            47138,
            47157,
            48646,
            49389,
            47018,
            47110,
            46910,
            46964,
            47043,
            60703,
            47102,
            46894,
            46906,
            46872,
            47183,
            47174,
            47279,
            47133,
            47126,
            47147,
            47240,
            48981,
            48927,
            47177,
            46966,
            47177,
            47134,
            47174,
            47075,
            47030,
            47073,
            47127,
            47123,
            47090,
            47252,
            47284,
            47107,
            46912,
            47320,
            47253,
            48959,
            47118,
            47127,
            47162,
            47084
          ],
          [
            48266,
            47551,
            47439,
            47082,
            47150,
            46734,
            47118,
            47089,
            47201,
            47164,
            47154,
            47023,
            47289,
            47113,
            47016,
            47189,
            47226,
            47178,
            47138,
            47157,
            48646,
            49389,
            47018,
            47110,
            46910,
            46964,
            47043,
            60703,
            47102,
            46894,
            46906,
            46872,
            47183,
            47174,
            47279,
            47133,
            47126,
            47147,
            47240,
            48981,
            48927,
            47177,
            46966,
            47177,
            47134,
            47174,
            47075,
            47030,
            47073,
            47127,
            47123,
            47090,
            47252,
            47284,
            47107,
            46912,
            47320,
            47253,
            48959,
            47118,
            47127,
            47162,
            47084
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            316,
            2918,
            13008,
            26852,
            34430,
            33610,
            23004,
            10833,
            2914,
            380,
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            961,
            5221,
            15719,
            27877,
            37890,
            38889,
            30437,
            17203,
            4169,
            630,
            13,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            2,
            212,
            1563,
            6387,
            18537,
            33235,
            38614,
            32753,
            17787,
            6114,
            965,
            62,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            280,
            2170,
            10979,
            24952,
            36765,
            42412,
            40094,
            29968,
            15720,
            4890,
            604,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            24,
            380,
            2813,
            8117,
            19787,
            32933,
            37436
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            33,
            407,
            3924,
            16561,
            31015,
            36648,
            31679,
            18460,
            6843,
            1040,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            49,
            982,
            8291,
            22369,
            38169,
            41473,
            34611,
            21917,
            9646,
            1930,
            122,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            138,
            1229,
            6800,
            20369,
            34042,
            38393,
            33322,
            19767,
            7611,
            1452,
            150,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            269,
            3307,
            13526,
            26040,
            34113,
            38363,
            35002,
            24639,
            11574,
            2903,
            303,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            5,
            178,
            2097,
            9551,
            21800,
            33691,
            39363,
            35176,
            24219,
            11405,
            2900,
            468,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            38,
            699,
            4207,
            15118,
            27125,
            36713,
            40880,
            37368,
            27067,
            13005,
            3417,
            439,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            153,
            939,
            6085,
            17645,
            32444
          ]
        ]
      },
      "call": {
        "duration": 0.2703039659973001,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015228639967972413,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2911845520029601,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168893392998143,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014286910009104759,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.4010561569994024,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            83,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.0035285890007799026,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029022650014667306,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5346539390011458,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            2,
            255,
            0,
            75,
            1,
            255,
            2,
            255,
            255
          ],
          [
            70,
            0,
            20,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            56,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            247,
            255,
            0,
            7,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            29,
            0,
            2,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            25,
            255,
            63,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            4,
            0,
            255,
            6,
            255,
            255
          ],
          [
            60,
            0,
            6,
            0,
            12,
            0,
            255,
            245,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            93,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            92,
            0,
            16,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            148,
            255,
            88,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034662479993130546,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028929350010002963,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2959772489994066,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47859,
            47583,
            47913,
            47485,
            47829,
            47467,
            47462,
            47353,
            46992,
            47156,
            47261,
            47494,
            47362,
            47536,
            47266,
            47463,
            47273,
            47451,
            47317,
            47211,
            47367,
            47508,
            47342,
            47373,
            47423,
            47491,
            47391,
            47489,
            47366,
            47451,
            47365,
            47454,
            47341,
            47459,
            47333,
            49252,
            47486,
            47656,
            47454,
            49196,
            47277,
            47049,
            47087,
            47337,
            47374,
            47316,
            47307,
            47220,
            47314,
            47294,
            47356,
            47302,
            47266,
            47033,
            47229,
            47197,
            47510,
            47381,
            47399,
            47018,
            47044,
            47436,
            47634
          ],
          [
            47859,
            47583,
            47913,
            47485,
            47829,
            47467,
            47462,
            47353,
            46992,
            47156,
            47261,
            47494,
            47362,
            47536,
            47266,
            47463,
            47273,
            47451,
            47317,
            47211,
            47367,
            47508,
            47342,
            47373,
            47423,
            47491,
            47391,
            47489,
            47366,
            47451,
            47365,
            47454,
            47341,
            47459,
            47333,
            49252,
            47486,
            47656,
            47454,
            49196,
            47277,
            47049,
            47087,
            47337,
            47374,
            47316,
            47307,
            47220,
            47314,
            47294,
            47356,
            47302,
            47266,
            47033,
            47229,
            47197,
            47510,
            47381,
            47399,
            47018,
            47044,
            47436,
            47634
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            580,
            7490,
            24931,
            39399,
            33876,
            14760,
            2923,
            221,
            27,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            596,
            6802,
            23508,
            39705,
            37060,
            20360,
            5262,
            551,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15
          ],
          [
            0,
            0,
            0,
            0,
            139,
            2260,
            14983,
            33056,
            40723,
            29056,
            9447,
            1452,
            87,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            883,
            6049,
            22522,
            39266,
            43447,
            29897,
            12170,
            1831,
            247,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            17,
            981,
            7629,
            25602,
            40581,
            43748
          ]
        ]
      },
      "call": {
        "duration": 0.1337806070005172,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016415769969171379,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06880887599982088,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48032,
            47106,
            47173,
            47194,
            46840,
            47284,
            47010,
            47150,
            47116,
            47187,
            47121,
            46960,
            46885,
            46971,
            47126,
            47057,
            46893,
            47124,
            47137,
            47081,
            47139,
            47118,
            47144,
            47186,
            47230,
            47116,
            46974,
            47277,
            47370,
            46935,
            46748,
            46852,
            46956,
            47062,
            46963,
            46965,
            46877,
            47124,
            47101,
            47075,
            47098,
            47048,
            47056,
            47012,
            47185,
            47165,
            48433,
            47500,
            47111,
            47073,
            47112,
            47074,
            47143,
            46786,
            47096,
            47166,
            47068,
            47129,
            47093,
            47111,
            47030,
            46970,
            47188
          ],
          [
            48032,
            47106,
            47173,
            47194,
            46840,
            47284,
            47010,
            47150,
            47116,
            47187,
            47121,
            46960,
            46885,
            46971,
            47126,
            47057,
            46893,
            47124,
            47137,
            47081,
            47139,
            47118,
            47144,
            47186,
            47230,
            47116,
            46974,
            47277,
            47370,
            46935,
            46748,
            46852,
            46956,
            47062,
            46963,
            46965,
            46877,
            47124,
            47101,
            47075,
            47098,
            47048,
            47056,
            47012,
            47185,
            47165,
            48433,
            47500,
            47111,
            47073,
            47112,
            47074,
            47143,
            46786,
            47096,
            47166,
            47068,
            47129,
            47093,
            47111,
            47030,
            46970,
            47188
          ],
          [
            48032,
            47106,
            47173,
            47194,
            46840,
            47284,
            47010,
            47150,
            47116,
            47187,
            47121,
            46960,
            46885,
            46971,
            47126,
            47057,
            46893,
            47124,
            47137,
            47081,
            47139,
            47118,
            47144,
            47186,
            47230,
            47116,
            46974,
            47277,
            47370,
            46935,
            46748,
            46852,
            46956,
            47062,
            46963,
            46965,
            46877,
            47124,
            47101,
            47075,
            47098,
            47048,
            47056,
            47012,
            47185,
            47165,
            48433,
            47500,
            47111,
            47073,
            47112,
            47074,
            47143,
            46786,
            47096,
            47166,
            47068,
            47129,
            47093,
            47111,
            47030,
            46970,
            47188
          ],
          [
            48032,
            47106,
            47173,
            47194,
            46840,
            47284,
            47010,
            47150,
            47116,
            47187,
            47121,
            46960,
            46885,
            46971,
            47126,
            47057,
            46893,
            47124,
            47137,
            47081,
            47139,
            47118,
            47144,
            47186,
            47230,
            47116,
            46974,
            47277,
            47370,
            46935,
            46748,
            46852,
            46956,
            47062,
            46963,
            46965,
            46877,
            47124,
            47101,
            47075,
            47098,
            47048,
            47056,
            47012,
            47185,
            47165,
            48433,
            47500,
            47111,
            47073,
            47112,
            47074,
            47143,
            46786,
            47096,
            47166,
            47068,
            47129,
            47093,
            47111,
            47030,
            46970,
            47188
          ],
          [
            48032,
            47106,
            47173,
            47194,
            46840,
            47284,
            47010,
            47150,
            47116,
            47187,
            47121,
            46960,
            46885,
            46971,
            47126,
            47057,
            46893,
            47124,
            47137,
            47081,
            47139,
            47118,
            47144,
            47186,
            47230,
            47116,
            46974,
            47277,
            47370,
            46935,
            46748,
            46852,
            46956,
            47062,
            46963,
            46965,
            46877,
            47124,
            47101,
            47075,
            47098,
            47048,
            47056,
            47012,
            47185,
            47165,
            48433,
            47500,
            47111,
            47073,
            47112,
            47074,
            47143,
            46786,
            47096,
            47166,
            47068,
            47129,
            47093,
            47111,
            47030,
            46970,
            47188
          ]
        ],
        "eTX_errcounts": [
          [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            193,
            2032,
            8468,
            18115,
            27899,
            35475,
            35464,
            27274,
            13201,
            3243,
            266,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            301,
            2668,
            10458,
            23679,
            34420,
            38154,
            32062,
            19524,
            7831,
            2293,
            351,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            60,
            708,
            4901,
            15577,
            27247,
            34748,
            38654,
            36462,
            24949,
            12994,
            4866,
            910,
            45,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            170,
            1510,
            5846,
            16016,
            28232,
            35001,
            33764,
            26174,
            12387,
            3947,
            733,
            63,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            13418,
            5355,
            837,
            63,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            239,
            2234,
            10672,
            23683,
            35009,
            39790,
            32416,
            19387,
            8197,
            1607,
            126,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            435,
            4804,
            15078,
            28791,
            38423,
            34839,
            22503,
            9179,
            1981,
            150,
            9,
            2,
            0,
            0,
            0
          ],
          [
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            70,
            1190,
            7406,
            19732,
            31154,
            38832,
            39195,
            33485,
            23720,
            11537,
            3354,
            336,
            2,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            47,
            555,
            3567,
            12627,
            25453,
            35454,
            33574,
            21578,
            10561,
            3751,
            865,
            51,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            81,
            1102,
            6507,
            18215,
            28797,
            37121,
            39163,
            34794,
            23711,
            12994,
            3345,
            403,
            43,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            201,
            1726,
            7082,
            17958,
            30175,
            38775,
            40053,
            32822,
            22696,
            12750,
            5362,
            1459,
            72,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2704749099975743,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001483593001466943,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2917965960004949,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1690800879987364,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004827797998586902,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}