{
  "created": 1722032830.2181559,
  "duration": 23.202675104141235,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5034816949992091,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14828522699826863,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013172090002626646,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003818785000476055,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1480739030012046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012486580017139204,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1317515299997467,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1214810409983329,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012758080010826234,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038327050024236087,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12083680700015975,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012722089995804708,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033767259992600884,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14636758499909774,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011861359998874832,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003334154000185663,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11969477200182155,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011687359983625356,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003336373996717157,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14639026499935426,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011822359992947895,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033654449980531354,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11996018799982267,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001193156000226736,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0044163379970996175,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002096146003168542,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001124754999182187,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033311539991700556,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017222790011146571,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010728839988587424,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0032786230003694072,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004029300002002856,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032812.788172,
            "msecs": 788.1720066070557,
            "relativeCreated": 7749.932527542114,
            "thread": 281472871260192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4900
          }
        ]
      },
      "teardown": {
        "duration": 0.0011741059970518108,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003382456001418177,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002365493000979768,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032812.8004386,
            "msecs": 800.438642501831,
            "relativeCreated": 7762.19916343689,
            "thread": 281472871260192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4900
          }
        ]
      },
      "teardown": {
        "duration": 0.001163606000773143,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002129627999238437,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027007200005755294,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032812.809923,
            "msecs": 809.9229335784912,
            "relativeCreated": 7771.68345451355,
            "thread": 281472871260192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4900
          }
        ]
      },
      "teardown": {
        "duration": 0.001028393002343364,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020763460015587043,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034104759979527444,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032812.8193228,
            "msecs": 819.3228244781494,
            "relativeCreated": 7781.083345413208,
            "thread": 281472871260192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4900
          }
        ]
      },
      "teardown": {
        "duration": 0.0010748940003395546,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033418049970350694,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14645572700101184,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011857760000566486,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033489140005258378,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12006083899905207,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012213869995321147,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1795246519977809,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14730951499950606,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012736479984596372,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015120366999326507,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12096301999918069,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012595779990078881,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8312004289982724,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            9,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            111,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            8,
            88,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003562938996765297,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028872039983980358,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9011002769984771,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            16,
            0,
            0,
            0,
            0
          ],
          [
            0,
            11,
            0,
            0,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            7
          ],
          [
            245,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            223,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            21,
            255,
            255,
            255,
            21
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            76,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            174,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            1,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            108,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            242,
            255,
            255,
            255,
            255,
            0,
            0,
            184,
            0,
            149,
            255
          ],
          [
            255,
            0,
            138,
            0,
            255,
            0,
            255,
            92,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          4,
          5,
          3
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035443089982436504,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002900464001868386,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3025245669996366,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48533,
            47770,
            47736,
            47506,
            47462,
            47573,
            47401,
            47595,
            47299,
            47341,
            47546,
            47533,
            47485,
            47654,
            47509,
            47579,
            47430,
            47588,
            47510,
            47537,
            47594,
            49403,
            47619,
            48022,
            47652,
            50435,
            47460,
            47518,
            47348,
            47430,
            47553,
            47497,
            47365,
            47274,
            47399,
            47407,
            47528,
            47460,
            47489,
            47527,
            47497,
            47320,
            47437,
            47555,
            47648,
            47352,
            47362,
            47427,
            47356,
            47298,
            47235,
            47549,
            47419,
            47493,
            47555,
            47569,
            47567,
            47470,
            47847,
            47418,
            47560,
            47596,
            47567
          ],
          [
            48533,
            47770,
            47736,
            47506,
            47462,
            47573,
            47401,
            47595,
            47299,
            47341,
            47546,
            47533,
            47485,
            47654,
            47509,
            47579,
            47430,
            47588,
            47510,
            47537,
            47594,
            49403,
            47619,
            48022,
            47652,
            50435,
            47460,
            47518,
            47348,
            47430,
            47553,
            47497,
            47365,
            47274,
            47399,
            47407,
            47528,
            47460,
            47489,
            47527,
            47497,
            47320,
            47437,
            47555,
            47648,
            47352,
            47362,
            47427,
            47356,
            47298,
            47235,
            47549,
            47419,
            47493,
            47555,
            47569,
            47567,
            47470,
            47847,
            47418,
            47560,
            47596,
            47567
          ]
        ],
        "eTX_errcounts": [
          [
            41022,
            26565,
            8732,
            1287,
            90,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            285,
            2943,
            17389,
            34333,
            42104,
            30976,
            14014,
            2028,
            155,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            740,
            7606,
            25315,
            40742,
            37362,
            19711,
            5150,
            706,
            23,
            0,
            0,
            0
          ],
          [
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            361,
            3957,
            17613,
            37458,
            42451,
            31896,
            13438,
            3273,
            334,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            332,
            4373,
            19331,
            36516,
            42435,
            34808,
            16924,
            3199,
            301,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13399474000107148,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016184760024771094,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907680600124877,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47947,
            47478,
            47566,
            47928,
            47397,
            47366,
            47038,
            47344,
            47251,
            47419,
            47338,
            47132,
            47229,
            47544,
            47336,
            47662,
            47243,
            47589,
            47438,
            47439,
            47462,
            47881,
            47501,
            47190,
            47267,
            47346,
            47235,
            47385,
            47410,
            47384,
            47346,
            47079,
            47412,
            47485,
            47361,
            47460,
            47295,
            47489,
            47329,
            47846,
            47392,
            47390,
            47217,
            47497,
            47129,
            47592,
            47264,
            47410,
            47025,
            47394,
            47299,
            47454,
            47322,
            47554,
            47225,
            47582,
            47313,
            49008,
            47147,
            47260,
            47139,
            47372,
            47328
          ],
          [
            47947,
            47478,
            47566,
            47928,
            47397,
            47366,
            47038,
            47344,
            47251,
            47419,
            47338,
            47132,
            47229,
            47544,
            47336,
            47662,
            47243,
            47589,
            47438,
            47439,
            47462,
            47881,
            47501,
            47190,
            47267,
            47346,
            47235,
            47385,
            47410,
            47384,
            47346,
            47079,
            47412,
            47485,
            47361,
            47460,
            47295,
            47489,
            47329,
            47846,
            47392,
            47390,
            47217,
            47497,
            47129,
            47592,
            47264,
            47410,
            47025,
            47394,
            47299,
            47454,
            47322,
            47554,
            47225,
            47582,
            47313,
            49008,
            47147,
            47260,
            47139,
            47372,
            47328
          ],
          [
            47947,
            47478,
            47566,
            47928,
            47397,
            47366,
            47038,
            47344,
            47251,
            47419,
            47338,
            47132,
            47229,
            47544,
            47336,
            47662,
            47243,
            47589,
            47438,
            47439,
            47462,
            47881,
            47501,
            47190,
            47267,
            47346,
            47235,
            47385,
            47410,
            47384,
            47346,
            47079,
            47412,
            47485,
            47361,
            47460,
            47295,
            47489,
            47329,
            47846,
            47392,
            47390,
            47217,
            47497,
            47129,
            47592,
            47264,
            47410,
            47025,
            47394,
            47299,
            47454,
            47322,
            47554,
            47225,
            47582,
            47313,
            49008,
            47147,
            47260,
            47139,
            47372,
            47328
          ],
          [
            47947,
            47478,
            47566,
            47928,
            47397,
            47366,
            47038,
            47344,
            47251,
            47419,
            47338,
            47132,
            47229,
            47544,
            47336,
            47662,
            47243,
            47589,
            47438,
            47439,
            47462,
            47881,
            47501,
            47190,
            47267,
            47346,
            47235,
            47385,
            47410,
            47384,
            47346,
            47079,
            47412,
            47485,
            47361,
            47460,
            47295,
            47489,
            47329,
            47846,
            47392,
            47390,
            47217,
            47497,
            47129,
            47592,
            47264,
            47410,
            47025,
            47394,
            47299,
            47454,
            47322,
            47554,
            47225,
            47582,
            47313,
            49008,
            47147,
            47260,
            47139,
            47372,
            47328
          ],
          [
            47947,
            47478,
            47566,
            47928,
            47397,
            47366,
            47038,
            47344,
            47251,
            47419,
            47338,
            47132,
            47229,
            47544,
            47336,
            47662,
            47243,
            47589,
            47438,
            47439,
            47462,
            47881,
            47501,
            47190,
            47267,
            47346,
            47235,
            47385,
            47410,
            47384,
            47346,
            47079,
            47412,
            47485,
            47361,
            47460,
            47295,
            47489,
            47329,
            47846,
            47392,
            47390,
            47217,
            47497,
            47129,
            47592,
            47264,
            47410,
            47025,
            47394,
            47299,
            47454,
            47322,
            47554,
            47225,
            47582,
            47313,
            49008,
            47147,
            47260,
            47139,
            47372,
            47328
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            133,
            1245,
            5141,
            11669,
            23073,
            32247,
            31460,
            25923,
            19106,
            12884,
            6977,
            2279,
            381,
            23,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            185,
            1644,
            5916,
            13711,
            25171,
            33794,
            37350,
            30547,
            21953,
            12753,
            5795,
            1126,
            203,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            1,
            4,
            131,
            1315,
            4145,
            9171,
            21461,
            35835,
            39578,
            35489,
            26162,
            16117,
            9691,
            3612,
            836,
            50,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            13,
            252,
            1493,
            6025,
            14636,
            25953,
            32015,
            35272,
            36298,
            29433,
            18339,
            7586,
            2050,
            179,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            68,
            539,
            2263,
            6066,
            13469,
            26088
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            106,
            1173,
            5578,
            15600,
            30580,
            35379,
            32817,
            24058,
            13631,
            5861,
            1442,
            120,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            136,
            1318,
            6767,
            15265,
            29297,
            35478,
            33420,
            25028,
            13784,
            3981,
            498,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            22,
            376,
            2059,
            8164,
            20384,
            34386,
            37692,
            34457,
            26431,
            16371,
            7362,
            1847,
            207,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            24,
            554,
            2979,
            7933,
            16606,
            27287,
            36123,
            34654,
            25936,
            16516,
            6886,
            2129,
            263,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            24,
            174,
            982,
            3566,
            7770,
            17908,
            33098,
            39214,
            36910,
            31415,
            22777,
            14303,
            8254,
            3341,
            641,
            62,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            100,
            1179,
            4731,
            12254,
            24618,
            32471,
            35157,
            37866,
            33468,
            24983,
            15682,
            8298,
            2154,
            282,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            87,
            881,
            3103,
            7834
          ]
        ]
      },
      "call": {
        "duration": 0.27279564600030426,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff6dc2bab0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff6dc2bab0> = array([21, 12, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff6dc07580>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47947, 47478, 47566, 47928, 47397, 47366, ...], [47947, 47478, 47566, 47928, 47397, 47366, ...], [..., ...], [0, 1, 4, 131, 1315, 4145, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 24, 174, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff6dc2bab0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff6dc2bab0> = array([21, 12, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016254959991783835,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2926693180015718,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1688756069997908,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014330420017358847,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.291811625000264,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            8,
            29,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            0,
            255,
            255,
            255,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            250,
            58,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          4,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034969080006703734,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029028050012129825,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5394836359992041,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            234,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            8,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            90,
            255,
            123,
            255,
            106,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            197,
            0,
            155,
            8,
            255,
            46,
            255,
            10
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            55,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            193,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            235,
            255,
            142,
            255,
            255,
            10,
            0,
            164,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            2,
            255,
            150,
            255,
            122
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034663970000110567,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028880440004286356,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956517740021809,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48280,
            47625,
            47636,
            47513,
            47532,
            47207,
            47474,
            47471,
            47542,
            47562,
            47589,
            47538,
            47536,
            47418,
            47455,
            47606,
            47503,
            47454,
            47513,
            47463,
            47914,
            47725,
            47978,
            47587,
            47516,
            47447,
            47441,
            47562,
            47386,
            47557,
            47447,
            47393,
            47064,
            47104,
            47506,
            47530,
            47558,
            47374,
            47422,
            47548,
            47489,
            47483,
            47534,
            47431,
            47410,
            47445,
            47444,
            47509,
            47601,
            47467,
            47556,
            47506,
            47211,
            47905,
            47600,
            47843,
            47616,
            47816,
            47586,
            47545,
            47453,
            47394,
            47448
          ],
          [
            48280,
            47625,
            47636,
            47513,
            47532,
            47207,
            47474,
            47471,
            47542,
            47562,
            47589,
            47538,
            47536,
            47418,
            47455,
            47606,
            47503,
            47454,
            47513,
            47463,
            47914,
            47725,
            47978,
            47587,
            47516,
            47447,
            47441,
            47562,
            47386,
            47557,
            47447,
            47393,
            47064,
            47104,
            47506,
            47530,
            47558,
            47374,
            47422,
            47548,
            47489,
            47483,
            47534,
            47431,
            47410,
            47445,
            47444,
            47509,
            47601,
            47467,
            47556,
            47506,
            47211,
            47905,
            47600,
            47843,
            47616,
            47816,
            47586,
            47545,
            47453,
            47394,
            47448
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            342,
            3660,
            17430,
            36966,
            37410,
            19616,
            4583,
            524,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            151,
            2666,
            15790,
            34629,
            40401,
            26577,
            8604,
            856,
            101,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            975,
            8123,
            28737,
            41649,
            38833,
            19802,
            4737,
            563,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            171,
            2308,
            13350,
            30903,
            42289,
            38898,
            20933,
            5499,
            622,
            34,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13387332699858234,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016235459988820367,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06875096799922176,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47951,
            47178,
            47366,
            47448,
            47260,
            47179,
            47273,
            47395,
            47344,
            47472,
            47338,
            47275,
            47574,
            47298,
            47707,
            47167,
            47147,
            47325,
            47445,
            47208,
            47272,
            47239,
            47134,
            47214,
            47468,
            47289,
            47319,
            47435,
            47297,
            47224,
            47448,
            47025,
            47417,
            47813,
            49737,
            47223,
            47411,
            47214,
            47337,
            47386,
            47235,
            47321,
            47428,
            47393,
            47263,
            47296,
            47482,
            47400,
            47365,
            47486,
            47178,
            47441,
            48880,
            49174,
            47234,
            47144,
            46972,
            47619,
            47305,
            47301,
            47397,
            47360,
            47364
          ],
          [
            47951,
            47178,
            47366,
            47448,
            47260,
            47179,
            47273,
            47395,
            47344,
            47472,
            47338,
            47275,
            47574,
            47298,
            47707,
            47167,
            47147,
            47325,
            47445,
            47208,
            47272,
            47239,
            47134,
            47214,
            47468,
            47289,
            47319,
            47435,
            47297,
            47224,
            47448,
            47025,
            47417,
            47813,
            49737,
            47223,
            47411,
            47214,
            47337,
            47386,
            47235,
            47321,
            47428,
            47393,
            47263,
            47296,
            47482,
            47400,
            47365,
            47486,
            47178,
            47441,
            48880,
            49174,
            47234,
            47144,
            46972,
            47619,
            47305,
            47301,
            47397,
            47360,
            47364
          ],
          [
            47951,
            47178,
            47366,
            47448,
            47260,
            47179,
            47273,
            47395,
            47344,
            47472,
            47338,
            47275,
            47574,
            47298,
            47707,
            47167,
            47147,
            47325,
            47445,
            47208,
            47272,
            47239,
            47134,
            47214,
            47468,
            47289,
            47319,
            47435,
            47297,
            47224,
            47448,
            47025,
            47417,
            47813,
            49737,
            47223,
            47411,
            47214,
            47337,
            47386,
            47235,
            47321,
            47428,
            47393,
            47263,
            47296,
            47482,
            47400,
            47365,
            47486,
            47178,
            47441,
            48880,
            49174,
            47234,
            47144,
            46972,
            47619,
            47305,
            47301,
            47397,
            47360,
            47364
          ],
          [
            47951,
            47178,
            47366,
            47448,
            47260,
            47179,
            47273,
            47395,
            47344,
            47472,
            47338,
            47275,
            47574,
            47298,
            47707,
            47167,
            47147,
            47325,
            47445,
            47208,
            47272,
            47239,
            47134,
            47214,
            47468,
            47289,
            47319,
            47435,
            47297,
            47224,
            47448,
            47025,
            47417,
            47813,
            49737,
            47223,
            47411,
            47214,
            47337,
            47386,
            47235,
            47321,
            47428,
            47393,
            47263,
            47296,
            47482,
            47400,
            47365,
            47486,
            47178,
            47441,
            48880,
            49174,
            47234,
            47144,
            46972,
            47619,
            47305,
            47301,
            47397,
            47360,
            47364
          ],
          [
            47951,
            47178,
            47366,
            47448,
            47260,
            47179,
            47273,
            47395,
            47344,
            47472,
            47338,
            47275,
            47574,
            47298,
            47707,
            47167,
            47147,
            47325,
            47445,
            47208,
            47272,
            47239,
            47134,
            47214,
            47468,
            47289,
            47319,
            47435,
            47297,
            47224,
            47448,
            47025,
            47417,
            47813,
            49737,
            47223,
            47411,
            47214,
            47337,
            47386,
            47235,
            47321,
            47428,
            47393,
            47263,
            47296,
            47482,
            47400,
            47365,
            47486,
            47178,
            47441,
            48880,
            49174,
            47234,
            47144,
            46972,
            47619,
            47305,
            47301,
            47397,
            47360,
            47364
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            609,
            3261,
            12723,
            25567,
            34227,
            35092,
            24770,
            11908,
            2587,
            264,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27,
            718,
            3683,
            13545,
            26981,
            34895,
            37686,
            30229,
            18373,
            7567,
            1518,
            173,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14
          ],
          [
            0,
            9,
            180,
            1568,
            6625,
            18293,
            32298,
            39253,
            34123,
            18787,
            6742,
            929,
            45,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            154,
            1812,
            9689,
            24180,
            36443,
            44301,
            40586,
            30561,
            16998,
            4379,
            476,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            360,
            2096,
            7169,
            18537,
            32682,
            37731
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            451,
            3635,
            15570,
            30794,
            36525,
            32069,
            18754,
            6170,
            1163,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            937,
            7808,
            21539,
            37028,
            42062,
            35526,
            22755,
            10161,
            1814,
            145,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            117,
            1086,
            6489,
            19531,
            34943,
            38936,
            34022,
            20515,
            8063,
            1353,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            11,
            244,
            2652,
            12097,
            24348,
            33852,
            38987,
            35745,
            26056,
            11847,
            3216,
            284,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            223,
            2174,
            8674,
            21494,
            33124,
            39237,
            35778,
            24554,
            12255,
            3067,
            502,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            48,
            494,
            4140,
            14180,
            28023,
            35930,
            40660,
            38014,
            27889,
            13438,
            4036,
            469,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            69,
            801,
            5576,
            16748,
            31420
          ]
        ]
      },
      "call": {
        "duration": 0.2703100610015099,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014916929976607207,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29159589399932884,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1687139330024365,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001471202998800436,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.374676676998206,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            98,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            61,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003549199002009118,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029164549996494316,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5356408799998462,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            10,
            255,
            15,
            255,
            4,
            72,
            0,
            255,
            1,
            255,
            255
          ],
          [
            65,
            0,
            14,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            48,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            254,
            255,
            0,
            14,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            25,
            0,
            1,
            0,
            18,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            8,
            255,
            53,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            1,
            255,
            1,
            9,
            1,
            255,
            9,
            255,
            255
          ],
          [
            89,
            0,
            9,
            0,
            9,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            91,
            255,
            2,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            4,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            88,
            0,
            12,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            85,
            255,
            54,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.00347926700123935,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029029249999439344,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29612302500027,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47792,
            47828,
            47623,
            47485,
            47465,
            47483,
            47500,
            47582,
            49647,
            47604,
            47964,
            47551,
            50566,
            47756,
            47681,
            47599,
            47452,
            47546,
            47439,
            47564,
            47390,
            47541,
            47390,
            47510,
            47687,
            47562,
            47534,
            47620,
            47535,
            47609,
            47672,
            47582,
            47471,
            47661,
            47602,
            47501,
            47651,
            47568,
            47569,
            47469,
            47556,
            47922,
            47346,
            53629,
            47536,
            47550,
            47622,
            47501,
            47626,
            47767,
            47575,
            47536,
            47515,
            47451,
            47583,
            47422,
            47382,
            47447,
            47368,
            47444,
            47470,
            47497,
            47393
          ],
          [
            47792,
            47828,
            47623,
            47485,
            47465,
            47483,
            47500,
            47582,
            49647,
            47604,
            47964,
            47551,
            50566,
            47756,
            47681,
            47599,
            47452,
            47546,
            47439,
            47564,
            47390,
            47541,
            47390,
            47510,
            47687,
            47562,
            47534,
            47620,
            47535,
            47609,
            47672,
            47582,
            47471,
            47661,
            47602,
            47501,
            47651,
            47568,
            47569,
            47469,
            47556,
            47922,
            47346,
            53629,
            47536,
            47550,
            47622,
            47501,
            47626,
            47767,
            47575,
            47536,
            47515,
            47451,
            47583,
            47422,
            47382,
            47447,
            47368,
            47444,
            47470,
            47497,
            47393
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            475,
            6761,
            24164,
            42031,
            34941,
            15569,
            2845,
            378,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            584,
            6110,
            21953,
            37621,
            38686,
            21989,
            5442,
            736,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            0,
            0,
            0,
            1,
            102,
            2097,
            13974,
            32476,
            43161,
            29572,
            10163,
            1726,
            110,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            569,
            5818,
            21899,
            38443,
            41943,
            30670,
            11835,
            2045,
            184,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            33,
            742,
            7613,
            25456,
            40123,
            43550
          ]
        ]
      },
      "call": {
        "duration": 0.134144022998953,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016419370003859513,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06905004500003997,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47930,
            47438,
            47574,
            47284,
            47326,
            47380,
            47378,
            47349,
            49534,
            49100,
            47248,
            47205,
            47349,
            47194,
            47243,
            47289,
            47344,
            47212,
            47103,
            47286,
            47084,
            47397,
            47407,
            47321,
            47356,
            47527,
            47313,
            47765,
            49608,
            47404,
            47164,
            47328,
            47157,
            47305,
            47267,
            47198,
            47300,
            47214,
            47081,
            47243,
            47236,
            47347,
            47353,
            47274,
            47353,
            47062,
            47764,
            49481,
            47155,
            47170,
            47087,
            47163,
            47222,
            47238,
            47137,
            47290,
            47281,
            47199,
            47471,
            47269,
            47459,
            47418,
            47510
          ],
          [
            47930,
            47438,
            47574,
            47284,
            47326,
            47380,
            47378,
            47349,
            49534,
            49100,
            47248,
            47205,
            47349,
            47194,
            47243,
            47289,
            47344,
            47212,
            47103,
            47286,
            47084,
            47397,
            47407,
            47321,
            47356,
            47527,
            47313,
            47765,
            49608,
            47404,
            47164,
            47328,
            47157,
            47305,
            47267,
            47198,
            47300,
            47214,
            47081,
            47243,
            47236,
            47347,
            47353,
            47274,
            47353,
            47062,
            47764,
            49481,
            47155,
            47170,
            47087,
            47163,
            47222,
            47238,
            47137,
            47290,
            47281,
            47199,
            47471,
            47269,
            47459,
            47418,
            47510
          ],
          [
            47930,
            47438,
            47574,
            47284,
            47326,
            47380,
            47378,
            47349,
            49534,
            49100,
            47248,
            47205,
            47349,
            47194,
            47243,
            47289,
            47344,
            47212,
            47103,
            47286,
            47084,
            47397,
            47407,
            47321,
            47356,
            47527,
            47313,
            47765,
            49608,
            47404,
            47164,
            47328,
            47157,
            47305,
            47267,
            47198,
            47300,
            47214,
            47081,
            47243,
            47236,
            47347,
            47353,
            47274,
            47353,
            47062,
            47764,
            49481,
            47155,
            47170,
            47087,
            47163,
            47222,
            47238,
            47137,
            47290,
            47281,
            47199,
            47471,
            47269,
            47459,
            47418,
            47510
          ],
          [
            47930,
            47438,
            47574,
            47284,
            47326,
            47380,
            47378,
            47349,
            49534,
            49100,
            47248,
            47205,
            47349,
            47194,
            47243,
            47289,
            47344,
            47212,
            47103,
            47286,
            47084,
            47397,
            47407,
            47321,
            47356,
            47527,
            47313,
            47765,
            49608,
            47404,
            47164,
            47328,
            47157,
            47305,
            47267,
            47198,
            47300,
            47214,
            47081,
            47243,
            47236,
            47347,
            47353,
            47274,
            47353,
            47062,
            47764,
            49481,
            47155,
            47170,
            47087,
            47163,
            47222,
            47238,
            47137,
            47290,
            47281,
            47199,
            47471,
            47269,
            47459,
            47418,
            47510
          ],
          [
            47930,
            47438,
            47574,
            47284,
            47326,
            47380,
            47378,
            47349,
            49534,
            49100,
            47248,
            47205,
            47349,
            47194,
            47243,
            47289,
            47344,
            47212,
            47103,
            47286,
            47084,
            47397,
            47407,
            47321,
            47356,
            47527,
            47313,
            47765,
            49608,
            47404,
            47164,
            47328,
            47157,
            47305,
            47267,
            47198,
            47300,
            47214,
            47081,
            47243,
            47236,
            47347,
            47353,
            47274,
            47353,
            47062,
            47764,
            49481,
            47155,
            47170,
            47087,
            47163,
            47222,
            47238,
            47137,
            47290,
            47281,
            47199,
            47471,
            47269,
            47459,
            47418,
            47510
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            100,
            1093,
            6684,
            18629,
            29434,
            33721,
            32685,
            24123,
            14758,
            6644,
            1464,
            174,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            35,
            447,
            3273,
            10960,
            21874,
            32797,
            35385,
            30842,
            19950,
            10206,
            4383,
            718,
            76,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            66,
            744,
            4904,
            15182,
            26077,
            33711,
            38411,
            36857,
            27026,
            13152,
            4159,
            602,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            165,
            1337,
            5232,
            14813,
            27439,
            35362,
            34595,
            25867,
            12865,
            3994,
            749,
            85,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            13757,
            5013,
            869,
            42,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            175,
            2512,
            11258,
            23436,
            34560,
            39692,
            32625,
            19666,
            8834,
            1661,
            102,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            461,
            4238,
            14490,
            28090,
            37817,
            35881,
            22910,
            9465,
            2014,
            239,
            11,
            0,
            0,
            0,
            0
          ],
          [
            91,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            79,
            1073,
            7095,
            19546,
            30503,
            38808,
            39531,
            33830,
            24476,
            12555,
            3870,
            461,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            59,
            529,
            3233,
            12756,
            25109,
            35512,
            33623,
            22819,
            11115,
            3891,
            785,
            74,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            121,
            1224,
            6029,
            17610,
            28492,
            36532,
            39254,
            34943,
            23632,
            13051,
            3630,
            551,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            13,
            177,
            1497,
            6592,
            17956,
            30171,
            38558,
            39969,
            32706,
            22537,
            13692,
            5865,
            1639,
            163,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2704543639993062,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015040539983601775,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2918528199988941,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169301407000603,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004794075997779146,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}