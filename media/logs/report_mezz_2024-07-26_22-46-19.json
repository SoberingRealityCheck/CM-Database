{
  "created": 1722033998.8858292,
  "duration": 23.510892152786255,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5083244209999975,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14821404999747756,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00134865000291029,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038189049992070068,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479315940014203,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001305568999669049,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1326873229991179,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12168667700098013,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013217099985922687,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003808375000517117,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1212276070000371,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012954890007677022,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351464998559095,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467592879998847,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00121382699944661,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033677550018182956,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11987286700241384,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011818760031019337,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033672760000627022,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14635898799679126,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012202469988551456,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003369195997947827,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12010990300041158,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012064469992765225,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004426389001309872,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021057769990875386,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011731759987014811,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033363149996148422,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017055979988072067,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00111080499846139,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033338250032102223,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004077450998011045,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033981.1875224,
            "msecs": 187.52241134643555,
            "relativeCreated": 7785.346508026123,
            "thread": 281473642176544,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5459
          }
        ]
      },
      "teardown": {
        "duration": 0.0012269670005480293,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033567149985174183,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002395193001575535,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033981.1998568,
            "msecs": 199.85675811767578,
            "relativeCreated": 7797.680854797363,
            "thread": 281473642176544,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5459
          }
        ]
      },
      "teardown": {
        "duration": 0.001183887001388939,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021092870010761544,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027115509983559605,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033981.2093856,
            "msecs": 209.38563346862793,
            "relativeCreated": 7807.209730148315,
            "thread": 281473642176544,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5459
          }
        ]
      },
      "teardown": {
        "duration": 0.0010484039994480554,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021029570016253274,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003432076999160927,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033981.2188866,
            "msecs": 218.8866138458252,
            "relativeCreated": 7816.710710525513,
            "thread": 281473642176544,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5459
          }
        ]
      },
      "teardown": {
        "duration": 0.0011305749976600055,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033616949986026157,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1466086840009666,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011835269979201257,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003374415999132907,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12033667799914838,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012263969983905554,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.1804956999985734,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1479529829994135,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012698079990514088,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015195428997685667,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12120873700041557,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.00126491799892392,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8301533989979362,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            18,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            91,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            25,
            128,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.003616730999056017,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029362859968387056,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8997683620000316,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            4,
            0,
            1,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            2,
            255,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            254,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            158,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            30,
            255,
            255,
            255,
            13
          ],
          [
            1,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            38,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            69,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            217,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            168,
            255,
            255,
            255,
            255,
            0,
            0,
            116,
            0,
            88,
            255
          ],
          [
            255,
            0,
            139,
            0,
            255,
            0,
            255,
            62,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003509927999402862,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029473860013240483,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3023569819997647,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48174,
            47562,
            47207,
            47351,
            47171,
            47386,
            47453,
            47325,
            47184,
            47315,
            47272,
            47353,
            47417,
            47454,
            47286,
            47393,
            47407,
            47408,
            47541,
            47532,
            47265,
            47293,
            47246,
            47335,
            47501,
            47404,
            46973,
            47067,
            47312,
            47354,
            47393,
            47774,
            47417,
            47699,
            47406,
            50101,
            47607,
            47479,
            47391,
            47307,
            47255,
            47272,
            47494,
            47286,
            47283,
            47309,
            47386,
            47295,
            47486,
            47229,
            47318,
            47238,
            47475,
            47405,
            47420,
            47332,
            47402,
            47270,
            47359,
            47492,
            47468,
            47384,
            47577
          ],
          [
            48174,
            47562,
            47207,
            47351,
            47171,
            47386,
            47453,
            47325,
            47184,
            47315,
            47272,
            47353,
            47417,
            47454,
            47286,
            47393,
            47407,
            47408,
            47541,
            47532,
            47265,
            47293,
            47246,
            47335,
            47501,
            47404,
            46973,
            47067,
            47312,
            47354,
            47393,
            47774,
            47417,
            47699,
            47406,
            50101,
            47607,
            47479,
            47391,
            47307,
            47255,
            47272,
            47494,
            47286,
            47283,
            47309,
            47386,
            47295,
            47486,
            47229,
            47318,
            47238,
            47475,
            47405,
            47420,
            47332,
            47402,
            47270,
            47359,
            47492,
            47468,
            47384,
            47577
          ]
        ],
        "eTX_errcounts": [
          [
            40765,
            27109,
            8542,
            1130,
            79,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            220,
            3329,
            16522,
            34390,
            42162,
            31088,
            13718,
            2114,
            145,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            42,
            728,
            7409,
            25772,
            40776,
            37883,
            19731,
            5317,
            666,
            20,
            0,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            299,
            4107,
            17106,
            35762,
            42071,
            31769,
            13614,
            3113,
            323,
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            334,
            4080,
            18781,
            36502,
            42861,
            35269,
            16962,
            3449,
            376,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13323498499812558,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016572669992456213,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06901168100012,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47735,
            47140,
            47154,
            47174,
            47155,
            56398,
            48308,
            47057,
            46820,
            46758,
            46936,
            46904,
            47023,
            47099,
            47180,
            47236,
            47314,
            47261,
            47329,
            47237,
            47324,
            47183,
            47210,
            47522,
            47289,
            47141,
            47110,
            47221,
            47003,
            47067,
            47338,
            47199,
            47204,
            46977,
            47232,
            47310,
            47243,
            47044,
            47170,
            47192,
            47318,
            47262,
            47260,
            49039,
            47527,
            47185,
            47100,
            47265,
            47121,
            46910,
            47061,
            47014,
            47171,
            47281,
            47138,
            47141,
            47226,
            47165,
            47186,
            47237,
            47152,
            47191,
            46907
          ],
          [
            47735,
            47140,
            47154,
            47174,
            47155,
            56398,
            48308,
            47057,
            46820,
            46758,
            46936,
            46904,
            47023,
            47099,
            47180,
            47236,
            47314,
            47261,
            47329,
            47237,
            47324,
            47183,
            47210,
            47522,
            47289,
            47141,
            47110,
            47221,
            47003,
            47067,
            47338,
            47199,
            47204,
            46977,
            47232,
            47310,
            47243,
            47044,
            47170,
            47192,
            47318,
            47262,
            47260,
            49039,
            47527,
            47185,
            47100,
            47265,
            47121,
            46910,
            47061,
            47014,
            47171,
            47281,
            47138,
            47141,
            47226,
            47165,
            47186,
            47237,
            47152,
            47191,
            46907
          ],
          [
            47735,
            47140,
            47154,
            47174,
            47155,
            56398,
            48308,
            47057,
            46820,
            46758,
            46936,
            46904,
            47023,
            47099,
            47180,
            47236,
            47314,
            47261,
            47329,
            47237,
            47324,
            47183,
            47210,
            47522,
            47289,
            47141,
            47110,
            47221,
            47003,
            47067,
            47338,
            47199,
            47204,
            46977,
            47232,
            47310,
            47243,
            47044,
            47170,
            47192,
            47318,
            47262,
            47260,
            49039,
            47527,
            47185,
            47100,
            47265,
            47121,
            46910,
            47061,
            47014,
            47171,
            47281,
            47138,
            47141,
            47226,
            47165,
            47186,
            47237,
            47152,
            47191,
            46907
          ],
          [
            47735,
            47140,
            47154,
            47174,
            47155,
            56398,
            48308,
            47057,
            46820,
            46758,
            46936,
            46904,
            47023,
            47099,
            47180,
            47236,
            47314,
            47261,
            47329,
            47237,
            47324,
            47183,
            47210,
            47522,
            47289,
            47141,
            47110,
            47221,
            47003,
            47067,
            47338,
            47199,
            47204,
            46977,
            47232,
            47310,
            47243,
            47044,
            47170,
            47192,
            47318,
            47262,
            47260,
            49039,
            47527,
            47185,
            47100,
            47265,
            47121,
            46910,
            47061,
            47014,
            47171,
            47281,
            47138,
            47141,
            47226,
            47165,
            47186,
            47237,
            47152,
            47191,
            46907
          ],
          [
            47735,
            47140,
            47154,
            47174,
            47155,
            56398,
            48308,
            47057,
            46820,
            46758,
            46936,
            46904,
            47023,
            47099,
            47180,
            47236,
            47314,
            47261,
            47329,
            47237,
            47324,
            47183,
            47210,
            47522,
            47289,
            47141,
            47110,
            47221,
            47003,
            47067,
            47338,
            47199,
            47204,
            46977,
            47232,
            47310,
            47243,
            47044,
            47170,
            47192,
            47318,
            47262,
            47260,
            49039,
            47527,
            47185,
            47100,
            47265,
            47121,
            46910,
            47061,
            47014,
            47171,
            47281,
            47138,
            47141,
            47226,
            47165,
            47186,
            47237,
            47152,
            47191,
            46907
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            31,
            579,
            3889,
            14006,
            27195,
            35507,
            35719,
            28403,
            18681,
            9909,
            3273,
            462,
            51,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            17,
            656,
            4417,
            14457,
            27971,
            34802,
            38019,
            30212,
            21903,
            12508,
            4306,
            821,
            104,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            6,
            258,
            2438,
            10787,
            23777,
            33194,
            38066,
            33915,
            23235,
            13097,
            4635,
            1071,
            96,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            12,
            431,
            3773,
            12854,
            25253,
            34676,
            39468,
            36026,
            25794,
            19025,
            9621,
            2511,
            205,
            19,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            780,
            4230,
            13951,
            25076
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            82,
            1349,
            6697,
            19691,
            30894,
            33309,
            30381,
            22514,
            11005,
            3241,
            576,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            79,
            1375,
            9753,
            20985,
            32772,
            35428,
            31190,
            24356,
            16222,
            6742,
            1303,
            92,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            118,
            1439,
            8744,
            22171,
            31184,
            34070,
            31819,
            22869,
            14056,
            5383,
            1333,
            78,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            101,
            1659,
            8421,
            21620,
            31656,
            34106,
            31010,
            24947,
            17409,
            8558,
            3014,
            332,
            11,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            12,
            293,
            2843,
            10375,
            21099,
            31326,
            39040,
            39596,
            30163,
            21341,
            10814,
            3290,
            403,
            28,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            22,
            449,
            3672,
            11646,
            23841,
            33418,
            40329,
            37132,
            28323,
            20372,
            11825,
            5167,
            1906,
            554,
            81,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            172,
            1446,
            7268
          ]
        ]
      },
      "call": {
        "duration": 0.27213604799908353,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9bb39870>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9bb39870> = array([21, 14, 18, 20, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9bb07400>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47735, 47140, 47154, 47174, 47155, 56398, ...], [47735, 47140, 47154, 47174, 47155, 56398, ...], [... 0, 0, ...], [0, 0, 0, 6, 258, 2438, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 12, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9bb39870>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9bb39870> = array([21, 14, 18, 20, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016434370008937549,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29283764899810194,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169017296000675,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001467392998165451,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.291580831999454,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            18,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            37,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            64,
            8,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035149690011166967,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002898935003031511,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.536603593001928,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            221,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            137,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            69,
            255,
            98,
            255,
            129,
            0,
            0,
            189,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            241,
            0,
            73,
            4,
            255,
            18,
            255,
            8
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            65,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            121,
            255,
            144,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            238,
            255,
            161,
            255,
            255,
            0,
            0,
            100,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            80,
            255,
            121
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034726070007309318,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029048150026937947,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29551775899744825,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47839,
            47280,
            47314,
            47433,
            47410,
            47401,
            47311,
            47298,
            47317,
            47460,
            47454,
            49185,
            47079,
            47545,
            47382,
            49406,
            47460,
            47457,
            47336,
            47269,
            47288,
            47320,
            47383,
            47338,
            47533,
            47068,
            47031,
            47431,
            47458,
            47440,
            47407,
            47395,
            47469,
            47288,
            47384,
            47336,
            47463,
            47290,
            47277,
            47419,
            47390,
            47291,
            47343,
            47513,
            47385,
            47362,
            47504,
            47404,
            47796,
            47250,
            47755,
            47438,
            49445,
            47332,
            47497,
            47337,
            47199,
            47361,
            47228,
            47311,
            47313,
            47309,
            46988
          ],
          [
            47839,
            47280,
            47314,
            47433,
            47410,
            47401,
            47311,
            47298,
            47317,
            47460,
            47454,
            49185,
            47079,
            47545,
            47382,
            49406,
            47460,
            47457,
            47336,
            47269,
            47288,
            47320,
            47383,
            47338,
            47533,
            47068,
            47031,
            47431,
            47458,
            47440,
            47407,
            47395,
            47469,
            47288,
            47384,
            47336,
            47463,
            47290,
            47277,
            47419,
            47390,
            47291,
            47343,
            47513,
            47385,
            47362,
            47504,
            47404,
            47796,
            47250,
            47755,
            47438,
            49445,
            47332,
            47497,
            47337,
            47199,
            47361,
            47228,
            47311,
            47313,
            47309,
            46988
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            299,
            3846,
            18207,
            36469,
            36874,
            18490,
            4152,
            300,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            171,
            2580,
            16301,
            34790,
            40932,
            25402,
            8425,
            1002,
            55,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            893,
            8544,
            29727,
            41877,
            38595,
            18652,
            4488,
            421,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            131,
            2474,
            13245,
            30686,
            42343,
            38696,
            20488,
            5234,
            627,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13346364999961224,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016283459990518168,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06867645399688627,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47922,
            47177,
            47321,
            49041,
            48946,
            46867,
            47223,
            47289,
            47176,
            47118,
            47343,
            47173,
            47079,
            47132,
            47118,
            47120,
            47243,
            47155,
            47366,
            47423,
            47203,
            47233,
            47377,
            49149,
            48950,
            47131,
            47181,
            47217,
            47218,
            47128,
            46920,
            47349,
            47177,
            47112,
            47332,
            47080,
            47129,
            47249,
            47097,
            47328,
            47330,
            47170,
            47199,
            47369,
            47548,
            47157,
            47276,
            46997,
            47251,
            47184,
            47122,
            46996,
            47233,
            47237,
            47132,
            46844,
            47150,
            47163,
            47366,
            47153,
            47205,
            47288,
            47231
          ],
          [
            47922,
            47177,
            47321,
            49041,
            48946,
            46867,
            47223,
            47289,
            47176,
            47118,
            47343,
            47173,
            47079,
            47132,
            47118,
            47120,
            47243,
            47155,
            47366,
            47423,
            47203,
            47233,
            47377,
            49149,
            48950,
            47131,
            47181,
            47217,
            47218,
            47128,
            46920,
            47349,
            47177,
            47112,
            47332,
            47080,
            47129,
            47249,
            47097,
            47328,
            47330,
            47170,
            47199,
            47369,
            47548,
            47157,
            47276,
            46997,
            47251,
            47184,
            47122,
            46996,
            47233,
            47237,
            47132,
            46844,
            47150,
            47163,
            47366,
            47153,
            47205,
            47288,
            47231
          ],
          [
            47922,
            47177,
            47321,
            49041,
            48946,
            46867,
            47223,
            47289,
            47176,
            47118,
            47343,
            47173,
            47079,
            47132,
            47118,
            47120,
            47243,
            47155,
            47366,
            47423,
            47203,
            47233,
            47377,
            49149,
            48950,
            47131,
            47181,
            47217,
            47218,
            47128,
            46920,
            47349,
            47177,
            47112,
            47332,
            47080,
            47129,
            47249,
            47097,
            47328,
            47330,
            47170,
            47199,
            47369,
            47548,
            47157,
            47276,
            46997,
            47251,
            47184,
            47122,
            46996,
            47233,
            47237,
            47132,
            46844,
            47150,
            47163,
            47366,
            47153,
            47205,
            47288,
            47231
          ],
          [
            47922,
            47177,
            47321,
            49041,
            48946,
            46867,
            47223,
            47289,
            47176,
            47118,
            47343,
            47173,
            47079,
            47132,
            47118,
            47120,
            47243,
            47155,
            47366,
            47423,
            47203,
            47233,
            47377,
            49149,
            48950,
            47131,
            47181,
            47217,
            47218,
            47128,
            46920,
            47349,
            47177,
            47112,
            47332,
            47080,
            47129,
            47249,
            47097,
            47328,
            47330,
            47170,
            47199,
            47369,
            47548,
            47157,
            47276,
            46997,
            47251,
            47184,
            47122,
            46996,
            47233,
            47237,
            47132,
            46844,
            47150,
            47163,
            47366,
            47153,
            47205,
            47288,
            47231
          ],
          [
            47922,
            47177,
            47321,
            49041,
            48946,
            46867,
            47223,
            47289,
            47176,
            47118,
            47343,
            47173,
            47079,
            47132,
            47118,
            47120,
            47243,
            47155,
            47366,
            47423,
            47203,
            47233,
            47377,
            49149,
            48950,
            47131,
            47181,
            47217,
            47218,
            47128,
            46920,
            47349,
            47177,
            47112,
            47332,
            47080,
            47129,
            47249,
            47097,
            47328,
            47330,
            47170,
            47199,
            47369,
            47548,
            47157,
            47276,
            46997,
            47251,
            47184,
            47122,
            46996,
            47233,
            47237,
            47132,
            46844,
            47150,
            47163,
            47366,
            47153,
            47205,
            47288,
            47231
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            354,
            2973,
            11774,
            23078,
            34931,
            37197,
            25796,
            11676,
            2308,
            254,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            81,
            1071,
            3716,
            10978,
            24893,
            38615,
            39825,
            27370,
            12866,
            3223,
            648,
            60,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            0,
            27,
            702,
            5476,
            14468,
            29255,
            38556,
            36438,
            19134,
            5639,
            789,
            44,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            299,
            2025,
            6994,
            19293,
            34018,
            43113,
            40216,
            27148,
            12882,
            2982,
            324,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            125,
            1782,
            8447,
            20363,
            35107,
            41759
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            47,
            651,
            4580,
            14019,
            27389,
            37155,
            31895,
            16499,
            4030,
            352,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            603,
            5326,
            16892,
            35912,
            41418,
            34336,
            18738,
            5751,
            714,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            75,
            1116,
            6093,
            16032,
            31162,
            38942,
            32656,
            17357,
            5191,
            389,
            26,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            152,
            1772,
            6584,
            18116,
            34214,
            42280,
            36019,
            22621,
            7894,
            1503,
            91,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            213,
            1991,
            8434,
            18920,
            31454,
            41100,
            39742,
            26365,
            10845,
            1585,
            140,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            93,
            690,
            3557,
            10638,
            23433,
            35094,
            42439,
            39137,
            25329,
            10089,
            2557,
            401,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            143,
            1495,
            8940,
            20074,
            33482
          ]
        ]
      },
      "call": {
        "duration": 0.26973611299763434,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015066039995872416,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29150762999779545,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168696558997908,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014641829984611832,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3813277759982157,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            98,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            42,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035603600008471403,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029364360016188584,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5329694920001202,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            11,
            255,
            3,
            36,
            0,
            255,
            0,
            255,
            255
          ],
          [
            112,
            0,
            13,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            22,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            11,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            1,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            5,
            255,
            18,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            1,
            0,
            255,
            0,
            255,
            255
          ],
          [
            69,
            0,
            15,
            0,
            15,
            0,
            255,
            190,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            106,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            83,
            0,
            2,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            85,
            255,
            28,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035036279987252783,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029266260025906377,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29605174099924625,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47982,
            47592,
            47461,
            47385,
            47256,
            47591,
            47361,
            47437,
            47377,
            47304,
            47379,
            47455,
            47374,
            47352,
            47300,
            47367,
            47408,
            47366,
            47380,
            49113,
            47123,
            47293,
            47351,
            49009,
            47278,
            47488,
            47176,
            47180,
            47400,
            47298,
            47379,
            47402,
            47482,
            47403,
            47421,
            47133,
            47353,
            60563,
            47363,
            47234,
            47481,
            47366,
            47302,
            47343,
            47366,
            47343,
            47463,
            47285,
            47328,
            47288,
            47414,
            47352,
            47432,
            47390,
            47502,
            47398,
            47821,
            47397,
            47806,
            47634,
            47473,
            47627,
            47518
          ],
          [
            47982,
            47592,
            47461,
            47385,
            47256,
            47591,
            47361,
            47437,
            47377,
            47304,
            47379,
            47455,
            47374,
            47352,
            47300,
            47367,
            47408,
            47366,
            47380,
            49113,
            47123,
            47293,
            47351,
            49009,
            47278,
            47488,
            47176,
            47180,
            47400,
            47298,
            47379,
            47402,
            47482,
            47403,
            47421,
            47133,
            47353,
            60563,
            47363,
            47234,
            47481,
            47366,
            47302,
            47343,
            47366,
            47343,
            47463,
            47285,
            47328,
            47288,
            47414,
            47352,
            47432,
            47390,
            47502,
            47398,
            47821,
            47397,
            47806,
            47634,
            47473,
            47627,
            47518
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            576,
            5632,
            24443,
            39030,
            34127,
            14839,
            3181,
            237,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            561,
            8089,
            22147,
            37704,
            38208,
            21553,
            5452,
            564,
            34,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            140,
            1837,
            13852,
            32437,
            41215,
            29485,
            9394,
            1957,
            146,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            589,
            5972,
            21884,
            38625,
            41194,
            30823,
            15708,
            2029,
            348,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            44,
            755,
            7775,
            25225,
            40699,
            43802
          ]
        ]
      },
      "call": {
        "duration": 0.1337534570011485,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001615565997781232,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06890895900141913,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47793,
            47266,
            47187,
            47144,
            47551,
            47213,
            47401,
            47141,
            47098,
            46949,
            47175,
            47142,
            47301,
            47152,
            47044,
            47257,
            47081,
            47221,
            47236,
            47176,
            47397,
            47316,
            47369,
            47232,
            47794,
            47652,
            47302,
            47035,
            47268,
            47209,
            47366,
            47257,
            47175,
            47169,
            46866,
            47180,
            47225,
            47083,
            47221,
            47297,
            47284,
            47167,
            47384,
            47198,
            47636,
            47493,
            46964,
            47076,
            47043,
            47030,
            47201,
            47177,
            47227,
            47220,
            46761,
            47247,
            47221,
            47260,
            47184,
            46975,
            47222,
            47256,
            49043
          ],
          [
            47793,
            47266,
            47187,
            47144,
            47551,
            47213,
            47401,
            47141,
            47098,
            46949,
            47175,
            47142,
            47301,
            47152,
            47044,
            47257,
            47081,
            47221,
            47236,
            47176,
            47397,
            47316,
            47369,
            47232,
            47794,
            47652,
            47302,
            47035,
            47268,
            47209,
            47366,
            47257,
            47175,
            47169,
            46866,
            47180,
            47225,
            47083,
            47221,
            47297,
            47284,
            47167,
            47384,
            47198,
            47636,
            47493,
            46964,
            47076,
            47043,
            47030,
            47201,
            47177,
            47227,
            47220,
            46761,
            47247,
            47221,
            47260,
            47184,
            46975,
            47222,
            47256,
            49043
          ],
          [
            47793,
            47266,
            47187,
            47144,
            47551,
            47213,
            47401,
            47141,
            47098,
            46949,
            47175,
            47142,
            47301,
            47152,
            47044,
            47257,
            47081,
            47221,
            47236,
            47176,
            47397,
            47316,
            47369,
            47232,
            47794,
            47652,
            47302,
            47035,
            47268,
            47209,
            47366,
            47257,
            47175,
            47169,
            46866,
            47180,
            47225,
            47083,
            47221,
            47297,
            47284,
            47167,
            47384,
            47198,
            47636,
            47493,
            46964,
            47076,
            47043,
            47030,
            47201,
            47177,
            47227,
            47220,
            46761,
            47247,
            47221,
            47260,
            47184,
            46975,
            47222,
            47256,
            49043
          ],
          [
            47793,
            47266,
            47187,
            47144,
            47551,
            47213,
            47401,
            47141,
            47098,
            46949,
            47175,
            47142,
            47301,
            47152,
            47044,
            47257,
            47081,
            47221,
            47236,
            47176,
            47397,
            47316,
            47369,
            47232,
            47794,
            47652,
            47302,
            47035,
            47268,
            47209,
            47366,
            47257,
            47175,
            47169,
            46866,
            47180,
            47225,
            47083,
            47221,
            47297,
            47284,
            47167,
            47384,
            47198,
            47636,
            47493,
            46964,
            47076,
            47043,
            47030,
            47201,
            47177,
            47227,
            47220,
            46761,
            47247,
            47221,
            47260,
            47184,
            46975,
            47222,
            47256,
            49043
          ],
          [
            47793,
            47266,
            47187,
            47144,
            47551,
            47213,
            47401,
            47141,
            47098,
            46949,
            47175,
            47142,
            47301,
            47152,
            47044,
            47257,
            47081,
            47221,
            47236,
            47176,
            47397,
            47316,
            47369,
            47232,
            47794,
            47652,
            47302,
            47035,
            47268,
            47209,
            47366,
            47257,
            47175,
            47169,
            46866,
            47180,
            47225,
            47083,
            47221,
            47297,
            47284,
            47167,
            47384,
            47198,
            47636,
            47493,
            46964,
            47076,
            47043,
            47030,
            47201,
            47177,
            47227,
            47220,
            46761,
            47247,
            47221,
            47260,
            47184,
            46975,
            47222,
            47256,
            49043
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            337,
            2119,
            6966,
            16093,
            28174,
            37330,
            34272,
            21453,
            8390,
            2337,
            374,
            56,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            569,
            4883,
            14857,
            25287,
            35366,
            39297,
            33690,
            19990,
            7929,
            1647,
            115,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            327,
            1852,
            5313,
            11271,
            21900,
            34057,
            41013,
            35530,
            22384,
            8501,
            1969,
            138,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            117,
            1414,
            6832,
            16777,
            29314,
            40365,
            40534,
            29437,
            12007,
            2283,
            210,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22
          ],
          [
            12062,
            2826,
            296,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            167,
            1574,
            7803,
            18897,
            32553,
            38772,
            30121,
            15499,
            4614,
            500,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            1,
            130,
            1615,
            8687,
            18349,
            28340,
            38068,
            34277,
            20853,
            7474,
            1207,
            95,
            0,
            0,
            0,
            0,
            0
          ],
          [
            11,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            87,
            1028,
            5063,
            13717,
            26449,
            39508,
            42279,
            34052,
            21463,
            7975,
            1837,
            186,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            176,
            1408,
            7030,
            17302,
            27715,
            37504,
            35353,
            23305,
            8620,
            1886,
            174,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            270,
            2253,
            6642,
            15696,
            25055,
            36084,
            40287,
            35321,
            21223,
            9155,
            2269,
            392,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            296,
            3401,
            10799,
            20724,
            31289,
            40462,
            42607,
            36888,
            23296,
            9310,
            1894,
            278,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2700972909988195,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001492054001573706,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "failed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2915408699991531,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1699626469999203,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 393,
          "message": "AssertionError: ((40045782, 10011445), (410873, 410873), (40048750, 10012187))\nassert ((40045782 > 0 and 10011445 == 0\n  +10011445\n  -0))"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 393,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECOND = <utils.io.IO object at 0xffff9bb07700>, sc_ECOND = <utils.streamcompare.StreamCompare object at 0xffff9b8a36d0>, out_of_reset = None, eTX_delay_scan_setup_ECOND = None\ni2c_ECOND = <econ_i2c.ECON_I2C object at 0xffff9bc21280>, json_metadata = {}\n\n    @pytest.mark.ECOND\n    def test_eTx_PRBS7_ECOND(\n        set_voltage,\n        from_IO_ECOND,\n        sc_ECOND,\n        out_of_reset,\n        eTX_delay_scan_setup_ECOND,\n        i2c_ECOND,\n        json_metadata,\n    ):\n    \n        sleep_time = 1\n    \n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        from_IO_ECOND.reset_links()\n        from_IO_ECOND.setup(invert=[0,0], align=1)\n        time.sleep(0.1)\n    \n        def check_prbs7_sc(sc, sleep_time):\n            sc.reset_counters()\n            time.sleep(sleep_time)\n            sc.latch_counters()\n            word_count, err_count = sc.read_both_counters()\n            return word_count, err_count\n    \n        #check initially\n        word_count_1, err_count_1 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n        #turn off prbs and check it is all errors\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 0}}})\n        word_count_2, err_count_2 = check_prbs7_sc(sc_ECOND, min(sleep_time, 0.01))\n    \n        #turn prbs back on, and check we're error free again\n        i2c_ECOND.write({\"FormatterBuffer\": {\"Global\": {\"prbs_on\": 1}}})\n        word_count_3, err_count_3 = check_prbs7_sc(sc_ECOND, sleep_time)\n    \n>       assert ((word_count_1 > 0 and err_count_1 == 0) and\n                (word_count_2 > 0 and err_count_2 == word_count_2) and\n                (word_count_3 > 0 and err_count_3 == 0)), ((word_count_1, err_count_1),\n                                                           (word_count_2, err_count_2),\n                                                           (word_count_3, err_count_3))\nE       AssertionError: ((40045782, 10011445), (410873, 410873), (40048750, 10012187))\nE       assert ((40045782 > 0 and 10011445 == 0\nE         +10011445\nE         -0))\n\ntest_io.py:393: AssertionError"
      },
      "teardown": {
        "duration": 0.00500450199979241,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}