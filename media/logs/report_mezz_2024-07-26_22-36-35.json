{
  "created": 1722033414.6305408,
  "duration": 23.561265468597412,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5036778400026378,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14781136700185016,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001364970001304755,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003830935002042679,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1478599080001004,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013217390005593188,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13208579699858092,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12160089399912977,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012718780017166864,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038117049989523366,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1209550700004911,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012920990011480171,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00337384500016924,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14636650499960524,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012365679976937827,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033572250031284057,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11974400199687807,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013793710022582673,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033844950012280606,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14600481700108503,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011792959994636476,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00338104500042391,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11972309200064046,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011778560001403093,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004402118000143673,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002145107002434088,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011302459970465861,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033342440001433715,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017388990017934702,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011401150004530791,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033230839981115423,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0040406400003121234,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033396.8616288,
            "msecs": 861.6287708282471,
            "relativeCreated": 7768.8047885894775,
            "thread": 281473783119904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5178
          }
        ]
      },
      "teardown": {
        "duration": 0.001267857998755062,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003363014999195002,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002417843999864999,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033396.8739579,
            "msecs": 873.9578723907471,
            "relativeCreated": 7781.1338901519775,
            "thread": 281473783119904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5178
          }
        ]
      },
      "teardown": {
        "duration": 0.0011611459995037876,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00206221600092249,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002738340997893829,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033396.8834682,
            "msecs": 883.4681510925293,
            "relativeCreated": 7790.64416885376,
            "thread": 281473783119904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5178
          }
        ]
      },
      "teardown": {
        "duration": 0.0011308450011711102,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020957870001439005,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003446206999797141,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722033396.892983,
            "msecs": 892.9829597473145,
            "relativeCreated": 7800.158977508545,
            "thread": 281473783119904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5178
          }
        ]
      },
      "teardown": {
        "duration": 0.001070303998858435,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003351105002366239,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14631226299752598,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014158810008666478,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003862375997414347,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1201457120005216,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001196516001073178,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17951061200074037,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1474498890020186,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012701980012934655,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015150246999837691,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12108119299955433,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013229400028649252,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8323676950021763,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            5,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            56,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            13,
            120,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035736190002353396,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029285450000315905,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9882995260013558,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            6,
            0,
            0,
            0,
            11,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            199,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            149,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            24,
            255,
            255,
            255,
            13
          ],
          [
            3,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            48,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            120,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            113,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            144,
            255,
            255,
            255,
            255,
            0,
            0,
            110,
            1,
            66,
            255
          ],
          [
            255,
            0,
            169,
            0,
            255,
            0,
            157,
            37,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003542688999004895,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002959565998025937,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.302554986999894,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48112,
            47436,
            47556,
            47599,
            47524,
            47515,
            47538,
            47480,
            47630,
            47744,
            47480,
            47464,
            47596,
            47578,
            47359,
            47192,
            47522,
            47467,
            47416,
            49363,
            47576,
            47966,
            47484,
            49729,
            47534,
            47491,
            47660,
            47643,
            47671,
            47420,
            47578,
            47430,
            47614,
            47318,
            47372,
            47427,
            47444,
            47182,
            47685,
            47489,
            47502,
            47376,
            47513,
            47454,
            47691,
            47558,
            47568,
            47464,
            47575,
            47372,
            47644,
            47501,
            49265,
            47393,
            47882,
            47574,
            49524,
            47561,
            47401,
            47493,
            47420,
            47427,
            47508
          ],
          [
            48112,
            47436,
            47556,
            47599,
            47524,
            47515,
            47538,
            47480,
            47630,
            47744,
            47480,
            47464,
            47596,
            47578,
            47359,
            47192,
            47522,
            47467,
            47416,
            49363,
            47576,
            47966,
            47484,
            49729,
            47534,
            47491,
            47660,
            47643,
            47671,
            47420,
            47578,
            47430,
            47614,
            47318,
            47372,
            47427,
            47444,
            47182,
            47685,
            47489,
            47502,
            47376,
            47513,
            47454,
            47691,
            47558,
            47568,
            47464,
            47575,
            47372,
            47644,
            47501,
            49265,
            47393,
            47882,
            47574,
            49524,
            47561,
            47401,
            47493,
            47420,
            47427,
            47508
          ]
        ],
        "eTX_errcounts": [
          [
            41049,
            26784,
            8003,
            1071,
            85,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            239,
            3155,
            16398,
            34642,
            42705,
            31582,
            14139,
            2281,
            199,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            837,
            7873,
            25522,
            40773,
            38150,
            20328,
            5562,
            536,
            51,
            2,
            0,
            0
          ],
          [
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            290,
            3821,
            17331,
            35887,
            42278,
            33201,
            13931,
            3405,
            320,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            332,
            3615,
            18816,
            36205,
            42856,
            35456,
            17227,
            3509,
            441,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13392951899731997,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016320960021403152,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06894411300163483,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50644,
            47447,
            47356,
            47222,
            47470,
            47369,
            47153,
            47387,
            47301,
            47531,
            47272,
            47230,
            47354,
            47290,
            47556,
            47357,
            47590,
            47351,
            48854,
            49227,
            47441,
            47408,
            47512,
            47331,
            47324,
            47320,
            47279,
            47483,
            47429,
            47361,
            47336,
            47173,
            47861,
            47418,
            47420,
            47640,
            49290,
            49008,
            47283,
            47272,
            47416,
            47281,
            47272,
            47320,
            47399,
            47405,
            47497,
            47393,
            47500,
            47344,
            47405,
            47388,
            47339,
            47420,
            47431,
            47663,
            47511,
            47405,
            47470,
            47268,
            47357,
            47483,
            47315
          ],
          [
            50644,
            47447,
            47356,
            47222,
            47470,
            47369,
            47153,
            47387,
            47301,
            47531,
            47272,
            47230,
            47354,
            47290,
            47556,
            47357,
            47590,
            47351,
            48854,
            49227,
            47441,
            47408,
            47512,
            47331,
            47324,
            47320,
            47279,
            47483,
            47429,
            47361,
            47336,
            47173,
            47861,
            47418,
            47420,
            47640,
            49290,
            49008,
            47283,
            47272,
            47416,
            47281,
            47272,
            47320,
            47399,
            47405,
            47497,
            47393,
            47500,
            47344,
            47405,
            47388,
            47339,
            47420,
            47431,
            47663,
            47511,
            47405,
            47470,
            47268,
            47357,
            47483,
            47315
          ],
          [
            50644,
            47447,
            47356,
            47222,
            47470,
            47369,
            47153,
            47387,
            47301,
            47531,
            47272,
            47230,
            47354,
            47290,
            47556,
            47357,
            47590,
            47351,
            48854,
            49227,
            47441,
            47408,
            47512,
            47331,
            47324,
            47320,
            47279,
            47483,
            47429,
            47361,
            47336,
            47173,
            47861,
            47418,
            47420,
            47640,
            49290,
            49008,
            47283,
            47272,
            47416,
            47281,
            47272,
            47320,
            47399,
            47405,
            47497,
            47393,
            47500,
            47344,
            47405,
            47388,
            47339,
            47420,
            47431,
            47663,
            47511,
            47405,
            47470,
            47268,
            47357,
            47483,
            47315
          ],
          [
            50644,
            47447,
            47356,
            47222,
            47470,
            47369,
            47153,
            47387,
            47301,
            47531,
            47272,
            47230,
            47354,
            47290,
            47556,
            47357,
            47590,
            47351,
            48854,
            49227,
            47441,
            47408,
            47512,
            47331,
            47324,
            47320,
            47279,
            47483,
            47429,
            47361,
            47336,
            47173,
            47861,
            47418,
            47420,
            47640,
            49290,
            49008,
            47283,
            47272,
            47416,
            47281,
            47272,
            47320,
            47399,
            47405,
            47497,
            47393,
            47500,
            47344,
            47405,
            47388,
            47339,
            47420,
            47431,
            47663,
            47511,
            47405,
            47470,
            47268,
            47357,
            47483,
            47315
          ],
          [
            50644,
            47447,
            47356,
            47222,
            47470,
            47369,
            47153,
            47387,
            47301,
            47531,
            47272,
            47230,
            47354,
            47290,
            47556,
            47357,
            47590,
            47351,
            48854,
            49227,
            47441,
            47408,
            47512,
            47331,
            47324,
            47320,
            47279,
            47483,
            47429,
            47361,
            47336,
            47173,
            47861,
            47418,
            47420,
            47640,
            49290,
            49008,
            47283,
            47272,
            47416,
            47281,
            47272,
            47320,
            47399,
            47405,
            47497,
            47393,
            47500,
            47344,
            47405,
            47388,
            47339,
            47420,
            47431,
            47663,
            47511,
            47405,
            47470,
            47268,
            47357,
            47483,
            47315
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            49,
            947,
            4749,
            13405,
            24937,
            31390,
            32952,
            28439,
            20889,
            10972,
            2941,
            286,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            227,
            1787,
            5384,
            11804,
            23817,
            35122,
            39507,
            32699,
            21956,
            10386,
            3084,
            410,
            49,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            66,
            637,
            3299,
            10582,
            21871,
            32702,
            36194,
            34706,
            26901,
            15485,
            6249,
            1234,
            92,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            8,
            174,
            1546,
            5186,
            11133,
            21246,
            33104,
            42717,
            40930,
            28792,
            18400,
            7040,
            1024,
            50,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            150,
            1281,
            5114,
            12936,
            22748
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            163,
            1417,
            6395,
            17688,
            31436,
            36067,
            32341,
            23586,
            12701,
            4334,
            654,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            131,
            1049,
            6191,
            17029,
            31507,
            34661,
            31040,
            23939,
            13940,
            4462,
            518,
            32,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            282,
            2530,
            9068,
            18269,
            30869,
            38693,
            36288,
            26034,
            13731,
            3532,
            347,
            10,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            64,
            584,
            2585,
            6745,
            16023,
            29664,
            38298,
            35979,
            28853,
            18007,
            6816,
            1460,
            86,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            8,
            138,
            921,
            3690,
            9182,
            20269,
            32021,
            37987,
            37379,
            31785,
            22869,
            10809,
            2906,
            375,
            33,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            123,
            1383,
            5112,
            10344,
            18783,
            30911,
            40311,
            41289,
            35033,
            24230,
            11666,
            4182,
            894,
            122,
            4,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            73,
            594,
            2839,
            8014
          ]
        ]
      },
      "call": {
        "duration": 0.272593562000111,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa41dedb0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa41dedb0> = array([21, 13, 19, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa4171610>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[50644, 47447, 47356, 47222, 47470, 47369, ...], [50644, 47447, 47356, 47222, 47470, 47369, ...], [..., 0, ...], [0, 0, 0, 66, 637, 3299, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 8, 138, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa41dedb0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa41dedb0> = array([21, 13, 19, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016548669991607312,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29246174299987615,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169448230000853,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014732130002812482,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3839913150004577,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            10,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            8,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            31,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            226,
            89,
            5,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          4,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034905780012195464,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002954105999378953,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5339087920001475,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            208,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            9,
            255,
            178,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            100,
            255,
            162,
            255,
            156,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            109,
            2,
            255,
            25,
            255,
            11
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            68,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            5
          ],
          [
            4,
            255,
            162,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            217,
            255,
            137,
            255,
            255,
            7,
            0,
            191,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            58,
            255,
            107
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034813070014934056,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002939314999821363,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29556390200013993,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48265,
            47543,
            47408,
            47793,
            47555,
            47216,
            47336,
            47708,
            47469,
            47659,
            49267,
            47546,
            48029,
            47584,
            49466,
            47552,
            47436,
            47398,
            47427,
            47455,
            47326,
            47502,
            47422,
            47595,
            47578,
            47680,
            47580,
            47620,
            47426,
            47500,
            47432,
            47544,
            47612,
            47424,
            47483,
            47401,
            47449,
            47496,
            47519,
            47528,
            47309,
            47323,
            47597,
            47666,
            47562,
            49440,
            47535,
            47928,
            47497,
            49667,
            47408,
            47416,
            47378,
            47331,
            47482,
            47094,
            47191,
            47339,
            47511,
            47445,
            47531,
            47436,
            47403
          ],
          [
            48265,
            47543,
            47408,
            47793,
            47555,
            47216,
            47336,
            47708,
            47469,
            47659,
            49267,
            47546,
            48029,
            47584,
            49466,
            47552,
            47436,
            47398,
            47427,
            47455,
            47326,
            47502,
            47422,
            47595,
            47578,
            47680,
            47580,
            47620,
            47426,
            47500,
            47432,
            47544,
            47612,
            47424,
            47483,
            47401,
            47449,
            47496,
            47519,
            47528,
            47309,
            47323,
            47597,
            47666,
            47562,
            49440,
            47535,
            47928,
            47497,
            49667,
            47408,
            47416,
            47378,
            47331,
            47482,
            47094,
            47191,
            47339,
            47511,
            47445,
            47531,
            47436,
            47403
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            335,
            3430,
            17914,
            35656,
            36637,
            19382,
            4171,
            443,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            225,
            2756,
            16019,
            34303,
            40427,
            27047,
            8605,
            1222,
            60,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            953,
            8995,
            28952,
            41792,
            39101,
            19337,
            4363,
            430,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            154,
            2368,
            13323,
            30744,
            42732,
            38901,
            21916,
            5542,
            676,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1337132129992824,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001651057002163725,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06864551699982258,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48097,
            47349,
            46964,
            47118,
            47435,
            47249,
            47332,
            47355,
            47415,
            47403,
            47465,
            47313,
            47670,
            47404,
            47365,
            47182,
            47359,
            47217,
            47353,
            47164,
            47249,
            47262,
            47230,
            47150,
            47445,
            47308,
            47363,
            47040,
            47235,
            47501,
            47359,
            48668,
            47785,
            47287,
            47317,
            47155,
            47238,
            47286,
            47222,
            47388,
            47388,
            47243,
            47132,
            47163,
            47350,
            47207,
            47284,
            47281,
            47258,
            47432,
            47349,
            47814,
            47392,
            47130,
            47415,
            47208,
            47211,
            47274,
            47120,
            47336,
            47352,
            47228,
            47178
          ],
          [
            48097,
            47349,
            46964,
            47118,
            47435,
            47249,
            47332,
            47355,
            47415,
            47403,
            47465,
            47313,
            47670,
            47404,
            47365,
            47182,
            47359,
            47217,
            47353,
            47164,
            47249,
            47262,
            47230,
            47150,
            47445,
            47308,
            47363,
            47040,
            47235,
            47501,
            47359,
            48668,
            47785,
            47287,
            47317,
            47155,
            47238,
            47286,
            47222,
            47388,
            47388,
            47243,
            47132,
            47163,
            47350,
            47207,
            47284,
            47281,
            47258,
            47432,
            47349,
            47814,
            47392,
            47130,
            47415,
            47208,
            47211,
            47274,
            47120,
            47336,
            47352,
            47228,
            47178
          ],
          [
            48097,
            47349,
            46964,
            47118,
            47435,
            47249,
            47332,
            47355,
            47415,
            47403,
            47465,
            47313,
            47670,
            47404,
            47365,
            47182,
            47359,
            47217,
            47353,
            47164,
            47249,
            47262,
            47230,
            47150,
            47445,
            47308,
            47363,
            47040,
            47235,
            47501,
            47359,
            48668,
            47785,
            47287,
            47317,
            47155,
            47238,
            47286,
            47222,
            47388,
            47388,
            47243,
            47132,
            47163,
            47350,
            47207,
            47284,
            47281,
            47258,
            47432,
            47349,
            47814,
            47392,
            47130,
            47415,
            47208,
            47211,
            47274,
            47120,
            47336,
            47352,
            47228,
            47178
          ],
          [
            48097,
            47349,
            46964,
            47118,
            47435,
            47249,
            47332,
            47355,
            47415,
            47403,
            47465,
            47313,
            47670,
            47404,
            47365,
            47182,
            47359,
            47217,
            47353,
            47164,
            47249,
            47262,
            47230,
            47150,
            47445,
            47308,
            47363,
            47040,
            47235,
            47501,
            47359,
            48668,
            47785,
            47287,
            47317,
            47155,
            47238,
            47286,
            47222,
            47388,
            47388,
            47243,
            47132,
            47163,
            47350,
            47207,
            47284,
            47281,
            47258,
            47432,
            47349,
            47814,
            47392,
            47130,
            47415,
            47208,
            47211,
            47274,
            47120,
            47336,
            47352,
            47228,
            47178
          ],
          [
            48097,
            47349,
            46964,
            47118,
            47435,
            47249,
            47332,
            47355,
            47415,
            47403,
            47465,
            47313,
            47670,
            47404,
            47365,
            47182,
            47359,
            47217,
            47353,
            47164,
            47249,
            47262,
            47230,
            47150,
            47445,
            47308,
            47363,
            47040,
            47235,
            47501,
            47359,
            48668,
            47785,
            47287,
            47317,
            47155,
            47238,
            47286,
            47222,
            47388,
            47388,
            47243,
            47132,
            47163,
            47350,
            47207,
            47284,
            47281,
            47258,
            47432,
            47349,
            47814,
            47392,
            47130,
            47415,
            47208,
            47211,
            47274,
            47120,
            47336,
            47352,
            47228,
            47178
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            765,
            4387,
            16096,
            28468,
            34215,
            33077,
            24980,
            14648,
            5574,
            1227,
            96,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            81,
            925,
            3822,
            11866,
            23684,
            36666,
            39514,
            28517,
            15077,
            3900,
            548,
            24,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19
          ],
          [
            0,
            1,
            204,
            1645,
            7440,
            20990,
            36657,
            40016,
            34920,
            22082,
            9803,
            2358,
            260,
            11,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            22,
            376,
            2159,
            8817,
            20967,
            35721,
            44065,
            41989,
            28768,
            13955,
            2904,
            398,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            29,
            519,
            2828,
            8888,
            20207,
            34411,
            38008
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            51,
            946,
            6025,
            21204,
            33436,
            38041,
            31820,
            15238,
            3818,
            286,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            352,
            4787,
            16940,
            34255,
            41040,
            34335,
            19149,
            6457,
            1228,
            66,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            164,
            1700,
            10079,
            25780,
            39147,
            41973,
            33832,
            18117,
            5555,
            738,
            60,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            3,
            142,
            1883,
            7993,
            20146,
            34142,
            41407,
            35473,
            22835,
            9385,
            2067,
            202,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            12,
            208,
            2483,
            10990,
            26105,
            38928,
            39540,
            34273,
            26878,
            16773,
            6400,
            1473,
            114,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            48,
            685,
            3215,
            11397,
            24686,
            35808,
            43043,
            41357,
            29048,
            15552,
            4834,
            773,
            50,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            159,
            1604,
            6846,
            16967,
            30260
          ]
        ]
      },
      "call": {
        "duration": 0.2703047510003671,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015088229993125424,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2911323240005004,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169149303001177,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001491333001467865,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2957948129987926,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            117,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            12,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003531857997586485,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029060150009172503,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5345131260000926,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            6,
            255,
            1,
            37,
            0,
            255,
            0,
            255,
            255
          ],
          [
            55,
            0,
            10,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            44,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            10,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            7,
            0,
            4,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            255,
            4,
            255,
            23,
            255,
            0,
            0,
            0,
            0,
            0,
            232
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            4,
            0,
            255,
            4,
            255,
            255
          ],
          [
            67,
            0,
            7,
            0,
            13,
            0,
            255,
            179,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            113,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            73,
            0,
            5,
            0,
            29,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            111,
            255,
            55,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034863470027630683,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029752869995718356,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29577168700052425,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48492,
            47583,
            47595,
            47208,
            47057,
            47850,
            47558,
            47383,
            47466,
            47584,
            49155,
            47877,
            47890,
            47633,
            47931,
            47545,
            47396,
            47653,
            47407,
            47502,
            47399,
            47710,
            47626,
            47830,
            47502,
            47756,
            47538,
            47600,
            47475,
            47631,
            47407,
            47509,
            47627,
            47432,
            47419,
            47600,
            47546,
            47449,
            47574,
            47738,
            47492,
            48131,
            47545,
            48143,
            47603,
            47856,
            47447,
            47804,
            47381,
            47485,
            47724,
            47460,
            47580,
            47373,
            47351,
            47448,
            47497,
            47512,
            47535,
            47682,
            47628,
            47451,
            47601
          ],
          [
            48492,
            47583,
            47595,
            47208,
            47057,
            47850,
            47558,
            47383,
            47466,
            47584,
            49155,
            47877,
            47890,
            47633,
            47931,
            47545,
            47396,
            47653,
            47407,
            47502,
            47399,
            47710,
            47626,
            47830,
            47502,
            47756,
            47538,
            47600,
            47475,
            47631,
            47407,
            47509,
            47627,
            47432,
            47419,
            47600,
            47546,
            47449,
            47574,
            47738,
            47492,
            48131,
            47545,
            48143,
            47603,
            47856,
            47447,
            47804,
            47381,
            47485,
            47724,
            47460,
            47580,
            47373,
            47351,
            47448,
            47497,
            47512,
            47535,
            47682,
            47628,
            47451,
            47601
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            509,
            7359,
            24707,
            40075,
            34351,
            15635,
            2995,
            274,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            34,
            488,
            5947,
            22148,
            38409,
            37969,
            21872,
            5217,
            678,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            0,
            2,
            0,
            129,
            2066,
            13823,
            32564,
            42050,
            30254,
            9740,
            1801,
            130,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            26,
            652,
            5372,
            21109,
            38113,
            41750,
            31431,
            13013,
            2044,
            205,
            14,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            888,
            8216,
            25222,
            39898,
            43536
          ]
        ]
      },
      "call": {
        "duration": 0.1343252869992284,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001645717002247693,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907341499754693,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48159,
            47330,
            47232,
            47713,
            47367,
            47464,
            47410,
            47830,
            47333,
            47330,
            47262,
            47490,
            47249,
            47264,
            47268,
            47534,
            47584,
            47446,
            47172,
            47416,
            47317,
            47709,
            47513,
            47408,
            49086,
            47349,
            47526,
            47519,
            47313,
            47400,
            47096,
            47618,
            47372,
            47474,
            47213,
            47552,
            47535,
            47543,
            47449,
            47503,
            47333,
            47737,
            47334,
            47301,
            47268,
            47367,
            47496,
            47385,
            47353,
            47505,
            47104,
            47498,
            47346,
            47585,
            47523,
            47517,
            47636,
            49280,
            49344,
            47371,
            47299,
            47581,
            47373
          ],
          [
            48159,
            47330,
            47232,
            47713,
            47367,
            47464,
            47410,
            47830,
            47333,
            47330,
            47262,
            47490,
            47249,
            47264,
            47268,
            47534,
            47584,
            47446,
            47172,
            47416,
            47317,
            47709,
            47513,
            47408,
            49086,
            47349,
            47526,
            47519,
            47313,
            47400,
            47096,
            47618,
            47372,
            47474,
            47213,
            47552,
            47535,
            47543,
            47449,
            47503,
            47333,
            47737,
            47334,
            47301,
            47268,
            47367,
            47496,
            47385,
            47353,
            47505,
            47104,
            47498,
            47346,
            47585,
            47523,
            47517,
            47636,
            49280,
            49344,
            47371,
            47299,
            47581,
            47373
          ],
          [
            48159,
            47330,
            47232,
            47713,
            47367,
            47464,
            47410,
            47830,
            47333,
            47330,
            47262,
            47490,
            47249,
            47264,
            47268,
            47534,
            47584,
            47446,
            47172,
            47416,
            47317,
            47709,
            47513,
            47408,
            49086,
            47349,
            47526,
            47519,
            47313,
            47400,
            47096,
            47618,
            47372,
            47474,
            47213,
            47552,
            47535,
            47543,
            47449,
            47503,
            47333,
            47737,
            47334,
            47301,
            47268,
            47367,
            47496,
            47385,
            47353,
            47505,
            47104,
            47498,
            47346,
            47585,
            47523,
            47517,
            47636,
            49280,
            49344,
            47371,
            47299,
            47581,
            47373
          ],
          [
            48159,
            47330,
            47232,
            47713,
            47367,
            47464,
            47410,
            47830,
            47333,
            47330,
            47262,
            47490,
            47249,
            47264,
            47268,
            47534,
            47584,
            47446,
            47172,
            47416,
            47317,
            47709,
            47513,
            47408,
            49086,
            47349,
            47526,
            47519,
            47313,
            47400,
            47096,
            47618,
            47372,
            47474,
            47213,
            47552,
            47535,
            47543,
            47449,
            47503,
            47333,
            47737,
            47334,
            47301,
            47268,
            47367,
            47496,
            47385,
            47353,
            47505,
            47104,
            47498,
            47346,
            47585,
            47523,
            47517,
            47636,
            49280,
            49344,
            47371,
            47299,
            47581,
            47373
          ],
          [
            48159,
            47330,
            47232,
            47713,
            47367,
            47464,
            47410,
            47830,
            47333,
            47330,
            47262,
            47490,
            47249,
            47264,
            47268,
            47534,
            47584,
            47446,
            47172,
            47416,
            47317,
            47709,
            47513,
            47408,
            49086,
            47349,
            47526,
            47519,
            47313,
            47400,
            47096,
            47618,
            47372,
            47474,
            47213,
            47552,
            47535,
            47543,
            47449,
            47503,
            47333,
            47737,
            47334,
            47301,
            47268,
            47367,
            47496,
            47385,
            47353,
            47505,
            47104,
            47498,
            47346,
            47585,
            47523,
            47517,
            47636,
            49280,
            49344,
            47371,
            47299,
            47581,
            47373
          ]
        ],
        "eTX_errcounts": [
          [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            210,
            2076,
            6747,
            15795,
            27851,
            37275,
            35546,
            23566,
            11509,
            3202,
            386,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            67,
            861,
            4022,
            12913,
            23721,
            32882,
            33201,
            28597,
            19885,
            10456,
            3934,
            596,
            41,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            284,
            1759,
            4869,
            12985,
            25519,
            37104,
            43283,
            38026,
            22394,
            8972,
            2092,
            192,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            48,
            365,
            2853,
            6960,
            15538,
            29546,
            39544,
            36557,
            26561,
            13915,
            4284,
            839,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            100
          ],
          [
            11342,
            3187,
            352,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            85,
            1678,
            8841,
            20756,
            33894,
            38856,
            30452,
            15311,
            5524,
            866,
            52,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            61,
            931,
            5223,
            15265,
            28268,
            35732,
            32566,
            21795,
            8141,
            1690,
            155,
            12,
            0,
            0,
            0,
            0
          ],
          [
            50,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            82,
            768,
            6220,
            17024,
            27330,
            38733,
            40814,
            31892,
            21029,
            9379,
            2818,
            340,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            81,
            955,
            4449,
            15130,
            27324,
            34971,
            32706,
            22882,
            11043,
            3423,
            721,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            121,
            1601,
            5874,
            16028,
            27807,
            37172,
            41149,
            38324,
            25636,
            14138,
            4693,
            792,
            43,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            46,
            529,
            2774,
            7983,
            18026,
            30394,
            37514,
            36348,
            30726,
            23185,
            13299,
            5556,
            1459,
            69,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.27364568499979214,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa3f239f0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa3f239f0> = array([14, 13, 15, 14, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa4171610>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48159, 47330, 47232, 47713, 47367, 47464, ...], [48159, 47330, 47232, 47713, 47367, 47464, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [11342, 3187, 352, 11, 0, 0, ...], [50, 2, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa3f239f0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa3f239f0> = array([14, 13, 15, 14, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016197660006582737,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2919793929977459,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169169974000397,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004938619997119531,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}