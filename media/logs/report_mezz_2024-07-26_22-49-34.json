{
  "created": 1722034193.610516,
  "duration": 23.570995569229126,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.506464349997259,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14828209100232925,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013552800010074861,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0039234270007000305,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14791959400099586,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012893090024590492,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13208940900221933,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12170149799931096,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001310908999585081,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003899126997566782,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12094728100055363,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001282379002077505,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034378969976387452,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14641529899745365,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001201586001116084,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034326169989071786,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11984940699767321,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001184696000564145,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034309069997107144,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14623967499937862,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012197069991088938,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003493577998597175,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11992926800303394,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012378279971017037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004526501001237193,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021187670026847627,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001171916002931539,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033347850003337953,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.001766678997228155,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011133240004710387,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033629249992372934,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004065240998897934,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034175.9039223,
            "msecs": 903.9223194122314,
            "relativeCreated": 7846.667289733887,
            "thread": 281473857503264,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5550
          }
        ]
      },
      "teardown": {
        "duration": 0.0012121769977966323,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003481518000626238,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0023949839996930677,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034175.9164784,
            "msecs": 916.4783954620361,
            "relativeCreated": 7859.223365783691,
            "thread": 281473857503264,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5550
          }
        ]
      },
      "teardown": {
        "duration": 0.001191715997265419,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021652680006809533,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027408009991631843,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034175.9261816,
            "msecs": 926.1815547943115,
            "relativeCreated": 7868.926525115967,
            "thread": 281473857503264,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5550
          }
        ]
      },
      "teardown": {
        "duration": 0.0010634339996613562,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002144657999451738,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003410476001590723,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722034175.9358616,
            "msecs": 935.8615875244141,
            "relativeCreated": 7878.606557846069,
            "thread": 281473857503264,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 5550
          }
        ]
      },
      "teardown": {
        "duration": 0.0011129939994134475,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034136260001105256,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14632913699824712,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012886190015706234,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034121869975933805,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12011611300113145,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012051570010953583,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17918350099716918,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14741909200165537,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001296118996833684,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015267251001205295,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12117273500189185,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012848690021201037,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8498891290000756,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            118,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            12,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            25,
            146,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          5,
          4
        ]
      },
      "call": {
        "duration": 0.0035943200018664356,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029109950010024477,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9077131699996244,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            9,
            0,
            0,
            0,
            0
          ],
          [
            0,
            16,
            0,
            0,
            0,
            15,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            217,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            164,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            25,
            255,
            255,
            255,
            5
          ],
          [
            2,
            0,
            1,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            43,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            77,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            88,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            218,
            255,
            255,
            255,
            255,
            0,
            0,
            117,
            0,
            79,
            255
          ],
          [
            255,
            0,
            138,
            0,
            255,
            0,
            175,
            42,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0034853279976232443,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029315450010471977,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027631910008495,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48316,
            47484,
            47555,
            47539,
            47403,
            47585,
            49258,
            47315,
            47899,
            47574,
            49580,
            47389,
            47473,
            47464,
            47619,
            47504,
            47407,
            47521,
            47462,
            47512,
            47540,
            47471,
            47364,
            47437,
            47435,
            47509,
            47551,
            47539,
            47517,
            47611,
            47423,
            47431,
            47569,
            47424,
            47425,
            47421,
            47491,
            47443,
            47464,
            47052,
            47654,
            48111,
            47473,
            47847,
            47657,
            47568,
            47479,
            47387,
            47538,
            47344,
            47542,
            47401,
            47365,
            47321,
            47467,
            47461,
            47691,
            47282,
            47644,
            47413,
            47595,
            47306,
            47599
          ],
          [
            48316,
            47484,
            47555,
            47539,
            47403,
            47585,
            49258,
            47315,
            47899,
            47574,
            49580,
            47389,
            47473,
            47464,
            47619,
            47504,
            47407,
            47521,
            47462,
            47512,
            47540,
            47471,
            47364,
            47437,
            47435,
            47509,
            47551,
            47539,
            47517,
            47611,
            47423,
            47431,
            47569,
            47424,
            47425,
            47421,
            47491,
            47443,
            47464,
            47052,
            47654,
            48111,
            47473,
            47847,
            47657,
            47568,
            47479,
            47387,
            47538,
            47344,
            47542,
            47401,
            47365,
            47321,
            47467,
            47461,
            47691,
            47282,
            47644,
            47413,
            47595,
            47306,
            47599
          ]
        ],
        "eTX_errcounts": [
          [
            40679,
            26608,
            7658,
            968,
            114,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            274,
            3427,
            16823,
            35125,
            42073,
            30975,
            13671,
            2058,
            131,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            884,
            7843,
            25731,
            40633,
            36889,
            18566,
            5037,
            482,
            17,
            0,
            0,
            0
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            19,
            278,
            4569,
            18196,
            36848,
            42209,
            30916,
            13110,
            3054,
            267,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            395,
            4663,
            19539,
            36493,
            42600,
            34929,
            16234,
            3226,
            274,
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13389709999682964,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016585269986535423,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06893187899913755,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47656,
            47337,
            47361,
            47316,
            47313,
            47284,
            47254,
            47388,
            49217,
            48869,
            47405,
            47151,
            47444,
            47239,
            47180,
            47083,
            47182,
            47155,
            46922,
            47155,
            47308,
            47172,
            47413,
            47212,
            47378,
            47004,
            47419,
            47385,
            49577,
            46982,
            46962,
            47166,
            47232,
            47054,
            47320,
            47309,
            47535,
            47305,
            47475,
            47186,
            47400,
            47384,
            47235,
            46972,
            47368,
            47356,
            47693,
            47355,
            47342,
            47259,
            47415,
            47205,
            47348,
            47135,
            47204,
            47239,
            47224,
            47152,
            47157,
            47347,
            47439,
            47247,
            47594
          ],
          [
            47656,
            47337,
            47361,
            47316,
            47313,
            47284,
            47254,
            47388,
            49217,
            48869,
            47405,
            47151,
            47444,
            47239,
            47180,
            47083,
            47182,
            47155,
            46922,
            47155,
            47308,
            47172,
            47413,
            47212,
            47378,
            47004,
            47419,
            47385,
            49577,
            46982,
            46962,
            47166,
            47232,
            47054,
            47320,
            47309,
            47535,
            47305,
            47475,
            47186,
            47400,
            47384,
            47235,
            46972,
            47368,
            47356,
            47693,
            47355,
            47342,
            47259,
            47415,
            47205,
            47348,
            47135,
            47204,
            47239,
            47224,
            47152,
            47157,
            47347,
            47439,
            47247,
            47594
          ],
          [
            47656,
            47337,
            47361,
            47316,
            47313,
            47284,
            47254,
            47388,
            49217,
            48869,
            47405,
            47151,
            47444,
            47239,
            47180,
            47083,
            47182,
            47155,
            46922,
            47155,
            47308,
            47172,
            47413,
            47212,
            47378,
            47004,
            47419,
            47385,
            49577,
            46982,
            46962,
            47166,
            47232,
            47054,
            47320,
            47309,
            47535,
            47305,
            47475,
            47186,
            47400,
            47384,
            47235,
            46972,
            47368,
            47356,
            47693,
            47355,
            47342,
            47259,
            47415,
            47205,
            47348,
            47135,
            47204,
            47239,
            47224,
            47152,
            47157,
            47347,
            47439,
            47247,
            47594
          ],
          [
            47656,
            47337,
            47361,
            47316,
            47313,
            47284,
            47254,
            47388,
            49217,
            48869,
            47405,
            47151,
            47444,
            47239,
            47180,
            47083,
            47182,
            47155,
            46922,
            47155,
            47308,
            47172,
            47413,
            47212,
            47378,
            47004,
            47419,
            47385,
            49577,
            46982,
            46962,
            47166,
            47232,
            47054,
            47320,
            47309,
            47535,
            47305,
            47475,
            47186,
            47400,
            47384,
            47235,
            46972,
            47368,
            47356,
            47693,
            47355,
            47342,
            47259,
            47415,
            47205,
            47348,
            47135,
            47204,
            47239,
            47224,
            47152,
            47157,
            47347,
            47439,
            47247,
            47594
          ],
          [
            47656,
            47337,
            47361,
            47316,
            47313,
            47284,
            47254,
            47388,
            49217,
            48869,
            47405,
            47151,
            47444,
            47239,
            47180,
            47083,
            47182,
            47155,
            46922,
            47155,
            47308,
            47172,
            47413,
            47212,
            47378,
            47004,
            47419,
            47385,
            49577,
            46982,
            46962,
            47166,
            47232,
            47054,
            47320,
            47309,
            47535,
            47305,
            47475,
            47186,
            47400,
            47384,
            47235,
            46972,
            47368,
            47356,
            47693,
            47355,
            47342,
            47259,
            47415,
            47205,
            47348,
            47135,
            47204,
            47239,
            47224,
            47152,
            47157,
            47347,
            47439,
            47247,
            47594
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            31,
            520,
            2886,
            9078,
            20464,
            32512,
            36628,
            31864,
            19488,
            7749,
            1604,
            150,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            46,
            801,
            3691,
            11185,
            23518,
            32880,
            34908,
            29998,
            23344,
            15450,
            6353,
            1189,
            91,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            3,
            38,
            482,
            2458,
            9745,
            21263,
            34486,
            38481,
            34922,
            26364,
            15217,
            6411,
            1334,
            162,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            106,
            991,
            4362,
            10422,
            21028,
            32926,
            41760,
            40526,
            29608,
            18308,
            6273,
            1192,
            50,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            113,
            1050,
            4687,
            12692,
            23486
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            138,
            1655,
            6714,
            17141,
            29801,
            35952,
            32771,
            23874,
            12929,
            4086,
            700,
            32,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            175,
            1310,
            6809,
            17011,
            31625,
            34544,
            31180,
            24001,
            14454,
            3931,
            515,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            345,
            2276,
            8585,
            18386,
            30736,
            37816,
            35051,
            24932,
            13136,
            3409,
            541,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            63,
            635,
            2732,
            6574,
            16369,
            29588,
            38582,
            36132,
            29047,
            16955,
            6478,
            1129,
            106,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            4,
            123,
            967,
            3481,
            9543,
            20578,
            32260,
            38096,
            37294,
            32214,
            23224,
            10142,
            2825,
            476,
            22,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            119,
            1222,
            4688,
            9954,
            17854,
            30225,
            40341,
            41425,
            35098,
            24482,
            11372,
            3717,
            741,
            93,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            52,
            615,
            2921,
            8407
          ]
        ]
      },
      "call": {
        "duration": 0.2722304590024578,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa887ad50>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa887ad50> = array([22, 13, 19, 21, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa88635e0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47656, 47337, 47361, 47316, 47313, 47284, ...], [47656, 47337, 47361, 47316, 47313, 47284, ...], [..., 0, ...], [0, 0, 3, 38, 482, 2458, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 4, 123, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa887ad50>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa887ad50> = array([22, 13, 19, 21, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016313469968736172,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2930416540002625,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.17068872299933,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014738720019522589,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.307069278002018,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            1,
            21,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            4,
            255,
            5,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            77,
            2,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            22,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          4,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035275980008009356,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002925965000031283,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5350998090034409,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            195,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            7,
            255,
            229,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            79,
            255,
            159,
            255,
            150,
            0,
            0,
            219,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            253,
            0,
            87,
            2,
            255,
            22,
            255,
            7
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            81,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            4,
            255,
            182,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            159,
            255,
            108,
            255,
            255,
            4,
            0,
            99,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            255,
            0,
            255,
            100,
            255,
            121
          ],
          [
            4,
            0,
            1,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          3,
          4,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034944180006277747,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0030037869983061682,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2958407759979309,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            50789,
            47442,
            47368,
            47753,
            47582,
            47736,
            47612,
            47791,
            47505,
            47474,
            47514,
            47581,
            47397,
            47645,
            47146,
            47292,
            47581,
            47560,
            47422,
            47485,
            47399,
            47566,
            47475,
            47677,
            47671,
            47628,
            47695,
            47988,
            47513,
            49789,
            47469,
            47588,
            47483,
            47505,
            47779,
            47423,
            47517,
            47415,
            47595,
            47532,
            47619,
            47636,
            47484,
            47588,
            47643,
            47596,
            47505,
            47756,
            47474,
            47428,
            47583,
            47483,
            47594,
            47542,
            47463,
            47676,
            47499,
            47494,
            47742,
            47509,
            49298,
            47467,
            47527
          ],
          [
            50789,
            47442,
            47368,
            47753,
            47582,
            47736,
            47612,
            47791,
            47505,
            47474,
            47514,
            47581,
            47397,
            47645,
            47146,
            47292,
            47581,
            47560,
            47422,
            47485,
            47399,
            47566,
            47475,
            47677,
            47671,
            47628,
            47695,
            47988,
            47513,
            49789,
            47469,
            47588,
            47483,
            47505,
            47779,
            47423,
            47517,
            47415,
            47595,
            47532,
            47619,
            47636,
            47484,
            47588,
            47643,
            47596,
            47505,
            47756,
            47474,
            47428,
            47583,
            47483,
            47594,
            47542,
            47463,
            47676,
            47499,
            47494,
            47742,
            47509,
            49298,
            47467,
            47527
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            248,
            4024,
            18720,
            36629,
            36180,
            18722,
            4415,
            293,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            151,
            2893,
            17237,
            36105,
            40394,
            25075,
            8404,
            1125,
            90,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            975,
            9256,
            29746,
            41553,
            38600,
            18603,
            4314,
            410,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            104,
            2430,
            13978,
            31395,
            42688,
            38846,
            19900,
            5448,
            687,
            21,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13414277500123717,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001620667000679532,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.068730905000848,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47932,
            47367,
            47519,
            47476,
            47347,
            47682,
            47006,
            47404,
            47353,
            47213,
            47151,
            47197,
            47175,
            47178,
            47359,
            47257,
            47232,
            47283,
            47357,
            47472,
            47281,
            47197,
            47406,
            47451,
            47554,
            49515,
            47271,
            47237,
            47190,
            47170,
            47287,
            46954,
            47291,
            47136,
            47071,
            47333,
            47300,
            47268,
            47321,
            47376,
            47394,
            47244,
            47434,
            49143,
            48846,
            47146,
            47264,
            47307,
            47220,
            47208,
            47249,
            47292,
            47131,
            47212,
            47324,
            47297,
            46956,
            47292,
            47421,
            47337,
            47317,
            47303,
            48985
          ],
          [
            47932,
            47367,
            47519,
            47476,
            47347,
            47682,
            47006,
            47404,
            47353,
            47213,
            47151,
            47197,
            47175,
            47178,
            47359,
            47257,
            47232,
            47283,
            47357,
            47472,
            47281,
            47197,
            47406,
            47451,
            47554,
            49515,
            47271,
            47237,
            47190,
            47170,
            47287,
            46954,
            47291,
            47136,
            47071,
            47333,
            47300,
            47268,
            47321,
            47376,
            47394,
            47244,
            47434,
            49143,
            48846,
            47146,
            47264,
            47307,
            47220,
            47208,
            47249,
            47292,
            47131,
            47212,
            47324,
            47297,
            46956,
            47292,
            47421,
            47337,
            47317,
            47303,
            48985
          ],
          [
            47932,
            47367,
            47519,
            47476,
            47347,
            47682,
            47006,
            47404,
            47353,
            47213,
            47151,
            47197,
            47175,
            47178,
            47359,
            47257,
            47232,
            47283,
            47357,
            47472,
            47281,
            47197,
            47406,
            47451,
            47554,
            49515,
            47271,
            47237,
            47190,
            47170,
            47287,
            46954,
            47291,
            47136,
            47071,
            47333,
            47300,
            47268,
            47321,
            47376,
            47394,
            47244,
            47434,
            49143,
            48846,
            47146,
            47264,
            47307,
            47220,
            47208,
            47249,
            47292,
            47131,
            47212,
            47324,
            47297,
            46956,
            47292,
            47421,
            47337,
            47317,
            47303,
            48985
          ],
          [
            47932,
            47367,
            47519,
            47476,
            47347,
            47682,
            47006,
            47404,
            47353,
            47213,
            47151,
            47197,
            47175,
            47178,
            47359,
            47257,
            47232,
            47283,
            47357,
            47472,
            47281,
            47197,
            47406,
            47451,
            47554,
            49515,
            47271,
            47237,
            47190,
            47170,
            47287,
            46954,
            47291,
            47136,
            47071,
            47333,
            47300,
            47268,
            47321,
            47376,
            47394,
            47244,
            47434,
            49143,
            48846,
            47146,
            47264,
            47307,
            47220,
            47208,
            47249,
            47292,
            47131,
            47212,
            47324,
            47297,
            46956,
            47292,
            47421,
            47337,
            47317,
            47303,
            48985
          ],
          [
            47932,
            47367,
            47519,
            47476,
            47347,
            47682,
            47006,
            47404,
            47353,
            47213,
            47151,
            47197,
            47175,
            47178,
            47359,
            47257,
            47232,
            47283,
            47357,
            47472,
            47281,
            47197,
            47406,
            47451,
            47554,
            49515,
            47271,
            47237,
            47190,
            47170,
            47287,
            46954,
            47291,
            47136,
            47071,
            47333,
            47300,
            47268,
            47321,
            47376,
            47394,
            47244,
            47434,
            49143,
            48846,
            47146,
            47264,
            47307,
            47220,
            47208,
            47249,
            47292,
            47131,
            47212,
            47324,
            47297,
            46956,
            47292,
            47421,
            47337,
            47317,
            47303,
            48985
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            224,
            2015,
            12322,
            28056,
            37900,
            37534,
            25466,
            11863,
            2622,
            434,
            24,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            357,
            3297,
            14910,
            31490,
            40658,
            40625,
            29852,
            15923,
            4770,
            896,
            62,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            0,
            7,
            189,
            1584,
            7287,
            21316,
            37210,
            40699,
            34222,
            21580,
            9345,
            2216,
            237,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            328,
            2170,
            8761,
            22341,
            36338,
            44000,
            42182,
            28507,
            12791,
            2616,
            258,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            46,
            646,
            3085,
            8733,
            20903,
            34988,
            39906
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            38,
            1030,
            6846,
            21602,
            34474,
            38272,
            31325,
            14821,
            3318,
            365,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            34,
            557,
            5176,
            18193,
            35443,
            41048,
            33998,
            18747,
            6228,
            972,
            60,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            10,
            137,
            1934,
            10432,
            26388,
            39292,
            41921,
            33680,
            17185,
            5327,
            689,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            14,
            306,
            2243,
            9386,
            21527,
            35027,
            41996,
            36657,
            23441,
            9611,
            2104,
            202,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            7,
            275,
            2498,
            10729,
            27350,
            38694,
            39232,
            33891,
            26538,
            16191,
            5741,
            1287,
            72,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            60,
            689,
            3675,
            11820,
            25204,
            36334,
            43050,
            40362,
            29060,
            13782,
            4195,
            486,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            12,
            210,
            1626,
            7193,
            17256,
            31141
          ]
        ]
      },
      "call": {
        "duration": 0.27023730400105705,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015314140000555199,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2915895019978052,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170565660999273,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014851829982944764,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3389604099975259,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            100,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            247,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035608990001492202,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002968296001199633,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5361000320008316,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            1,
            255,
            3,
            255,
            4,
            59,
            0,
            255,
            1,
            255,
            255
          ],
          [
            96,
            0,
            9,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            32,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            15,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            21,
            0,
            8,
            0,
            17,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            31,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            1,
            0,
            255,
            1,
            255,
            255
          ],
          [
            107,
            0,
            3,
            0,
            4,
            0,
            255,
            194,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            93,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            255,
            0,
            3,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            68,
            0,
            3,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            101,
            255,
            32,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034822980014723726,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0030010270020284224,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29622472500341246,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48000,
            47536,
            47512,
            47428,
            47420,
            47606,
            47543,
            47601,
            47563,
            47660,
            47489,
            47516,
            47616,
            47594,
            47464,
            47503,
            47552,
            47608,
            47633,
            47531,
            47457,
            47441,
            47403,
            47798,
            47440,
            49431,
            47762,
            47813,
            47590,
            49797,
            47477,
            47499,
            47691,
            47462,
            47439,
            47535,
            47523,
            47390,
            47496,
            47212,
            47127,
            47616,
            47569,
            47449,
            47574,
            47428,
            47592,
            47570,
            47605,
            47517,
            47632,
            47463,
            47537,
            47611,
            47627,
            47470,
            49430,
            47591,
            47799,
            47582,
            49439,
            47491,
            47559
          ],
          [
            48000,
            47536,
            47512,
            47428,
            47420,
            47606,
            47543,
            47601,
            47563,
            47660,
            47489,
            47516,
            47616,
            47594,
            47464,
            47503,
            47552,
            47608,
            47633,
            47531,
            47457,
            47441,
            47403,
            47798,
            47440,
            49431,
            47762,
            47813,
            47590,
            49797,
            47477,
            47499,
            47691,
            47462,
            47439,
            47535,
            47523,
            47390,
            47496,
            47212,
            47127,
            47616,
            47569,
            47449,
            47574,
            47428,
            47592,
            47570,
            47605,
            47517,
            47632,
            47463,
            47537,
            47611,
            47627,
            47470,
            49430,
            47591,
            47799,
            47582,
            49439,
            47491,
            47559
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            15,
            560,
            6846,
            24923,
            39376,
            34206,
            14597,
            2798,
            351,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            63,
            649,
            6554,
            22629,
            37923,
            38237,
            21093,
            5045,
            701,
            37,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13
          ],
          [
            0,
            0,
            0,
            0,
            60,
            1888,
            14142,
            32943,
            41052,
            29508,
            9730,
            1737,
            142,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            534,
            5797,
            21806,
            38380,
            41433,
            30223,
            12496,
            2022,
            179,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            785,
            8353,
            26838,
            40866,
            43674
          ]
        ]
      },
      "call": {
        "duration": 0.13406105399917578,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016161659987119492,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06911869299801765,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48136,
            47387,
            47233,
            47791,
            49347,
            47268,
            47293,
            47067,
            47152,
            47198,
            47212,
            47307,
            47136,
            47147,
            47129,
            47291,
            47236,
            47157,
            47294,
            47045,
            47332,
            47265,
            47559,
            47272,
            47122,
            47206,
            47063,
            47152,
            47165,
            47265,
            47188,
            46969,
            47186,
            47317,
            47323,
            47313,
            47279,
            47213,
            47222,
            47291,
            47408,
            47716,
            47246,
            47001,
            47173,
            47364,
            47220,
            47178,
            47167,
            47223,
            47166,
            47276,
            47268,
            47286,
            47227,
            47363,
            47415,
            47214,
            47284,
            47345,
            47768,
            47390,
            47278
          ],
          [
            48136,
            47387,
            47233,
            47791,
            49347,
            47268,
            47293,
            47067,
            47152,
            47198,
            47212,
            47307,
            47136,
            47147,
            47129,
            47291,
            47236,
            47157,
            47294,
            47045,
            47332,
            47265,
            47559,
            47272,
            47122,
            47206,
            47063,
            47152,
            47165,
            47265,
            47188,
            46969,
            47186,
            47317,
            47323,
            47313,
            47279,
            47213,
            47222,
            47291,
            47408,
            47716,
            47246,
            47001,
            47173,
            47364,
            47220,
            47178,
            47167,
            47223,
            47166,
            47276,
            47268,
            47286,
            47227,
            47363,
            47415,
            47214,
            47284,
            47345,
            47768,
            47390,
            47278
          ],
          [
            48136,
            47387,
            47233,
            47791,
            49347,
            47268,
            47293,
            47067,
            47152,
            47198,
            47212,
            47307,
            47136,
            47147,
            47129,
            47291,
            47236,
            47157,
            47294,
            47045,
            47332,
            47265,
            47559,
            47272,
            47122,
            47206,
            47063,
            47152,
            47165,
            47265,
            47188,
            46969,
            47186,
            47317,
            47323,
            47313,
            47279,
            47213,
            47222,
            47291,
            47408,
            47716,
            47246,
            47001,
            47173,
            47364,
            47220,
            47178,
            47167,
            47223,
            47166,
            47276,
            47268,
            47286,
            47227,
            47363,
            47415,
            47214,
            47284,
            47345,
            47768,
            47390,
            47278
          ],
          [
            48136,
            47387,
            47233,
            47791,
            49347,
            47268,
            47293,
            47067,
            47152,
            47198,
            47212,
            47307,
            47136,
            47147,
            47129,
            47291,
            47236,
            47157,
            47294,
            47045,
            47332,
            47265,
            47559,
            47272,
            47122,
            47206,
            47063,
            47152,
            47165,
            47265,
            47188,
            46969,
            47186,
            47317,
            47323,
            47313,
            47279,
            47213,
            47222,
            47291,
            47408,
            47716,
            47246,
            47001,
            47173,
            47364,
            47220,
            47178,
            47167,
            47223,
            47166,
            47276,
            47268,
            47286,
            47227,
            47363,
            47415,
            47214,
            47284,
            47345,
            47768,
            47390,
            47278
          ],
          [
            48136,
            47387,
            47233,
            47791,
            49347,
            47268,
            47293,
            47067,
            47152,
            47198,
            47212,
            47307,
            47136,
            47147,
            47129,
            47291,
            47236,
            47157,
            47294,
            47045,
            47332,
            47265,
            47559,
            47272,
            47122,
            47206,
            47063,
            47152,
            47165,
            47265,
            47188,
            46969,
            47186,
            47317,
            47323,
            47313,
            47279,
            47213,
            47222,
            47291,
            47408,
            47716,
            47246,
            47001,
            47173,
            47364,
            47220,
            47178,
            47167,
            47223,
            47166,
            47276,
            47268,
            47286,
            47227,
            47363,
            47415,
            47214,
            47284,
            47345,
            47768,
            47390,
            47278
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            44,
            961,
            6370,
            19988,
            33476,
            40107,
            35730,
            24392,
            11918,
            3341,
            551,
            59,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            5,
            179,
            1706,
            9332,
            24046,
            37050,
            41745,
            36538,
            21963,
            7788,
            2090,
            214,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            199,
            1275,
            4865,
            13229,
            25214,
            37624,
            43377,
            38667,
            22634,
            8686,
            1901,
            199,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            24,
            450,
            2457,
            6900,
            14892,
            29771,
            39714,
            36759,
            27969,
            13873,
            4250,
            704,
            35,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            58
          ],
          [
            11861,
            3320,
            304,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            112,
            1518,
            8636,
            20559,
            32740,
            38986,
            29845,
            15347,
            5564,
            762,
            68,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            62,
            741,
            5111,
            15468,
            28290,
            35582,
            32859,
            21865,
            8632,
            1713,
            149,
            1,
            0,
            0,
            0,
            0
          ],
          [
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            76,
            1097,
            6678,
            16714,
            27576,
            38518,
            40987,
            31743,
            20452,
            10208,
            2889,
            389,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            117,
            938,
            4537,
            15033,
            27283,
            35273,
            32895,
            23242,
            11577,
            3626,
            585,
            55,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            165,
            1633,
            5587,
            15989,
            27127,
            36992,
            41034,
            37489,
            24936,
            13931,
            4056,
            715,
            41,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            32,
            571,
            2608,
            7934,
            17928,
            29880,
            36886,
            36256,
            30851,
            22742,
            13182,
            5211,
            1243,
            66,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.2721153470010904,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffffa86852d0>()\n +    where <built-in method all of numpy.ndarray object at 0xffffa86852d0> = array([14, 12, 13, 14, 11]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffffa88635e0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48136, 47387, 47233, 47791, 49347, 47268, ...], [48136, 47387, 47233, 47791, 49347, 47268, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [11861, 3320, 304, 14, 0, 0, ...], [71, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffffa86852d0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffffa86852d0> = array([14, 12, 13, 14, 11]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.001642477000132203,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29227462700146134,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1708310169997276,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004806946999451611,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}