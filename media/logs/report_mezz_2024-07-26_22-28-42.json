{
  "created": 1722032941.4373064,
  "duration": 23.22349214553833,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5050906910000776,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.148490732000937,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013244689980638213,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0039024869984132238,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1481197430002794,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012581980008690152,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13197089499954018,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1217431269978988,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012748480003210716,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038768659978813957,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12108155299938517,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012755380012094975,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034432960019330494,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1467641029994411,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011768659969675355,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034618969984876458,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11985491499945056,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011498659987410065,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003455025998846395,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14622943199719884,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011730259975593071,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00337864500033902,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11989118599740323,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011654359987005591,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004513570998824434,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002083726998534985,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011338750009599607,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034144360033678822,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017222179994860198,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0010900440029217862,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.00340159500046866,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004061939998791786,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032924.0134375,
            "msecs": 13.437509536743164,
            "relativeCreated": 7774.764537811279,
            "thread": 281473647181856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4955
          }
        ]
      },
      "teardown": {
        "duration": 0.00123185800111969,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003458567000052426,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00241232400003355,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032924.0258138,
            "msecs": 25.813817977905273,
            "relativeCreated": 7787.140846252441,
            "thread": 281473647181856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4955
          }
        ]
      },
      "teardown": {
        "duration": 0.001135585000156425,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002175467998313252,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0027501009972183965,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032924.0354,
            "msecs": 35.3999137878418,
            "relativeCreated": 7796.726942062378,
            "thread": 281473647181856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4955
          }
        ]
      },
      "teardown": {
        "duration": 0.001068474000931019,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002200429000367876,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.003449717001785757,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032924.0449305,
            "msecs": 44.930458068847656,
            "relativeCreated": 7806.257486343384,
            "thread": 281473647181856,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4955
          }
        ]
      },
      "teardown": {
        "duration": 0.0010559040019870736,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034674769995035604,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14642917600212968,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011501359986141324,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0034131459979107603,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12023118400247768,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011570659989956766,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17958264400294865,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14779702599844313,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001243828002770897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015242168999975547,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12099538999973447,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012541479991341475,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8328577550018963,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            10,
            3,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            106,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            8,
            122,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            1,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          5,
          5
        ],
        "second_max_width": [
          3,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003594199999497505,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028367730010359082,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.900914992998878,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            9,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            189,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            28,
            255,
            255,
            255,
            16
          ],
          [
            4,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            61,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            39,
            151,
            0,
            0,
            0,
            0
          ],
          [
            0,
            8,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            122,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            147,
            0,
            103,
            255
          ],
          [
            255,
            0,
            213,
            0,
            255,
            0,
            205,
            75,
            255,
            255,
            255,
            2
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003536268999596359,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028596039992407896,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3024984059993585,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48694,
            47961,
            47747,
            47723,
            47707,
            47786,
            47579,
            47650,
            47495,
            47554,
            47651,
            47668,
            47669,
            47860,
            47360,
            47406,
            47750,
            47666,
            47628,
            47845,
            47777,
            47588,
            47672,
            47733,
            47641,
            47701,
            47801,
            49073,
            47783,
            47899,
            47807,
            50190,
            47737,
            47764,
            47749,
            47515,
            47575,
            47653,
            47708,
            47477,
            47696,
            47559,
            47700,
            47809,
            47765,
            47608,
            47603,
            47632,
            47618,
            47845,
            47792,
            47680,
            47714,
            47749,
            47728,
            47887,
            47733,
            47870,
            47703,
            47645,
            47717,
            47805,
            49277
          ],
          [
            48694,
            47961,
            47747,
            47723,
            47707,
            47786,
            47579,
            47650,
            47495,
            47554,
            47651,
            47668,
            47669,
            47860,
            47360,
            47406,
            47750,
            47666,
            47628,
            47845,
            47777,
            47588,
            47672,
            47733,
            47641,
            47701,
            47801,
            49073,
            47783,
            47899,
            47807,
            50190,
            47737,
            47764,
            47749,
            47515,
            47575,
            47653,
            47708,
            47477,
            47696,
            47559,
            47700,
            47809,
            47765,
            47608,
            47603,
            47632,
            47618,
            47845,
            47792,
            47680,
            47714,
            47749,
            47728,
            47887,
            47733,
            47870,
            47703,
            47645,
            47717,
            47805,
            49277
          ]
        ],
        "eTX_errcounts": [
          [
            41087,
            25705,
            7845,
            940,
            89,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            284,
            3179,
            16479,
            35339,
            43936,
            30486,
            13982,
            2311,
            144,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            62,
            941,
            7846,
            26344,
            40651,
            37077,
            18487,
            4958,
            535,
            24,
            0,
            0,
            0
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            340,
            4668,
            18370,
            37220,
            42293,
            30871,
            12371,
            3239,
            240,
            14,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            44,
            498,
            4532,
            20127,
            36969,
            42882,
            34208,
            16349,
            3072,
            243,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13388298700010637,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0015892260016698856,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06907593600044493,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48083,
            47662,
            47491,
            47585,
            49635,
            49950,
            47157,
            47712,
            47458,
            47572,
            47557,
            47480,
            47586,
            47557,
            47424,
            47505,
            47543,
            47676,
            47584,
            47674,
            47645,
            47704,
            47562,
            47859,
            47402,
            47622,
            47453,
            47532,
            47614,
            47525,
            47424,
            47313,
            47639,
            47596,
            47694,
            47723,
            47721,
            47605,
            47459,
            47598,
            47650,
            48058,
            50247,
            47572,
            47532,
            47603,
            47504,
            47579,
            47477,
            47593,
            47467,
            47665,
            47593,
            47560,
            47630,
            47486,
            47226,
            47681,
            47571,
            47526,
            48030,
            47714,
            47586
          ],
          [
            48083,
            47662,
            47491,
            47585,
            49635,
            49950,
            47157,
            47712,
            47458,
            47572,
            47557,
            47480,
            47586,
            47557,
            47424,
            47505,
            47543,
            47676,
            47584,
            47674,
            47645,
            47704,
            47562,
            47859,
            47402,
            47622,
            47453,
            47532,
            47614,
            47525,
            47424,
            47313,
            47639,
            47596,
            47694,
            47723,
            47721,
            47605,
            47459,
            47598,
            47650,
            48058,
            50247,
            47572,
            47532,
            47603,
            47504,
            47579,
            47477,
            47593,
            47467,
            47665,
            47593,
            47560,
            47630,
            47486,
            47226,
            47681,
            47571,
            47526,
            48030,
            47714,
            47586
          ],
          [
            48083,
            47662,
            47491,
            47585,
            49635,
            49950,
            47157,
            47712,
            47458,
            47572,
            47557,
            47480,
            47586,
            47557,
            47424,
            47505,
            47543,
            47676,
            47584,
            47674,
            47645,
            47704,
            47562,
            47859,
            47402,
            47622,
            47453,
            47532,
            47614,
            47525,
            47424,
            47313,
            47639,
            47596,
            47694,
            47723,
            47721,
            47605,
            47459,
            47598,
            47650,
            48058,
            50247,
            47572,
            47532,
            47603,
            47504,
            47579,
            47477,
            47593,
            47467,
            47665,
            47593,
            47560,
            47630,
            47486,
            47226,
            47681,
            47571,
            47526,
            48030,
            47714,
            47586
          ],
          [
            48083,
            47662,
            47491,
            47585,
            49635,
            49950,
            47157,
            47712,
            47458,
            47572,
            47557,
            47480,
            47586,
            47557,
            47424,
            47505,
            47543,
            47676,
            47584,
            47674,
            47645,
            47704,
            47562,
            47859,
            47402,
            47622,
            47453,
            47532,
            47614,
            47525,
            47424,
            47313,
            47639,
            47596,
            47694,
            47723,
            47721,
            47605,
            47459,
            47598,
            47650,
            48058,
            50247,
            47572,
            47532,
            47603,
            47504,
            47579,
            47477,
            47593,
            47467,
            47665,
            47593,
            47560,
            47630,
            47486,
            47226,
            47681,
            47571,
            47526,
            48030,
            47714,
            47586
          ],
          [
            48083,
            47662,
            47491,
            47585,
            49635,
            49950,
            47157,
            47712,
            47458,
            47572,
            47557,
            47480,
            47586,
            47557,
            47424,
            47505,
            47543,
            47676,
            47584,
            47674,
            47645,
            47704,
            47562,
            47859,
            47402,
            47622,
            47453,
            47532,
            47614,
            47525,
            47424,
            47313,
            47639,
            47596,
            47694,
            47723,
            47721,
            47605,
            47459,
            47598,
            47650,
            48058,
            50247,
            47572,
            47532,
            47603,
            47504,
            47579,
            47477,
            47593,
            47467,
            47665,
            47593,
            47560,
            47630,
            47486,
            47226,
            47681,
            47571,
            47526,
            48030,
            47714,
            47586
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            27,
            505,
            2992,
            10098,
            22861,
            33838,
            36290,
            31799,
            20048,
            9099,
            2336,
            404,
            70,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            51,
            922,
            4841,
            12637,
            24632,
            34799,
            35740,
            31475,
            22948,
            11556,
            4227,
            942,
            132,
            5,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            16,
            200,
            1456,
            4469,
            10201,
            22459,
            36610,
            39431,
            35069,
            25140,
            15487,
            8532,
            3236,
            692,
            64,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            197,
            1526,
            5852,
            15802,
            27352,
            32731,
            35212,
            36181,
            27813,
            16516,
            6623,
            1528,
            140,
            16,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            77,
            653,
            2471,
            6350,
            14152,
            27895
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            93,
            1161,
            5520,
            17705,
            31706,
            35878,
            32579,
            23211,
            12207,
            4881,
            893,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            188,
            1427,
            6573,
            15662,
            30131,
            36264,
            33360,
            23360,
            11880,
            3155,
            406,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            33,
            382,
            2363,
            8881,
            20519,
            34067,
            38039,
            34304,
            26348,
            16191,
            6941,
            1722,
            124,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            735,
            3250,
            8382,
            18197,
            28044,
            36314,
            34254,
            25381,
            15402,
            7160,
            1715,
            158,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            14,
            210,
            1285,
            3789,
            7936,
            18809,
            34412,
            39685,
            37004,
            30799,
            22648,
            14160,
            7965,
            2892,
            287,
            46,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            120,
            1279,
            5011,
            12703,
            25554,
            33342,
            35859,
            37507,
            33454,
            24690,
            15655,
            7213,
            1978,
            174,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            141,
            1056,
            3362,
            8945
          ]
        ]
      },
      "call": {
        "duration": 0.2724586190015543,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff9c062f90>()\n +    where <built-in method all of numpy.ndarray object at 0xffff9c062f90> = array([20, 12, 19, 20, 11]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff9c0464f0>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48083, 47662, 47491, 47585, 49635, 49950, ...], [48083, 47662, 47491, 47585, 49635, 49950, ...], [... ...], [0, 0, 16, 200, 1456, 4469, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 14, 210, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff9c062f90>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff9c062f90> = array([20, 12, 19, 20, 11]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016062360009527765,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292973345000064,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169004880997818,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014319020010589156,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.292008968997834,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            5,
            18,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            6,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            20,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            12,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            39,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            19,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            194,
            87,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            23,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0036103410020587035,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002834342998539796,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5400556290005625,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            244,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            12,
            255,
            211,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            81,
            255,
            125,
            255,
            97,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            226,
            0,
            161,
            1,
            255,
            45,
            255,
            16
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            63,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            1,
            255,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            1,
            255,
            167,
            255,
            237,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            218,
            255,
            165,
            255,
            255,
            5,
            0,
            149,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            107,
            255,
            152
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034750080012599938,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028737940010614693,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2956745150004281,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48465,
            47893,
            49645,
            47613,
            47927,
            47704,
            47854,
            47686,
            47747,
            47710,
            47652,
            47853,
            47608,
            47647,
            47594,
            47679,
            47538,
            47685,
            47647,
            47813,
            47730,
            47627,
            47724,
            47839,
            47754,
            47610,
            47589,
            47630,
            47717,
            47538,
            47710,
            47528,
            47654,
            47609,
            47692,
            49787,
            47630,
            47804,
            47806,
            50377,
            47759,
            47822,
            47722,
            47633,
            47431,
            47511,
            47597,
            47338,
            47347,
            47653,
            47667,
            47603,
            47572,
            47715,
            47575,
            47627,
            47583,
            47528,
            47616,
            47767,
            47684,
            47850,
            47642
          ],
          [
            48465,
            47893,
            49645,
            47613,
            47927,
            47704,
            47854,
            47686,
            47747,
            47710,
            47652,
            47853,
            47608,
            47647,
            47594,
            47679,
            47538,
            47685,
            47647,
            47813,
            47730,
            47627,
            47724,
            47839,
            47754,
            47610,
            47589,
            47630,
            47717,
            47538,
            47710,
            47528,
            47654,
            47609,
            47692,
            49787,
            47630,
            47804,
            47806,
            50377,
            47759,
            47822,
            47722,
            47633,
            47431,
            47511,
            47597,
            47338,
            47347,
            47653,
            47667,
            47603,
            47572,
            47715,
            47575,
            47627,
            47583,
            47528,
            47616,
            47767,
            47684,
            47850,
            47642
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            304,
            3793,
            18376,
            36629,
            36197,
            18601,
            4348,
            406,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            177,
            3066,
            17665,
            35278,
            39313,
            24777,
            7755,
            876,
            73,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            72,
            992,
            8461,
            29687,
            42300,
            39109,
            17987,
            4424,
            431,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            175,
            2655,
            14745,
            32052,
            42895,
            37912,
            20306,
            5242,
            521,
            49,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1338412260010955,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016042559982452076,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06887622100111912,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48260,
            47543,
            47434,
            47558,
            47594,
            47602,
            47641,
            47601,
            47512,
            48009,
            47548,
            47355,
            47705,
            47573,
            47385,
            47473,
            47323,
            47472,
            47499,
            47429,
            47433,
            47693,
            47630,
            47260,
            47610,
            47678,
            47600,
            47528,
            47951,
            47390,
            47298,
            47431,
            47433,
            47461,
            47535,
            47570,
            47361,
            47599,
            47457,
            47574,
            47587,
            47699,
            47445,
            47610,
            47581,
            47633,
            47618,
            47999,
            47758,
            47618,
            47494,
            47405,
            47408,
            47566,
            47538,
            47339,
            47344,
            47566,
            47469,
            47588,
            47388,
            47587,
            47605
          ],
          [
            48260,
            47543,
            47434,
            47558,
            47594,
            47602,
            47641,
            47601,
            47512,
            48009,
            47548,
            47355,
            47705,
            47573,
            47385,
            47473,
            47323,
            47472,
            47499,
            47429,
            47433,
            47693,
            47630,
            47260,
            47610,
            47678,
            47600,
            47528,
            47951,
            47390,
            47298,
            47431,
            47433,
            47461,
            47535,
            47570,
            47361,
            47599,
            47457,
            47574,
            47587,
            47699,
            47445,
            47610,
            47581,
            47633,
            47618,
            47999,
            47758,
            47618,
            47494,
            47405,
            47408,
            47566,
            47538,
            47339,
            47344,
            47566,
            47469,
            47588,
            47388,
            47587,
            47605
          ],
          [
            48260,
            47543,
            47434,
            47558,
            47594,
            47602,
            47641,
            47601,
            47512,
            48009,
            47548,
            47355,
            47705,
            47573,
            47385,
            47473,
            47323,
            47472,
            47499,
            47429,
            47433,
            47693,
            47630,
            47260,
            47610,
            47678,
            47600,
            47528,
            47951,
            47390,
            47298,
            47431,
            47433,
            47461,
            47535,
            47570,
            47361,
            47599,
            47457,
            47574,
            47587,
            47699,
            47445,
            47610,
            47581,
            47633,
            47618,
            47999,
            47758,
            47618,
            47494,
            47405,
            47408,
            47566,
            47538,
            47339,
            47344,
            47566,
            47469,
            47588,
            47388,
            47587,
            47605
          ],
          [
            48260,
            47543,
            47434,
            47558,
            47594,
            47602,
            47641,
            47601,
            47512,
            48009,
            47548,
            47355,
            47705,
            47573,
            47385,
            47473,
            47323,
            47472,
            47499,
            47429,
            47433,
            47693,
            47630,
            47260,
            47610,
            47678,
            47600,
            47528,
            47951,
            47390,
            47298,
            47431,
            47433,
            47461,
            47535,
            47570,
            47361,
            47599,
            47457,
            47574,
            47587,
            47699,
            47445,
            47610,
            47581,
            47633,
            47618,
            47999,
            47758,
            47618,
            47494,
            47405,
            47408,
            47566,
            47538,
            47339,
            47344,
            47566,
            47469,
            47588,
            47388,
            47587,
            47605
          ],
          [
            48260,
            47543,
            47434,
            47558,
            47594,
            47602,
            47641,
            47601,
            47512,
            48009,
            47548,
            47355,
            47705,
            47573,
            47385,
            47473,
            47323,
            47472,
            47499,
            47429,
            47433,
            47693,
            47630,
            47260,
            47610,
            47678,
            47600,
            47528,
            47951,
            47390,
            47298,
            47431,
            47433,
            47461,
            47535,
            47570,
            47361,
            47599,
            47457,
            47574,
            47587,
            47699,
            47445,
            47610,
            47581,
            47633,
            47618,
            47999,
            47758,
            47618,
            47494,
            47405,
            47408,
            47566,
            47538,
            47339,
            47344,
            47566,
            47469,
            47588,
            47388,
            47587,
            47605
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            418,
            3119,
            13529,
            26441,
            34721,
            33503,
            22556,
            10220,
            2713,
            412,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            76,
            998,
            5209,
            15701,
            26952,
            36395,
            39108,
            30828,
            17567,
            4470,
            645,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            1,
            193,
            1615,
            7195,
            19585,
            33874,
            39415,
            32693,
            18245,
            5747,
            889,
            40,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            265,
            1990,
            11012,
            25223,
            37124,
            42798,
            40234,
            29527,
            15558,
            4296,
            512,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            41,
            393,
            2440,
            8260,
            19447,
            32440,
            37646
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            19,
            464,
            3922,
            16701,
            31431,
            37142,
            31937,
            17738,
            6600,
            1098,
            73,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            46,
            1139,
            8143,
            22456,
            38279,
            41844,
            35651,
            22223,
            9106,
            1695,
            122,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10,
            165,
            1374,
            6417,
            20135,
            34852,
            38956,
            33499,
            20025,
            7848,
            1538,
            118,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            322,
            3103,
            13035,
            24938,
            34642,
            38681,
            35422,
            25243,
            11643,
            3260,
            193,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            4,
            216,
            2296,
            9692,
            22060,
            34077,
            39813,
            35408,
            23915,
            11894,
            2831,
            328,
            23,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            26,
            564,
            4109,
            14899,
            27327,
            36788,
            40872,
            37794,
            26922,
            12729,
            3558,
            411,
            21,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            120,
            997,
            6136,
            16307,
            32252
          ]
        ]
      },
      "call": {
        "duration": 0.27026589999877615,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014648120013589505,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2913708289997885,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1688580269983504,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014182220002112444,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3659387430016068,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            98,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            36,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            244,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003559459997632075,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028816839985665865,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5350119760005327,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            2,
            255,
            6,
            255,
            1,
            56,
            0,
            255,
            1,
            255,
            255
          ],
          [
            85,
            0,
            23,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            37,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            225,
            255,
            0,
            9,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            24,
            0,
            0,
            0,
            13,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            11,
            255,
            52,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            1,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            1,
            5,
            0,
            255,
            6,
            255,
            255
          ],
          [
            89,
            0,
            2,
            0,
            5,
            0,
            255,
            215,
            255,
            255,
            255,
            4
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            89,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            5,
            0,
            0
          ],
          [
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            83,
            0,
            10,
            0,
            25,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            2,
            255,
            101,
            255,
            51,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034604870015755296,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028546829998958856,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29627350800001295,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48268,
            47529,
            47638,
            47565,
            47623,
            47617,
            47586,
            47643,
            47597,
            47572,
            47573,
            47467,
            47396,
            47690,
            47568,
            47448,
            47649,
            47643,
            49602,
            47566,
            48014,
            47543,
            49763,
            47791,
            48289,
            47783,
            47575,
            47586,
            47520,
            47636,
            47644,
            47528,
            47753,
            47699,
            47662,
            47615,
            47717,
            47640,
            47776,
            47657,
            47690,
            47643,
            47702,
            47545,
            47625,
            47589,
            47741,
            47669,
            47676,
            49555,
            47657,
            47633,
            47593,
            49716,
            47321,
            47826,
            47783,
            47695,
            47642,
            47809,
            47796,
            47292,
            47318
          ],
          [
            48268,
            47529,
            47638,
            47565,
            47623,
            47617,
            47586,
            47643,
            47597,
            47572,
            47573,
            47467,
            47396,
            47690,
            47568,
            47448,
            47649,
            47643,
            49602,
            47566,
            48014,
            47543,
            49763,
            47791,
            48289,
            47783,
            47575,
            47586,
            47520,
            47636,
            47644,
            47528,
            47753,
            47699,
            47662,
            47615,
            47717,
            47640,
            47776,
            47657,
            47690,
            47643,
            47702,
            47545,
            47625,
            47589,
            47741,
            47669,
            47676,
            49555,
            47657,
            47633,
            47593,
            49716,
            47321,
            47826,
            47783,
            47695,
            47642,
            47809,
            47796,
            47292,
            47318
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            750,
            6835,
            25504,
            39646,
            34285,
            14720,
            2745,
            180,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            770,
            6734,
            23271,
            38389,
            37746,
            20102,
            4559,
            449,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            0,
            0,
            0,
            0,
            145,
            2163,
            15021,
            34075,
            40735,
            28798,
            8906,
            1478,
            116,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            729,
            6007,
            22721,
            38685,
            41733,
            29443,
            11794,
            1739,
            205,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            38,
            750,
            8411,
            26230,
            40628,
            43204
          ]
        ]
      },
      "call": {
        "duration": 0.1341608830007317,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016059059998951852,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06920094800079823,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48432,
            47495,
            47570,
            47514,
            47591,
            47327,
            47516,
            47492,
            47560,
            47560,
            48052,
            47548,
            47507,
            47413,
            47439,
            47552,
            47537,
            47510,
            47593,
            47373,
            47604,
            47439,
            47599,
            47583,
            47601,
            47753,
            47803,
            47661,
            49588,
            49344,
            47570,
            47394,
            47409,
            47402,
            47607,
            47441,
            47367,
            47288,
            47365,
            47440,
            47405,
            55542,
            47813,
            47481,
            47697,
            47611,
            49505,
            49340,
            47479,
            47453,
            47699,
            47424,
            47450,
            47598,
            47287,
            47543,
            47500,
            47582,
            47638,
            47491,
            47486,
            47549,
            47521
          ],
          [
            48432,
            47495,
            47570,
            47514,
            47591,
            47327,
            47516,
            47492,
            47560,
            47560,
            48052,
            47548,
            47507,
            47413,
            47439,
            47552,
            47537,
            47510,
            47593,
            47373,
            47604,
            47439,
            47599,
            47583,
            47601,
            47753,
            47803,
            47661,
            49588,
            49344,
            47570,
            47394,
            47409,
            47402,
            47607,
            47441,
            47367,
            47288,
            47365,
            47440,
            47405,
            55542,
            47813,
            47481,
            47697,
            47611,
            49505,
            49340,
            47479,
            47453,
            47699,
            47424,
            47450,
            47598,
            47287,
            47543,
            47500,
            47582,
            47638,
            47491,
            47486,
            47549,
            47521
          ],
          [
            48432,
            47495,
            47570,
            47514,
            47591,
            47327,
            47516,
            47492,
            47560,
            47560,
            48052,
            47548,
            47507,
            47413,
            47439,
            47552,
            47537,
            47510,
            47593,
            47373,
            47604,
            47439,
            47599,
            47583,
            47601,
            47753,
            47803,
            47661,
            49588,
            49344,
            47570,
            47394,
            47409,
            47402,
            47607,
            47441,
            47367,
            47288,
            47365,
            47440,
            47405,
            55542,
            47813,
            47481,
            47697,
            47611,
            49505,
            49340,
            47479,
            47453,
            47699,
            47424,
            47450,
            47598,
            47287,
            47543,
            47500,
            47582,
            47638,
            47491,
            47486,
            47549,
            47521
          ],
          [
            48432,
            47495,
            47570,
            47514,
            47591,
            47327,
            47516,
            47492,
            47560,
            47560,
            48052,
            47548,
            47507,
            47413,
            47439,
            47552,
            47537,
            47510,
            47593,
            47373,
            47604,
            47439,
            47599,
            47583,
            47601,
            47753,
            47803,
            47661,
            49588,
            49344,
            47570,
            47394,
            47409,
            47402,
            47607,
            47441,
            47367,
            47288,
            47365,
            47440,
            47405,
            55542,
            47813,
            47481,
            47697,
            47611,
            49505,
            49340,
            47479,
            47453,
            47699,
            47424,
            47450,
            47598,
            47287,
            47543,
            47500,
            47582,
            47638,
            47491,
            47486,
            47549,
            47521
          ],
          [
            48432,
            47495,
            47570,
            47514,
            47591,
            47327,
            47516,
            47492,
            47560,
            47560,
            48052,
            47548,
            47507,
            47413,
            47439,
            47552,
            47537,
            47510,
            47593,
            47373,
            47604,
            47439,
            47599,
            47583,
            47601,
            47753,
            47803,
            47661,
            49588,
            49344,
            47570,
            47394,
            47409,
            47402,
            47607,
            47441,
            47367,
            47288,
            47365,
            47440,
            47405,
            55542,
            47813,
            47481,
            47697,
            47611,
            49505,
            49340,
            47479,
            47453,
            47699,
            47424,
            47450,
            47598,
            47287,
            47543,
            47500,
            47582,
            47638,
            47491,
            47486,
            47549,
            47521
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            230,
            2134,
            8947,
            18759,
            28384,
            36007,
            35415,
            26577,
            12840,
            2834,
            318,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            348,
            2921,
            10862,
            24757,
            36281,
            38222,
            32467,
            19252,
            7551,
            2083,
            316,
            25,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            66,
            673,
            4905,
            16648,
            27394,
            35173,
            38921,
            36336,
            25385,
            12641,
            4710,
            805,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            147,
            1563,
            5914,
            16412,
            28346,
            41538,
            34328,
            25691,
            12577,
            4085,
            704,
            26,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6
          ],
          [
            13660,
            5172,
            915,
            53,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            254,
            2546,
            11504,
            23929,
            35873,
            39809,
            32295,
            18634,
            7737,
            1546,
            64,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            391,
            4333,
            15804,
            29160,
            38890,
            35708,
            22719,
            9147,
            2206,
            150,
            0,
            0,
            0,
            0,
            0
          ],
          [
            74,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            88,
            1131,
            7913,
            19989,
            31692,
            39257,
            39607,
            33706,
            23741,
            11395,
            3507,
            332,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            64,
            542,
            3776,
            13973,
            25931,
            35750,
            33697,
            21827,
            10193,
            4001,
            827,
            41,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            97,
            1336,
            6348,
            18533,
            29327,
            37195,
            39542,
            34892,
            23534,
            12641,
            3066,
            360,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            258,
            1736,
            7198,
            21164,
            30541,
            39458,
            40203,
            33204,
            22693,
            12743,
            5487,
            1364,
            91,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.2709326340009284,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014602830015064683,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29181489899929147,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1685135290026665,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0047840570005064365,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}