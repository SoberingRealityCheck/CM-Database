{
  "created": 1722032191.8174965,
  "duration": 23.44878077507019,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 31,
    "failed": 2,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.505518824000319,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1477807640003448,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013422900010482408,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038243950002652127,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1475866299988411,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012957590006408282,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13293325400081812,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12146990899782395,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012893389975943137,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0038165949990798254,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12071377299798769,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012766489999194164,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003364575000887271,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14613267699678545,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001246887997695012,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033753449970390648,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11963248900065082,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011901559992111288,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033698250008455943,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1459217429983255,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011874560004798695,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003339104001497617,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11966320899955463,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011796569997386541,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004452848999790149,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021009769989177585,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011309949986753054,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033432449999963865,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0017504190000181552,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001085214000340784,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003318523999041645,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004046789999847533,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032174.1167982,
            "msecs": 116.79816246032715,
            "relativeCreated": 7721.650123596191,
            "thread": 281473579343904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4592
          }
        ]
      },
      "teardown": {
        "duration": 0.0011858660000143573,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033849149986053817,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024078829992504325,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032174.1291246,
            "msecs": 129.12464141845703,
            "relativeCreated": 7733.976602554321,
            "thread": 281473579343904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4592
          }
        ]
      },
      "teardown": {
        "duration": 0.0011654059999273159,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020852570014540106,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.002712780998990638,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032174.138609,
            "msecs": 138.6089324951172,
            "relativeCreated": 7743.460893630981,
            "thread": 281473579343904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4592
          }
        ]
      },
      "teardown": {
        "duration": 0.001029622999340063,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.002073465999274049,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034094260008714627,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032174.1480546,
            "msecs": 148.0545997619629,
            "relativeCreated": 7752.906560897827,
            "thread": 281473579343904,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4592
          }
        ]
      },
      "teardown": {
        "duration": 0.0010877040003833827,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033500239987915847,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14618967799833626,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011993669977528043,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003355004999320954,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.11992190499950084,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012098670013074297,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17717559699667618,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14729586300018127,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012687579983321484,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015184507999947527,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12088783599756425,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001254508002602961,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8431354470012593,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            5,
            5,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            114,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            5,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            7,
            113,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035643199989863206,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029351149969443213,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.8961650040000677,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            1,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            13,
            19,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            3,
            255,
            0,
            0,
            0,
            0,
            0,
            4
          ],
          [
            203,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            160,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            24,
            255,
            255,
            255,
            12
          ],
          [
            9,
            0,
            1,
            0,
            1,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            56,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            37,
            123,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            120,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            194,
            255,
            255,
            255,
            255,
            0,
            0,
            116,
            0,
            93,
            255
          ],
          [
            255,
            0,
            142,
            0,
            255,
            0,
            137,
            36,
            255,
            255,
            255,
            1
          ]
        ],
        "maxwidth": [
          4,
          4,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.003507288001856068,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029593860017484985,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3027393970005505,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48375,
            47585,
            47492,
            47409,
            47552,
            49952,
            47559,
            47560,
            47703,
            47518,
            47680,
            47681,
            47476,
            47518,
            47671,
            47394,
            47479,
            47485,
            47418,
            47361,
            47487,
            47453,
            47485,
            47552,
            47512,
            47509,
            47655,
            47511,
            47620,
            47655,
            47457,
            47488,
            47500,
            47274,
            52259,
            47775,
            49048,
            47642,
            47743,
            47682,
            47406,
            47512,
            47331,
            47611,
            47521,
            47684,
            47578,
            47537,
            47463,
            47551,
            47574,
            47464,
            47459,
            47670,
            47381,
            47512,
            47596,
            47493,
            47442,
            47447,
            47454,
            47581,
            47495
          ],
          [
            48375,
            47585,
            47492,
            47409,
            47552,
            49952,
            47559,
            47560,
            47703,
            47518,
            47680,
            47681,
            47476,
            47518,
            47671,
            47394,
            47479,
            47485,
            47418,
            47361,
            47487,
            47453,
            47485,
            47552,
            47512,
            47509,
            47655,
            47511,
            47620,
            47655,
            47457,
            47488,
            47500,
            47274,
            52259,
            47775,
            49048,
            47642,
            47743,
            47682,
            47406,
            47512,
            47331,
            47611,
            47521,
            47684,
            47578,
            47537,
            47463,
            47551,
            47574,
            47464,
            47459,
            47670,
            47381,
            47512,
            47596,
            47493,
            47442,
            47447,
            47454,
            47581,
            47495
          ]
        ],
        "eTX_errcounts": [
          [
            40065,
            26742,
            8377,
            1576,
            102,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            235,
            3238,
            16194,
            34643,
            41997,
            31599,
            14361,
            2131,
            155,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            49,
            847,
            7614,
            25553,
            39606,
            38327,
            19347,
            5181,
            605,
            34,
            0,
            0,
            0
          ],
          [
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            334,
            3945,
            17331,
            35886,
            42728,
            31626,
            13569,
            2899,
            324,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            413,
            3760,
            18863,
            36544,
            42799,
            35388,
            17496,
            3363,
            347,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13421578300039982,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016141260020958725,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0688472100009676,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48055,
            47258,
            47126,
            47246,
            47099,
            47376,
            47210,
            47277,
            47289,
            47366,
            47278,
            47357,
            47332,
            47270,
            47414,
            47710,
            47375,
            47363,
            47218,
            47335,
            47208,
            47221,
            47217,
            47264,
            47241,
            47467,
            47217,
            47362,
            47252,
            47400,
            47473,
            47225,
            49024,
            49122,
            47179,
            47292,
            47133,
            47221,
            47206,
            47185,
            46994,
            47213,
            47210,
            47176,
            47269,
            47228,
            47146,
            47314,
            47350,
            47237,
            49129,
            49196,
            47221,
            47300,
            47355,
            47377,
            47351,
            47288,
            47247,
            47199,
            47243,
            47112,
            47320
          ],
          [
            48055,
            47258,
            47126,
            47246,
            47099,
            47376,
            47210,
            47277,
            47289,
            47366,
            47278,
            47357,
            47332,
            47270,
            47414,
            47710,
            47375,
            47363,
            47218,
            47335,
            47208,
            47221,
            47217,
            47264,
            47241,
            47467,
            47217,
            47362,
            47252,
            47400,
            47473,
            47225,
            49024,
            49122,
            47179,
            47292,
            47133,
            47221,
            47206,
            47185,
            46994,
            47213,
            47210,
            47176,
            47269,
            47228,
            47146,
            47314,
            47350,
            47237,
            49129,
            49196,
            47221,
            47300,
            47355,
            47377,
            47351,
            47288,
            47247,
            47199,
            47243,
            47112,
            47320
          ],
          [
            48055,
            47258,
            47126,
            47246,
            47099,
            47376,
            47210,
            47277,
            47289,
            47366,
            47278,
            47357,
            47332,
            47270,
            47414,
            47710,
            47375,
            47363,
            47218,
            47335,
            47208,
            47221,
            47217,
            47264,
            47241,
            47467,
            47217,
            47362,
            47252,
            47400,
            47473,
            47225,
            49024,
            49122,
            47179,
            47292,
            47133,
            47221,
            47206,
            47185,
            46994,
            47213,
            47210,
            47176,
            47269,
            47228,
            47146,
            47314,
            47350,
            47237,
            49129,
            49196,
            47221,
            47300,
            47355,
            47377,
            47351,
            47288,
            47247,
            47199,
            47243,
            47112,
            47320
          ],
          [
            48055,
            47258,
            47126,
            47246,
            47099,
            47376,
            47210,
            47277,
            47289,
            47366,
            47278,
            47357,
            47332,
            47270,
            47414,
            47710,
            47375,
            47363,
            47218,
            47335,
            47208,
            47221,
            47217,
            47264,
            47241,
            47467,
            47217,
            47362,
            47252,
            47400,
            47473,
            47225,
            49024,
            49122,
            47179,
            47292,
            47133,
            47221,
            47206,
            47185,
            46994,
            47213,
            47210,
            47176,
            47269,
            47228,
            47146,
            47314,
            47350,
            47237,
            49129,
            49196,
            47221,
            47300,
            47355,
            47377,
            47351,
            47288,
            47247,
            47199,
            47243,
            47112,
            47320
          ],
          [
            48055,
            47258,
            47126,
            47246,
            47099,
            47376,
            47210,
            47277,
            47289,
            47366,
            47278,
            47357,
            47332,
            47270,
            47414,
            47710,
            47375,
            47363,
            47218,
            47335,
            47208,
            47221,
            47217,
            47264,
            47241,
            47467,
            47217,
            47362,
            47252,
            47400,
            47473,
            47225,
            49024,
            49122,
            47179,
            47292,
            47133,
            47221,
            47206,
            47185,
            46994,
            47213,
            47210,
            47176,
            47269,
            47228,
            47146,
            47314,
            47350,
            47237,
            49129,
            49196,
            47221,
            47300,
            47355,
            47377,
            47351,
            47288,
            47247,
            47199,
            47243,
            47112,
            47320
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            27,
            536,
            2677,
            9594,
            21140,
            32142,
            36562,
            32307,
            20256,
            7581,
            1425,
            191,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            54,
            618,
            3615,
            11087,
            23904,
            32470,
            34897,
            29824,
            23540,
            15523,
            7136,
            1375,
            105,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            32,
            504,
            2768,
            9956,
            20825,
            32620,
            36821,
            34470,
            26355,
            15405,
            5748,
            1142,
            180,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            99,
            1106,
            4679,
            11274,
            21182,
            32701,
            41331,
            40150,
            29955,
            18197,
            6495,
            1195,
            41,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            120,
            1162,
            4614,
            12414,
            22515
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            196,
            1561,
            6757,
            16696,
            29987,
            36507,
            33108,
            24141,
            13284,
            4139,
            684,
            21,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            122,
            1318,
            6796,
            17021,
            31080,
            34987,
            31878,
            24477,
            14710,
            4685,
            683,
            17,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            28,
            286,
            2395,
            8822,
            18292,
            29640,
            38138,
            35533,
            25794,
            13776,
            4029,
            457,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            43,
            610,
            2812,
            6775,
            15574,
            30148,
            38190,
            35810,
            28887,
            18224,
            7187,
            1373,
            93,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            15,
            151,
            989,
            3487,
            8849,
            19689,
            32197,
            38206,
            37423,
            31727,
            22844,
            10833,
            3425,
            461,
            31,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            160,
            1414,
            4865,
            9922,
            17368,
            29561,
            39847,
            41192,
            34860,
            23939,
            11871,
            3853,
            835,
            127,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            66,
            647,
            2929,
            8087
          ]
        ]
      },
      "call": {
        "duration": 0.2728888839992578,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff97f5ebd0>()\n +    where <built-in method all of numpy.ndarray object at 0xffff97f5ebd0> = array([21, 13, 19, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff97fb5490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[48055, 47258, 47126, 47246, 47099, 47376, ...], [48055, 47258, 47126, 47246, 47099, 47376, ...], [... 0, ...], [0, 0, 0, 32, 504, 2768, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 15, 151, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff97f5ebd0>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff97f5ebd0> = array([21, 13, 19, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016398660009144805,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29263658299896633,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.1704337200026202,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014632530001108535,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.303082586000528,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            6,
            52,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            22,
            255,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            214,
            64,
            1,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            9,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          6,
          5,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003503298001305666,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028930539992870763,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5379148639985942,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            207,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            158,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            133,
            255,
            181,
            255,
            190,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            247,
            0,
            72,
            2,
            255,
            19,
            255,
            14
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            83,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            3,
            255,
            160,
            255,
            242,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            183,
            255,
            255,
            5,
            0,
            178,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            4,
            255,
            123,
            255,
            124
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034755470005620737,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0029169049994379748,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2958162340000854,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48196,
            47569,
            47509,
            47488,
            47521,
            47393,
            47596,
            47560,
            47527,
            47494,
            47455,
            47281,
            47286,
            47625,
            47473,
            47559,
            47526,
            47473,
            47636,
            47528,
            47822,
            47758,
            47677,
            47422,
            47516,
            47557,
            47419,
            47438,
            47429,
            47408,
            47553,
            47521,
            47357,
            47561,
            47317,
            47375,
            47414,
            47576,
            47443,
            47605,
            47554,
            47476,
            47666,
            47527,
            47457,
            47576,
            47510,
            47464,
            47546,
            47788,
            47409,
            47846,
            47451,
            47605,
            47570,
            47619,
            47456,
            47458,
            47570,
            47406,
            47578,
            47205,
            47293
          ],
          [
            48196,
            47569,
            47509,
            47488,
            47521,
            47393,
            47596,
            47560,
            47527,
            47494,
            47455,
            47281,
            47286,
            47625,
            47473,
            47559,
            47526,
            47473,
            47636,
            47528,
            47822,
            47758,
            47677,
            47422,
            47516,
            47557,
            47419,
            47438,
            47429,
            47408,
            47553,
            47521,
            47357,
            47561,
            47317,
            47375,
            47414,
            47576,
            47443,
            47605,
            47554,
            47476,
            47666,
            47527,
            47457,
            47576,
            47510,
            47464,
            47546,
            47788,
            47409,
            47846,
            47451,
            47605,
            47570,
            47619,
            47456,
            47458,
            47570,
            47406,
            47578,
            47205,
            47293
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            187,
            3350,
            17062,
            35923,
            36637,
            19807,
            4340,
            632,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            152,
            2787,
            16045,
            34449,
            40112,
            26516,
            8707,
            1048,
            73,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            20,
            758,
            8510,
            28342,
            41954,
            39490,
            19641,
            5188,
            567,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            5,
            150,
            2257,
            12830,
            31024,
            42603,
            38834,
            20936,
            5782,
            692,
            35,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13416265199703048,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001649527002882678,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0687314669994521,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48195,
            47242,
            47471,
            47348,
            47275,
            46966,
            47270,
            47176,
            47353,
            47270,
            47293,
            47330,
            47680,
            47414,
            47124,
            47259,
            47135,
            47097,
            47182,
            47175,
            47265,
            47103,
            47335,
            47190,
            47225,
            47194,
            47132,
            47275,
            47283,
            47248,
            47026,
            47325,
            47505,
            47250,
            47262,
            47192,
            47306,
            47265,
            47149,
            47116,
            47162,
            47153,
            47142,
            47060,
            47216,
            47270,
            47282,
            47227,
            47255,
            47092,
            48997,
            49300,
            47336,
            47069,
            46904,
            47179,
            47161,
            47187,
            47124,
            47035,
            47219,
            47151,
            47226
          ],
          [
            48195,
            47242,
            47471,
            47348,
            47275,
            46966,
            47270,
            47176,
            47353,
            47270,
            47293,
            47330,
            47680,
            47414,
            47124,
            47259,
            47135,
            47097,
            47182,
            47175,
            47265,
            47103,
            47335,
            47190,
            47225,
            47194,
            47132,
            47275,
            47283,
            47248,
            47026,
            47325,
            47505,
            47250,
            47262,
            47192,
            47306,
            47265,
            47149,
            47116,
            47162,
            47153,
            47142,
            47060,
            47216,
            47270,
            47282,
            47227,
            47255,
            47092,
            48997,
            49300,
            47336,
            47069,
            46904,
            47179,
            47161,
            47187,
            47124,
            47035,
            47219,
            47151,
            47226
          ],
          [
            48195,
            47242,
            47471,
            47348,
            47275,
            46966,
            47270,
            47176,
            47353,
            47270,
            47293,
            47330,
            47680,
            47414,
            47124,
            47259,
            47135,
            47097,
            47182,
            47175,
            47265,
            47103,
            47335,
            47190,
            47225,
            47194,
            47132,
            47275,
            47283,
            47248,
            47026,
            47325,
            47505,
            47250,
            47262,
            47192,
            47306,
            47265,
            47149,
            47116,
            47162,
            47153,
            47142,
            47060,
            47216,
            47270,
            47282,
            47227,
            47255,
            47092,
            48997,
            49300,
            47336,
            47069,
            46904,
            47179,
            47161,
            47187,
            47124,
            47035,
            47219,
            47151,
            47226
          ],
          [
            48195,
            47242,
            47471,
            47348,
            47275,
            46966,
            47270,
            47176,
            47353,
            47270,
            47293,
            47330,
            47680,
            47414,
            47124,
            47259,
            47135,
            47097,
            47182,
            47175,
            47265,
            47103,
            47335,
            47190,
            47225,
            47194,
            47132,
            47275,
            47283,
            47248,
            47026,
            47325,
            47505,
            47250,
            47262,
            47192,
            47306,
            47265,
            47149,
            47116,
            47162,
            47153,
            47142,
            47060,
            47216,
            47270,
            47282,
            47227,
            47255,
            47092,
            48997,
            49300,
            47336,
            47069,
            46904,
            47179,
            47161,
            47187,
            47124,
            47035,
            47219,
            47151,
            47226
          ],
          [
            48195,
            47242,
            47471,
            47348,
            47275,
            46966,
            47270,
            47176,
            47353,
            47270,
            47293,
            47330,
            47680,
            47414,
            47124,
            47259,
            47135,
            47097,
            47182,
            47175,
            47265,
            47103,
            47335,
            47190,
            47225,
            47194,
            47132,
            47275,
            47283,
            47248,
            47026,
            47325,
            47505,
            47250,
            47262,
            47192,
            47306,
            47265,
            47149,
            47116,
            47162,
            47153,
            47142,
            47060,
            47216,
            47270,
            47282,
            47227,
            47255,
            47092,
            48997,
            49300,
            47336,
            47069,
            46904,
            47179,
            47161,
            47187,
            47124,
            47035,
            47219,
            47151,
            47226
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32,
            202,
            2036,
            11675,
            27517,
            38480,
            37595,
            26500,
            12801,
            2993,
            400,
            24,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            295,
            2727,
            14231,
            30381,
            40240,
            40337,
            29495,
            15445,
            4845,
            861,
            80,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            0,
            1,
            147,
            1522,
            7124,
            20518,
            36825,
            40347,
            34343,
            21770,
            9765,
            2277,
            275,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            7,
            350,
            1965,
            8634,
            21906,
            35874,
            44223,
            41960,
            28529,
            12868,
            2668,
            294,
            7,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            38,
            571,
            3054,
            8503,
            20370,
            34383,
            38311
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            42,
            860,
            6294,
            20518,
            33770,
            38945,
            32879,
            15469,
            3546,
            351,
            9,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            29,
            613,
            5338,
            17269,
            34164,
            41585,
            34523,
            19200,
            6236,
            1132,
            66,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            14,
            127,
            1589,
            9641,
            26229,
            38761,
            42151,
            34385,
            17871,
            5527,
            696,
            62,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            200,
            2147,
            8718,
            20657,
            33816,
            41528,
            35681,
            23393,
            9228,
            2484,
            244,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            24,
            207,
            2454,
            10316,
            26633,
            38563,
            39470,
            34217,
            27142,
            17111,
            5730,
            1434,
            94,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            36,
            752,
            3630,
            11750,
            25029,
            36410,
            43435,
            40775,
            29376,
            14506,
            4384,
            775,
            35,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            8,
            185,
            1513,
            6847,
            16179,
            29945
          ]
        ]
      },
      "call": {
        "duration": 0.2702888759995403,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014951730008760933,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29135234400018817,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170790247997502,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014520019976771437,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3549866499997734,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            110,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            43,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0034918980018119328,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0030255069978011306,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5395320800016634,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            19,
            255,
            27,
            255,
            5,
            38,
            1,
            255,
            2,
            255,
            255
          ],
          [
            76,
            0,
            14,
            0,
            2,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            75,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            15,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            18,
            0,
            6,
            0,
            16,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            3,
            255,
            44,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            1,
            0,
            2,
            255
          ],
          [
            255,
            0,
            255,
            2,
            255,
            2,
            3,
            0,
            255,
            3,
            255,
            255
          ],
          [
            77,
            0,
            4,
            0,
            17,
            0,
            255,
            221,
            255,
            255,
            255,
            2
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            98,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            255,
            0,
            1,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            74,
            0,
            2,
            0,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            4,
            255,
            142,
            255,
            61,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          4,
          4,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003484457000013208,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002893025000958005,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29641393600104493,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48096,
            47638,
            47488,
            47469,
            47507,
            47508,
            47592,
            47744,
            47554,
            47521,
            47585,
            47230,
            47542,
            47472,
            47509,
            47333,
            47525,
            47412,
            47548,
            47498,
            47374,
            47549,
            47515,
            47417,
            47450,
            47707,
            49225,
            47446,
            47425,
            47396,
            47788,
            47690,
            47551,
            47322,
            47432,
            47514,
            47448,
            47537,
            47563,
            47627,
            47541,
            47642,
            47527,
            47611,
            47452,
            47558,
            47520,
            47597,
            47343,
            47311,
            47515,
            47665,
            47592,
            47347,
            47475,
            47807,
            47501,
            47557,
            47564,
            47798,
            47506,
            50081,
            47528
          ],
          [
            48096,
            47638,
            47488,
            47469,
            47507,
            47508,
            47592,
            47744,
            47554,
            47521,
            47585,
            47230,
            47542,
            47472,
            47509,
            47333,
            47525,
            47412,
            47548,
            47498,
            47374,
            47549,
            47515,
            47417,
            47450,
            47707,
            49225,
            47446,
            47425,
            47396,
            47788,
            47690,
            47551,
            47322,
            47432,
            47514,
            47448,
            47537,
            47563,
            47627,
            47541,
            47642,
            47527,
            47611,
            47452,
            47558,
            47520,
            47597,
            47343,
            47311,
            47515,
            47665,
            47592,
            47347,
            47475,
            47807,
            47501,
            47557,
            47564,
            47798,
            47506,
            50081,
            47528
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            597,
            6777,
            24335,
            39481,
            34617,
            15285,
            2695,
            188,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            35,
            559,
            6193,
            21741,
            37469,
            37972,
            21350,
            5714,
            776,
            59,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10
          ],
          [
            0,
            0,
            0,
            0,
            63,
            1665,
            13955,
            32612,
            41323,
            29726,
            9771,
            1875,
            129,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            593,
            5523,
            21459,
            38129,
            42028,
            30494,
            12558,
            1967,
            223,
            22,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            748,
            7491,
            25434,
            42250,
            44078
          ]
        ]
      },
      "call": {
        "duration": 0.1341691620000347,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016356970008928329,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06911967599808122,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47850,
            47425,
            47057,
            47025,
            47103,
            47251,
            47287,
            47274,
            47221,
            47229,
            47296,
            47168,
            48672,
            47334,
            47231,
            47168,
            47223,
            47189,
            47217,
            47236,
            47182,
            47080,
            47263,
            46859,
            47163,
            47310,
            47395,
            47285,
            47243,
            47303,
            47366,
            47459,
            47191,
            47183,
            47046,
            47229,
            47144,
            47060,
            47195,
            47249,
            47175,
            47077,
            47187,
            47303,
            47157,
            47221,
            47206,
            47332,
            46929,
            47737,
            47244,
            47274,
            47173,
            47302,
            47228,
            47183,
            47212,
            47238,
            47201,
            47228,
            47164,
            47401,
            47351
          ],
          [
            47850,
            47425,
            47057,
            47025,
            47103,
            47251,
            47287,
            47274,
            47221,
            47229,
            47296,
            47168,
            48672,
            47334,
            47231,
            47168,
            47223,
            47189,
            47217,
            47236,
            47182,
            47080,
            47263,
            46859,
            47163,
            47310,
            47395,
            47285,
            47243,
            47303,
            47366,
            47459,
            47191,
            47183,
            47046,
            47229,
            47144,
            47060,
            47195,
            47249,
            47175,
            47077,
            47187,
            47303,
            47157,
            47221,
            47206,
            47332,
            46929,
            47737,
            47244,
            47274,
            47173,
            47302,
            47228,
            47183,
            47212,
            47238,
            47201,
            47228,
            47164,
            47401,
            47351
          ],
          [
            47850,
            47425,
            47057,
            47025,
            47103,
            47251,
            47287,
            47274,
            47221,
            47229,
            47296,
            47168,
            48672,
            47334,
            47231,
            47168,
            47223,
            47189,
            47217,
            47236,
            47182,
            47080,
            47263,
            46859,
            47163,
            47310,
            47395,
            47285,
            47243,
            47303,
            47366,
            47459,
            47191,
            47183,
            47046,
            47229,
            47144,
            47060,
            47195,
            47249,
            47175,
            47077,
            47187,
            47303,
            47157,
            47221,
            47206,
            47332,
            46929,
            47737,
            47244,
            47274,
            47173,
            47302,
            47228,
            47183,
            47212,
            47238,
            47201,
            47228,
            47164,
            47401,
            47351
          ],
          [
            47850,
            47425,
            47057,
            47025,
            47103,
            47251,
            47287,
            47274,
            47221,
            47229,
            47296,
            47168,
            48672,
            47334,
            47231,
            47168,
            47223,
            47189,
            47217,
            47236,
            47182,
            47080,
            47263,
            46859,
            47163,
            47310,
            47395,
            47285,
            47243,
            47303,
            47366,
            47459,
            47191,
            47183,
            47046,
            47229,
            47144,
            47060,
            47195,
            47249,
            47175,
            47077,
            47187,
            47303,
            47157,
            47221,
            47206,
            47332,
            46929,
            47737,
            47244,
            47274,
            47173,
            47302,
            47228,
            47183,
            47212,
            47238,
            47201,
            47228,
            47164,
            47401,
            47351
          ],
          [
            47850,
            47425,
            47057,
            47025,
            47103,
            47251,
            47287,
            47274,
            47221,
            47229,
            47296,
            47168,
            48672,
            47334,
            47231,
            47168,
            47223,
            47189,
            47217,
            47236,
            47182,
            47080,
            47263,
            46859,
            47163,
            47310,
            47395,
            47285,
            47243,
            47303,
            47366,
            47459,
            47191,
            47183,
            47046,
            47229,
            47144,
            47060,
            47195,
            47249,
            47175,
            47077,
            47187,
            47303,
            47157,
            47221,
            47206,
            47332,
            46929,
            47737,
            47244,
            47274,
            47173,
            47302,
            47228,
            47183,
            47212,
            47238,
            47201,
            47228,
            47164,
            47401,
            47351
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            78,
            847,
            6277,
            18965,
            33202,
            39861,
            36157,
            24153,
            11781,
            3448,
            494,
            77,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            224,
            2223,
            9346,
            23804,
            36569,
            41179,
            37252,
            22577,
            7733,
            1941,
            183,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            269,
            1410,
            4908,
            13019,
            26757,
            37797,
            43060,
            38789,
            23787,
            9186,
            2189,
            214,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            35,
            415,
            2501,
            6723,
            15093,
            29475,
            39354,
            36774,
            27375,
            13702,
            4368,
            832,
            84,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53
          ],
          [
            12189,
            2960,
            350,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            91,
            1417,
            8709,
            20350,
            32586,
            39097,
            30869,
            16230,
            5700,
            988,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            98,
            764,
            5178,
            15150,
            28158,
            35976,
            33376,
            22094,
            8915,
            1625,
            164,
            5,
            0,
            0,
            0,
            0
          ],
          [
            59,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            77,
            1086,
            6074,
            16165,
            27199,
            37955,
            40381,
            31765,
            21003,
            10257,
            3333,
            472,
            20,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            164,
            944,
            4469,
            14662,
            26339,
            35379,
            33089,
            23481,
            11634,
            3747,
            687,
            71,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            175,
            1620,
            6322,
            16327,
            27202,
            36362,
            41208,
            37580,
            25849,
            14420,
            4189,
            707,
            24,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            58,
            605,
            2678,
            7705,
            17646,
            30153,
            37365,
            35895,
            30712,
            23078,
            13795,
            5713,
            1404,
            98,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
          ]
        ]
      },
      "call": {
        "duration": 0.27260093800214236,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 354,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff97c8d750>()\n +    where <built-in method all of numpy.ndarray object at 0xffff97c8d750> = array([15, 13, 15, 13, 10]) >= 12.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 354,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff97fb5490>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47850, 47425, 47057, 47025, 47103, 47251, ...], [47850, 47425, 47057, 47025, 47103, 47251, ...], [..., ...], [0, 0, 0, 0, 0, 0, ...], [12189, 2960, 350, 15, 0, 0, ...], [59, 1, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n        assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\n>       assert (second_max_width >= 12).all()\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff97c8d750>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff97c8d750> = array([15, 13, 15, 13, 10]) >= 12.all\n\ntest_io.py:354: AssertionError"
      },
      "teardown": {
        "duration": 0.0016327260018442757,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29254607099937857,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.170366219001153,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004866557999775978,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}