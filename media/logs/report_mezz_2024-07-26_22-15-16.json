{
  "created": 1722032136.0470734,
  "duration": 23.169336557388306,
  "exitcode": 1,
  "root": "/home/jsw/mezz/econd-sw/test_mezzanine",
  "environment": {},
  "summary": {
    "passed": 32,
    "failed": 1,
    "total": 33,
    "collected": 33
  },
  "collectors": [
    {
      "nodeid": "",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py",
          "type": "Module"
        },
        {
          "nodeid": "test_io.py",
          "type": "Module"
        },
        {
          "nodeid": "test_packet_econd.py",
          "type": "Module"
        }
      ]
    },
    {
      "nodeid": "test_i2c.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
          "type": "Function",
          "lineno": 34
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
          "type": "Function",
          "lineno": 58
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 84
        },
        {
          "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 107
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
          "type": "Function",
          "lineno": 130
        },
        {
          "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
          "type": "Function",
          "lineno": 153
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_D",
          "type": "Function",
          "lineno": 176
        },
        {
          "nodeid": "test_i2c.py::test_wrong_reg_address_T",
          "type": "Function",
          "lineno": 200
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
          "type": "Function",
          "lineno": 224
        },
        {
          "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
          "type": "Function",
          "lineno": 237
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_D",
          "type": "Function",
          "lineno": 250
        },
        {
          "nodeid": "test_i2c.py::test_hold_hard_reset_T",
          "type": "Function",
          "lineno": 264
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_D",
          "type": "Function",
          "lineno": 278
        },
        {
          "nodeid": "test_i2c.py::test_hold_soft_reset_T",
          "type": "Function",
          "lineno": 299
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_D",
          "type": "Function",
          "lineno": 320
        },
        {
          "nodeid": "test_i2c.py::test_chip_sync_T",
          "type": "Function",
          "lineno": 341
        }
      ]
    },
    {
      "nodeid": "test_io.py",
      "outcome": "passed",
      "result": [
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
          "type": "Function",
          "lineno": 246
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
          "type": "Function",
          "lineno": 274
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
          "type": "Function",
          "lineno": 303
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
          "type": "Function",
          "lineno": 330
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
          "type": "Function",
          "lineno": 356
        },
        {
          "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
          "type": "Function",
          "lineno": 356
        }
      ]
    },
    {
      "nodeid": "test_packet_econd.py",
      "outcome": "passed",
      "result": []
    }
  ],
  "tests": [
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[0]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.506021575001796,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14772073199856095,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0013549210016208235,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_D[255]",
      "lineno": 34,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_D[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003800634000072023,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14766589099963312,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012794979993486777,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[0]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[0]",
        "pytestmark",
        "0",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.13301815500017256,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12212077400181442,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012852289983129594,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_rw_allregisters_T[255]",
      "lineno": 58,
      "outcome": "passed",
      "keywords": [
        "test_rw_allregisters_T[255]",
        "pytestmark",
        "255",
        "parametrize",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0037921750008536037,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12146366899833083,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012902979979116935,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_D",
      "lineno": 84,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033815249989856966,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.1472664030006854,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011859869991894811,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hard_reset_i2c_allregisters_T",
      "lineno": 107,
      "outcome": "passed",
      "keywords": [
        "test_hard_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033553339999343734,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12027639200096019,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012043169990647584,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_D",
      "lineno": 130,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033526650004205294,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14690009399782866,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011763260008592624,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_soft_reset_i2c_allregisters_T",
      "lineno": 153,
      "outcome": "passed",
      "keywords": [
        "test_soft_reset_i2c_allregisters_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033622350019868463,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12065689100199961,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012397479986248072,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_D",
      "lineno": 176,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.004406437998113688,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0021278870008245576,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011516650010889862,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_reg_address_T",
      "lineno": 200,
      "outcome": "passed",
      "keywords": [
        "test_wrong_reg_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033541939992574044,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.00170127700039302,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011166249969392084,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_D",
      "lineno": 224,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.003311382999527268,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.004024319001473486,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032118.623111,
            "msecs": 623.1110095977783,
            "relativeCreated": 7719.218492507935,
            "thread": 281473213276192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4566
          }
        ]
      },
      "teardown": {
        "duration": 0.0012342570007604081,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_wrong_i2c_address_T",
      "lineno": 237,
      "outcome": "passed",
      "keywords": [
        "test_wrong_i2c_address_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033644549985183403,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0024149339988071006,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032118.6353817,
            "msecs": 635.3816986083984,
            "relativeCreated": 7731.489181518555,
            "thread": 281473213276192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4566
          }
        ]
      },
      "teardown": {
        "duration": 0.0012127469999541063,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_D",
      "lineno": 250,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0021030759999121074,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0026699390000430867,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032118.6449628,
            "msecs": 644.9627876281738,
            "relativeCreated": 7741.07027053833,
            "thread": 281473213276192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4566
          }
        ]
      },
      "teardown": {
        "duration": 0.0010568939978838898,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_hard_reset_T",
      "lineno": 264,
      "outcome": "passed",
      "keywords": [
        "test_hold_hard_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0020855260008829646,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.0034614169999258593,
        "outcome": "passed",
        "log": [
          {
            "name": "Xil_i2c_bus_2",
            "msg": "Error occurred during read: ",
            "args": null,
            "levelname": "ERROR",
            "levelno": 40,
            "pathname": "/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py",
            "filename": "hexactrl_io.py",
            "module": "hexactrl_io",
            "exc_info": null,
            "exc_text": "Traceback (most recent call last):\n  File \"/home/jsw/mezz/econd-sw/test_mezzanine/../econ_tools/swamp/hexactrl_io.py\", line 125, in read\n    self.bus.i2c_rdwr(read)\n  File \"/home/jsw/.local/lib/python3.9/site-packages/smbus2/smbus2.py\", line 658, in i2c_rdwr\n    ioctl(self.fd, I2C_RDWR, ioctl_data)\nOSError: [Errno 5] Input/output error",
            "stack_info": null,
            "lineno": 128,
            "funcName": "read",
            "created": 1722032118.6543157,
            "msecs": 654.315710067749,
            "relativeCreated": 7750.423192977905,
            "thread": 281473213276192,
            "threadName": "MainThread",
            "processName": "MainProcess",
            "process": 4566
          }
        ]
      },
      "teardown": {
        "duration": 0.0011193549980816897,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_D",
      "lineno": 278,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033543740028108004,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14615904799939017,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011795960017479956,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_hold_soft_reset_T",
      "lineno": 299,
      "outcome": "passed",
      "keywords": [
        "test_hold_soft_reset_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0033135129997390322,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12000755700137233,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0011681059986585751,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_D",
      "lineno": 320,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_D",
        "pytestmark",
        "ECOND",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.17862916000012774,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.14734533400041983,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012592179991770536,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_i2c.py::test_chip_sync_T",
      "lineno": 341,
      "outcome": "passed",
      "keywords": [
        "test_chip_sync_T",
        "pytestmark",
        "ECONT",
        "test_i2c.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.015232239002216375,
        "outcome": "passed"
      },
      "call": {
        "duration": 0.12107056999957422,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0012769489985657856,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.08]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.8322095339972293,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            2,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            54,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            2,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            10,
            107,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          5,
          5,
          4
        ],
        "second_max_width": [
          4,
          4,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.0035748490008700173,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002927614998043282,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.08]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.9051298029989994,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            6,
            0,
            0,
            0,
            0
          ],
          [
            0,
            12,
            0,
            0,
            0,
            32,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            13,
            255,
            10,
            255,
            0,
            0,
            0,
            0,
            0,
            22
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            255,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            67,
            255,
            255,
            255,
            11
          ],
          [
            7,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            31,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            74,
            0,
            0,
            0,
            0
          ],
          [
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            175,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            191,
            255,
            255,
            255,
            255,
            0,
            0,
            235,
            0,
            185,
            255
          ],
          [
            255,
            0,
            112,
            0,
            255,
            0,
            255,
            103,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          4,
          4,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          3,
          3,
          4,
          3,
          3
        ]
      },
      "call": {
        "duration": 0.0035555590002331883,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028996539986110292,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.08]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.3025491629996395,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48334,
            47591,
            47652,
            47400,
            47442,
            47409,
            47864,
            47362,
            48828,
            47074,
            47726,
            47547,
            47601,
            47548,
            47441,
            47464,
            47492,
            47449,
            47369,
            47427,
            47315,
            47385,
            47404,
            47342,
            47010,
            47067,
            47726,
            47354,
            47508,
            47418,
            47382,
            49207,
            47455,
            47418,
            47479,
            47830,
            47478,
            47479,
            47452,
            47388,
            47584,
            47521,
            47618,
            47399,
            47505,
            47291,
            47410,
            47153,
            47334,
            47276,
            47494,
            47534,
            47564,
            47450,
            47457,
            47356,
            47328,
            47346,
            47390,
            47070,
            43596,
            47391,
            47480
          ],
          [
            48334,
            47591,
            47652,
            47400,
            47442,
            47409,
            47864,
            47362,
            48828,
            47074,
            47726,
            47547,
            47601,
            47548,
            47441,
            47464,
            47492,
            47449,
            47369,
            47427,
            47315,
            47385,
            47404,
            47342,
            47010,
            47067,
            47726,
            47354,
            47508,
            47418,
            47382,
            49207,
            47455,
            47418,
            47479,
            47830,
            47478,
            47479,
            47452,
            47388,
            47584,
            47521,
            47618,
            47399,
            47505,
            47291,
            47410,
            47153,
            47334,
            47276,
            47494,
            47534,
            47564,
            47450,
            47457,
            47356,
            47328,
            47346,
            47390,
            47070,
            43596,
            47391,
            47480
          ]
        ],
        "eTX_errcounts": [
          [
            40313,
            26663,
            8057,
            1092,
            90,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            207,
            3058,
            15689,
            33850,
            42244,
            31256,
            13957,
            2061,
            108,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            997,
            7574,
            25314,
            40814,
            37080,
            19706,
            5435,
            454,
            27,
            1,
            0,
            0
          ],
          [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            255,
            3563,
            17388,
            36260,
            41567,
            30924,
            13258,
            2936,
            365,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            445,
            4203,
            18626,
            36162,
            42747,
            35475,
            17611,
            3465,
            348,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.13488464699912583,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016244159996858798,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.08]",
      "lineno": 330,
      "outcome": "failed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.08]",
        "pytestmark",
        "1.08",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06877610899755382,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47781,
            47214,
            47111,
            47265,
            46843,
            47077,
            47174,
            46977,
            46989,
            47077,
            47058,
            384026,
            47332,
            46973,
            47237,
            47155,
            46974,
            47171,
            47015,
            47107,
            47058,
            47136,
            47033,
            47070,
            47112,
            47156,
            47089,
            47276,
            46783,
            47177,
            49453,
            48621,
            47077,
            47032,
            47020,
            47159,
            47097,
            47080,
            47108,
            47216,
            47124,
            47103,
            46953,
            47265,
            47194,
            47122,
            47223,
            47110,
            48825,
            48586,
            46995,
            47047,
            46786,
            46933,
            46979,
            47245,
            46955,
            47116,
            46905,
            47139,
            47059,
            47054,
            46987
          ],
          [
            47781,
            47214,
            47111,
            47265,
            46843,
            47077,
            47174,
            46977,
            46989,
            47077,
            47058,
            384026,
            47332,
            46973,
            47237,
            47155,
            46974,
            47171,
            47015,
            47107,
            47058,
            47136,
            47033,
            47070,
            47112,
            47156,
            47089,
            47276,
            46783,
            47177,
            49453,
            48621,
            47077,
            47032,
            47020,
            47159,
            47097,
            47080,
            47108,
            47216,
            47124,
            47103,
            46953,
            47265,
            47194,
            47122,
            47223,
            47110,
            48825,
            48586,
            46995,
            47047,
            46786,
            46933,
            46979,
            47245,
            46955,
            47116,
            46905,
            47139,
            47059,
            47054,
            46987
          ],
          [
            47781,
            47214,
            47111,
            47265,
            46843,
            47077,
            47174,
            46977,
            46989,
            47077,
            47058,
            384026,
            47332,
            46973,
            47237,
            47155,
            46974,
            47171,
            47015,
            47107,
            47058,
            47136,
            47033,
            47070,
            47112,
            47156,
            47089,
            47276,
            46783,
            47177,
            49453,
            48621,
            47077,
            47032,
            47020,
            47159,
            47097,
            47080,
            47108,
            47216,
            47124,
            47103,
            46953,
            47265,
            47194,
            47122,
            47223,
            47110,
            48825,
            48586,
            46995,
            47047,
            46786,
            46933,
            46979,
            47245,
            46955,
            47116,
            46905,
            47139,
            47059,
            47054,
            46987
          ],
          [
            47781,
            47214,
            47111,
            47265,
            46843,
            47077,
            47174,
            46977,
            46989,
            47077,
            47058,
            384026,
            47332,
            46973,
            47237,
            47155,
            46974,
            47171,
            47015,
            47107,
            47058,
            47136,
            47033,
            47070,
            47112,
            47156,
            47089,
            47276,
            46783,
            47177,
            49453,
            48621,
            47077,
            47032,
            47020,
            47159,
            47097,
            47080,
            47108,
            47216,
            47124,
            47103,
            46953,
            47265,
            47194,
            47122,
            47223,
            47110,
            48825,
            48586,
            46995,
            47047,
            46786,
            46933,
            46979,
            47245,
            46955,
            47116,
            46905,
            47139,
            47059,
            47054,
            46987
          ],
          [
            47781,
            47214,
            47111,
            47265,
            46843,
            47077,
            47174,
            46977,
            46989,
            47077,
            47058,
            384026,
            47332,
            46973,
            47237,
            47155,
            46974,
            47171,
            47015,
            47107,
            47058,
            47136,
            47033,
            47070,
            47112,
            47156,
            47089,
            47276,
            46783,
            47177,
            49453,
            48621,
            47077,
            47032,
            47020,
            47159,
            47097,
            47080,
            47108,
            47216,
            47124,
            47103,
            46953,
            47265,
            47194,
            47122,
            47223,
            47110,
            48825,
            48586,
            46995,
            47047,
            46786,
            46933,
            46979,
            47245,
            46955,
            47116,
            46905,
            47139,
            47059,
            47054,
            46987
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            43,
            5810,
            4150,
            12638,
            25684,
            34863,
            36664,
            28154,
            17461,
            8127,
            2119,
            284,
            18,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            5,
            112,
            1270,
            6218,
            14695,
            23967,
            31639,
            36291,
            33445,
            25276,
            12932,
            3658,
            633,
            35,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            6,
            102,
            825,
            3138,
            11181,
            20948,
            30793,
            37282,
            34350,
            207065,
            15416,
            5631,
            956,
            96,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            37,
            823,
            4487,
            13059,
            23733,
            33370,
            37979,
            37626,
            30740,
            20547,
            11033,
            4427,
            730,
            67,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            9,
            260,
            1634,
            6380,
            15788,
            26145
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            7,
            44,
            1031,
            6036,
            16424,
            27589,
            31987,
            32308,
            24768,
            14946,
            5805,
            1103,
            85,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            173,
            1840,
            8718,
            17401,
            28145,
            33715,
            31869,
            25221,
            16388,
            8649,
            2990,
            413,
            16,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            180,
            270,
            1927,
            8864,
            18654,
            29617,
            34437,
            33822,
            27279,
            18933,
            9413,
            2228,
            180,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            31,
            530,
            3074,
            10022,
            20638,
            29573,
            34462,
            30799,
            26358,
            19922,
            12073,
            5344,
            1020,
            55,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            35,
            775,
            3860,
            10490,
            20554,
            30559,
            311298,
            39356,
            31074,
            20784,
            10789,
            3552,
            777,
            38,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            65,
            969,
            4379,
            11508,
            21955,
            32862,
            38912,
            38934,
            33753,
            26707,
            17277,
            6955,
            1268,
            85,
            14,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            26,
            347,
            2109,
            7590
          ]
        ]
      },
      "call": {
        "duration": 0.275062163000257,
        "outcome": "failed",
        "crash": {
          "path": "/home/jsw/mezz/econd-sw/test_mezzanine/test_io.py",
          "lineno": 353,
          "message": "assert False\n +  where False = <built-in method all of numpy.ndarray object at 0xffff82241e70>()\n +    where <built-in method all of numpy.ndarray object at 0xffff82241e70> = array([22, 13, 17, 21, 12]) >= 13.all"
        },
        "traceback": [
          {
            "path": "test_io.py",
            "lineno": 353,
            "message": "AssertionError"
          }
        ],
        "longrepr": "set_voltage = None, from_IO_ECONT = <utils.io.IO object at 0xffff822ab340>, out_of_reset = None, eTX_delay_scan_setup_ECONT = None\njson_metadata = {'eTX_bitcounts': [[47781, 47214, 47111, 47265, 46843, 47077, ...], [47781, 47214, 47111, 47265, 46843, 47077, ...], [..., 0, ...], [0, 0, 6, 102, 825, 3138, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 0, ...], [0, 0, 0, 0, 0, 35, ...]]}\n\n    @pytest.mark.ECONT\n    def test_eTX_delayscan_ECONT(\n        set_voltage,\n        from_IO_ECONT,\n        out_of_reset,\n        eTX_delay_scan_setup_ECONT,\n        json_metadata\n    ):\n        \"\"\"\n        Scan the delays in \"from_IO\" and measure the bit error rate for each delay.\n        \"\"\"\n        delays, bitcounts, errcounts = from_IO_ECONT.delay_scan()\n        json_metadata[\"eTX_delays\"] = delays.tolist()\n        json_metadata[\"eTX_bitcounts\"] = bitcounts.tolist()\n        json_metadata[\"eTX_errcounts\"] = errcounts.tolist()\n    \n        max_width, second_max_width = get_max_width(errcounts.T, num_channels=5, padding=10)\n    \n        # pprint(errcounts.T)\n        # pprint(max_width)\n        # pprint(second_max_width)\n    \n>       assert (max_width >= 13).all()  ## values previously use in ECONT qc_test\nE       assert False\nE        +  where False = <built-in method all of numpy.ndarray object at 0xffff82241e70>()\nE        +    where <built-in method all of numpy.ndarray object at 0xffff82241e70> = array([22, 13, 17, 21, 12]) >= 13.all\n\ntest_io.py:353: AssertionError"
      },
      "teardown": {
        "duration": 0.0016183260013349354,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.08]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.08]",
        "pytestmark",
        "1.08",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.292400357000588,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.169157462001749,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014478920020337682,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.32]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.2910260690005089,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            4,
            20,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            3,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            13,
            255,
            7,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            20,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            1,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            14,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            241,
            51,
            6,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            10,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          5,
          4,
          5,
          4,
          4,
          4
        ],
        "second_max_width": [
          5,
          4,
          3,
          3,
          4,
          3
        ]
      },
      "call": {
        "duration": 0.0034963079997396562,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002879073999793036,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.32]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5369029409994255,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            157,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            186,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            79,
            255,
            145,
            255,
            168,
            0,
            0,
            199,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            216,
            0,
            40,
            0,
            255,
            6,
            255,
            6
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            60,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            0,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            1
          ],
          [
            3,
            255,
            138,
            255,
            168,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            234,
            255,
            173,
            255,
            255,
            2,
            0,
            105,
            0,
            255,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            0,
            255,
            55,
            255,
            178
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ]
        ],
        "maxwidth": [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        "second_max_width": [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003441225999267772,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.002887534003093606,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.32]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.2953765130005195,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48140,
            50652,
            47523,
            47586,
            47488,
            47440,
            47385,
            47428,
            47283,
            47138,
            47214,
            47292,
            47420,
            47388,
            47250,
            47484,
            47293,
            47543,
            47388,
            47526,
            47461,
            47622,
            47456,
            47700,
            47338,
            47570,
            47610,
            47544,
            47459,
            47505,
            47331,
            47501,
            47246,
            47530,
            47243,
            47486,
            47317,
            47652,
            47382,
            47551,
            47400,
            47614,
            47299,
            47487,
            47080,
            47297,
            47464,
            47614,
            47413,
            47519,
            47372,
            47494,
            47353,
            47535,
            47294,
            47858,
            47356,
            48971,
            47521,
            47419,
            47498,
            47489,
            47439
          ],
          [
            48140,
            50652,
            47523,
            47586,
            47488,
            47440,
            47385,
            47428,
            47283,
            47138,
            47214,
            47292,
            47420,
            47388,
            47250,
            47484,
            47293,
            47543,
            47388,
            47526,
            47461,
            47622,
            47456,
            47700,
            47338,
            47570,
            47610,
            47544,
            47459,
            47505,
            47331,
            47501,
            47246,
            47530,
            47243,
            47486,
            47317,
            47652,
            47382,
            47551,
            47400,
            47614,
            47299,
            47487,
            47080,
            47297,
            47464,
            47614,
            47413,
            47519,
            47372,
            47494,
            47353,
            47535,
            47294,
            47858,
            47356,
            48971,
            47521,
            47419,
            47498,
            47489,
            47439
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            235,
            3350,
            17486,
            36406,
            36553,
            19246,
            4713,
            334,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            118,
            2657,
            16628,
            34770,
            40130,
            25698,
            8425,
            1130,
            43,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            930,
            8189,
            28913,
            41944,
            39153,
            18975,
            4395,
            434,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            4,
            200,
            2527,
            13396,
            30903,
            42430,
            38752,
            20575,
            5798,
            719,
            39,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.1344892390006862,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016228860004048329,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.32]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.32]",
        "pytestmark",
        "1.32",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.0685223020009289,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47917,
            47072,
            47238,
            47132,
            46989,
            47109,
            47112,
            47042,
            47080,
            47095,
            47038,
            47094,
            47103,
            47189,
            48757,
            48654,
            47128,
            47117,
            46963,
            47073,
            47092,
            46915,
            47038,
            47039,
            47085,
            47024,
            47203,
            47001,
            47107,
            47181,
            47058,
            47038,
            48616,
            48843,
            47034,
            47120,
            47098,
            47117,
            47055,
            46935,
            47064,
            46935,
            46921,
            47206,
            47125,
            46964,
            46812,
            47201,
            47131,
            47421,
            47142,
            47092,
            47064,
            47180,
            47069,
            47089,
            47172,
            46936,
            46908,
            47168,
            47067,
            47050,
            47090
          ],
          [
            47917,
            47072,
            47238,
            47132,
            46989,
            47109,
            47112,
            47042,
            47080,
            47095,
            47038,
            47094,
            47103,
            47189,
            48757,
            48654,
            47128,
            47117,
            46963,
            47073,
            47092,
            46915,
            47038,
            47039,
            47085,
            47024,
            47203,
            47001,
            47107,
            47181,
            47058,
            47038,
            48616,
            48843,
            47034,
            47120,
            47098,
            47117,
            47055,
            46935,
            47064,
            46935,
            46921,
            47206,
            47125,
            46964,
            46812,
            47201,
            47131,
            47421,
            47142,
            47092,
            47064,
            47180,
            47069,
            47089,
            47172,
            46936,
            46908,
            47168,
            47067,
            47050,
            47090
          ],
          [
            47917,
            47072,
            47238,
            47132,
            46989,
            47109,
            47112,
            47042,
            47080,
            47095,
            47038,
            47094,
            47103,
            47189,
            48757,
            48654,
            47128,
            47117,
            46963,
            47073,
            47092,
            46915,
            47038,
            47039,
            47085,
            47024,
            47203,
            47001,
            47107,
            47181,
            47058,
            47038,
            48616,
            48843,
            47034,
            47120,
            47098,
            47117,
            47055,
            46935,
            47064,
            46935,
            46921,
            47206,
            47125,
            46964,
            46812,
            47201,
            47131,
            47421,
            47142,
            47092,
            47064,
            47180,
            47069,
            47089,
            47172,
            46936,
            46908,
            47168,
            47067,
            47050,
            47090
          ],
          [
            47917,
            47072,
            47238,
            47132,
            46989,
            47109,
            47112,
            47042,
            47080,
            47095,
            47038,
            47094,
            47103,
            47189,
            48757,
            48654,
            47128,
            47117,
            46963,
            47073,
            47092,
            46915,
            47038,
            47039,
            47085,
            47024,
            47203,
            47001,
            47107,
            47181,
            47058,
            47038,
            48616,
            48843,
            47034,
            47120,
            47098,
            47117,
            47055,
            46935,
            47064,
            46935,
            46921,
            47206,
            47125,
            46964,
            46812,
            47201,
            47131,
            47421,
            47142,
            47092,
            47064,
            47180,
            47069,
            47089,
            47172,
            46936,
            46908,
            47168,
            47067,
            47050,
            47090
          ],
          [
            47917,
            47072,
            47238,
            47132,
            46989,
            47109,
            47112,
            47042,
            47080,
            47095,
            47038,
            47094,
            47103,
            47189,
            48757,
            48654,
            47128,
            47117,
            46963,
            47073,
            47092,
            46915,
            47038,
            47039,
            47085,
            47024,
            47203,
            47001,
            47107,
            47181,
            47058,
            47038,
            48616,
            48843,
            47034,
            47120,
            47098,
            47117,
            47055,
            46935,
            47064,
            46935,
            46921,
            47206,
            47125,
            46964,
            46812,
            47201,
            47131,
            47421,
            47142,
            47092,
            47064,
            47180,
            47069,
            47089,
            47172,
            46936,
            46908,
            47168,
            47067,
            47050,
            47090
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            15,
            278,
            2280,
            10446,
            22513,
            34147,
            35989,
            24842,
            11886,
            3547,
            624,
            52,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            30,
            509,
            2947,
            12584,
            24770,
            35628,
            37232,
            28090,
            15157,
            3956,
            615,
            30,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
          ],
          [
            0,
            0,
            19,
            431,
            4407,
            15907,
            31726,
            39240,
            34820,
            20093,
            6663,
            1003,
            100,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            85,
            1067,
            7006,
            23207,
            39800,
            43753,
            39362,
            27013,
            13703,
            3095,
            300,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            53,
            1043,
            7421,
            21109,
            34915,
            39149
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            14,
            396,
            3562,
            13293,
            27012,
            33890,
            28692,
            15063,
            4014,
            502,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            34,
            744,
            5483,
            18771,
            34617,
            39536,
            32537,
            18716,
            6155,
            909,
            58,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            31,
            807,
            5130,
            17104,
            33066,
            39551,
            32137,
            18073,
            6033,
            857,
            71,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            11,
            119,
            1582,
            7621,
            20935,
            35707,
            41224,
            35370,
            23034,
            9168,
            1503,
            106,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            116,
            1307,
            7781,
            20548,
            33622,
            40434,
            37718,
            26586,
            13657,
            3010,
            417,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            16,
            287,
            2457,
            11197,
            25420,
            38223,
            43790,
            39704,
            27363,
            13260,
            4348,
            943,
            110,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            618,
            5485,
            16423,
            31448
          ]
        ]
      },
      "call": {
        "duration": 0.27146211199942627,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014943629976187367,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.32]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.32]",
        "pytestmark",
        "1.32",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29119325099964044,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168841253998835,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0014749830006621778,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECOND[1.2]",
      "lineno": 246,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 1.3662012589993537,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            84,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            6,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            0,
            0,
            27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            255,
            0,
            249,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            0,
            0,
            0,
            255,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ],
        "maxwidth": [
          4,
          5,
          5,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          4,
          3,
          4
        ]
      },
      "call": {
        "duration": 0.003554808998160297,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028893339986098,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_ePortRXPRBS_ECONT[1.2]",
      "lineno": 274,
      "outcome": "passed",
      "keywords": [
        "test_ePortRXPRBS_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.5357869760009635,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=2 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=3 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=4 pattern=290 words_little_endian=1 bytes_little_endian=1\n     link=0 pattern=290 words_little_endian=0 bytes_little_endian=1\n     link=1 pattern=290 words_little_endian=0 bytes_little_endian=1\n"
      },
      "metadata": {
        "eRX_errcounts": [
          [
            255,
            0,
            255,
            6,
            255,
            0,
            28,
            0,
            255,
            0,
            255,
            255
          ],
          [
            76,
            0,
            17,
            0,
            3,
            0,
            255,
            255,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            40,
            255,
            1,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            188,
            255,
            0,
            2,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            9,
            0,
            0,
            0,
            5,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            255,
            14,
            255,
            42,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            255,
            255,
            255,
            255,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ],
          [
            255,
            0,
            255,
            0,
            255,
            2,
            2,
            0,
            255,
            1,
            255,
            255
          ],
          [
            70,
            0,
            1,
            0,
            6,
            0,
            255,
            140,
            255,
            255,
            255,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            255,
            255,
            113,
            255,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            3,
            255,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            70,
            0,
            2,
            0,
            4,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            3,
            255,
            61,
            255,
            52,
            255,
            0,
            0,
            0,
            0,
            0,
            255
          ]
        ],
        "maxwidth": [
          5,
          5,
          4,
          5,
          4,
          5
        ],
        "second_max_width": [
          4,
          5,
          4,
          5,
          4,
          4
        ]
      },
      "call": {
        "duration": 0.003487727000901941,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0028905340004712343,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECOND[1.2]",
      "lineno": 303,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29581095299727167,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            48001,
            47599,
            47447,
            47439,
            47366,
            47557,
            47539,
            47176,
            47054,
            47307,
            49234,
            47537,
            47882,
            47511,
            47409,
            47447,
            47430,
            47415,
            47396,
            47441,
            47313,
            47325,
            47243,
            47444,
            47387,
            47594,
            47262,
            47278,
            47327,
            47379,
            47415,
            47447,
            47454,
            47367,
            47452,
            47646,
            47578,
            47502,
            47378,
            47757,
            47275,
            49213,
            47660,
            47530,
            47394,
            47515,
            47345,
            47463,
            47428,
            47285,
            47227,
            47394,
            47217,
            47420,
            47632,
            47418,
            47216,
            46943,
            47114,
            47524,
            47431,
            47431,
            47164
          ],
          [
            48001,
            47599,
            47447,
            47439,
            47366,
            47557,
            47539,
            47176,
            47054,
            47307,
            49234,
            47537,
            47882,
            47511,
            47409,
            47447,
            47430,
            47415,
            47396,
            47441,
            47313,
            47325,
            47243,
            47444,
            47387,
            47594,
            47262,
            47278,
            47327,
            47379,
            47415,
            47447,
            47454,
            47367,
            47452,
            47646,
            47578,
            47502,
            47378,
            47757,
            47275,
            49213,
            47660,
            47530,
            47394,
            47515,
            47345,
            47463,
            47428,
            47285,
            47227,
            47394,
            47217,
            47420,
            47632,
            47418,
            47216,
            46943,
            47114,
            47524,
            47431,
            47431,
            47164
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            21,
            712,
            6960,
            24198,
            39563,
            33275,
            15285,
            2807,
            136,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            507,
            6509,
            21541,
            38059,
            37905,
            22132,
            4890,
            590,
            9,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9
          ],
          [
            0,
            0,
            0,
            4,
            93,
            2065,
            14292,
            32653,
            40879,
            29109,
            10099,
            1635,
            95,
            10,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            25,
            627,
            5645,
            22015,
            38257,
            42095,
            30302,
            11851,
            2085,
            253,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            23,
            756,
            8456,
            25699,
            40632,
            43078
          ]
        ]
      },
      "call": {
        "duration": 0.134571769998729,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.0016280769996228628,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTX_delayscan_ECONT[1.2]",
      "lineno": 330,
      "outcome": "passed",
      "keywords": [
        "test_eTX_delayscan_ECONT[1.2]",
        "pytestmark",
        "1.2",
        "ECONT",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.06885872999919229,
        "outcome": "passed"
      },
      "metadata": {
        "eTX_delays": [
          0,
          8,
          16,
          24,
          32,
          40,
          48,
          56,
          64,
          72,
          80,
          88,
          96,
          104,
          112,
          120,
          128,
          136,
          144,
          152,
          160,
          168,
          176,
          184,
          192,
          200,
          208,
          216,
          224,
          232,
          240,
          248,
          256,
          264,
          272,
          280,
          288,
          296,
          304,
          312,
          320,
          328,
          336,
          344,
          352,
          360,
          368,
          376,
          384,
          392,
          400,
          408,
          416,
          424,
          432,
          440,
          448,
          456,
          464,
          472,
          480,
          488,
          496
        ],
        "eTX_bitcounts": [
          [
            47764,
            47206,
            47279,
            47153,
            58633,
            47243,
            47359,
            47426,
            47129,
            47090,
            47209,
            47212,
            47137,
            47012,
            47088,
            47068,
            47048,
            47103,
            47114,
            47241,
            47184,
            47281,
            47037,
            47180,
            47407,
            47132,
            47252,
            46777,
            47147,
            47088,
            47230,
            47275,
            46993,
            46955,
            47261,
            47233,
            47348,
            47358,
            47017,
            48540,
            48765,
            47053,
            47143,
            47246,
            46959,
            47111,
            47235,
            47060,
            46992,
            47050,
            47180,
            47166,
            46865,
            47018,
            47136,
            47155,
            43447,
            47212,
            46857,
            47074,
            47123,
            47221,
            47231
          ],
          [
            47764,
            47206,
            47279,
            47153,
            58633,
            47243,
            47359,
            47426,
            47129,
            47090,
            47209,
            47212,
            47137,
            47012,
            47088,
            47068,
            47048,
            47103,
            47114,
            47241,
            47184,
            47281,
            47037,
            47180,
            47407,
            47132,
            47252,
            46777,
            47147,
            47088,
            47230,
            47275,
            46993,
            46955,
            47261,
            47233,
            47348,
            47358,
            47017,
            48540,
            48765,
            47053,
            47143,
            47246,
            46959,
            47111,
            47235,
            47060,
            46992,
            47050,
            47180,
            47166,
            46865,
            47018,
            47136,
            47155,
            43447,
            47212,
            46857,
            47074,
            47123,
            47221,
            47231
          ],
          [
            47764,
            47206,
            47279,
            47153,
            58633,
            47243,
            47359,
            47426,
            47129,
            47090,
            47209,
            47212,
            47137,
            47012,
            47088,
            47068,
            47048,
            47103,
            47114,
            47241,
            47184,
            47281,
            47037,
            47180,
            47407,
            47132,
            47252,
            46777,
            47147,
            47088,
            47230,
            47275,
            46993,
            46955,
            47261,
            47233,
            47348,
            47358,
            47017,
            48540,
            48765,
            47053,
            47143,
            47246,
            46959,
            47111,
            47235,
            47060,
            46992,
            47050,
            47180,
            47166,
            46865,
            47018,
            47136,
            47155,
            43447,
            47212,
            46857,
            47074,
            47123,
            47221,
            47231
          ],
          [
            47764,
            47206,
            47279,
            47153,
            58633,
            47243,
            47359,
            47426,
            47129,
            47090,
            47209,
            47212,
            47137,
            47012,
            47088,
            47068,
            47048,
            47103,
            47114,
            47241,
            47184,
            47281,
            47037,
            47180,
            47407,
            47132,
            47252,
            46777,
            47147,
            47088,
            47230,
            47275,
            46993,
            46955,
            47261,
            47233,
            47348,
            47358,
            47017,
            48540,
            48765,
            47053,
            47143,
            47246,
            46959,
            47111,
            47235,
            47060,
            46992,
            47050,
            47180,
            47166,
            46865,
            47018,
            47136,
            47155,
            43447,
            47212,
            46857,
            47074,
            47123,
            47221,
            47231
          ],
          [
            47764,
            47206,
            47279,
            47153,
            58633,
            47243,
            47359,
            47426,
            47129,
            47090,
            47209,
            47212,
            47137,
            47012,
            47088,
            47068,
            47048,
            47103,
            47114,
            47241,
            47184,
            47281,
            47037,
            47180,
            47407,
            47132,
            47252,
            46777,
            47147,
            47088,
            47230,
            47275,
            46993,
            46955,
            47261,
            47233,
            47348,
            47358,
            47017,
            48540,
            48765,
            47053,
            47143,
            47246,
            46959,
            47111,
            47235,
            47060,
            46992,
            47050,
            47180,
            47166,
            46865,
            47018,
            47136,
            47155,
            43447,
            47212,
            46857,
            47074,
            47123,
            47221,
            47231
          ]
        ],
        "eTX_errcounts": [
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            6,
            89,
            1145,
            6212,
            17115,
            28470,
            35469,
            32395,
            22636,
            11060,
            2849,
            357,
            20,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2,
            228,
            1847,
            10490,
            25086,
            36708,
            38867,
            30001,
            16901,
            7094,
            2251,
            332,
            22,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            29,
            360,
            3246,
            12648,
            26713,
            38440,
            40813,
            34243,
            21798,
            9735,
            2372,
            202,
            13,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            33,
            1031,
            5281,
            16976,
            30773,
            37960,
            35087,
            25605,
            12035,
            2449,
            244,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ],
          [
            11347,
            3028,
            350,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            7,
            143,
            1830,
            9163,
            21952,
            34866,
            37372,
            29012,
            15274,
            5022,
            676,
            15,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            17,
            392,
            4502,
            15065,
            28342,
            38528,
            34793,
            21853,
            9295,
            1914,
            213,
            1,
            0,
            0,
            0,
            0
          ],
          [
            29,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            18,
            656,
            4706,
            15583,
            28847,
            39848,
            40447,
            32248,
            21109,
            8272,
            1453,
            87,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            168,
            2578,
            12406,
            26107,
            37771,
            35376,
            23674,
            10982,
            3073,
            389,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            35,
            621,
            3809,
            14528,
            28219,
            39611,
            41790,
            35087,
            23597,
            12595,
            3769,
            1012,
            108,
            5,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            84,
            1061,
            6453,
            18283,
            31668,
            40954,
            40833,
            31886,
            19688,
            9164,
            2411,
            348,
            11,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        ]
      },
      "call": {
        "duration": 0.27253295599803096,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.001511043003119994,
        "outcome": "passed"
      }
    },
    {
      "nodeid": "test_io.py::test_eTx_PRBS7_ECOND[1.2]",
      "lineno": 356,
      "outcome": "passed",
      "keywords": [
        "test_eTx_PRBS7_ECOND[1.2]",
        "pytestmark",
        "1.2",
        "ECOND",
        "test_io.py",
        "test_mezzanine"
      ],
      "setup": {
        "duration": 0.29139437499907217,
        "outcome": "passed",
        "stdout": "     link=0 pattern=290 words_little_endian=1 bytes_little_endian=0\n     link=1 pattern=290 words_little_endian=1 bytes_little_endian=0\n"
      },
      "call": {
        "duration": 2.168687740999303,
        "outcome": "passed"
      },
      "teardown": {
        "duration": 0.004764466000779066,
        "outcome": "passed"
      }
    }
  ],
  "FPGA-hexa-IP": "11",
  "branch": "DN_CMtester_IO",
  "commit_hash": "4f4f43d62e25add927a484f024c3e2e08d3482d8",
  "remote_url": "ssh://git@gitlab.cern.ch:7999/hgcal-daq-sw/econd-sw.git",
  "status": "M common_pytest/fixtures.py\u0000 M gpib_controls\u0000 M test_mezzanine/conftest.py\u0000 M test_mezzanine/pytest.ini\u0000 M test_mezzanine/test_io.py\u0000 M utils/gpibclient.py\u0000?? econ_i2c.py.orig\u0000?? test_mezzanine/tmp.py\u0000?? test_radiation/conftest.py.orig\u0000?? test_vectors/\u0000?? utils/.gpibclient.py.swp\u0000?? utils/align.py.orig\u0000?? utils/io.py.orig\u0000",
  "firmware_name": "econ-mezz-tester-kria.bit\u0000",
  "firmware_git_desc": "9e5953f-dirty",
  "chip_number": null
}